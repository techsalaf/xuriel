{"version":3,"file":"ssr.js","sources":["../../resources/js/Plugins/Admin/modal.js","../../resources/js/Composables/transComposable.js","../../resources/js/Plugins/Admin/notify.js","../../resources/js/Composables/modalComposable.js","../../resources/js/Composables/sharedComposable.js","../../resources/js/Layouts/Admin/menu.js","../../resources/js/Layouts/Admin/Sidebar.vue","../../resources/js/Plugins/Admin/themeSwitcher.js","../../resources/js/Layouts/Admin/Headersection.vue","../../resources/js/Components/Admin/ValidationErrors.vue","../../resources/js/Plugins/Admin/dropdown.js","../../resources/js/Layouts/Admin.vue","../../resources/js/Components/Admin/SpinnerBtn.vue","../../resources/js/Pages/Admin/About/Index.vue","../../resources/js/Pages/Admin/Admin/Create.vue","../../resources/js/Pages/Admin/Admin/Edit.vue","../../resources/js/Pages/Admin/Admin/Index.vue","../../resources/js/Plugins/Admin/drawer.js","../../resources/js/Pages/Admin/AiLanguage/Index.vue","../../resources/js/Pages/Admin/AiLanguage/Show.vue","../../resources/js/Pages/Admin/AiTemplates/Create.vue","../../resources/js/Pages/Admin/AiTemplates/Edit.vue","../../resources/js/Components/Admin/OverviewGrid.vue","../../resources/js/Pages/Admin/AiTemplates/Index.vue","../../resources/js/Plugins/ckeEditor.js","../../resources/js/Pages/Admin/Blog/Create.vue","../../resources/js/Pages/Admin/Blog/Edit.vue","../../resources/js/Components/Admin/Filter.vue","../../resources/js/Pages/Admin/Blog/Index.vue","../../resources/js/Pages/Admin/Brand/Index.vue","../../resources/js/Pages/Admin/CandidateReviews/Edit.vue","../../resources/js/Pages/Admin/CandidateReviews/Index.vue","../../resources/js/Pages/Admin/Candidates/Edit.vue","../../resources/js/Pages/Admin/Candidates/Index.vue","../../resources/js/Pages/Admin/Candidates/Show.vue","../../resources/js/Pages/Admin/Category/Index.vue","../../resources/js/Pages/Admin/Companies/Edit.vue","../../resources/js/Pages/Admin/Companies/Index.vue","../../resources/js/Pages/Admin/Companies/Show.vue","../../resources/js/Pages/Admin/CompanyReviews/Edit.vue","../../resources/js/Pages/Admin/CompanyReviews/Index.vue","../../resources/js/Pages/Admin/Credits/Index.vue","../../resources/js/Pages/Admin/Cron/Index.vue","../../resources/js/Pages/Admin/Currency/Index.vue","../../resources/js/Pages/Admin/Currency/Show.vue","../../resources/js/Pages/Admin/Customers/Edit.vue","../../resources/js/Pages/Admin/Customers/Index.vue","../../resources/js/Pages/Admin/Customers/Show.vue","../../resources/js/Pages/Admin/Dashboard.vue","../../resources/js/Pages/Admin/DescriptionTemplates/Create.vue","../../resources/js/Pages/Admin/DescriptionTemplates/Edit.vue","../../resources/js/Pages/Admin/DescriptionTemplates/Index.vue","../../resources/js/Pages/Admin/Developer/App.vue","../../resources/js/Pages/Admin/Developer/Newsletter.vue","../../resources/js/Pages/Admin/Developer/OpenAi.vue","../../resources/js/Pages/Admin/Developer/Recaptcha.vue","../../resources/js/Pages/Admin/Developer/Smtp.vue","../../resources/js/Pages/Admin/Developer/SocialLogin.vue","../../resources/js/Pages/Admin/Developer/Storage.vue","../../resources/js/Pages/Admin/Developer/Verification.vue","../../resources/js/Pages/Admin/ExpertLevels/Index.vue","../../resources/js/Pages/Admin/Faq/Index.vue","../../resources/js/Pages/Admin/FaqCategory/Index.vue","../../resources/js/Pages/Admin/Feature/Create.vue","../../resources/js/Pages/Admin/Feature/Edit.vue","../../resources/js/Pages/Admin/Feature/Index.vue","../../resources/js/Pages/Admin/Gateway/Create.vue","../../resources/js/Pages/Admin/Gateway/Edit.vue","../../resources/js/Pages/Admin/Gateway/Index.vue","../../resources/js/Pages/Admin/GeneratedHistory/Index.vue","../../resources/js/Pages/Admin/Job/Index.vue","../../resources/js/Pages/Admin/Job/Show.vue","../../resources/js/Pages/Admin/JobCategory/Index.vue","../../resources/js/Pages/Admin/JobService/Index.vue","../../resources/js/Pages/Admin/JobTag/Index.vue","../../resources/js/Pages/Admin/KYC/Methods/Create.vue","../../resources/js/Pages/Admin/KYC/Methods/Edit.vue","../../resources/js/Pages/Admin/KYC/Methods/Index.vue","../../resources/js/Components/Admin/Pagination.vue","../../resources/js/Pages/Admin/KYC/Requests/Index.vue","../../resources/js/Pages/Admin/KYC/Requests/Show.vue","../../resources/js/Pages/Admin/Language/Index.vue","../../resources/js/Pages/Admin/Language/Show.vue","../../resources/js/Pages/Admin/Location/Index.vue","../../resources/js/Pages/Admin/Location/States/Index.vue","../../resources/js/Pages/Admin/Logs/Notification/Index.vue","../../resources/js/Pages/Admin/Menu/Index.vue","../../resources/js/Composables/menuComposable.js","../../resources/js/Components/NestedDraggable.vue","../../resources/js/Pages/Admin/Menu/Show.vue","../../resources/js/Pages/Admin/Message/Index.vue","../../resources/js/Pages/Admin/Message/Show.vue","../../resources/js/Pages/Admin/Order/Index.vue","../../resources/js/Pages/Admin/Order/Show.vue","../../resources/js/Pages/Admin/Page/Create.vue","../../resources/js/Pages/Admin/Page/Edit.vue","../../resources/js/Pages/Admin/Page/Index.vue","../../resources/js/Pages/Admin/PageSetting/Home/Partials/HomeOne.vue","../../resources/js/Pages/Admin/PageSetting/Home/Partials/HomeTwo.vue","../../resources/js/Pages/Admin/PageSetting/Home/Partials/HomeThree.vue","../../resources/js/Pages/Admin/PageSetting/Home/Partials/HomeFour.vue","../../resources/js/Pages/Admin/PageSetting/Home/Partials/HomeFive.vue","../../resources/js/Pages/Admin/PageSetting/Home/Partials/HomeSix.vue","../../resources/js/Pages/Admin/PageSetting/Home/Partials/HomeSeven.vue","../../resources/js/Pages/Admin/PageSetting/Home/HomePageSetting.vue","../../resources/js/Plugins/Admin/tabs.js","../../resources/js/Pages/Admin/PageSetting/Index.vue","../../resources/js/Pages/Admin/Plan/Edit.vue","../../resources/js/Pages/Admin/Plan/Index.vue","../../resources/js/Pages/Admin/Profile/Edit.vue","../../resources/js/Pages/Admin/Qualifications/Index.vue","../../resources/js/Pages/Admin/Role/Create.vue","../../resources/js/Pages/Admin/Role/Edit.vue","../../resources/js/Pages/Admin/Role/Index.vue","../../resources/js/Pages/Admin/Seo/Index.vue","../../resources/js/Pages/Admin/Seo/Show.vue","../../resources/js/Pages/Admin/Support/Index.vue","../../resources/js/Pages/Admin/Support/Show.vue","../../resources/js/Pages/Admin/Tag/Index.vue","../../resources/js/Pages/Admin/Team/Create.vue","../../resources/js/Pages/Admin/Team/Edit.vue","../../resources/js/Pages/Admin/Team/Index.vue","../../resources/js/Pages/Admin/Testimonial/Index.vue","../../resources/js/Pages/Admin/Theme/Index.vue","../../resources/js/Pages/Admin/Update/Index.vue","../../resources/js/Store/themeLoaderStore.js","../../resources/js/Components/FlashErrors.vue","../../resources/js/Layouts/Default.vue","../../resources/js/Pages/Auth/ConfirmPassword.vue","../../resources/js/Pages/Auth/ForgotPassword.vue","../../resources/js/Pages/Auth/Login.vue","../../resources/js/Pages/Auth/Register.vue","../../resources/js/Pages/Auth/ResetPassword.vue","../../resources/js/Components/Loading.vue","../../resources/js/Pages/Auth/VerifyEmail.vue","../../resources/js/Layouts/Employer/RouteLink.vue","../../resources/js/Layouts/Employer/Sidebar.vue","../../resources/js/Layouts/Employer/Header.vue","../../resources/js/Pages/Employer/AiTemplate/Index.vue","../../resources/js/Pages/Employer/AiTemplate/Show.vue","../../resources/js/Layouts/Employer/CandidateCard.vue","../../resources/js/Components/NiceSelect.vue","../../resources/js/Pages/Employer/Applicants.vue","../../resources/js/Pages/Employer/CompanyInfo.vue","../../resources/js/Pages/Employer/Credit.vue","../../resources/js/Pages/Employer/Dashboard.vue","../../resources/js/Pages/Employer/GeneratedHistory/Edit.vue","../../resources/js/Pages/Employer/GeneratedHistory/Index.vue","../../resources/js/Pages/Employer/Job/Create.vue","../../resources/js/Pages/Employer/Job/Edit.vue","../../resources/js/Pages/Employer/Job/Index.vue","../../resources/js/Layouts/Employer/CandidateCardJobShow.vue","../../resources/js/Pages/Employer/Job/Show.vue","../../resources/js/Pages/Employer/KYC/Create.vue","../../resources/js/Pages/Employer/KYC/Index.vue","../../resources/js/Pages/Employer/KYC/ReSubmit.vue","../../resources/js/Pages/Employer/KYC/Show.vue","../../resources/js/Pages/Employer/Membership.vue","../../resources/js/Store/messageStore.js","../../resources/js/Layouts/Employer/MessageSidebar.vue","../../resources/js/Layouts/EmployerMessage.vue","../../resources/js/Pages/Employer/Message/Index.vue","../../resources/js/Pages/Employer/Message/Show.vue","../../resources/js/Layouts/Blank.vue","../../resources/js/Pages/Employer/Payment.vue","../../resources/js/Pages/Employer/Profile.vue","../../resources/js/Pages/Employer/Reviews.vue","../../resources/js/Pages/Employer/SavedCandidate.vue","../../resources/js/Pages/Employer/SettingPassChange.vue","../../resources/js/Pages/Employer/Settings.vue","../../resources/js/Pages/Employer/Support/Create.vue","../../resources/js/Pages/Employer/Support/Index.vue","../../resources/js/Pages/Employer/Support/Show.vue","../../resources/js/Layouts/User/RouteLink.vue","../../resources/js/Layouts/User/Sidebar.vue","../../resources/js/Layouts/User/Header.vue","../../resources/js/Pages/User/AiTemplate/Index.vue","../../resources/js/Pages/User/AiTemplate/Show.vue","../../resources/js/Pages/User/AppliedJob.vue","../../resources/js/Pages/User/Credit.vue","../../resources/js/Pages/User/Dashboard.vue","../../resources/js/Pages/User/GeneratedHistory/Edit.vue","../../resources/js/Pages/User/GeneratedHistory/Index.vue","../../resources/js/Pages/User/JobAlert.vue","../../resources/js/Layouts/User/MessageSidebar.vue","../../resources/js/Layouts/UserMessage.vue","../../resources/js/Pages/User/Message/Index.vue","../../resources/js/Pages/User/Message/Show.vue","../../resources/js/Pages/User/Profile.vue","../../resources/js/Pages/User/ProfileSetup.vue","../../resources/js/Pages/User/Resume.vue","../../resources/js/Pages/User/Reviews.vue","../../resources/js/Pages/User/SavedJob.vue","../../resources/js/Pages/User/SettingPassChange.vue","../../resources/js/Pages/User/Settings.vue","../../resources/js/Pages/User/Support/Create.vue","../../resources/js/Pages/User/Support/Index.vue","../../resources/js/Pages/User/Support/Show.vue","../../resources/js/Composables/homeApiService.js","../../resources/js/Pages/Web/Home/One/Partials/FeatureSection.vue","../../resources/js/Pages/Web/Home/One/Partials/FeedbackSection.vue","../../resources/js/Pages/Web/Candidate/Partials/JobIntro.vue","../../resources/js/Components/Breadcrumb.vue","../../resources/js/Pages/Web/About.vue","../../resources/js/Components/SingleBlogPostStandard.vue","../../resources/js/Pages/Web/Blog/Partials/BlogSidebarRight.vue","../../resources/js/Pages/Web/Blog/One/Index.vue","../../resources/js/Pages/Web/Blog/One/Show.vue","../../resources/js/Pages/Web/Blog/Partials/BlogTopBanner.vue","../../resources/js/Pages/Web/Blog/Three/Index.vue","../../resources/js/Pages/Web/Blog/Two/Index.vue","../../resources/js/Store/candidateFilterStore.js","../../resources/js/Pages/Web/Candidate/Common/AsideFilterForm.vue","../../resources/js/Pages/Web/Candidate/Common/FilterModalForm.vue","../../resources/js/Components/SingleGridCandidate.vue","../../resources/js/Components/SingleListCandidate.vue","../../resources/js/Components/CandidateSearchForm.vue","../../resources/js/Pages/Web/Candidate/Partials/InnerBanner.vue","../../resources/js/Pages/Web/Candidate/Four/Index.vue","../../resources/js/Pages/Web/Candidate/One/Index.vue","../../resources/js/Pages/Web/Candidate/One/Show.vue","../../resources/js/Pages/Web/Candidate/Three/Index.vue","../../resources/js/Pages/Web/Candidate/Two/Index.vue","../../resources/js/Pages/Web/Candidate/Two/Show.vue","../../resources/js/Store/companyFilterStore.js","../../resources/js/Pages/Web/Company/Partials/ModalFilterForm.vue","../../resources/js/Pages/Web/Company/Four/Index.vue","../../resources/js/Pages/Web/Company/Partials/SideFilterForm.vue","../../resources/js/Pages/Web/Company/One/Index.vue","../../resources/js/Pages/Web/Company/One/Show.vue","../../resources/js/Pages/Web/Company/Three/Index.vue","../../resources/js/Pages/Web/Company/Two/Index.vue","../../resources/js/Pages/Web/Contact.vue","../../resources/js/Pages/Web/CustomPage.vue","../../resources/js/Pages/Web/Faq.vue","../../resources/js/Pages/Web/Home/Common/JobIntroSection.vue","../../resources/js/Pages/Web/Home/Five/Partials/BannerSection.vue","../../resources/js/Pages/Web/Home/Five/Partials/CategorySection.vue","../../resources/js/Pages/Web/Home/Five/Partials/FeatureSection.vue","../../resources/js/Pages/Web/Home/Five/Partials/JobListSection.vue","../../resources/js/Pages/Web/Home/Five/Partials/FeatureSection2.vue","../../resources/js/Pages/Web/Home/Five/Partials/ExpertSection.vue","../../resources/js/Pages/Web/Home/Five/Partials/FeedbackSection.vue","../../resources/js/Pages/Web/Home/Five/Partials/BrandSection.vue","../../resources/js/Pages/Web/Home/Five/Partials/BlogSection.vue","../../resources/js/Pages/Web/Home/Five/Index.vue","../../resources/js/Pages/Web/Home/Four/Partials/CategorySection.vue","../../resources/js/Pages/Web/Home/Four/Partials/FeatureSection.vue","../../resources/js/Pages/Web/Home/Four/Partials/BannerSection.vue","../../resources/js/Pages/Web/Home/Four/Partials/FeedbackSection.vue","../../resources/js/Pages/Web/Home/Four/Partials/JobIntroSection.vue","../../resources/js/Pages/Web/Home/Four/Partials/FaqSection.vue","../../resources/js/Components/Job/JobsItemList.vue","../../resources/js/Pages/Web/Home/Four/Partials/JobListSection.vue","../../resources/js/Pages/Web/Home/Four/Index.vue","../../resources/js/Pages/Web/Home/One/Partials/BlogSection.vue","../../resources/js/Pages/Web/Home/One/Partials/BrandSection.vue","../../resources/js/Pages/Web/Home/One/Partials/ExpertSection.vue","../../resources/js/Pages/Web/Home/One/Partials/CategorySection.vue","../../resources/js/Store/jobFilterStore.js","../../resources/js/Components/JobSearchForm.vue","../../resources/js/Pages/Web/Home/One/Partials/BannerSection.vue","../../resources/js/Components/Seo.vue","../../resources/js/Pages/Web/Home/One/Index.vue","../../resources/js/Pages/Web/Home/Seven/Partials/BannerSection.vue","../../resources/js/Pages/Web/Home/Seven/Partials/BrandSection.vue","../../resources/js/Pages/Web/Home/Seven/Partials/CategorySection.vue","../../resources/js/Pages/Web/Home/Seven/Partials/FeatureSection.vue","../../resources/js/Pages/Web/Home/Seven/Partials/FeedbackSection.vue","../../resources/js/Pages/Web/Home/Seven/Partials/BlogSection.vue","../../resources/js/Pages/Web/Home/Seven/Partials/CompanyListSection.vue","../../resources/js/Pages/Web/Home/Seven/Partials/FaqSection.vue","../../resources/js/Pages/Web/Home/Seven/Index.vue","../../resources/js/Pages/Web/Home/Six/Partials/BannerSection.vue","../../resources/js/Pages/Web/Home/Six/Partials/BrandSection.vue","../../resources/js/Pages/Web/Home/Six/Partials/CategorySection.vue","../../resources/js/Pages/Web/Home/Six/Partials/JobListSection.vue","../../resources/js/Pages/Web/Home/Six/Partials/FeatureSection.vue","../../resources/js/Pages/Web/Home/Six/Partials/FeedbackSection.vue","../../resources/js/Pages/Web/Home/Six/Partials/BlogSection.vue","../../resources/js/Pages/Web/Home/Six/Index.vue","../../resources/js/Pages/Web/Home/Three/Partials/ServiceSection.vue","../../resources/js/Pages/Web/Home/Three/Partials/CategorySection.vue","../../resources/js/Pages/Web/Home/Three/Partials/FeatureSection.vue","../../resources/js/Pages/Web/Home/Three/Partials/FeatureSection2.vue","../../resources/js/Pages/Web/Home/Three/Partials/BannerSection.vue","../../resources/js/Pages/Web/Home/Three/Partials/FeedbackSection.vue","../../resources/js/Pages/Web/Home/Three/Partials/JobIntroSection.vue","../../resources/js/Pages/Web/Home/Three/Index.vue","../../resources/js/Pages/Web/Home/Three/Partials/BrandSection.vue","../../resources/js/Pages/Web/Home/Three/Partials/ExpertSection.vue","../../resources/js/Pages/Web/Home/Three/Partials/HeaderCategorySection.vue","../../resources/js/Pages/Web/Home/Two/Partials/BannerSection.vue","../../resources/js/Pages/Web/Home/Two/Partials/FeatureSection.vue","../../resources/js/Pages/Web/Home/Two/Partials/CategorySection.vue","../../resources/js/Pages/Web/Home/Two/Partials/FeedbackSection.vue","../../resources/js/Pages/Web/Home/Two/Partials/BlogSection.vue","../../resources/js/Pages/Web/Home/Two/Partials/JobIntroSection.vue","../../resources/js/Pages/Web/Home/Two/Index.vue","../../resources/js/Pages/Web/Job/Apply.vue","../../resources/js/Components/Job/JobsItemGrid.vue","../../resources/js/Pages/Web/Job/Partials/InnerBanner.vue","../../resources/js/Pages/Web/Job/One/Partials/FilterForm.vue","../../resources/js/Pages/Web/Job/One/IndexGrid.vue","../../resources/js/Pages/Web/Job/One/IndexList.vue","../../resources/js/Pages/Web/Job/Partials/JobApplyModal.vue","../../resources/js/Pages/Web/Job/One/Show.vue","../../resources/js/Pages/Web/Job/Three/Partials/FilterForm.vue","../../resources/js/Pages/Web/Job/Three/IndexGrid.vue","../../resources/js/Pages/Web/Job/Three/IndexList.vue","../../resources/js/Pages/Web/Job/Two/Partials/FilterForm.vue","../../resources/js/Pages/Web/Job/Two/IndexGrid.vue","../../resources/js/Pages/Web/Job/Two/IndexList.vue","../../resources/js/Pages/Web/Job/Two/Show.vue","../../resources/js/Pages/Web/Pricing.vue","../../resources/js/bootstrap.js","../../resources/js/ssr.js"],"sourcesContent":["export class Modal {\n  constructor(target, options = {}) {\n    //Store the target element\n    this.target = null;\n\n    //Store modal element\n    this.modal = null;\n\n    //Store modal toggle\n    this.toggle = null;\n\n    //Store drawer dismisses\n    this.dismisses = null;\n\n    //Store modal transition in miliseconds.\n    this.transition = 500;\n\n    //Store the modal options\n    this.options = {\n      keyboard: true, //Boolean. Default is true\n      backdrop: true, //Boolean | 'static'. Default is true\n      autofucus: true, //Boolean. Default is true (focus the first input)\n      ...options,\n    };\n\n    this.documentOnKeydown = (e) => this.hideOnKeydown({ e, modal: this });\n\n    if (typeof target === \"string\") {\n      this.target = document.querySelector(target);\n    } else if (target instanceof HTMLElement) {\n      this.target = target;\n    } else {\n      throw new Error(\"No target element found\");\n    }\n\n    if (this.target.classList.contains(\"modal\")) {\n      this.modal = this.target;\n    } else {\n      this.toggle = this.target;\n      this.modal = document.querySelector(this.toggle.dataset.target);\n\n      this.toggle.addEventListener(\"click\", () => this.show());\n    }\n\n    this.dismisses = this.modal.querySelectorAll('[data-dismiss=\"modal\"]');\n\n    if (this.dismisses.length) {\n      [...this.dismisses].forEach((dismiss) => {\n        dismiss.addEventListener(\"click\", () => this.hide());\n      });\n    }\n  }\n\n  show() {\n    const modal = this.modal;\n\n    if (!modal.classList.contains(\"show\")) {\n      modal.style.display = \"flex\";\n\n      modal.appendChild(this.createBackdrop());\n\n      // Focus the first input\n      if (this.options.autofucus) {\n        const input = modal.querySelector(\"input\");\n        input && input.focus();\n      }\n\n      setTimeout(() => {\n        const modalBackdrop = modal.querySelector(\".modal-backdrop\");\n        modal.classList.add(\"show\");\n\n        if (modalBackdrop) {\n          modalBackdrop.classList.add(\"show\");\n\n          modalBackdrop.addEventListener(\"click\", () => {\n            if (this.options.backdrop && this.options.backdrop !== \"static\") {\n              this.hide();\n            }\n          });\n        }\n\n        if (this.options.keyboard) {\n          document.addEventListener(\"keydown\", this.documentOnKeydown);\n        }\n      }, 15);\n    }\n  }\n\n  hide() {\n    const modal = this.modal;\n\n    if (modal.classList.contains(\"show\")) {\n      const modalBackdrop = modal.querySelector(\".modal-backdrop\");\n      modal.classList.remove(\"show\");\n\n      if (modalBackdrop) {\n        modalBackdrop.classList.remove(\"show\");\n      }\n\n      setTimeout(() => {\n        modal.removeAttribute(\"style\");\n\n        modalBackdrop.remove();\n\n        document.removeEventListener(\"keydown\", this.documentOnKeydown);\n      }, this.transition);\n    }\n  }\n\n  hideOnKeydown(args) {\n    const { e, modal } = args;\n\n    if (e.key === \"Escape\" && modal.options.keyboard) {\n      modal.hide();\n    }\n  }\n\n  createBackdrop() {\n    const backdrop = document.createElement(\"div\");\n    backdrop.classList.add(\"modal-backdrop\");\n\n    if (this.options.backdrop === \"static\") {\n      backdrop.addEventListener(\"click\", (event) => event.stopPropagation());\n    } else if (this.options.backdrop) {\n      backdrop.addEventListener(\"click\", () => this.hide());\n    }\n\n    return backdrop;\n  }\n}\n\nconst modal = {\n  init() {\n    const toggles = this.querySelectors('[data-toggle=\"modal\"]');\n\n    if (toggles.length) {\n      toggles.forEach((toggle) => {\n        const targetId = toggle.dataset.target;\n\n        if (targetId) {\n          const target = document.querySelector(targetId);\n          const options = {\n            keyboard: target.dataset.keyboard === \"false\" ? false : true,\n            backdrop: (() => {\n              let output = true;\n\n              if (target.dataset.backdrop === \"static\") {\n                output = \"static\";\n              }\n\n              if (target.dataset.backdrop === \"false\") {\n                output = false;\n              }\n\n              return output;\n            })(),\n          };\n\n          new Modal(toggle, options);\n        }\n      });\n    }\n  },\n\n  querySelectors(selectors) {\n    let output = [];\n\n    if (selectors) {\n      output = [...document.querySelectorAll(selectors)].filter(\n        (selectorElement) => {\n          // Return all the elements except .code-viewer-source children elements\n          return !selectorElement.parentElement.classList.contains(\n            \"code-viewer-source\"\n          );\n        }\n      );\n    }\n\n    return output;\n  },\n};\n\nwindow.createModal = function (target, options = {}) {\n  return new Modal(target, options);\n};\nexport default modal;\n","import { ref } from 'vue'\n\nconst file = ref(null)\n\nif (!file.value) {\n  const data = document.querySelector('meta[name=\"app-translations\"]')?.content\n  file.value = JSON.parse(data)\n}\n\nexport default function trans(key) {\n  if (file.value.hasOwnProperty(key)) {\n    return file.value[key]\n  }\n\n  return key\n}\n","import Toastify from 'toastify-js'\nimport feather from 'feather-icons'\n\nconst notify = (() => {\n    // Constructor for toast\n    const toast = (text, options = {}) => {\n        return Toastify({\n            text: `<div>${text}</div>`,\n            escapeMarkup: false,\n            ...options\n        }).showToast()\n    }\n\n    toast.success = (text, options = {}) => {\n        return Toastify({\n            text: `\n        <div class=\"flex items-center gap-2\">\n          ${\n              options.icon ||\n              feather.icons['check'].toSvg({ width: '16', height: '16' })\n          }\n          <div>${text}</div>\n        </div>\n      `,\n            escapeMarkup: false,\n            className: 'toastify-success',\n            ...options\n        }).showToast()\n    }\n\n    toast.danger = (text, options = {}) => {\n        return Toastify({\n            text: `\n        <div class=\"flex items-center gap-2\">\n          ${\n              options.icon ||\n              feather.icons['x'].toSvg({ width: '16', height: '16' })\n          }\n          <div>${text}</div>\n        </div>\n      `,\n            escapeMarkup: false,\n            className: 'toastify-danger',\n            ...options\n        }).showToast()\n    }\n\n    toast.warning = (text, options = {}) => {\n        return Toastify({\n            text: `\n        <div class=\"flex items-center gap-2\">\n          ${\n              options.icon ||\n              feather.icons['alert-triangle'].toSvg({\n                  width: '16',\n                  height: '16'\n              })\n          }\n          <div>${text}</div>\n        </div>\n      `,\n            escapeMarkup: false,\n            className: 'toastify-warning',\n            ...options\n        }).showToast()\n    }\n\n    toast.info = (text, options = {}) => {\n        return Toastify({\n            text: `\n        <div class=\"flex items-center gap-2\">\n          ${\n              options.icon ||\n              feather.icons['info'].toSvg({ width: '16', height: '16' })\n          }\n          <div>${text}</div>\n        </div>\n      `,\n            escapeMarkup: false,\n            className: 'toastify-info',\n            ...options\n        }).showToast()\n    }\n\n    return toast\n})()\n\nexport default notify\n","import { reactive } from 'vue'\nimport { router } from '@inertiajs/vue3'\nimport notify from '@/Plugins/Admin/notify'\nimport trans from '@/Composables/transComposable'\n\nexport const modal = reactive({\n  state: false,\n  link: null,\n  method: 'delete',\n  data: null,\n  confirm_text: trans('Are you sure?'),\n  message: '',\n  accept_btn_text: 'Yes, Confirm!',\n  reject_btn_text: 'No, Cancel!',\n  callback: null,\n  success_message: trans('Submitted Successfully'),\n\n  init (link = null, { method, data = {}, options = {}, callback }) {\n    this.link = link\n    this.message = options?.message || this.message\n    this.confirm_text = options?.confirm_text || this.confirm_text\n    this.accept_btn_text = options?.accept_btn_text || this.accept_btn_text\n    this.reject_btn_text = options?.reject_btn_text || this.reject_btn_text\n    this.success_message = options?.success_message || this.success_message\n\n    if (callback instanceof Function) {\n      this.callback = callback\n    }\n\n    if (method && data) {\n      this.method = method\n      this.data = data\n    }\n    this.state = true\n  },\n\n  initCallback (callFn, options = {}) {\n    this.init(null, { callback: callFn, options })\n  },\n\n  async accept () {\n    const validMethods = ['post', 'put', 'patch', 'delete']\n    const { method, link, data, callback, success_message } = this\n\n    if (link && validMethods.includes(method)) {\n      await router[method](link, data, {\n        onSuccess: () => notify.success(success_message)\n      })\n    }\n\n    if (link && !validMethods.includes(method)) {\n      router.delete(link, {\n        onSuccess: () => notify.success('Deleted successfully')\n      })\n    }\n\n    if (callback instanceof Function) {\n      callback()\n    }\n\n    this.state = false\n  },\n\n  reset () {\n    Object.assign(this, {\n      link: null,\n      state: false,\n      method: 'delete',\n      data: null,\n      message: 'You want to delete this?',\n      confirm_text: trans('Are you sure?'),\n      accept_btn_text: 'Yes, delete it!',\n      reject_btn_text: 'No, Cancel!'\n    })\n  }\n})\n","import { usePage, router } from '@inertiajs/vue3'\nimport { computed } from 'vue'\nimport trans from '@/Composables/transComposable';\nimport notify from '@/Plugins/Admin/notify';\nimport { modal } from '@/Composables/modalComposable';\n\nexport default () => {\n  const textExcerpt = (text, length) => {\n    return text?.length > length ? text?.substring(0, length) + '...' : text\n  }\n\n  const currentRouteIn = (routes = []) => {\n    return Boolean(routes.find((item) => usePage().component == item))\n  }\n\n  const currentRoute = (route) => {\n    return usePage().component === route\n  }\n  const currentRouteGroup = (route) => {\n    return usePage().component.startsWith(route)\n  }\n  const authUser = computed(() => {\n    return usePage().props.user\n  })\n\n  const logout = () => {\n    router.post('/logout')\n  }\n\n  const formatNumber = (num, precision = 1) => {\n    const map = [\n      { suffix: 'T', threshold: 1e12 },\n      { suffix: 'B', threshold: 1e9 },\n      { suffix: 'M', threshold: 1e6 },\n      { suffix: 'K', threshold: 1e3 },\n      { suffix: '', threshold: 1 }\n    ]\n\n    const found = map.find((x) => Math.abs(num) >= x.threshold)\n    if (found) {\n      const formatted = (num / found.threshold).toFixed(precision) + found.suffix\n      return formatted\n    }\n\n    return num\n  }\n\n  const deleteRow = (actionUrl, alertMessage = 'Deleted successfully') => {\n    modal.init(actionUrl, {\n      options: {\n        message: trans('You would not be revert it back!'),\n        confirm_text: trans('Are you sure?'),\n        accept_btn_text: trans('Yes, Delete'),\n        reject_btn_text: trans('No, Cancel')\n      },\n      callback: () => {\n        notify.danger(alertMessage)\n      }\n    })\n  }\n  const formatCurrency = (amount = 0, iconType = 'name') => {\n    let formattedCurrency = ''\n    if (!(typeof amount === 'number')) {\n      return ''\n    }\n    const currency = usePage().props.currency\n    if (iconType === 'name') {\n      formattedCurrency =\n        currency.position === 'right'\n          ? currency.name + ' ' + amount.toFixed(2)\n          : currency.icon + ' ' + amount.toFixed(2)\n    } else if (iconType === 'both') {\n      formattedCurrency = currency.icon + amount.toFixed(2) + ' ' + currency.name\n    } else {\n      formattedCurrency =\n        currency.position === 'right'\n          ? amount.toFixed(2) + currency.icon\n          : currency.icon + amount.toFixed(2)\n    }\n\n    return formattedCurrency\n  }\n  const pickBy = (obj) => {\n    const result = {}\n\n    for (const key in obj) {\n      const value = obj[key]\n\n      if (value !== undefined && value !== null && value !== '') {\n        if (Array.isArray(value) && value.length === 0) {\n          continue // Skip empty arrays\n        } else if (typeof value === 'object' && Object.keys(value).length === 0) {\n          continue // Skip empty objects\n        }\n\n        result[key] = value\n      }\n    }\n\n    return result\n  }\n\n  const getQueryParams = () => {\n    const obj = {}\n    const para = new URLSearchParams(window.location.search)\n\n    for (const [key, value] of para) {\n      if (obj.hasOwnProperty(key)) {\n        if (Array.isArray(obj[key])) {\n          obj[key].push(value)\n        } else {\n          obj[key] = [obj[key], value]\n        }\n      } else {\n        obj[key] = value\n      }\n    }\n\n    return obj\n  }\n  //copy text\n  function copyToClipboard(content) {\n    const unsecuredCopyToClipboard = (text) => {\n      const textArea = document.createElement('textarea')\n      textArea.value = text\n      document.body.appendChild(textArea)\n      textArea.focus()\n      textArea.select()\n      try {\n        document.execCommand('copy')\n        notify.success('Copied to clipboard')\n      } catch (err) {\n        console.error('Unable to copy to clipboard', err)\n      }\n      document.body.removeChild(textArea)\n    }\n    if (window.isSecureContext && navigator.clipboard) {\n      navigator.clipboard.writeText(content)\n      notify.success('Copied to clipboard')\n    } else {\n      unsecuredCopyToClipboard(content)\n    }\n  }\n  function uiAvatar(name = null, avatar = null) {\n    if (!name || !avatar) {\n      return 'https://ui-avatars.com/api/?name=user'\n    }\n    return avatar ? avatar : `https://ui-avatars.com/api/?name=${name}`\n  }\n  return {\n    authUser,\n    textExcerpt,\n    currentRoute,\n    currentRouteGroup,\n    currentRouteIn,\n    deleteRow,\n    logout,\n    formatCurrency,\n    pickBy,\n    formatNumber,\n    getQueryParams,\n    copyToClipboard,\n    uiAvatar\n  }\n}\n","export const menuType = {\n  item: 'item',\n  heading: 'heading',\n  dropdown: 'dropdown'\n}\n\nexport var navMenuItems = [\n  {\n    icon: 'home',\n    text: 'Dashboard',\n    uri: route('admin.dashboard')\n  },\n  {\n    permission: 'order',\n    icon: 'shopping-cart',\n    text: 'Orders',\n    uri: route('admin.order.index')\n  },\n  {\n    permission: 'order',\n    icon: 'credit-card',\n    text: 'Credit Logs',\n    uri: route('admin.credit-logs.index')\n  },\n  {\n    permission: 'subscriptions',\n    icon: 'user',\n    text: 'Subscriptions',\n    uri: route('admin.plan.index')\n  },\n  {\n    permission: 'companies',\n    icon: 'aperture',\n    text: 'Companies',\n    uri: route('admin.companies.index')\n  },\n  {\n    permission: 'candidates',\n    icon: 'user-check',\n    text: 'Candidates',\n    uri: route('admin.candidates.index')\n  },\n  {\n    permission: 'company-reviews',\n    icon: 'message-circle',\n    text: 'Company Reviews',\n    uri: route('admin.company-reviews.index')\n  },\n  {\n    permission: 'candidate-reviews',\n    icon: 'message-square',\n    text: 'Candidate Reviews',\n    uri: route('admin.candidate-reviews.index')\n  },\n  {\n    permission: 'gateways',\n    icon: 'calendar',\n    text: 'Payment Gateways',\n    uri: route('admin.gateways.index')\n  },\n  {\n    permission: 'cron-job',\n    icon: 'code',\n    text: 'Cron Jobs',\n    uri: '/admin/cron-job'\n  },\n  {\n    permission: 'support',\n    icon: 'message-square',\n    text: 'Help & Support',\n    uri: route('admin.support.index')\n  },\n\n  {\n    type: menuType.heading,\n    text: 'AI TEMPLATES'\n  },\n  {\n    permission: 'description-templates',\n    icon: 'box',\n    text: 'Description Templates',\n    uri: route('admin.description-templates.index')\n  },\n\n  {\n    permission: 'ai-templates',\n    icon: 'box',\n    text: 'AI Templates',\n    uri: route('admin.ai-templates.index')\n  },\n  {\n    permission: 'ai-generated-history',\n    icon: 'codepen',\n    text: 'AI Generated History',\n    uri: route('admin.ai-generated-history')\n  },\n  {\n    permission: 'ai-language',\n    icon: 'grid',\n    text: 'Language',\n    uri: route('admin.ai-language.index')\n  },\n\n  {\n    type: menuType.heading,\n    text: 'JOBS'\n  },\n  {\n    icon: 'award',\n    text: 'Jobs',\n    uri: route('admin.job.index')\n  },\n  {\n    type: menuType.dropdown,\n    icon: 'columns',\n    text: 'Job Categories',\n    subs: [\n      {\n        permission: 'job-service',\n        text: 'Services',\n        uri: route('admin.job-service.index')\n      },\n      {\n        permission: 'job-category',\n        text: 'Categories',\n        uri: route('admin.job-category.index')\n      },\n      {\n        permission: 'job-tags',\n        text: 'Skills',\n        uri: route('admin.job-skills.index')\n      }\n    ]\n  },\n  {\n    permission: 'qualifications',\n    icon: 'book-open',\n    text: 'Qualifications',\n    uri: route('admin.qualifications.index')\n  },\n  {\n    permission: 'expert-levels',\n    icon: 'briefcase',\n    text: 'Expert Level',\n    uri: route('admin.expert-levels.index')\n  },\n  {\n    type: menuType.heading,\n    text: 'USER LOGS'\n  },\n  {\n    permission: 'notification',\n    icon: 'bell',\n    text: 'Notifications',\n    uri: route('admin.notification.index')\n  },\n  {\n    permission: 'message-requests',\n    icon: 'mail',\n    text: 'Message Request',\n    uri: route('admin.message.index')\n  },\n  {\n    type: menuType.heading,\n    text: 'APPEARANCE'\n  },\n  {\n    type: menuType.dropdown,\n    icon: 'book',\n    text: 'Blogs',\n    subs: [\n      {\n        permission: 'blogs',\n        text: 'Blog',\n        uri: route('admin.blog.index')\n      },\n      {\n        permission: 'blog-category',\n        text: 'Category',\n        uri: route('admin.category.index')\n      },\n      {\n        permission: 'blog-tags',\n        text: 'Tags',\n        uri: route('admin.tag.index')\n      }\n    ]\n  },\n  {\n    type: menuType.dropdown,\n    icon: 'columns',\n    text: 'Faq',\n    subs: [\n      {\n        permission: 'faq',\n        text: \"Faq's\",\n        uri: route('admin.faq.index')\n      },\n      {\n        permission: 'faq-category',\n        text: 'Category',\n        uri: route('admin.faq-category.index')\n      }\n    ]\n  },\n  {\n    permission: 'features',\n    icon: 'activity',\n    text: 'Steps',\n    uri: route('admin.features.index')\n  },\n  {\n    permission: 'testimonials',\n    icon: 'calendar',\n    text: 'Testimonials',\n    uri: route('admin.testimonials.index')\n  },\n  {\n    permission: 'about',\n    icon: 'activity',\n    text: 'About Us',\n    uri: route('admin.about.index')\n  },\n  {\n    permission: 'partners',\n    icon: 'users',\n    text: 'Partners',\n    uri: route('admin.partner.index')\n  },\n  {\n    permission: 'currency',\n    icon: 'dollar-sign',\n    text: 'Currency',\n    uri: route('admin.currency.index')\n  },\n  {\n    permission: 'language',\n    icon: 'grid',\n    text: 'Language',\n    uri: route('admin.language.index')\n  },\n  {\n    permission: 'locations',\n    icon: 'map-pin',\n    text: 'Location',\n    uri: route('admin.countries.index')\n  },\n  {\n    permission: 'menu',\n    icon: 'menu',\n    text: 'Menu',\n    uri: route('admin.menu.index')\n  },\n  {\n    permission: 'custom-page',\n    icon: 'box',\n    text: 'Custom Pages',\n    uri: route('admin.page.index')\n  },\n  {\n    permission: 'seo',\n    icon: 'tool',\n    text: 'Seo Settings',\n    uri: route('admin.seo.index')\n  },\n  \n\n  {\n    type: menuType.heading,\n    text: 'SITE SETTINGS'\n  },\n\n  {\n    permission: 'kyc-methods',\n    type: menuType.dropdown,\n    disable: false, // here we need to get env variable status\n    icon: 'file-text',\n    text: 'KYC',\n    subs: [\n      {\n        permission: 'kyc-methods',\n        text: 'Create Method',\n        uri: route('admin.kyc-methods.create')\n      },\n      {\n        permission: 'kyc-methods',\n        text: 'All Methods',\n        uri: route('admin.kyc-methods.index')\n      },\n      {\n        permission: 'kyc-requests',\n        text: 'KYC Requests',\n        uri: route('admin.kyc-requests.index')\n      }\n    ]\n  },\n\n  {\n    permission: 'page-settings',\n    icon: 'sliders',\n    text: 'Page Settings',\n    uri: route('admin.page-settings.index')\n  },\n  {\n    permission: 'theme-setting',\n    icon: 'layers',\n    text: 'Themes',\n    uri: route('admin.themes')\n  },\n  {\n    type: menuType.dropdown,\n    icon: 'lock',\n    text: 'Admin and Role',\n    subs: [\n      {\n        permission: 'admin',\n        text: 'Admin',\n        uri: route('admin.admin.index')\n      },\n      {\n        permission: 'roles',\n        text: 'Roles',\n        uri: route('admin.role.index')\n      }\n    ]\n  },\n  {\n    permission: 'developer-settings',\n    type: menuType.dropdown,\n    icon: 'settings',\n    text: 'Developer Settings',\n    subs: [\n      {\n        text: 'App Setting',\n        uri: route('admin.developer-settings.show', 'app-settings')\n      },\n      {\n        text: 'SMTP Setting',\n        uri: route('admin.developer-settings.show', 'mail-settings')\n      },\n      {\n        text: 'Storage Setting',\n        uri: route('admin.developer-settings.show', 'storage-settings')\n      },\n      {\n        text: 'OpenAi Setting',\n        uri: route('admin.developer-settings.show', 'open-ai-settings')\n      },\n      {\n        text: 'Verification Setting',\n        uri: route('admin.developer-settings.show', 'verification-settings')\n      },\n      {\n        text: 'Newsletter Setting',\n        uri: route('admin.developer-settings.show', 'newsletter-settings')\n      },\n      {\n        text: 'Social Login Setting',\n        uri: route('admin.developer-settings.show', 'social-login-settings')\n      },\n      {\n        text: 'App Update',\n        uri: route('admin.update.index')\n      }\n    ]\n  },\n\n  {\n    type: menuType.heading,\n    text: 'MY SETTINGS'\n  },\n  {\n    icon: 'user',\n    text: 'Profile Settings',\n    uri: route('admin.profile.setting')\n  }\n]\n\nexport const updateActiveMenu = (uri) => {\n  navMenuItems = navMenuItems.map((item) => {\n    if (item.type != menuType.heading) {\n      item.is_active = uri == item.uri\n      if (item.subs?.length) {\n        item.subs = item.subs.map((sub) => {\n          if (uri === sub.uri) {\n            sub.is_active = true\n            item.is_active = true\n          } else {\n            sub.is_active = false\n          }\n          return sub\n        })\n      }\n    }\n    return item\n  })\n}\n\nexport const updateActiveSubMenu = (parentMenuKey, subMenuUri) => {\n  navMenuItems = navMenuItems.map((item, key) => {\n    item.is_active = key == parentMenuKey\n\n    if (subMenuUri && item.subs?.length) {\n      item.subs = item.subs.map((subItem) => {\n        subItem.is_active = subItem.uri == subMenuUri\n        return subItem\n      })\n    }\n    return item\n  })\n}\n","<script setup>\nimport { Link, usePage } from '@inertiajs/vue3'\nimport { onMounted } from 'vue'\nimport trans from '@/Composables/transComposable'\nimport SimpleBar from 'simplebar'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { menuType, navMenuItems, updateActiveMenu, updateActiveSubMenu } from './menu'\nconst { authUser, logout } = sharedComposable()\n\nonMounted(() => {\n  updateActiveMenu(window.location.href)\n\n  window.addEventListener('load', () => {\n    const wrapper = document.querySelector('.wrapper')\n    const sidebar = document.querySelector('.sidebar')\n    const sidebarToggle = document.querySelector('.sidebar-toggle')\n    const content = document.querySelector('.sidebar-content')\n    const menuItems = document.querySelectorAll('.sidebar-menu')\n\n    const init = () => {\n      initMenuItems()\n      initSidebarToggle()\n      initWrapper()\n      initOverlay()\n      handleWindowResize()\n      initSidebarHover()\n      initScrollBar()\n    }\n\n    const initMenuItems = () => {\n      if (menuItems.length) {\n        menuItems.forEach((menuItem) => {\n          const parent = menuItem.parentElement\n          const submenu = parent.querySelector('.sidebar-submenu')\n          const arrow = menuItem.querySelector('.sidebar-menu-arrow')\n\n          if (submenu) {\n            menuItem.addEventListener('click', (e) => {\n              e.preventDefault()\n              toggleHeight(submenu, submenu.scrollHeight)\n              arrow.classList.toggle('rotate')\n            })\n          }\n\n          if (submenu && menuItem.classList.contains('active')) {\n            toggleHeight(submenu, submenu.scrollHeight)\n            arrow.classList.toggle('rotate')\n          }\n        })\n      }\n    }\n\n    const toggleHeight = (element, height) => {\n      if (element.style.height === '0px' || element.style.height === '') {\n        element.style.height = `${height}px`\n      } else {\n        element.style.height = '0px'\n      }\n    }\n\n    const initSidebarToggle = () => {\n      if (sidebarToggle) {\n        sidebarToggle.addEventListener('click', () => toggleSidebar())\n      }\n    }\n\n    const toggleSidebar = () => {\n      const windowWidth = window.innerWidth\n\n      if (windowWidth < 1024) {\n        sidebar.classList.toggle('expanded')\n        document.querySelector('.sidebar-overlay').classList.toggle('active')\n      } else {\n        sidebar.classList.toggle('collapsed')\n        wrapper.classList.toggle('expanded')\n      }\n    }\n\n    const initWrapper = () => {\n      if (sidebar) {\n        if (sidebar.classList.contains('collapsed')) {\n          wrapper.classList.add('expanded')\n        } else {\n          wrapper.classList.remove('expanded')\n        }\n      }\n    }\n\n    const initOverlay = () => {\n      const overlay = document.createElement('div')\n      overlay.classList.add('sidebar-overlay')\n      document.body.appendChild(overlay)\n\n      overlay.addEventListener('click', () => {\n        sidebar.classList.remove('expanded')\n        overlay.classList.remove('active')\n      })\n    }\n\n    const handleWindowResize = () => {\n      if (sidebar) {\n        window.addEventListener('resize', () => {\n          if (window.innerWidth < 1024) {\n            sidebar.classList.remove('collapsed')\n            wrapper.classList.remove('expanded')\n          } else {\n            sidebar.classList.remove('expanded')\n          }\n        })\n      }\n    }\n\n    const initSidebarHover = () => {\n      if (sidebar) {\n        sidebar.addEventListener('mouseenter', () => {\n          if (window.innerWidth > 1024) {\n            sidebar.classList.add('hovered')\n          }\n        })\n\n        sidebar.addEventListener('mouseleave', () => {\n          if (window.innerWidth > 1024) {\n            sidebar.classList.remove('hovered')\n          }\n        })\n      }\n    }\n\n    const initScrollBar = () => {\n      if (sidebar) {\n        new SimpleBar(content)\n\n        const activeMenu = document.querySelector('.sidebar-menu.active')\n        const activeSubmenu = document.querySelector('.sidebar-submenu-item.active')\n        if (activeSubmenu) {\n          activeSubmenu.scrollIntoView({ block: 'center', behavior: 'smooth' })\n        } else if (activeMenu) {\n          activeMenu.scrollIntoView({ block: 'center', behavior: 'smooth' })\n        }\n      }\n    }\n\n    init()\n  })\n})\n\nconst page = usePage()\nconst authUserPermissions = page.props.permissions ?? []\n\nconst canAccess = ({ permission }) => {\n  let isSuperAdmin = authUser.role == 'admin'\n  return permission == undefined || isSuperAdmin || authUserPermissions.includes(permission)\n}\n</script>\n\n<template>\n  <aside class=\"sidebar\">\n    <a href=\"/\">\n      <div class=\"sidebar-header\">\n        <div class=\"sidebar-logo-icon\">\n          <img\n            v-lazy=\"$page.props.primaryData.deep_logo\"\n            alt=\"logo\"\n            class=\"block h-[30px] dark:hidden\"\n          />\n          <img\n            v-lazy=\"$page.props.primaryData.logo\"\n            alt=\"logo\"\n            class=\"hidden h-[30px] dark:block\"\n          />\n        </div>\n      </div>\n    </a>\n\n    <!-- Sidebar Menu Starts -->\n    <ul class=\"sidebar-content\">\n      <!-- dropdown menu item -->\n      <template v-for=\"(menu, parentMenuKey) in navMenuItems\" :key=\"parentMenuKey\">\n        <template v-if=\"canAccess(menu)\">\n          <!-- menu heading -->\n          <div v-if=\"menu.type == menuType.heading\" class=\"sidebar-menu-header\">\n            {{ trans(menu.text) }}\n          </div>\n\n          <!-- single menu item -->\n          <li\n            v-if=\"(menu.type == menuType.item || menu.type == undefined) && !menu.disable\"\n            @click=\"updateActiveMenu(menu.uri)\"\n          >\n            <Link :href=\"menu.uri ?? '#'\" class=\"sidebar-menu\" :class=\"{ active: menu.is_active }\">\n              <span class=\"sidebar-menu-icon\">\n                <i :data-feather=\"menu.icon ?? 'home'\"></i>\n              </span>\n              <span class=\"sidebar-menu-text\">{{ trans(menu.text) }}</span>\n            </Link>\n          </li>\n\n          <!-- dropdown menu -->\n          <li v-if=\"menu.type == menuType.dropdown\">\n            <a href=\"javascript:void(0);\" class=\"sidebar-menu\" :class=\"{ active: menu.is_active }\">\n              <span class=\"sidebar-menu-icon\">\n                <i :data-feather=\"menu.icon ?? 'home'\"></i>\n              </span>\n              <span class=\"sidebar-menu-text\">{{ menu.text ?? '' }}</span>\n              <span class=\"sidebar-menu-arrow\">\n                <i data-feather=\"chevron-right\"></i>\n              </span>\n            </a>\n            <ul class=\"sidebar-submenu\">\n              <template v-for=\"subItem in menu.subs\" :key=\"subItem\">\n                <li v-if=\"canAccess(subItem)\" @click=\"updateActiveMenu(subItem.uri ?? '/')\">\n                  <Link\n                    :href=\"subItem.uri\"\n                    class=\"sidebar-submenu-item\"\n                    :class=\"{ active: subItem.is_active }\"\n                  >\n                    {{ trans(subItem.text) }}\n                  </Link>\n                </li>\n              </template>\n            </ul>\n          </li>\n        </template>\n      </template>\n\n      <!-- single menu item -->\n      <li>\n        <button type=\"button\" @click=\"logout\" class=\"sidebar-menu\">\n          <span class=\"sidebar-menu-icon\">\n            <i data-feather=\"log-out\"></i>\n          </span>\n          <span class=\"sidebar-menu-text\">{{ trans('Logout') }}</span>\n        </button>\n      </li>\n    </ul>\n    <!-- Sidebar Menu Ends -->\n  </aside>\n</template>\n","class ThemeSwitcher {\n  constructor(target) {\n    this.dropdown = null;\n    this.dropdownBtns = null;\n\n    if (typeof target === 'string') {\n      this.dropdown = document.querySelector(target);\n    }\n\n    if (target instanceof HTMLElement) {\n      this.dropdown = target;\n    }\n\n    if (!target) {\n      throw new Error('No target element found');\n    }\n\n    if (this.dropdown) {\n      this.dropdownBtns = this.dropdown.querySelectorAll('[data-theme-mode]');\n    }\n\n    if (this.dropdownBtns && this.dropdownBtns.length) {\n      this.updateActiveClass();\n\n      [...this.dropdownBtns].forEach((btn) => {\n        btn.addEventListener('click', () => this.toggle(btn));\n      });\n    }\n  }\n\n  toggle(btn) {\n    const themeMode = btn.dataset.themeMode;\n\n    if (themeMode === 'light') {\n      // Whenever the user explicitly chooses light mode\n      localStorage.setItem('theme', 'light');\n    }\n\n    if (themeMode === 'dark') {\n      // Whenever the user explicitly chooses dark mode\n      localStorage.setItem('theme', 'dark');\n    }\n\n    if (themeMode === 'system') {\n      // Whenever the user explicitly chooses to respect the OS preference\n      localStorage.removeItem('theme');\n    }\n\n    window.location.reload();\n  }\n\n  updateActiveClass() {\n    [...this.dropdownBtns].forEach((btn) => {\n      if (btn.classList.contains('active')) {\n        btn.classList.remove('active');\n      }\n\n      if (!localStorage.theme && btn.dataset.themeMode === 'system') {\n        btn.classList.add('active');\n      }\n\n      if (localStorage.theme === btn.dataset.themeMode) {\n        btn.classList.add('active');\n      }\n    });\n  }\n}\n\nconst themeSwitcher = {\n  init() {\n    const dropdownThemeSwitcher = document.querySelector('#theme-switcher-dropdown');\n\n    if (dropdownThemeSwitcher) {\n      new ThemeSwitcher(dropdownThemeSwitcher);\n    }\n  },\n};\n\nexport default themeSwitcher;\n","<script setup>\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { onMounted, ref } from 'vue'\nimport themeSwitcher from '@/Plugins/Admin/themeSwitcher'\nimport { computed } from 'vue'\nimport trans from '@/Composables/transComposable'\nimport { usePage } from '@inertiajs/vue3'\nconst { authUser, logout } = sharedComposable()\n\nonMounted(() => {\n  themeSwitcher.init()\n  modal.value = createModal(document.getElementById('search-modal'))\n})\n\n// notification\nconst notifications = ref(usePage().props.notifications ?? [])\nconst unreadNotifications = computed(() => {\n  return notifications.value?.filter((item) => item.seen == 0).length ?? 0\n})\nconst maskAsRead = (item) => {\n  axios.post(route('admin.notifications.read', item.id)).then((res) => {\n    item.seen = 1\n  })\n}\n\n// search modal\nconst modal = ref({})\nconst search = ref('')\nconst menuGroups = [\n  {\n    title: 'General',\n    pages: [\n      {\n        icon: 'bx bx-home',\n        name: 'Dashboard',\n        url: route('admin.dashboard')\n      },\n      {\n        icon: 'bx bx-cart',\n        name: 'Orders',\n        url: route('admin.order.index')\n      },\n      {\n        icon: 'bx bx-user',\n        name: 'Subscriptions',\n        url: route('admin.plan.index')\n      },\n\n      {\n        icon: 'aperture',\n        name: 'Companies',\n        url: route('admin.companies.index')\n      },\n      {\n        icon: 'user-check',\n        name: 'Candidates',\n        url: route('admin.candidates.index')\n      },\n      {\n        icon: 'message-circle',\n        name: 'Company Reviews',\n        url: route('admin.company-reviews.index')\n      },\n      {\n        icon: 'bx bx-calendar',\n        name: 'Payment Gateways',\n        url: route('admin.gateways.index')\n      },\n      {\n        icon: 'bx bx-cog',\n        name: 'Cron Jobs',\n        url: '/admin/cron-job'\n      },\n      {\n        icon: 'bx bx-phone',\n        name: 'Help & Support',\n        url: route('admin.support.index')\n      },\n\n      {\n        icon: 'award',\n        name: 'Jobs',\n        url: route('admin.job.index')\n      },\n      {\n        name: 'Job Services',\n        url: route('admin.job-service.index')\n      },\n      {\n        name: 'Job Categories',\n        url: route('admin.job-category.index')\n      },\n      {\n        name: 'Job Skills',\n        url: route('admin.job-skills.index')\n      },\n\n      {\n        icon: 'bell',\n        name: 'Notifications',\n        url: route('admin.notification.index')\n      },\n      {\n        icon: 'mail',\n        name: 'Message Request',\n        url: route('admin.message.index')\n      },\n\n      {\n        name: 'Blog',\n        url: route('admin.blog.index')\n      },\n      {\n        name: 'Blog Category',\n        url: route('admin.category.index')\n      },\n      {\n        name: 'Blog Tags',\n        url: route('admin.tag.index')\n      },\n\n      {\n        icon: 'bx bx-grid',\n        name: 'Faq',\n        url: route('admin.faq.index')\n      },\n      {\n        icon: 'bx bx-list-ul',\n        name: 'Steps',\n        url: route('admin.features.index')\n      },\n      {\n        icon: 'bx bx-calendar',\n        name: 'Testimonials',\n        url: route('admin.testimonials.index')\n      },\n      {\n        icon: 'bx bx-user',\n        name: 'Team',\n        url: route('admin.team.index')\n      },\n      {\n        icon: 'bx bx-calendar',\n        name: 'About Us',\n        url: route('admin.about.index')\n      },\n      {\n        icon: 'bx bx-user',\n        name: 'Partners',\n        url: route('admin.partner.index')\n      },\n      {\n        icon: 'bx bx-grid',\n        name: 'Language',\n        url: route('admin.language.index')\n      },\n      {\n        icon: 'bx bx-pin',\n        name: 'Location',\n        url: route('admin.countries.index')\n      },\n      {\n        icon: 'bx bx-list-ol',\n        name: 'Menu',\n        url: route('admin.menu.index')\n      },\n      {\n        icon: 'bx bx-award',\n        name: 'Qualifications',\n        url: route('admin.qualifications.index')\n      },\n      {\n        icon: 'bx bx-list-ul',\n        name: 'Expert Level',\n        url: route('admin.expert-levels.index')\n      },\n      {\n        icon: 'bx bx-box',\n        name: 'Custom Pages',\n        url: route('admin.page.index')\n      },\n      {\n        icon: 'bx bx-cog',\n        name: 'Seo Settings',\n        url: route('admin.seo.index')\n      },\n\n      {\n        icon: 'box',\n        name: 'Description Templates',\n        url: route('admin.description-templates.index')\n      },\n\n      {\n        icon: 'box',\n        name: 'AI Templates',\n        url: route('admin.ai-templates.index')\n      },\n      {\n        icon: 'codepen',\n        name: 'AI Generated History',\n        url: route('admin.ai-generated-history')\n      },\n      {\n        icon: 'grid',\n        name: 'Language',\n        url: route('admin.ai-language.index')\n      },\n\n      {\n        icon: 'bx bx-cog',\n        name: 'Create KYC Method',\n        url: route('admin.kyc-methods.create')\n      },\n      {\n        icon: 'bx bx-cog',\n        name: 'KYC Methods',\n        url: route('admin.kyc-methods.index')\n      },\n      {\n        icon: 'bx bx-cog',\n        name: 'KYC Requests',\n        url: route('admin.kyc-requests.index')\n      },\n\n      {\n        icon: 'bx bx-cog',\n        name: 'Page Settings',\n        url: route('admin.page-settings.index')\n      },\n\n      {\n        icon: 'layers',\n        name: 'Themes',\n        url: route('admin.themes')\n      },\n\n      {\n        icon: 'bx bx-cog',\n        name: 'Admin',\n        url: route('admin.admin.index')\n      },\n      {\n        icon: 'bx bx-cog',\n        name: 'Roles',\n        url: route('admin.role.index')\n      },\n      {\n        icon: 'bx bx-cog',\n        name: 'App Setting',\n        url: route('admin.developer-settings.show', 'app-settings')\n      },\n      {\n        icon: 'bx bx-cog',\n        name: 'SMTP Setting',\n        url: route('admin.developer-settings.show', 'mail-settings')\n      },\n      {\n        icon: 'bx bx-cog',\n        name: 'Storage Setting',\n        url: route('admin.developer-settings.show', 'storage-settings')\n      },\n      {\n        icon: 'bx bx-cog',\n        name: 'Profile Settings',\n        url: route('admin.profile.setting')\n      }\n    ]\n  }\n]\nconst filteredMenuItems = computed(() => {\n  return (\n    menuGroups\n      .map((item) => {\n        return {\n          ...item,\n          // Search the pages array for pages that start with the search string\n          pages: item.pages\n            .filter((page) => page.name?.toLowerCase().startsWith(search.value?.toLowerCase()))\n            .map((item) => {\n              item.name = trans(item.name)\n              return item\n            })\n        }\n      })\n      // Filter out items that have no pages\n      .filter((item) => item.pages.length > 0)\n  )\n})\n</script>\n\n<template>\n  <!-- Top nav -->\n  <header class=\"header\">\n    <div class=\"container-fluid flex items-center justify-between\">\n      <!-- Sidebar Toggle & Search Starts -->\n      <div class=\"flex items-center space-x-6\">\n        <button class=\"sidebar-toggle\">\n          <span class=\"flex space-x-4\">\n            <svg\n              stroke=\"currentColor\"\n              fill=\"none\"\n              stroke-width=\"0\"\n              viewBox=\"0 0 24 24\"\n              height=\"22\"\n              width=\"22\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M4 6h16M4 12h8m-8 6h16\"\n              ></path>\n            </svg>\n          </span>\n        </button>\n\n        <!-- Mobile Search Starts -->\n        <div class=\"sm:hidden\">\n          <button\n            type=\"button\"\n            @click=\"modal.show()\"\n            class=\"flex items-center justify-center rounded-full text-slate-500 transition-colors duration-150 hover:text-primary-500 focus:text-primary-500 dark:text-slate-400 dark:hover:text-slate-300\"\n          >\n            <i width=\"22\" height=\"22\" data-feather=\"search\"></i>\n          </button>\n        </div>\n        <!-- Mobile Search Ends -->\n\n        <!-- Searchbar Start -->\n        <button\n          type=\"button\"\n          @click=\"modal.show()\"\n          class=\"group hidden h-10 w-72 items-center overflow-hidden rounded-primary bg-slate-100 px-3 shadow-sm dark:border-transparent dark:bg-slate-700 sm:flex\"\n        >\n          <i class=\"text-slate-400\" width=\"1em\" height=\"1em\" data-feather=\"search\"></i>\n          <span class=\"ml-2 text-sm text-slate-400\">Search</span>\n        </button>\n        <!-- Searchbar Ends -->\n      </div>\n      <!-- Sidebar Toggle & Search Ends -->\n\n      <!-- Header Options Starts -->\n      <div class=\"flex items-center\">\n        <!-- Language Dropdown Starts -->\n        <div class=\"dropdown\" data-strategy=\"absolute\">\n          <div class=\"dropdown-toggle px-3\">\n            <button\n              type=\"button\"\n              class=\"inline-flex items-center gap-2 text-sm text-slate-600 hover:text-slate-700 focus:text-slate-700 dark:text-slate-400 dark:hover:text-slate-300 dark:focus:text-slate-300\"\n            >\n              <span class=\"hidden font-medium md:inline-block\">\n                {{ $page.props.languages[$page.props.locale] }}</span\n              >\n              <span class=\"inline-block font-medium md:hidden\">\n                {{ $page.props.locale.toUpperCase() }}</span\n              >\n            </button>\n          </div>\n\n          <div class=\"dropdown-content mt-3 w-40\">\n            <ul class=\"dropdown-list\">\n              <li\n                v-for=\"(language, key) in $page.props.languages\"\n                :key=\"key\"\n                class=\"dropdown-list-item\"\n              >\n                <Link\n                  as=\"button\"\n                  :href=\"route('set-locale', key)\"\n                  method=\"patch\"\n                  class=\"dropdown-btn\"\n                >\n                  <span>{{ language }}</span>\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <!-- Language Dropdown Ends -->\n\n        <!-- Dark Mood Toggle Starts -->\n        <div class=\"dropdown\" data-strategy=\"absolute\" id=\"theme-switcher-dropdown\">\n          <button\n            class=\"dropdown-toggle px-3 text-slate-500 hover:text-slate-700 focus:text-primary-500 dark:text-slate-400 dark:hover:text-slate-300 dark:focus:text-primary-500\"\n            type=\"button\"\n          >\n            <!-- <i class=\"hidden text-lg dark:block fa-regular fa-sun\"></i>\n            <i class=\"block text-lg dark:hidden fa-regular fa-moon\"></i> -->\n            <i class=\"hidden dark:block\" width=\"24\" height=\"24\" data-feather=\"moon\">Dark</i>\n            <i class=\"block dark:hidden\" width=\"24\" height=\"24\" data-feather=\"sun\">Light</i>\n          </button>\n\n          <div class=\"dropdown-content mt-3 w-36\">\n            <ul class=\"dropdown-list\">\n              <li class=\"dropdown-list-item\">\n                <button type=\"buttton\" class=\"dropdown-btn\" data-theme-mode=\"light\">\n                  <i width=\"16\" height=\"16\" data-feather=\"sun\"></i>\n                  <span>{{ trans('Light') }}</span>\n                </button>\n              </li>\n\n              <li class=\"dropdown-list-item\">\n                <button type=\"buttton\" class=\"dropdown-btn\" data-theme-mode=\"dark\">\n                  <i width=\"16\" height=\"16\" data-feather=\"moon\"></i>\n                  <span>{{ trans('Dark') }}</span>\n                </button>\n              </li>\n\n              <li class=\"dropdown-list-item\">\n                <button type=\"buttton\" class=\"dropdown-btn\" data-theme-mode=\"system\">\n                  <i width=\"16\" height=\"16\" data-feather=\"monitor\"></i>\n                  <span>{{ trans('System') }}</span>\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <!-- Dark Mood Toggle Ends -->\n\n        <!-- Notification Dropdown Starts -->\n        <div class=\"dropdown -mt-0.5\" data-strategy=\"absolute\">\n          <div class=\"dropdown-toggle px-3\">\n            <button\n              class=\"relative mt-1 flex items-center justify-center rounded-full text-slate-500 transition-colors duration-150 hover:text-slate-700 focus:text-primary-500 dark:text-slate-400 dark:hover:text-slate-300 dark:focus:text-primary-500\"\n            >\n              <i width=\"24\" height=\"24\" data-feather=\"bell\"></i>\n              <span\n                v-if=\"unreadNotifications\"\n                class=\"absolute -right-1 -top-1.5 flex h-4 w-4 items-center justify-center rounded-full bg-danger-500 text-[11px] text-slate-200\"\n              >\n                {{ unreadNotifications }}\n              </span>\n            </button>\n          </div>\n\n          <div class=\"dropdown-content mt-3 w-[17.5rem] divide-y dark:divide-slate-700 sm:w-80\">\n            <div class=\"flex items-center justify-between px-4 py-4\">\n              <h6 class=\"text-slate-800 dark:text-slate-300\">\n                {{ trans('Notifications') }}\n              </h6>\n              <button\n                class=\"text-xs font-medium text-slate-600 hover:text-primary-500 dark:text-slate-300\"\n                v-if=\"notifications.length\"\n              >\n                {{ trans('Clear All') }}\n              </button>\n            </div>\n\n            <div class=\"h-80 w-full\" data-simplebar>\n              <ul>\n                <template v-if=\"notifications.length\">\n                  <li\n                    v-for=\"(item, index) in notifications\"\n                    :key=\"index\"\n                    @click=\"maskAsRead(item)\"\n                    class=\"flex cursor-pointer gap-4 px-4 py-3 transition-colors duration-150 hover:bg-slate-100/70 dark:hover:bg-slate-700\"\n                  >\n                    <div\n                      class=\"flex h-10 w-10 flex-shrink-0 items-center justify-center rounded-full bg-blue-100 text-blue-500\"\n                    >\n                      <i class=\"bx bx-user-voice\" width=\"20\" height=\"20\"></i>\n                    </div>\n\n                    <a :href=\"item.url ?? '#'\">\n                      <h6 class=\"text-sm font-normal\">{{ item.title }}</h6>\n                      <p class=\"text-xs text-slate-400\" :title=\"item.comment\">\n                        {{ item.comment_short }}\n                      </p>\n                      <p class=\"mt-1 flex items-center gap-1 text-xs text-slate-400\">\n                        <i data-feather=\"clock\" width=\"1em\" height=\"1em\"></i>\n                        <span>{{ item.created_at_human_date }}</span>\n                      </p>\n                    </a>\n                  </li>\n                </template>\n                <li v-else class=\"mt-5 text-center\">{{ trans('no notifications') }}</li>\n              </ul>\n            </div>\n\n            <div class=\"px-4 py-2\" v-if=\"notifications.length > 5\">\n              <Link\n                :href=\"route('admin.notification.index')\"\n                class=\"btn btn-primary-plain btn-sm w-full\"\n              >\n                <span>{{ trans('View More') }}</span>\n                <i data-feather=\"arrow-right\" width=\"1rem\" height=\"1rem\"></i>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <!-- Notification Dropdown Ends -->\n\n        <!-- Profile Dropdown Starts -->\n        <div class=\"dropdown\" data-strategy=\"absolute\">\n          <div class=\"dropdown-toggle pl-3\">\n            <button class=\"group relative flex items-center gap-x-1.5\" type=\"button\">\n              <div class=\"avatar avatar-circle avatar-indicator avatar-indicator-online\">\n                <img\n                  class=\"avatar-img group-focus-within:ring group-focus-within:ring-primary-500\"\n                  :src=\"\n                    authUser.avatar == null\n                      ? `https://ui-avatars.com/api/?name=${authUser.name}`\n                      : `${authUser.avatar}`\n                  \"\n                  :alt=\"authUser.name\"\n                />\n              </div>\n            </button>\n          </div>\n\n          <div class=\"dropdown-content mt-1 w-56 divide-y dark:divide-slate-600\">\n            <div class=\"px-4 py-3\">\n              <p class=\"text-sm\">\n                {{ trans('Welcome') }} <strong>{{ authUser.name }}</strong\n                >!\n              </p>\n              <p class=\"truncate text-sm font-medium\">({{ authUser.email }})</p>\n            </div>\n            <div class=\"py-1\">\n              <Link :href=\"route('admin.profile.setting')\" class=\"dropdown-link\">\n                <i width=\"18\" height=\"18\" data-feather=\"user\" class=\"text-slate-500\"></i>\n                <span>{{ trans('Profile') }}</span>\n              </Link>\n              <Link :href=\"route('admin.support.index')\" class=\"dropdown-link\">\n                <i width=\"18\" height=\"18\" data-feather=\"help-circle\" class=\"text-slate-500\"></i>\n                <span>{{ trans('Support') }}</span>\n              </Link>\n              <Link :href=\"route('clear-cache')\" class=\"dropdown-link\">\n                <i width=\"18\" height=\"18\" data-feather=\"database\" class=\"text-slate-500\"></i>\n                <span>{{ trans('Clear Cache') }}</span>\n              </Link>\n            </div>\n            <div class=\"py-1\">\n              <form method=\"POST\" action=\"#\">\n                <button type=\"button\" @click=\"logout()\" class=\"dropdown-btn\">\n                  <i width=\"18\" height=\"18\" data-feather=\"log-out\" class=\"text-slate-500\"></i>\n                  <span>{{ trans('Sign out') }}</span>\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n        <!-- Profile Dropdown Ends -->\n      </div>\n      <!-- Header Options Ends -->\n    </div>\n  </header>\n  <!-- Header -->\n\n  <!-- Search Modal Start -->\n  <div class=\"modal\" id=\"search-modal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header px-4 sm:px-6\">\n          <div class=\"group flex items-center\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              class=\"feather feather-search text-slate-500 group-focus-within:text-slate-600 dark:text-slate-400 dark:group-focus-within:text-slate-300\"\n            >\n              <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n              <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line></svg\n            ><input\n              type=\"text\"\n              v-model=\"search\"\n              class=\"w-full border-none bg-transparent text-sm text-slate-700 outline-none placeholder:text-slate-400 focus:ring-0 dark:text-slate-200\"\n              placeholder=\"Search\"\n            /><button\n              class=\"rounded-primary bg-slate-100 px-2 py-1 text-[10px] font-semibold text-slate-600 hover:bg-slate-200 dark:bg-slate-700 dark:text-slate-300 dark:hover:bg-slate-600\"\n              data-dismiss=\"modal\"\n            >\n              {{ trans('ESC') }}\n            </button>\n          </div>\n        </div>\n        <div class=\"modal-body max-h-[600px] px-4 py-6 sm:px-6\" data-simplebar=\"init\">\n          <div class=\"-mt-[12px] space-y-4\">\n            <div v-for=\"(group, index) in filteredMenuItems\" :key=\"index\" class=\"\">\n              <h6>{{ group.title }}</h6>\n              <ul class=\"mt-2 space-y-2\">\n                <li v-for=\"(page, index) in group.pages\" :key=\"index\" class=\"\">\n                  <Link\n                    @click=\"modal.hide()\"\n                    :href=\"page.url || '#'\"\n                    class=\"flex items-center gap-2 rounded-primary bg-slate-50 px-4 py-2 text-sm shadow-sm hover:bg-slate-100 dark:bg-slate-700 dark:hover:bg-slate-600\"\n                  >\n                    <i class=\"text-lg text-slate-500 dark:text-slate-400\" :class=\"page.icon\"></i>\n                    <span>{{ page.name }}</span>\n                    <i class=\"ti ti-chevron-right ml-auto text-slate-500\"></i>\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-backdrop\"></div>\n  </div>\n  <!-- Search Modal Ends -->\n</template>\n","<script setup>\nimport { computed } from 'vue'\nimport { usePage } from '@inertiajs/vue3'\n\nconst errors = computed(() => usePage().props.errors)\nconst close = () => (usePage().props.errors = [])\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0)\n\nif (hasErrors) {\n  setTimeout(() => {\n    close()\n  }, 2000)\n}\n</script>\n\n<template>\n  <transition name=\"slide-right\">\n    <div v-if=\"hasErrors\" class=\"validation-errors\">\n      <div class=\"flex justify-end\">\n        <button class=\"btn btn-danger btn-sm\" @click=\"close\">X</button>\n      </div>\n      <div class=\"flex flex-col\">\n        <p v-for=\"(error, key) in errors\" :key=\"key\">* {{ error.replace(/[.,]/g, ' ') }}</p>\n      </div>\n    </div>\n  </transition>\n</template>\n","import {\n    computePosition,\n    offset,\n    flip,\n    shift,\n    autoUpdate,\n    hide\n} from '@floating-ui/dom'\n\nclass Dropdown {\n    constructor (target, options = {}) {\n        if (typeof target === 'string') {\n            this.target = document.querySelector(target)\n        }\n\n        if (target instanceof HTMLElement) {\n            this.target = target\n        }\n\n        if (!this.target) {\n            throw new Error('No target element found')\n        }\n\n        this.toggle = this.target.querySelector('.dropdown-toggle')\n        this.content = this.target.querySelector('.dropdown-content')\n\n        if (!this.toggle) {\n            throw new Error('No toggle element found')\n        }\n\n        if (!this.content) {\n            throw new Error('No content element found')\n        }\n\n        this.options = options\n        this.init()\n    }\n\n    init () {\n        const outsideClickListener = e => {\n            if (!this.target.contains(e.target)) {\n                this.content.classList.remove('show')\n                this.content.classList.remove('animate-fade-in-up')\n                removeClickListener()\n            }\n        }\n\n        const removeClickListener = () => {\n            this.cleanup()\n            document.removeEventListener('click', outsideClickListener)\n        }\n\n        this.toggle.addEventListener('click', () => {\n            this.updatePosition()\n            this.content.classList.toggle('show')\n            this.content.classList.toggle('animate-fade-in-up')\n            document.addEventListener('click', outsideClickListener)\n        })\n    }\n\n    computePosition () {\n        if (this.options.strategy === 'absolute') {\n            this.content.style.position = 'absolute'\n        }\n        computePosition(this.target, this.content, {\n            placement: this.options.placement || 'bottom-start',\n            strategy: this.options.strategy || 'fixed',\n            middleware: [flip(), shift(), offset(6), hide()]\n        }).then(position => {\n            const { referenceHidden } = position.middlewareData.hide\n            Object.assign(this.content.style, {\n                visibility: referenceHidden ? 'hidden' : 'visible',\n                left: `${position.x}px`,\n                top: `${position.y}px`\n            })\n        })\n    }\n\n    updatePosition () {\n        const cleanup = autoUpdate(\n            this.target,\n            this.content,\n            this.computePosition.bind(this)\n        )\n        this.cleanup = cleanup\n    }\n}\n\nconst dropdown = {\n    init () {\n        const dropdowns = document.querySelectorAll('.dropdown')\n        dropdowns.forEach(dropdown => {\n            if (!dropdown.classList.contains('initiated')) {\n                new Dropdown(dropdown, dropdown.dataset)\n                dropdown.classList.add('initiated')\n            }\n        })\n    }\n}\n\nexport default dropdown\n","<template>\n  <div id=\"app\">\n    <Modal />\n    <!-- Sidebar Starts -->\n    <Sidebar />\n    <!-- Sidebar Ends -->\n\n    <div class=\"wrapper\">\n      <!-- Header Starts -->\n      <HeaderSection />\n      <ValidationErrors />\n      <!-- Header Ends -->\n\n      <div class=\"content\">\n        <!-- Main Content Starts -->\n        <slot></slot>\n      </div>\n      <!-- Page Content Ends -->\n    </div>\n    <!-- Wrapper Ends -->\n  </div>\n</template>\n\n<script setup>\nimport { onMounted } from 'vue'\nimport modal from '@/Plugins/Admin/modal'\nimport Sidebar from '@/Layouts/Admin/Sidebar.vue'\nimport HeaderSection from '@/Layouts/Admin/Headersection.vue'\n\nimport ValidationErrors from '@/Components/Admin/ValidationErrors.vue'\nimport dropdown from '@/Plugins/Admin/dropdown'\n\n//Third party packages\nimport '@fortawesome/fontawesome-free/js/all'\nimport feather from 'feather-icons'\nimport ResizeObserver from 'resize-observer-polyfill'\nimport { onUpdated } from 'vue'\nimport Modal from '@/Components/Admin/Modal.vue'\n\nonMounted(() => {\n  dropdown.init()\n  feather.replace()\n  window.ResizeObserver = ResizeObserver\n})\n\nonUpdated(() => {\n  dropdown.init()\n  feather.replace()\n})\n</script>\n","<script setup>\nimport { computed } from 'vue'\n\n\nconst defaultClasses = computed(() => {\n  return location.pathname.startsWith('/admin') ? \"btn btn-primary\" : \"btn-one d-flex align-items-center\"\n})\n\nconst props = defineProps({\n  processing: Boolean,\n  btnText: {\n    type: String,\n    default: \"Save\"\n  },\n  classes: {\n    type: String,\n    // \"btn btn-primary btn-one align-items-center d-flex flex items-center mt-5\"\n    default: '' // for adminend default btn\n  },\n  size: {\n    type: Number,\n    default: 30\n  }\n})\n</script>\n\n<template>\n  <button type=\"submit\" :class=\"classes == '' ? defaultClasses : classes\" :disabled=\"props.processing\">\n    <img v-show=\"props.processing ?? false\" src=\"/assets/images/ajax_loading_white.svg\" class=\"spinner_btn_img\" />\n    <span v-html=\"props.btnText\"></span>\n  </button>\n</template>\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport { useForm, router } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nimport { onBeforeMount, ref } from 'vue'\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps(['languages', 'segments', 'buttons', 'about', 'current_lang'])\n\nconst about = ref({ ...props.about })\n\nconst isProcessing = ref(false)\n\nonBeforeMount(() => {\n  let properties = ['cta_s1', 'cta_s2', 'video_s1']\n  properties.forEach((key) => (about.value[key] = about.value[key] || {}))\n\n  if (!about.value.cta_s1?.features?.length) {\n    about.value.cta_s1.features = [\n      {\n        title: '',\n        body: ''\n      }\n    ]\n  }\n})\n\nconst defaultFeature = {\n  title: '',\n  body: ''\n}\n\nconst addFeatureItem = () => {\n  about.value.cta_s1.features.push({ ...defaultFeature })\n}\n\nconst removeFeatureItem = (index) => {\n  about.value.cta_s1.features.splice(index, 1)\n}\n\nconst submit = () => {\n  isProcessing.value = true\n  router.post(\n    route('admin.about.store'),\n    {\n      about: about.value\n    },\n    {\n      onSuccess: () => notify.success(trans('About Page Updated successfully')),\n      onFinish: () => (isProcessing.value = false)\n    }\n  )\n}\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Edit About Page')\" :segments=\"segments\" :buttons=\"buttons\" />\n\n    <div class=\"flex justify-center\">\n      <div class=\"card mx-auto max-w-[800px]\">\n        <div class=\"card-body\">\n          <form @submit.prevent=\"submit\" class=\"space-y-5\">\n            <h6>{{ trans('Faq Section') }}</h6>\n            <div>\n              <div class=\"mb-2\">\n                <label>{{ trans('Title') }}</label>\n                <input type=\"text\" class=\"input\" v-model=\"about.cta_s1.title\" />\n              </div>\n\n              <div class=\"mb-2\">\n                <label class=\"mr-2\">{{ trans('Faqs') }}</label>\n                <div\n                  class=\"mb-3 flex items-center gap-2 rounded-md border p-2 dark:border-gray-600\"\n                  v-for=\"(item, index) in about.cta_s1.features\"\n                  :key=\"index\"\n                >\n                  <span class=\"h-6 w-6 rounded-full bg-indigo-600 text-center text-white\">\n                    {{ index + 1 }}\n                  </span>\n                  <div class=\"flex flex-grow flex-col gap-1\">\n                    <input type=\"text\" class=\"input\" placeholder=\"question\" v-model=\"item.title\" />\n                    <textarea class=\"textarea\" v-model=\"item.body\" placeholder=\"answer\"> </textarea>\n                  </div>\n                  <button type=\"button\" @click=\"removeFeatureItem(index)\" class=\"btn btn-danger\">\n                    X\n                  </button>\n                </div>\n                <button type=\"button\" @click=\"addFeatureItem\" class=\"btn btn-primary\">+</button>\n              </div>\n            </div>\n\n            <h6>{{ trans('Video Section') }}</h6>\n            <div>\n              <div class=\"mb-2\">\n                <label>{{ trans('Video Link') }}</label>\n                <input type=\"text\" v-model=\"about.video_s1.link\" class=\"input\" />\n              </div>\n              <div class=\"mb-2\">\n                <label>{{ trans('Background image') }}</label>\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  class=\"input\"\n                  @input=\"(e) => (about.video_s1.image = e.target.files[0])\"\n                />\n              </div>\n\n              <div class=\"mb-2\">\n                <label>{{ trans('Completed Jobs') }}</label>\n                <input type=\"text\" v-model=\"about.video_s1.completed_jobs\" class=\"input\" />\n              </div>\n              <div class=\"mb-2\">\n                <label>{{ trans('Worldwide Client') }}</label>\n                <input type=\"text\" v-model=\"about.video_s1.clients\" class=\"input\" />\n              </div>\n              <div class=\"mb-2\">\n                <label>{{ trans('Applied Jobs') }}</label>\n                <input type=\"text\" v-model=\"about.video_s1.applied_jobs\" class=\"input\" />\n              </div>\n            </div>\n\n            <h6>{{ trans('Call to action') }}</h6>\n            <div>\n              <div class=\"mb-2\">\n                <label>{{ trans('Title') }}</label>\n                <input type=\"text\" class=\"input\" v-model=\"about.cta_s2.title\" />\n              </div>\n\n              <div class=\"mb-2\">\n                <label>{{ trans('Sub title') }}</label>\n                <input type=\"text\" class=\"input\" v-model=\"about.cta_s2.subtitle\" />\n              </div>\n\n              <div class=\"mb-2\">\n                <label>{{ trans('features') }}</label>\n                <input type=\"text\" class=\"input\" v-model=\"about.cta_s2.features\" />\n                <p>{{ trans('use comma (,) for line break') }}</p>\n              </div>\n\n              <div class=\"mb-2\">\n                <label>{{ trans('Button Text') }}</label>\n                <input type=\"text\" class=\"input\" v-model=\"about.cta_s2.btn_text\" />\n              </div>\n\n              <div class=\"mb-2\">\n                <label>{{ trans('Button Link') }}</label>\n                <input type=\"text\" class=\"input\" v-model=\"about.cta_s2.btn_link\" />\n              </div>\n\n              <div class=\"mb-2\">\n                <label>{{ trans('Image 1') }}</label>\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  class=\"input\"\n                  @input=\"(e) => (about.cta_s2.image1 = e.target.files[0])\"\n                />\n              </div>\n              <div class=\"mb-2\">\n                <label>{{ trans('Image 2') }}</label>\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  class=\"input\"\n                  @input=\"(e) => (about.cta_s2.image2 = e.target.files[0])\"\n                />\n              </div>\n              <div class=\"mb-2\">\n                <label>{{ trans('Image 3') }}</label>\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  class=\"input\"\n                  @input=\"(e) => (about.cta_s2.image3 = e.target.files[0])\"\n                />\n              </div>\n              <div class=\"mb-2\">\n                <label>{{ trans('Image 4') }}</label>\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  class=\"input\"\n                  @input=\"(e) => (about.cta_s2.image4 = e.target.files[0])\"\n                />\n              </div>\n              <div class=\"mb-2\">\n                <label>{{ trans('Image 5') }}</label>\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  class=\"input\"\n                  @input=\"(e) => (about.cta_s2.image5 = e.target.files[0])\"\n                />\n              </div>\n              <div class=\"mb-2\">\n                <label>{{ trans('Image 6') }}</label>\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  class=\"input\"\n                  @input=\"(e) => (about.cta_s2.image6 = e.target.files[0])\"\n                />\n              </div>\n            </div>\n\n            <SpinnerBtn :processing=\"isProccessing\" :btn-text=\"trans('Save Changes')\" />\n          </form>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport { useForm } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\ndefineOptions({ layout: AdminLayout });\nconst props = defineProps([\"segments\", \"buttons\", \"roles\"]);\n\nconst form = useForm({\n  name: null,\n  email: null,\n  password: null,\n  password_confirmation: null,\n  roles: props.roles?.[0]?.name ?? \"\",\n});\n\nconst store = () => {\n  form.post(route(\"admin.admin.store\"), {\n    onSuccess() {\n      form.reset();\n      notify.success(trans('Added successfully'))\n    },\n  });\n};\n</script>\n\n<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Dashboard')\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <form @submit.prevent=\"store\">\n        <div class=\"grid grid-cols-12\">\n          <div class=\"lg:col-span-5\">\n            <strong>{{ trans(\"Create Admin\") }}</strong>\n            <p>{{ trans(\"add admin profile information\") }}</p>\n          </div>\n          <div class=\"lg:col-span-7 card-wrapper\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <label for=\"name\">{{ trans(\"Name\") }}</label>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Name\"\n                    v-model=\"form.name\"\n                    class=\"input\"\n                    id=\"name\"\n                    required=\"\"\n                    autocomplete=\"off\"\n                  />\n                  <div\n                    class=\"invalid-feedback text-danger d-block\"\n                    v-if=\"form.errors.name\"\n                  >\n                    {{ form.errors.name }}\n                  </div>\n                </div>\n                <div class=\"mb-2\">\n                  <label for=\"email\">{{ trans(\"Email\") }}</label>\n                  <input\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    v-model=\"form.email\"\n                    name=\"email\"\n                    class=\"input\"\n                    id=\"email\"\n                    required=\"\"\n                    autocomplete=\"off\"\n                  />\n                  <div\n                    class=\"invalid-feedback text-danger d-block\"\n                    v-if=\"form.errors.email\"\n                  >\n                    {{ form.errors.email }}\n                  </div>\n                </div>\n                <div class=\"mb-2\">\n                  <label for=\"password\">{{ trans(\"Password\") }}</label>\n                  <input\n                    type=\"password\"\n                    placeholder=\"Enter password\"\n                    v-model=\"form.password\"\n                    name=\"password\"\n                    class=\"input\"\n                    id=\"password\"\n                    required=\"\"\n                    autocomplete=\"off\"\n                  />\n                  <div\n                    class=\"invalid-feedback text-danger d-block\"\n                    v-if=\"form.errors.password\"\n                  >\n                    {{ form.errors.password }}\n                  </div>\n                </div>\n                <div class=\"mb-2\">\n                  <label for=\"password_confirmation\">{{ trans(\"Password\") }}</label>\n                  <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    v-model=\"form.password_confirmation\"\n                    name=\"password_confirmation\"\n                    class=\"input\"\n                    id=\"password_confirmation\"\n                    required=\"\"\n                    autocomplete=\"off\"\n                  />\n                  <div\n                    class=\"invalid-feedback text-danger d-block\"\n                    v-if=\"form.errors.password_confirmation\"\n                  >\n                    {{ form.errors.password_confirmation }}\n                  </div>\n                </div>\n\n                <div class=\"mb-2\">\n                  <label>{{ trans(\"Assign Roles\") }}</label>\n                  <select required v-model=\"form.roles\" id=\"roles\" class=\"select\">\n                    <option v-for=\"role in roles\" :key=\"role.id\" :value=\"role.name\">\n                      {{ role.name }}\n                    </option>\n                  </select>\n                  <div\n                    class=\"invalid-feedback text-danger d-block\"\n                    v-if=\"form.errors.roles\"\n                  >\n                    {{ form.errors.roles }}\n                  </div>\n                </div>\n                <div class=\"mt-3 from-group row\">\n                  <div class=\"col-lg-12\">\n                    <SpinnerBtn\n                      :processing=\"form.processing\"\n                      :btn-text=\"trans('Create Admin')\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport { useForm } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\ndefineOptions({ layout: AdminLayout });\nconst props = defineProps([\"segments\", \"buttons\", \"roles\", \"user\"]);\n\nconst form = useForm({\n  name: props.user.name,\n  email: props.user.email,\n  password: null,\n  password_confirmation: null,\n  status: props.user.status ? \"1\" : \"0\",\n  roles: props.user.roles[0].name,\n});\n\nconst update = () => {\n  const url = route(\"admin.admin.update\", props.user.id);\n\n  form.put(url, {\n    preserveScroll: true,\n    onSuccess: () => {\n      form.reset();\n      notify.success(trans(\"Updated Successfully\"));\n    },\n  });\n};\n</script>\n\n<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Edit Admin')\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <form @submit.prevent=\"update\">\n        <div class=\"grid grid-cols-12\">\n          <div class=\"col-span-5\">\n            <strong>{{ trans(\"Edit Admin\") }}</strong>\n            <p>{{ trans(\"Edit admin profile information\") }}</p>\n          </div>\n          <div class=\"col-span-7\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <label for=\"name\">{{ trans(\"Name\") }}</label>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Name\"\n                    v-model=\"form.name\"\n                    class=\"input\"\n                    id=\"name\"\n                    required=\"\"\n                    autocomplete=\"off\"\n                  />\n                  <div\n                    class=\"invalid-feedback text-danger d-block\"\n                    v-if=\"form.errors.name\"\n                  >\n                    {{ form.errors.name }}\n                  </div>\n                </div>\n                <div class=\"mb-2\">\n                  <label for=\"email\">{{ trans(\"Email\") }}</label>\n                  <input\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    v-model=\"form.email\"\n                    name=\"email\"\n                    class=\"input\"\n                    id=\"email\"\n                    required=\"\"\n                    autocomplete=\"off\"\n                  />\n                  <div\n                    class=\"invalid-feedback text-danger d-block\"\n                    v-if=\"form.errors.email\"\n                  >\n                    {{ form.errors.email }}\n                  </div>\n                </div>\n                <div class=\"mb-2\">\n                  <label for=\"password\">{{ trans(\"Password\") }}</label>\n                  <input\n                    type=\"password\"\n                    placeholder=\"Enter password\"\n                    v-model=\"form.password\"\n                    name=\"password\"\n                    class=\"input\"\n                    id=\"password\"\n                    autocomplete=\"off\"\n                  />\n                  <div\n                    class=\"invalid-feedback text-danger d-block\"\n                    v-if=\"form.errors.password\"\n                  >\n                    {{ form.errors.password }}\n                  </div>\n                </div>\n                <div class=\"mb-2\">\n                  <label for=\"password_confirmation\">{{ trans(\"Password\") }}</label>\n                  <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    v-model=\"form.password_confirmation\"\n                    name=\"password_confirmation\"\n                    class=\"input\"\n                    id=\"password_confirmation\"\n                    autocomplete=\"off\"\n                  />\n                  <div\n                    class=\"invalid-feedback text-danger d-block\"\n                    v-if=\"form.errors.password_confirmation\"\n                  >\n                    {{ form.errors.password_confirmation }}\n                  </div>\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans(\"Assign Roles\") }}</label>\n                  <select required v-model=\"form.roles\" id=\"roles\" class=\"select\">\n                    <option v-for=\"role in roles\" :key=\"role.id\" :value=\"role.name\">\n                      {{ role.name }}\n                    </option>\n                  </select>\n                  <div\n                    class=\"invalid-feedback text-danger d-block\"\n                    v-if=\"form.errors.roles\"\n                  >\n                    {{ form.errors.roles }}\n                  </div>\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans(\"Status\") }}</label>\n                  <select name=\"status\" class=\"select\" v-model=\"form.status\">\n                    <option value=\"1\">{{ trans(\"Active\") }}</option>\n                    <option value=\"0\">{{ trans(\"Deactive\") }}</option>\n                  </select>\n                </div>\n                <div class=\"mt-3 mb-2\">\n                  <div class=\"col-lg-12\">\n                    <SpinnerBtn\n                      :processing=\"form.processing\"\n                      :btn-text=\"trans('Update Profile')\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport NoDataFound from \"@/Components/Admin/NoDataFound.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport { Head, Link } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nimport sharedComposable from \"@/Composables/sharedComposable\";\nconst props = defineProps([\"segments\", \"buttons\", \"users\"]);\nimport AdminLayout from \"@/Layouts/Admin.vue\";\ndefineOptions({ layout: AdminLayout });\nconst { deleteRow } = sharedComposable();\n</script>\n\n<template>\n  <main class=\"container p-4 sm:p-6\">\n    <Head title=\"Sub Admins\" />\n    <HeaderSegment :title=\"trans('Sub Admins')\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans(\"Name\") }}</th>\n              <th>{{ trans(\"Email\") }}</th>\n              <th>{{ trans(\"Status\") }}</th>\n              <th>{{ trans(\"Role\") }}</th>\n              <th>\n                <div class=\"text-right\">\n                  {{ trans(\"Action\") }}\n                </div>\n              </th>\n            </tr>\n          </thead>\n          <tbody v-if=\"users.length\">\n            <tr v-for=\"row in users\" :key=\"row.id\">\n              <td>\n                {{ row.name }}\n              </td>\n              <td>\n                {{ row.email }}\n              </td>\n              <td>\n                <span\n                  :class=\"row.status == 1 ? 'badge badge-success' : 'badge badge-danger'\"\n                >\n                  {{ row.status == 1 ? trans(\"Active\") : trans(\"Deactive\") }}\n                </span>\n              </td>\n              <td>\n                <span class=\"badge badge-primary\" v-for=\"r in row.roles\">{{\n                  r.name\n                }}</span>\n              </td>\n\n              <td>\n                <div class=\"flex justify-end\">\n                  <div class=\"dropdown\" data-placement=\"bottom-start\">\n                    <div class=\"dropdown-toggle\">\n                      <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                    </div>\n                    <div class=\"w-40 dropdown-content\">\n                      <ul class=\"dropdown-list\">\n                        <li class=\"dropdown-list-item\">\n                          <Link\n                            :href=\"route('admin.admin.edit', row.id)\"\n                            class=\"dropdown-link\"\n                          >\n                            <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                            <span>{{ trans(\"Edit\") }}</span>\n                          </Link>\n                        </li>\n\n                        <li class=\"dropdown-list-item\">\n                          <button\n                            class=\"dropdown-link\"\n                            @click=\"deleteRow(route('admin.admin.destroy', row.id))\"\n                          >\n                            <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                              >{{ trans(\"Remove\") }}></i\n                            >\n                            <span>{{ trans(\"Delete\") }}</span>\n                          </button>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else :for-table=\"true\" />\n        </table>\n      </div>\n    </div>\n  </main>\n</template>\n","class Drawer {\n    constructor (target, options = {}) {\n        //Store the target element\n        this.target = null\n\n        //Store drawer element\n        this.drawer = null\n\n        //Store drawer toggle\n        this.toggle = null\n\n        //Store drawer transition in miliseconds.\n        this.transition = 500\n\n        //Store drawer dismisses\n        this.dismisses = null\n\n        //Store the drawer options\n        this.options = {\n            keyboard: true, //Boolean. Default is true\n            backdrop: true, //Boolean | 'static'. Default is true\n            ...options\n        }\n\n        this.documentOnKeydown = e => this.hideOnKeydown({ e, drawer: this })\n\n        if (typeof target === 'string') {\n            this.target = document.querySelector(target)\n        } else if (target instanceof HTMLElement) {\n            this.target = target\n        } else {\n            throw new Error('No target element found')\n        }\n\n        if (this.target.classList.contains('drawer')) {\n            this.drawer = this.target\n        } else {\n            this.toggle = this.target\n            this.drawer = document.querySelector(this.toggle.dataset.target)\n\n            this.toggle.addEventListener('click', () => {\n                const openDrawers = document.querySelectorAll('.drawer.show')\n\n                if (openDrawers.length) {\n                    ;[...openDrawers].forEach(drawer => this.hide(drawer))\n                } else {\n                    this.show()\n                }\n            })\n        }\n\n        this.dismisses = this.drawer.querySelectorAll('[data-dismiss=\"drawer\"]')\n\n        if (this.dismisses.length) {\n            ;[...this.dismisses].forEach(dismiss => {\n                dismiss.addEventListener('click', () => this.hide())\n            })\n        }\n    }\n\n    show (element = null) {\n        const drawer = element ? element : this.drawer\n\n        if (!drawer.classList.contains('showing')) {\n            drawer.classList.add('showing')\n\n            if (this.options.backdrop) {\n                document.body.appendChild(this.createBackdrop())\n            }\n\n            setTimeout(() => {\n                const drawerBackdrop =\n                    document.querySelector('.drawer-backdrop')\n                drawer.classList.replace('showing', 'show')\n\n                if (drawerBackdrop) {\n                    drawerBackdrop.classList.add('show')\n\n                    drawerBackdrop.addEventListener('click', () => {\n                        if (this.options.backdrop !== 'static') {\n                            this.hide()\n                        }\n                    })\n                }\n\n                if (this.options.keyboard) {\n                    document.addEventListener('keydown', this.documentOnKeydown)\n                }\n            }, 15)\n        }\n    }\n\n    hide (element = null) {\n        const drawer = element ? element : this.drawer\n\n        if (\n            drawer.classList.contains('show') &&\n            !drawer.classList.contains('hiding')\n        ) {\n            const drawerBackdrop = document.querySelector('.drawer-backdrop')\n\n            drawer.classList.add('hiding')\n\n            if (drawerBackdrop) {\n                drawerBackdrop.classList.remove('show')\n            }\n\n            setTimeout(() => {\n                drawer.classList.remove('show')\n                drawer.classList.remove('hiding')\n\n                if (drawerBackdrop) {\n                    drawerBackdrop.remove()\n                }\n\n                if (this.options.keyboard) {\n                    document.removeEventListener(\n                        'keydown',\n                        this.documentOnKeydown\n                    )\n                }\n            }, this.transition)\n        }\n    }\n\n    hideOnKeydown (args) {\n        const { e, drawer } = args\n\n        if (e.key === 'Escape' && drawer.options.keyboard) {\n            drawer.hide()\n        }\n    }\n\n    createBackdrop () {\n        if (document.querySelector('.drawer-backdrop')) {\n            document.querySelector('.drawer-backdrop').remove()\n        }\n\n        const backdrop = document.createElement('div')\n        backdrop.setAttribute('class', 'drawer-backdrop')\n\n        return backdrop\n    }\n}\n\nconst drawer = {\n    init () {\n        const toggles = this.querySelectors('[data-toggle=\"drawer\"]')\n\n        if (toggles.length) {\n            toggles.forEach(toggle => {\n                const targetId = toggle.dataset.target\n\n                if (targetId) {\n                    const target = document.querySelector(targetId)\n                    const options = {\n                        keyboard:\n                            target.dataset.keyboard === 'false' ? false : true,\n                        backdrop: (() => {\n                            let output = true\n\n                            if (target.dataset.backdrop === 'static') {\n                                output = 'static'\n                            }\n\n                            if (target.dataset.backdrop === 'false') {\n                                output = false\n                            }\n\n                            return output\n                        })()\n                    }\n\n                    new Drawer(toggle, options)\n                }\n            })\n        }\n    },\n\n    querySelectors (selectors) {\n        let output = []\n\n        if (selectors) {\n            output = [...document.querySelectorAll(selectors)].filter(\n                selectorElement => {\n                    // Return all the elements except .code-viewer-source children elements\n                    return !selectorElement.parentElement.classList.contains(\n                        'code-viewer-source'\n                    )\n                }\n            )\n        }\n\n        return output\n    },\n\n    of (target, options = {}) {\n        return new Drawer(target, options)\n    }\n}\n\nexport default drawer\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm, router } from '@inertiajs/vue3'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport notify from '@/Plugins/Admin/notify'\nimport drawer from '@/Plugins/Admin/drawer'\nimport trans from '@/Composables/transComposable'\nimport { onMounted, ref } from 'vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\ndefineOptions({ layout: AdminLayout })\n\nconst { deleteRow } = sharedComposable()\n\nonMounted(() => {\n  drawer.init()\n})\n\nconst props = defineProps(['languages', 'buttons', 'segments'])\n\nconst form = useForm({\n  name: ''\n})\nconst editForm = ref({})\nconst isProcessing = ref(false)\nconst storeCurrency = () => {\n  form.post(route('admin.ai-language.store'), {\n    preserveScroll: true,\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('Language has been added successfully'))\n      drawer.of('#addNewCurrencyDrawer').hide()\n    }\n  })\n}\nconst updateCurrency = () => {\n  isProcessing.value = true\n  router.patch(route('admin.ai-language.update', editForm.value.id), editForm.value, {\n    preserveScroll: true,\n    onSuccess: () => {\n      editForm.value = {}\n      notify.success(trans('Language has been updated successfully'))\n      drawer.of('#editCurrencyDrawer').hide()\n    },\n    onFinish: () => (isProcessing.value = false)\n  })\n}\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Create a Language\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"col-2\">{{ trans('Name') }}</th>\n              <th class=\"flex justify-end\">{{ trans('Action') }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"language in languages\" :key=\"language.code\">\n              <td class=\"text-left\">\n                {{ language.name }}\n              </td>\n              <td class=\"flex justify-end gap-3\">\n                <button\n                  class=\"delete-confirm btn btn-primary\"\n                  @click=\"\n                    () => {\n                      editForm = { ...language }\n                      drawer.of('#editCurrencyDrawer').show()\n                    }\n                  \"\n                >\n                  <i class=\"fas fa-edit\"></i>\n                </button>\n                <a\n                  href=\"javascript:void(0)\"\n                  class=\"delete-confirm btn btn-primary\"\n                  @click=\"deleteRow(route('admin.ai-language.destroy', language.id))\"\n                  ><i class=\"fas fa-trash\"></i\n                ></a>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-if=\"languages.length < 1\" for-table=\"true\" />\n        </table>\n      </div>\n    </div>\n  </main>\n\n  <div id=\"addNewCurrencyDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeCurrency()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Add New language') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans('Name') }}</label>\n          <input\n            v-model=\"form.name\"\n            type=\"text\"\n            name=\"name\"\n            class=\"input\"\n            required\n            placeholder=\"English\"\n          />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"btn w-full btn-primary\"\n            :processing=\"form.processing\"\n            :btn-text=\"trans('Create')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n  <div id=\"editCurrencyDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateCurrency\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Edit language') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans('Name') }}</label>\n          <input v-model=\"editForm.name\" type=\"text\" name=\"name\" class=\"input\" required />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            :processing=\"isProcessing\"\n            classes=\"btn w-full btn-primary\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n","<template>\n  <main class=\"container flex-grow p-4 sm:p6\">\n    <HeaderSegment title=\"Edit Language\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <form @submit.prevent=\"updateLanguage\" method=\"post\">\n\n        <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th class=\"col-6\">{{ trans(\"Translation Key\") }}</th>\n                <th class=\"col-6\">{{ trans(\"Translated Value\") }}</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              <tr v-for=\"(value, key) in posts\" :key=\"key\">\n                <td>\n                  {{ key }}\n                </td>\n                <td>\n                  <input type=\"text\" class=\"input\" v-model=\"posts[key]\" />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"card-footer\">\n          <SpinnerBtn :btn-text=\"trans('Save Changes')\" :processing=\"isProccessing\" />\n        </div>\n      </form>\n    </div>\n\n  </main>\n\n  <div id=\"addNewLanguageKeyDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"createKey()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Add New Language\") }}</h5>\n        <button type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\">\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Key\") }}</label>\n          <input type=\"text\" name=\"key\" v-model=\"form.key\" class=\"input\" required />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Value\") }}</label>\n          <input type=\"text\" name=\"value\" v-model=\"form.value\" class=\"input\" required />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn classes=\"w-full btn btn-primary\" :processing=\"form.processing\" :btn-text=\"trans('Create')\" />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport drawer from \"@/Plugins/Admin/drawer\"\nimport notify from \"@/Plugins/Admin/notify\"\nimport { useForm, router } from \"@inertiajs/vue3\"\nimport trans from '@/Composables/transComposable'\nimport { ref } from \"vue\"\nimport { onMounted } from \"vue\"\n\n\ndefineOptions({ layout: AdminLayout })\n\n\nonMounted(() => {\n  drawer.init()\n})\n\n\nconst props = defineProps([\n  'posts',\n  'id',\n  'buttons',\n  'segments',\n])\n\nconst form = useForm({\n  key: '',\n  value: '',\n  id: props.id\n})\n\n\nconst createKey = () => {\n  form.post('/admin/language/addkey', {\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('Language key has been added successfully'))\n      drawer.of('#addNewLanguageKeyDrawer').hide()\n    }\n  })\n}\n\nconst isProccessing = ref(false)\n\nconst updateLanguage = () => {\n  isProccessing.value = true\n  router.patch(route('admin.language.update', props.id), {\n    values: props.posts\n  }, {\n    onSuccess: () => {\n      form.reset()\n      isProccessing.value = false\n      notify.success(trans('Language key has been added successfully'))\n    }\n  })\n}\n</script>\n","<script setup>\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport InputFieldError from \"@/Components/InputFieldError.vue\";\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport { useForm } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nimport { ref } from \"vue\";\ndefineOptions({ layout: AdminLayout });\n\nconst props = defineProps([\"buttons\", \"segments\", \"aiModels\"]);\n\nconst defaultInputFieldItem = {\n  type: \"\",\n  name: \"\",\n  placeholder: \"\",\n  value: \"\",\n};\n\nconst languages = [\n  {\n    code: \"en\",\n    name: \"English\",\n  },\n  {\n    code: \"bn\",\n    name: \"Bangla\",\n  },\n];\n\nconst form = useForm({\n  title: \"\",\n  description: \"\",\n  preview: \"\",\n  icon: \"\",\n  status: \"\",\n  ai_model: \"\",\n  type: \"\",\n  fields: [{ ...defaultInputFieldItem }],\n  // lang: \"en\",\n  prompt: \"\",\n});\n\nconst addNewField = () => {\n  form.fields.push({ ...defaultInputFieldItem });\n};\n\nconst removeField = (index) => {\n  form.fields.splice(index, 1);\n};\n\nconst submit = () => {\n  form.post(route(\"admin.ai-templates.store\"), {\n    onSuccess: () => {\n      notify.success(trans(\"Template has been added successfully\", \"Success\"));\n      form.reset();\n    },\n  });\n};\n\nconst bodyEl = ref(\"\");\nconst addToPrompt = (code) => {\n  let curPos = bodyEl.value.selectionStart;\n  let text = form.prompt;\n  form.prompt = text.slice(0, curPos) + code + text.slice(curPos);\n\n  let focusPosition = curPos + code.length;\n  setTimeout(() => {\n    bodyEl.value.setSelectionRange(focusPosition, focusPosition);\n    bodyEl.value.focus();\n  }, 100);\n};\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('Create Description Template')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n\n    <div class=\"w-9/12 mx-auto\">\n      <h3 class=\"mb-3 card-title\">{{ trans(\"Create New Template\") }}</h3>\n\n      <form @submit.prevent=\"submit\" class=\"space-y-7\">\n        <div class=\"card card-body\">\n          <div class=\"mb-2\">\n            <label>{{ trans(\"Template Title\") }}</label>\n            <input type=\"text\" v-model=\"form.title\" class=\"input\" />\n            <InputFieldError :message=\"form.errors.title\" />\n          </div>\n          <div class=\"mb-2\">\n            <label>{{ trans(\"Template Description\") }}</label>\n            <textarea v-model=\"form.description\" class=\"textarea\"></textarea>\n            <InputFieldError :message=\"form.errors.description\" />\n          </div>\n\n          <div class=\"grid grid-cols-2 space-x-2\">\n            <div class=\"mb-2\">\n              <label>{{ trans(\"Template Icon\") }}</label>\n              <input\n                type=\"file\"\n                @change=\"(e) => (form.icon = e.target.files[0])\"\n                class=\"input\"\n              />\n              <InputFieldError :message=\"form.errors.icon\" />\n            </div>\n\n            <div class=\"mb-2\">\n              <label>{{ trans(\"Template Preview\") }}</label>\n              <input\n                type=\"file\"\n                @change=\"(e) => (form.preview = e.target.files[0])\"\n                class=\"input\"\n              />\n              <InputFieldError :message=\"form.errors.preview\" />\n            </div>\n          </div>\n\n          <div class=\"flex gap-1\">\n            <div class=\"w-1/2 mb-3\">\n              <label>{{ trans(\"Template for\") }}</label>\n              <select class=\"select\" v-model=\"form.type\">\n                <option value=\"\" disabled selected>SELECT</option>\n                <option v-for=\"t in ['candidate', 'employer']\" :value=\"t\" :key=\"t\">\n                  {{ t.toUpperCase() }}\n                </option>\n              </select>\n              <InputFieldError :message=\"form.errors.type\" />\n            </div>\n            <div class=\"w-1/2 mb-3\">\n              <label>{{ trans(\"Status\") }}</label>\n              <select class=\"select\" v-model=\"form.status\">\n                <option value=\"\" disabled selected>SELECT</option>\n                <option v-for=\"t in ['active', 'draft']\" :value=\"t\" :key=\"t\">\n                  {{ t.toUpperCase() }}\n                </option>\n              </select>\n              <InputFieldError :message=\"form.errors.status\" />\n            </div>\n            <div class=\"w-1/2 mb-3\">\n              <label>{{ trans(\"AI Model\") }}</label>\n              <select class=\"select\" v-model=\"form.ai_model\">\n                <option value=\"\" disabled selected>SELECT</option>\n                <option v-for=\"t in aiModels\" :value=\"t\" :key=\"t\">\n                  {{ t.toUpperCase() }}\n                </option>\n              </select>\n              <InputFieldError :message=\"form.errors.ai_model\" />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card card-body\">\n          <div class=\"flex justify-between\">\n            <h5>{{ trans(\"Input Fields\") }}</h5>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewField\">+</button>\n          </div>\n          <div\n            v-for=\"(field, index) in form.fields\"\n            class=\"flex items-center gap-3 gap-y-5\"\n          >\n            <div class=\"mb-2 space-y-1\">\n              <label>{{ trans(\"Field Type\") }}</label>\n              <select class=\"select\" v-model=\"field.type\">\n                <option value=\"\" disabled selected>SELECT</option>\n                <option v-for=\"t in ['input', 'textarea']\" :value=\"t\" :key=\"t\">\n                  {{ t.toUpperCase() }}\n                </option>\n              </select>\n              <InputFieldError :message=\"form.errors['fields.' + index + '.type']\" />\n            </div>\n            <div class=\"mb-2 space-y-1\">\n              <label>{{ trans(\"Field Name\") }}</label>\n              <input type=\"text\" v-model=\"field.name\" class=\"input\" />\n              <InputFieldError :message=\"form.errors['fields.' + index + '.name']\" />\n            </div>\n            <div class=\"mb-2 space-y-1\">\n              <label>{{ trans(\"Field Placeholder\") }}</label>\n              <input type=\"text\" v-model=\"field.placeholder\" class=\"input\" />\n              <InputFieldError\n                :message=\"form.errors['fields.' + index + '.placeholder']\"\n              />\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                class=\"mt-5 btn btn-danger\"\n                @click=\"removeField(index)\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card card-body\">\n        \n          <div class=\"mb-2\">\n            <label>{{ trans(\"Custom Prompt\") }}</label>\n            <textarea v-model=\"form.prompt\" ref=\"bodyEl\" class=\"textarea\"></textarea>\n            <InputFieldError :message=\"form.errors.prompt\" />\n          </div>\n          <ul class=\"flex flex-wrap items-center gap-1 mb-3\">\n            <li\n              v-for=\"code in form.fields\n                .filter((item) => item.name.length)\n                .map((item) => `[${item.name}]`)\"\n              @click=\"addToPrompt(code)\"\n              :key=\"code\"\n              class=\"p-1 border rounded\"\n            >\n              {{ code }}\n            </li>\n          </ul>\n          <div class=\"mb-2\">\n            <SpinnerBtn :processing=\"form.processing\" :btn-text=\"trans('Create ')\" />\n          </div>\n        </div>\n      </form>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport InputFieldError from \"@/Components/InputFieldError.vue\";\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport { useForm } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nimport { ref } from \"vue\";\ndefineOptions({ layout: AdminLayout });\n\nconst props = defineProps([\"template\", \"buttons\", \"segments\", \"aiModels\"]);\n\nconst defaultInputFieldItem = {\n  type: \"\",\n  name: \"\",\n  placeholder: \"\",\n  value: \"\",\n};\n\nconst languages = [\n  {\n    code: \"en\",\n    name: \"English\",\n  },\n  {\n    code: \"bn\",\n    name: \"Bangla\",\n  },\n];\n\nconst form = useForm({\n  title: props.template.title ?? \"\",\n  description: props.template.description ?? \"\",\n  preview: null,\n  icon: null,\n  status: props.template.status ?? \"\",\n  ai_model: props.template.ai_model ?? \"\",\n  type: props.template.type ?? \"\",\n  fields: props.template.fields ?? [{ ...defaultInputFieldItem }],\n  // lang: props.template.lang ?? \"en\",\n  prompt: props.template.prompt ?? \"\",\n  _method: \"put\",\n});\n\nconst addNewField = () => {\n  form.fields.push({ ...defaultInputFieldItem });\n};\n\nconst removeField = (index) => {\n  form.fields.splice(index, 1);\n};\n\nconst submit = () => {\n  form.post(route(\"admin.ai-templates.update\", props.template), {\n    onSuccess: () => {\n      notify.success(trans(\"Template has been updated successfully\", \"Success\"));\n    },\n  });\n};\n\nconst bodyEl = ref(\"\");\nconst addToPrompt = (code) => {\n  let curPos = bodyEl.value.selectionStart;\n  let text = form.prompt;\n  form.prompt = text.slice(0, curPos) + code + text.slice(curPos);\n\n  let focusPosition = curPos + code.length;\n  setTimeout(() => {\n    bodyEl.value.setSelectionRange(focusPosition, focusPosition);\n    bodyEl.value.focus();\n  }, 100);\n};\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('Create Description Template')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n\n    <div class=\"w-9/12 mx-auto\">\n      <h3 class=\"mb-3 card-title\">{{ trans(\"Create New Template\") }}</h3>\n\n      <form @submit.prevent=\"submit\" class=\"space-y-7\">\n        <div class=\"card card-body\">\n          <div class=\"mb-2\">\n            <label>{{ trans(\"Template Title\") }}</label>\n            <input type=\"text\" v-model=\"form.title\" class=\"input\" />\n            <InputFieldError :message=\"form.errors.title\" />\n          </div>\n          <div class=\"mb-2\">\n            <label>{{ trans(\"Template Description\") }}</label>\n            <textarea v-model=\"form.description\" class=\"textarea\"></textarea>\n            <InputFieldError :message=\"form.errors.description\" />\n          </div>\n\n          <div class=\"grid grid-cols-2 space-x-2\">\n            <div class=\"mb-2\">\n              <label>{{ trans(\"Template Icon\") }}</label>\n              <input\n                type=\"file\"\n                @change=\"(e) => (form.icon = e.target.files[0])\"\n                class=\"input\"\n              />\n              <InputFieldError :message=\"form.errors.icon\" />\n            </div>\n\n            <div class=\"mb-2\">\n              <label>{{ trans(\"Template Preview\") }}</label>\n              <input\n                type=\"file\"\n                @change=\"(e) => (form.preview = e.target.files[0])\"\n                class=\"input\"\n              />\n              <InputFieldError :message=\"form.errors.preview\" />\n            </div>\n          </div>\n\n          <div class=\"grid grid-cols-3 gap-1\">\n            <div class=\"mb-3\">\n              <label>{{ trans(\"Template for\") }}</label>\n              <select class=\"select\" v-model=\"form.type\">\n                <option value=\"\" disabled selected>SELECT</option>\n                <option v-for=\"t in ['candidate', 'employer']\" :value=\"t\" :key=\"t\">\n                  {{ t.toUpperCase() }}\n                </option>\n              </select>\n              <InputFieldError :message=\"form.errors.type\" />\n            </div>\n            <div class=\"mb-3\">\n              <label>{{ trans(\"Status\") }}</label>\n              <select class=\"select\" v-model=\"form.status\">\n                <option value=\"\" disabled selected>SELECT</option>\n                <option v-for=\"t in ['active', 'draft']\" :value=\"t\" :key=\"t\">\n                  {{ t.toUpperCase() }}\n                </option>\n              </select>\n              <InputFieldError :message=\"form.errors.status\" />\n            </div>\n\n            <div class=\"mb-3\">\n              <label>{{ trans(\"AI Model\") }}</label>\n              <select class=\"select\" v-model=\"form.ai_model\">\n                <option value=\"\" disabled selected>SELECT</option>\n                <option v-for=\"t in aiModels\" :value=\"t\" :key=\"t\">\n                  {{ t.toUpperCase() }}\n                </option>\n              </select>\n              <InputFieldError :message=\"form.errors.ai_model\" />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card card-body\">\n          <div class=\"flex justify-between\">\n            <h5>{{ trans(\"Input Fields\") }}</h5>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewField\">+</button>\n          </div>\n          <div\n            v-for=\"(field, index) in form.fields\"\n            class=\"flex items-center gap-3 gap-y-5\"\n          >\n            <div class=\"mb-2 space-y-1\">\n              <label>{{ trans(\"Field Type\") }}</label>\n              <select class=\"select\" v-model=\"field.type\">\n                <option value=\"\" disabled selected>SELECT</option>\n                <option v-for=\"t in ['input', 'textarea']\" :value=\"t\" :key=\"t\">\n                  {{ t.toUpperCase() }}\n                </option>\n              </select>\n              <InputFieldError :message=\"form.errors['fields.' + index + '.type']\" />\n            </div>\n            <div class=\"mb-2 space-y-1\">\n              <label>{{ trans(\"Field Name\") }}</label>\n              <input type=\"text\" v-model=\"field.name\" class=\"input\" />\n              <InputFieldError :message=\"form.errors['fields.' + index + '.name']\" />\n            </div>\n            <div class=\"mb-2 space-y-1\">\n              <label>{{ trans(\"Field Placeholder\") }}</label>\n              <input type=\"text\" v-model=\"field.placeholder\" class=\"input\" />\n              <InputFieldError\n                :message=\"form.errors['fields.' + index + '.placeholder']\"\n              />\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                class=\"mt-5 btn btn-danger\"\n                @click=\"removeField(index)\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card card-body\">\n         \n\n          <div class=\"mb-2\">\n            <label>{{ trans(\"Custom Prompt\") }}</label>\n            <textarea v-model=\"form.prompt\" ref=\"bodyEl\" class=\"textarea\"></textarea>\n            <InputFieldError :message=\"form.errors.prompt\" />\n          </div>\n          <ul class=\"flex flex-wrap items-center gap-1 mb-3\">\n            <li\n              v-for=\"code in form.fields\n                .filter((item) => item.name.length)\n                .map((item) => `[${item.name}]`)\"\n              @click=\"addToPrompt(code)\"\n              :key=\"code\"\n              class=\"p-1 border rounded\"\n            >\n              {{ code }}\n            </li>\n          </ul>\n          <div class=\"mb-2\">\n            <SpinnerBtn\n              :processing=\"form.processing\"\n              :btn-text=\"trans('Save & Update')\"\n            />\n          </div>\n        </div>\n      </form>\n    </div>\n  </main>\n</template>\n","<script setup>\nconst props = defineProps([\"items\", \"grid\"]);\n\nconst gridClass = `lg:grid-cols-${props.grid ?? 4}`;\n</script>\n\n<template>\n  <section\n    class=\"grid grid-cols-1 gap-6 sm:grid-cols-2 md:grid-cols-3\"\n    :class=\"gridClass\"\n  >\n    <!-- Product Views  -->\n    <div class=\"card\" v-for=\"item in props.items\">\n      <div class=\"flex items-center gap-4 card-body\">\n        <div\n          class=\"flex items-center justify-center flex-shrink-0 w-12 h-12 rounded-full bg-primary-500 bg-opacity-20 text-primary-500\"\n        >\n          <i class=\"text-3xl\" :class=\"item.iconClass ?? 'bx bx-box'\"></i>\n        </div>\n        <div class=\"flex flex-col flex-1 gap-1\">\n          <p class=\"text-sm tracking-wide text-slate-500\">{{ item.title }}</p>\n          <div class=\"flex flex-wrap items-baseline justify-between gap-2\">\n            <h4>{{ item.value }}</h4>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport moment from 'moment'\nimport trans from '@/Composables/transComposable'\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport OverviewGrid from '@/Components/Admin/OverviewGrid.vue'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\nimport Paginate from '@/Components/Paginate.vue'\n\nconst { deleteRow } = sharedComposable()\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps([\n  'templates',\n  'totalTemplates',\n  'activeTemplates',\n  'inActiveTemplates',\n  'buttons',\n  'segments'\n])\n\nconst stats = [\n  {\n    value: props.totalTemplates,\n    title: trans('Total Templates'),\n    iconClass: 'bx bx-bar-chart'\n  },\n  {\n    value: props.activeTemplates,\n    title: trans('Active Templates'),\n    iconClass: 'bx bx-check-circle'\n  },\n  {\n    value: props.inActiveTemplates,\n    title: trans('Inactive Templates'),\n    iconClass: 'bx bx-x-circle'\n  }\n]\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"AI Templates\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <OverviewGrid :items=\"stats\" grid=\"3\" />\n\n      <div class=\"row\">\n        <div class=\"col\">\n          <div class=\"card\">\n            <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th>{{ trans('Image') }}</th>\n                    <th>{{ trans('Name') }}</th>\n                    <th>{{ trans('Description') }}</th>\n                    <th>{{ trans('Created At') }}</th>\n                    <th>{{ trans('Status') }}</th>\n                    <th>\n                      <p class=\"text-end\">{{ trans('Action') }}</p>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody v-if=\"templates.total\">\n                  <tr v-for=\"template in templates.data\" :key=\"template.id\">\n                    <td class=\"text-left\">\n                      <img :src=\"template.icon\" class=\"avatar rounded-square w-70-per\" />\n                    </td>\n                    <td class=\"text-left\">\n                      {{ template.title }}\n                    </td>\n\n                    <td class=\"text-left\">\n                      {{ template.description }}\n                    </td>\n                    <td>\n                      {{ moment(template.created_at).format('D-MMM-Y') }}\n                    </td>\n                    <td class=\"text-left\">\n                      <span\n                        class=\"badge\"\n                        :class=\"template.status == 'active' ? 'badge-success' : 'badge-danger'\"\n                      >\n                        {{ template.status == 'active' ? trans('Active') : trans('Draft') }}\n                      </span>\n                    </td>\n\n                    <td>\n                      <div class=\"dropdown\" data-placement=\"bottom-start\">\n                        <div class=\"dropdown-toggle\">\n                          <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                        </div>\n                        <div class=\"dropdown-content w-40\">\n                          <ul class=\"dropdown-list\">\n                            <li class=\"dropdown-list-item\">\n                              <Link\n                                :href=\"route('admin.ai-templates.edit', template)\"\n                                class=\"dropdown-link\"\n                              >\n                                <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                                <span>{{ trans('Edit') }}</span>\n                              </Link>\n                            </li>\n                            <li class=\"dropdown-list-item\">\n                              <button\n                                @click=\"deleteRow(route('admin.ai-templates.destroy', template))\"\n                                class=\"dropdown-link\"\n                              >\n                                <i class=\"h-5 text-slate-400\" data-feather=\"trash\"></i>\n                                <span>{{ trans('Delete') }}</span>\n                              </button>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n                <NoDataFound v-else :for-table=\"true\" />\n              </table>\n            </div>\n            <!-- pagination -->\n            <Paginate :links=\"templates.links\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n","import CKEditor from '@ckeditor/ckeditor5-vue'\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'\n\nexport default () => {\n  const cke = CKEditor.component\n  ClassicEditor.defaultConfig = {\n    toolbar: {\n      items: [\n        'heading',\n        '|',\n        'bold',\n        'italic',\n        '|',\n        'link',\n        'bulletedList',\n        'numberedList',\n        '|',\n        'insertTable',\n        '|',\n        'undo',\n        'redo'\n      ]\n    },\n    table: {\n      contentToolbar: ['tableColumn', 'tableRow', 'mergeTableCells']\n    },\n    language: 'en'\n  }\n  return { cke, ClassicEditor }\n}\n","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Create a blog\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"flex\">\n        <div class=\"card mx-auto max-w-[800px]\">\n          <div class=\"card-body\">\n            <form @submit.prevent=\"createPost\" class=\"space-y-3\">\n              <div>\n                <label>{{ trans('Blog Title') }}</label>\n                <input v-model=\"form.title\" type=\"text\" name=\"title\" required=\"\" class=\"input\" />\n              </div>\n\n              <div>\n                <label>{{ trans('Blog Image (Preview)') }}</label>\n                <input\n                  @input=\"previewFile\"\n                  type=\"file\"\n                  class=\"input\"\n                  required\n                  name=\"preview\"\n                  accept=\"image/*\"\n                />\n              </div>\n              <div>\n                <label>{{ trans('Short Description') }}</label>\n                <textarea\n                  v-model=\"form.short_description\"\n                  name=\"short_description\"\n                  required\n                  class=\"textarea\"\n                  maxlength=\"500\"\n                ></textarea>\n              </div>\n              <div>\n                <label>{{ trans('Main Description') }}</label>\n                <cke tag-name=\"textarea\" :editor=\"ClassicEditor\" v-model=\"form.main_description\" />\n              </div>\n              <div>\n                <label>{{ trans('Select Category') }}</label>\n                <Multiselect\n                  class=\"multiselect-dark\"\n                  :searchable=\"true\"\n                  v-model=\"form.categories\"\n                  mode=\"tags\"\n                  :options=\"categories\"\n                  placeholder=\"Select Main Category\"\n                />\n              </div>\n              <div class=\"mb-2\">\n                <label>{{ trans('Select Tags') }}</label>\n                <Multiselect\n                  class=\"multiselect-dark\"\n                  v-model=\"form.tags\"\n                  mode=\"tags\"\n                  :options=\"tags\"\n                  :searchable=\"true\"\n                  placeholder=\"Select Tags\"\n                />\n              </div>\n              <div>\n                <label>{{ trans('Select Language') }}</label>\n                <select v-model=\"form.language\" name=\"language\" class=\"select\">\n                  <option v-for=\"(language, key) in languages\" :key=\"language\" :value=\"key\">\n                    {{ language }}\n                  </option>\n                </select>\n              </div>\n\n              <hr />\n\n              <div>\n                <label>{{ trans('SEO Meta Title') }}</label>\n                <input\n                  v-model=\"form.meta_title\"\n                  type=\"text\"\n                  name=\"meta_title\"\n                  required\n                  class=\"input\"\n                />\n              </div>\n              <div>\n                <label>{{ trans('SEO Meta Image') }}</label>\n                <input\n                  @input=\"metaFile\"\n                  type=\"file\"\n                  class=\"input\"\n                  name=\"meta_image\"\n                  required\n                  accept=\"image/*\"\n                />\n              </div>\n              <div>\n                <label>{{ trans('SEO Meta Description') }}</label>\n                <textarea\n                  v-model=\"form.meta_description\"\n                  name=\"meta_description\"\n                  required\n                  class=\"input h-100\"\n                ></textarea>\n              </div>\n              <div>\n                <label>{{ trans('SEO Meta Tags') }}</label>\n                <input\n                  v-model=\"form.meta_tags\"\n                  type=\"text\"\n                  name=\"meta_tags\"\n                  required\n                  class=\"input\"\n                />\n              </div>\n\n              <div>\n                <div>\n                  <label for=\"toggle-status\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"form.status\"\n                      class=\"toggle-input peer sr-only\"\n                      id=\"toggle-status\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('Make it publish?') }}</span>\n                  </label>\n                </div>\n              </div>\n\n              <div>\n                <SpinnerBtn\n                  classes=\"btn btn-primary\"\n                  :processing=\"form.processing\"\n                  :btn-text=\"trans('Create')\"\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm } from '@inertiajs/vue3'\nimport Multiselect from '@vueform/multiselect'\nimport notify from '@/Plugins/Admin/notify'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport ckeEditor from '@/Plugins/ckeEditor'\nconst { cke, ClassicEditor } = ckeEditor()\ndefineOptions({ layout: AdminLayout })\n\nconst form = useForm({\n  title: '',\n  short_description: '',\n  main_description: '',\n  categories: [],\n  tags: [],\n  language: '',\n  featured: false,\n  status: false,\n  meta_title: '',\n  meta_description: '',\n  meta_tags: '',\n  meta_image: '',\n  preview: ''\n})\n\nconst props = defineProps(['segments', 'buttons', 'categories', 'languages', 'tags'])\nconst previewFile = (event) => {\n  form.preview = event.target.files[0]\n}\nconst metaFile = (event) => {\n  form.meta_image = event.target.files[0]\n}\nconst createPost = () => {\n  form.post(route('admin.blog.store'), {\n    onSuccess: () => {\n      notify.success('Blog Post has been added successfully')\n    }\n  })\n}\n</script>\n","<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment title=\"Edit a blog\" :segments=\"segments\" :buttons=\"buttons\" />\n\n    <div class=\"space-y-6\">\n      <div class=\"mx-auto max-w-6xl\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <form @submit.prevent=\"infoUpdate\" class=\"space-y-4\">\n              <div class=\"mb-2\">\n                <label class=\"label\">{{ trans('Blog Title') }}</label>\n                <input type=\"text\" name=\"title\" required v-model=\"editForm.title\" class=\"input\" />\n              </div>\n\n              <div>\n                <label class=\"label\">{{ trans('Blog Image (Preview)') }}</label>\n                <input\n                  type=\"file\"\n                  @input=\"(e) => (editForm.preview = e.target.files[0])\"\n                  class=\"input\"\n                  name=\"preview\"\n                  accept=\"image/*\"\n                />\n              </div>\n              <div>\n                <label class=\"label\">{{ trans('Short Description') }}</label>\n                <textarea\n                  name=\"short_description\"\n                  required\n                  class=\"textarea\"\n                  v-model=\"editForm.short_description\"\n                  maxlength=\"500\"\n                ></textarea>\n              </div>\n              <div>\n                <label class=\"label\">{{ trans('Main Description') }}</label>\n                <div class=\"\">\n                  <cke\n                    tag-name=\"textarea\"\n                    :editor=\"ClassicEditor\"\n                    v-model=\"editForm.main_description\"\n                  />\n                </div>\n              </div>\n              <div>\n                <label class=\"label\">{{ trans('Select Language') }}</label>\n                <select v-model=\"editForm.language\" name=\"language\" class=\"select\">\n                  <template v-for=\"(language, languagesKey) in languages\" :key=\"language\">\n                    <option :value=\"languagesKey\" :selected=\"languagesKey == info.lang\">\n                      {{ language }}\n                    </option>\n                  </template>\n                </select>\n              </div>\n              <div>\n                <label class=\"label\">{{ trans('Select Category') }}</label>\n                <Multiselect\n                  class=\"multiselect-dark\"\n                  v-model=\"editForm.categories\"\n                  label=\"title\"\n                  valueProp=\"id\"\n                  mode=\"tags\"\n                  :options=\"categories\"\n                  :searchable=\"true\"\n                  placeholder=\"Select Category\"\n                />\n              </div>\n              <div>\n                <label class=\"label\">{{ trans('Select Tags') }}</label>\n                <div class=\"\">\n                  <Multiselect\n                    class=\"multiselect-dark\"\n                    v-model=\"editForm.tags\"\n                    label=\"title\"\n                    valueProp=\"id\"\n                    mode=\"tags\"\n                    :options=\"tags\"\n                    :searchable=\"true\"\n                    placeholder=\"Select Tags\"\n                  />\n                </div>\n              </div>\n              <hr />\n              <div>\n                <label class=\"label\">{{ trans('SEO Meta Title') }}</label>\n                <input\n                  type=\"text\"\n                  name=\"meta_title\"\n                  required\n                  v-model=\"editForm.meta_title\"\n                  class=\"input\"\n                />\n              </div>\n              <div>\n                <label class=\"label\">{{ trans('SEO Meta Image') }}</label>\n                <input\n                  type=\"file\"\n                  @input=\"(e) => (editForm.meta_image = e.target.files[0])\"\n                  class=\"input\"\n                  name=\"meta_image\"\n                  accept=\"image/*\"\n                />\n              </div>\n              <div>\n                <label class=\"label\">{{ trans('SEO Meta Description') }}</label>\n                <textarea\n                  name=\"meta_description\"\n                  required\n                  class=\"textarea\"\n                  v-model=\"editForm.meta_description\"\n                ></textarea>\n              </div>\n              <div>\n                <label class=\"label\">{{ trans('SEO Meta Tags') }}</label>\n                <input\n                  type=\"text\"\n                  name=\"meta_tags\"\n                  required\n                  class=\"input\"\n                  v-model=\"editForm.meta_tags\"\n                />\n              </div>\n              <div>\n                <div>\n                  <label for=\"toggle-status\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"editForm.status\"\n                      class=\"toggle-input peer sr-only\"\n                      id=\"toggle-status\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('Make it publish?') }}</span>\n                  </label>\n                </div>\n              </div>\n              <div>\n                <div class=\"\">\n                  <SpinnerBtn\n                    classes=\"btn btn-primary\"\n                    :processing=\"editForm.processing\"\n                    :btn-text=\"trans('Save Changes')\"\n                  />\n                </div>\n              </div>\n              <ValidationErrors />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm } from '@inertiajs/vue3'\nimport Multiselect from '@vueform/multiselect'\nimport ValidationErrors from '@/Components/Admin/ValidationErrors.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport ckeEditor from '@/Plugins/ckeEditor'\nconst { cke, ClassicEditor } = ckeEditor()\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps([\n  'info',\n  'tags',\n  'categories',\n  'cats',\n  'seo',\n  'languages',\n  'buttons',\n  'segments',\n  'tagsArr'\n])\n\nconst editForm = useForm({\n  title: props.info.title,\n  short_description: props.info.short_description.value,\n  main_description: props.info.long_description.value,\n  categories: props.cats,\n  tags: props.tagsArr,\n  meta_title: props.seo.title,\n  meta_description: props.seo.description,\n  meta_tags: props.seo.tags,\n  language: props.info.lang,\n  featured: props.info.featured,\n  status: props.info.status\n})\n\nconst infoUpdate = () => {\n  editForm\n    .transform((data) => {\n      return { _method: 'PATCH', blog: data }\n    })\n    .post(route('admin.blog.update', props.info.id), {\n      onSuccess: () => {\n        notify.success(trans('Blog has been deleted successfully'))\n      }\n    })\n}\n</script>\n","<script setup>\nimport { Link, useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\n\nconst props = defineProps(['request', 'hidden', 'title', 'action', 'buttons', 'filterType', 'options'])\n\nconst filterForm = useForm({\n    search: props?.request?.search ?? '',\n    type: props?.request?.type ?? 'email',\n    action: props.action ?? null\n})\n\nconst filter = () => {\n    let route = filterForm.action || location.href\n    filterForm.get(route)\n}\n\n</script>\n\n<template>\n    <div class=\"flex flex-col items-center justify-between gap-y-4 md:flex-row md:gap-y-0\">\n        <div class=\"flex w-full items-center justify-between gap-x-4 md:w-auto\">{{ props.title ?? '' }}</div>\n\n        <div class=\"flex w-full items-center justify-between gap-x-4 md:w-auto\">\n            <template v-if=\"props.buttons?.length != 0\">\n                <div class=\"flex flex-wrap gap-1\">\n                    <template v-for=\"button in buttons\" :key=\"button.index\">\n\n                        <button v-if=\"button.as == 'button'\" type=\"button\" @click=\"(e) => e.preventDefault()\"\n                            data-toggle=\"modal\" :data-target=\"button.target\" class=\"btn btn-primary btn-sm\">\n                            <div v-html=\"button.name\"></div>\n                        </button>\n\n                        <a v-else-if=\"button.as == 'a'\" :href=\"button.url\" :download=\"button.download ? 'true' : 'false'\"\n                            v-html=\"button.name\" class=\"btn btn-primary btn-sm\"> </a>\n\n                        <Link v-else-if=\"button.as != 'button' || button.as != 'a'\" :href=\"button.url\"\n                            class=\"btn btn-primary btn-sm\" v-html=\"button.name\">\n                        </Link>\n\n                    </template>\n                </div>\n            </template>\n\n            <div class=\"dropdown\" data-placement=\"bottom-end\" v-if=\"props.hidden != 'filter'\">\n                <div class=\"dropdown-toggle\">\n                    <button type=\"button\" class=\"btn bg-white font-medium shadow-sm dark:bg-slate-800\">\n                        <i class=\"w-4\" data-feather=\"filter\"></i>\n                        <span>{{ trans('Filter') }}</span>\n                        <i class=\"w-4\" data-feather=\"chevron-down\"></i>\n                    </button>\n                </div>\n\n                <div class=\"dropdown-content w-72 !overflow-visible\">\n                    <form @submit.prevent=\"filter\">\n                        <ul class=\"dropdown-list space-y-4 p-4\">\n                            <li class=\"dropdown-list-item\">\n                                <h2 class=\"my-1 text-sm font-medium\">{{ trans('Status') }}</h2>\n                                <div class=\"mb-2\">\n                                    <input type=\"text\" name=\"search\" v-model=\"filterForm.search\" class=\"input\"\n                                        placeholder=\"Search......\" />\n                                </div>\n                            </li>\n                            <li class=\"dropdown-list-item\" v-if=\"props.hidden?.type != 'type'\">\n                                <div class=\"mb-2\">\n                                    <select class=\"select\" name=\"type\" v-model=\"filterForm.type\">\n                                        <option value=\"email\">{{ trans('User Email') }}</option>\n\n                                        <option value=\"name\"\n                                            v-if=\"props.filterType != 'support' && props.filterType != 'notification'\">\n                                            {{ trans('Name') }} </option>\n\n                                        <option value=\"ticket_no\" v-if=\"props.filterType == 'support'\">\n                                            {{ trans(\"Ticket No\") }}\n                                        </option>\n\n                                        <option value=\"subject\" v-if=\"props.filterType == 'support'\"> {{ trans(\"Subject\") }}\n                                        </option>\n\n                                        <option value=\"title\" v-if=\"props.filterType == 'notification'\">{{ trans(\"Title\") }}\n                                        </option>\n\n\n                                    </select>\n                                </div>\n                            </li>\n\n                            <li class=\"dropdown-list-item\">\n                                <button class=\"btn btn-primary w-full\">\n                                    {{ trans('Filter') }}\n                                </button>\n                            </li>\n                        </ul>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment\n      title=\"Create a blog post\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n    <div class=\"space-y-6\">\n      <!-- Overview Section Start -->\n      <Overview :items=\"blogsStats\" grid=\"3\" />\n      <!-- Overview Section End -->\n\n      <div class=\"flex items-center justify-end gap-x-2\">\n        <div class=\"dropdown\" data-placement=\"bottom-end\">\n          <div class=\"dropdown-toggle\">\n            <button\n              type=\"button\"\n              class=\"font-medium bg-white shadow-sm btn dark:bg-slate-800\"\n            >\n              <i class=\"w-4\" data-feather=\"filter\"></i>\n              <span>{{ trans(\"Filter\") }}</span>\n              <i class=\"w-4\" data-feather=\"chevron-down\"></i>\n            </button>\n          </div>\n\n          <div class=\"dropdown-content w-72 !overflow-visible\">\n            <form @submit.prevent=\"filterData.get(route('admin.blog.index'))\">\n              <ul class=\"p-4 space-y-4 dropdown-list\">\n                <li class=\"dropdown-list-item\">\n                  <h2 class=\"my-1 text-sm font-medium\">\n                    {{ trans(\"Search\") }}\n                  </h2>\n                  <div class=\"mb-2\">\n                    <input\n                      type=\"text\"\n                      name=\"search\"\n                      v-model=\"filterData.search\"\n                      class=\"input\"\n                      placeholder=\"Search......\"\n                    />\n                  </div>\n                </li>\n                <li class=\"dropdown-list-item\">\n                  <button type=\"submit\" class=\"w-full btn btn-primary\">\n                    {{ trans(\"Filter\") }}\n                  </button>\n                </li>\n              </ul>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <!-- Customer Table Starts -->\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"col-3\">{{ trans(\"Title\") }}</th>\n            \n              <th class=\"col-1\">{{ trans(\"Status\") }}</th>\n              <th class=\"col-2\">{{ trans(\"Created At\") }}</th>\n              <th class=\"col-1\"><div class=\"text-right\"> {{ trans(\"Action\") }}</div></th>\n            </tr>\n          </thead>\n          <tbody v-if=\"posts.data != 0\">\n            <tr v-for=\"blog in posts.data\" :key=\"blog.id\">\n              <td class=\"flex\">\n                <img\n                  :src=\"blog.preview.value\"\n                  class=\"mr-3 avatar rounded-square\"\n                />\n                <p>{{ textExcerpt(blog.title, 80) }}</p>\n              </td>\n             \n\n              <td class=\"text-left\">\n                <span\n                  class=\"badge\"\n                  :class=\"blog.status == 1 ? 'badge-success' : 'badge-danger'\"\n                >\n                  {{ blog.status == 1 ? trans(\"Active\") : trans(\"Draft\") }}\n                </span>\n              </td>\n              <td>\n                {{ moment(blog.created_at).format(\"D-MMM-Y\") }}\n              </td>\n              <td>\n               <div class=\"flex justify-end\">\n                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                  <div class=\"dropdown-toggle\">\n                    <i\n                      class=\"w-6 text-slate-400\"\n                      data-feather=\"more-horizontal\"\n                    ></i>\n                  </div>\n                  <div class=\"w-40 dropdown-content\">\n                    <ul class=\"dropdown-list\">\n                      <li class=\"dropdown-list-item\">\n                        <Link\n                          :href=\"route('admin.blog.edit', blog.id)\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans(\"Edit\") }}</span>\n                        </Link>\n                      </li>\n\n                      <li class=\"dropdown-list-item\">\n                        <button\n                          class=\"dropdown-link\"\n                          @click=\"\n                            deleteRow(\n                              route('admin.blog.destroy', blog.slug),\n                              trans('Blog has been deleted successfully')\n                            )\n                          \"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                            >{{ trans(\"Remove\") }}></i\n                          >\n                          <span>{{ trans(\"Delete\") }}</span>\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n               </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n\n        <Paginate\n          v-if=\"posts.data.length != 0\"\n          :links=\"posts.links\"\n        />\n      </div>\n      <!-- Customer Table Ends -->\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { Link, useForm } from \"@inertiajs/vue3\"\nimport sharedComposable from \"@/Composables/sharedComposable\"\nimport { createToast } from \"mosha-vue-toastify\"\nimport Paginate from \"@/Components/Paginate.vue\"\nimport moment from \"moment\"\n\nimport trans from '@/Composables/transComposable'\nimport Alert from \"@/Components/Admin/Alert.vue\"\nimport Overview from \"@/Components/Admin/OverviewGrid.vue\"\nimport Filter from \"@/Components/Admin/Filter.vue\"\nimport NoDataFound from \"@/Components/Admin/NoDataFound.vue\"\n\ndefineOptions({ layout: AdminLayout })\n\nconst blogsStats = [\n  {\n    value: props.totalPosts,\n    title: trans(\"Total Posts\"),\n    iconClass: \"bx bx-bar-chart\"\n  },\n  {\n    value: props.totalActivePosts,\n    title: trans(\"Total Active Posts\"),\n    iconClass: \"bx bx-check-circle\"\n  },\n  {\n    value: props.totalInActivePosts,\n    title: trans(\"Total Inactive Posts\"),\n    iconClass: \"bx bx-x-circle\"\n  }\n]\n\nconst { textExcerpt, deleteRow } = sharedComposable()\nconst props = defineProps([\n  \"posts\",\n  \"totalPosts\",\n  \"totalActivePosts\",\n  \"totalInActivePosts\",\n  \"buttons\",\n  \"segments\",\n  \"type\",\n  \"request\"\n])\n\nconst filterData = useForm({\n  search: props.request.search\n})\n</script>\n\n","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Partners\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <OverviewGrid :items=\"brandsOverviews\" grid=\"3\" />\n\n      <div class=\"row\">\n        <div class=\"col\">\n          <div class=\"card\">\n            <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th>{{ trans('Image') }}</th>\n                    <th>{{ trans('Url') }}</th>\n                    <th>{{ trans('Type') }}</th>\n                    <th>{{ trans('Status') }}</th>\n                    <th>{{ trans('Created At') }}</th>\n                    <th>\n                      <p class=\"text-end\">{{ trans('Action') }}</p>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"row in brands.data\" :key=\"row.id\">\n                    <td class=\"text-left\">\n                      <img :src=\"row.slug\" class=\"avatar rounded-square w-70-per\" />\n                    </td>\n                    <td class=\"text-left\">\n                      {{ row.title }}\n                    </td>\n                    <td class=\"text-left\">\n                      {{ row.lang == 'en' ? 'Partner' : row.lang }}\n                    </td>\n\n                    <td class=\"text-left\">\n                      <span\n                        class=\"badge\"\n                        :class=\"row.status == 1 ? 'badge-success' : 'badge-danger'\"\n                      >\n                        {{ row.status == 1 ? trans('Active') : trans('Draft') }}\n                      </span>\n                    </td>\n                    <td>\n                      {{ moment(row.created_at).format('D-MMM-Y') }}\n                    </td>\n\n                    <td>\n                      <div class=\"dropdown\" data-placement=\"bottom-start\">\n                        <div class=\"dropdown-toggle\">\n                          <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                        </div>\n                        <div class=\"dropdown-content w-40\">\n                          <ul class=\"dropdown-list\">\n                            <li class=\"dropdown-list-item\">\n                              <button @click=\"openEditFaqDrawer(row)\" class=\"dropdown-link\">\n                                <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                                <span>{{ trans('Edit') }}</span>\n                              </button>\n                            </li>\n\n                            <li class=\"dropdown-list-item\">\n                              <button\n                                class=\"dropdown-link\"\n                                @click=\"deleteRow(route('admin.partner.destroy', row.id))\"\n                              >\n                                <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                                  >{{ trans('Remove') }}></i\n                                >\n                                <span>{{ trans('Delete') }}</span>\n                              </button>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <Alert\n                v-if=\"brands.total == 0\"\n                type=\"info\"\n                :text=\"trans('Opps you have not created any plan....')\"\n              />\n            </div>\n            <Paginate :links=\"brands.links\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n\n  <div id=\"addNewPartnerDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storePartner()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Add New Partner') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans('Brand Url') }}</label>\n          <input type=\"text\" name=\"url\" v-model=\"form.url\" class=\"input\" />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Brand image') }}</label>\n          <input\n            @input=\"(e) => (form.image = e.target.files[0])\"\n            type=\"file\"\n            accept=\"image/*\"\n            name=\"image\"\n            required\n            class=\"input\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Type') }}</label>\n          <select class=\"select\" name=\"type\" v-model=\"form.type\">\n            <option value=\"partner\">{{ trans('Partner / Brand') }}</option>\n            <option value=\"integration\">\n              {{ trans('Integration Partner') }}\n            </option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Status') }}</label>\n          <select class=\"select\" name=\"status\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Deactive') }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"btn btn-secondary w-full\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"form.processing\"\n            :btn-text=\"trans('Create')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"editPartnerDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updatePartner()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Edit Partner') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans('Brand Url') }}</label>\n          <input type=\"text\" name=\"url\" v-model=\"editPartnerForm.title\" class=\"input\" id=\"url\" />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Brand image') }}</label>\n          <input\n            @input=\"(e) => (editPartnerForm.slug = e.target.files[0])\"\n            type=\"file\"\n            name=\"image\"\n            accept=\"image/*\"\n            class=\"input\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Type') }}</label>\n          <select class=\"select\" name=\"type\" v-model=\"editPartnerForm.lang\" id=\"type\" required>\n            <option value=\"partner\">{{ trans('Partner / Brand') }}</option>\n            <option value=\"integration\">\n              {{ trans('Integration Partner') }}\n            </option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Status') }}</label>\n          <select v-model=\"editPartnerForm.status\" class=\"select\" name=\"status\" id=\"status\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Deactive') }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"btn btn-secondary w-full\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"isProcessing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { Link, useForm, router } from '@inertiajs/vue3'\nimport Paginate from '@/Components/Paginate.vue'\nimport moment from 'moment'\nimport { ref } from 'vue'\nimport trans from '@/Composables/transComposable'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport OverviewGrid from '@/Components/Admin/OverviewGrid.vue'\nimport Alert from '@/Components/Admin/Alert.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport { onMounted } from 'vue'\nimport drawer from '@/Plugins/Admin/drawer'\n\ndefineOptions({ layout: AdminLayout })\nconst { deleteRow } = sharedComposable()\n\nonMounted(() => {\n  drawer.init()\n})\n\nconst props = defineProps([\n  'brands',\n  'totalBrands',\n  'activeBrands',\n  'inActiveBrands',\n  'buttons',\n  'segments'\n])\n\nconst brandsOverviews = [\n  {\n    value: props.totalBrands,\n    title: trans('Total Partners'),\n    iconClass: 'bx bx-bar-chart'\n  },\n  {\n    value: props.activeBrands,\n    title: trans('Active Partners'),\n    iconClass: 'bx bx-check-circle'\n  },\n  {\n    value: props.inActiveBrands,\n    title: trans('Inactive Partners'),\n    iconClass: 'bx bx-x-circle'\n  }\n]\n\nconst form = useForm({\n  url: '',\n  status: '1',\n  type: 'partner',\n  image: ''\n})\n\nconst isProcessing = ref(false)\nconst editPartnerForm = ref({})\n\nconst storePartner = () => {\n  form.post(route('admin.partner.store'), {\n    onSuccess: () => {\n      form.reset()\n      drawer.of('#addNewPartnerDrawer').hide()\n      notify.success(trans('Partner has been created successfully'))\n    }\n  })\n}\n\nfunction openEditFaqDrawer(partner) {\n  editPartnerForm.value = { ...partner }\n  drawer.of('#editPartnerDrawer').show()\n}\n\nconst updatePartner = () => {\n  if (!(editPartnerForm.value.slug instanceof File)) {\n    editPartnerForm.value.slug = null\n  }\n  isProcessing.value = true\n  router.post(\n    route('admin.partner.update', editPartnerForm.value.id),\n    {\n      _method: 'patch',\n      partner: editPartnerForm.value\n    },\n    {\n      onSuccess: () => {\n        editPartnerForm.value = {}\n        isProcessing.value = false\n        drawer.of('#editPartnerDrawer').hide()\n        notify.success(trans('Partner has been updated successfully'))\n      }\n    }\n  )\n}\n</script>\n","<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { Head, useForm } from \"@inertiajs/vue3\"\nimport trans from '@/Composables/transComposable'\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport notify from \"@/Plugins/Admin/notify\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps([\"candidateReview\", \"segments\", \"buttons\"])\n\nconst form = useForm({\n  ratting: props.candidateReview.ratting,\n  comment: props.candidateReview.comment,\n})\n\nconst update = () => {\n  const url = route(\"admin.candidate-reviews.update\", props.candidateReview.id)\n  form.put(url, {\n    onSuccess: () => {\n      notify.success(trans(\"Review has been updated successfully\"))\n    },\n  })\n}\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('Edit Candidate Review')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n    <div class=\"space-y-6\">\n      <form\n        @submit.prevent=\"update\"\n        class=\"ajaxform_instant_reload\"\n        enctype=\"multipart/form-data\"\n      >\n        <div class=\"grid lg:grid-cols-5\">\n          <div class=\"lg:col-span-2\">\n            <strong>{{ trans(\"Edit candidate reviews\") }}</strong>\n            <p>{{ trans(\"modify the necessary information from here\") }}</p>\n          </div>\n\n          <div class=\"lg:col-span-3\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <label class=\"\">{{ trans(\"Select Ratting\") }}</label>\n                  <div class=\"\">\n                    <select v-model=\"form.ratting\" class=\"select\">\n                      <option v-for=\"(i, key) in 5\" :key=\"key\" :value=\"i\">{{ i }}</option>\n                    </select>\n                    <div\n                      class=\"invalid-feedback text-danger d-block\"\n                      v-if=\"form.errors.ratting\"\n                    >\n                      {{ form.errors.ratting }}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"mt-2 mb-2\">\n                  <label class=\"\">{{ trans(\"Comment\") }}</label>\n                  <textarea\n                    v-model=\"form.comment\"\n                    required=\"\"\n                    class=\"textarea h-100\"\n                    maxlength=\"500\"\n                  ></textarea>\n                  <div\n                    class=\"invalid-feedback text-danger d-block\"\n                    v-if=\"form.errors.comment\"\n                  >\n                    {{ form.errors.comment }}\n                  </div>\n                </div>\n\n                <div class=\"mt-3 mb-2\">\n                  <SpinnerBtn :processing=\"form.processing\" btn-text=\"Submit\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport Overview from \"@/Components/Admin/OverviewGrid.vue\"\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport trans from '@/Composables/transComposable'\nimport sharedComposable from \"@/Composables/sharedComposable\"\nimport moment from \"moment\"\nimport Paginate from \"@/Components/Paginate.vue\"\nimport NoDataFound from \"@/Components/Admin/NoDataFound.vue\"\nimport { computed } from \"vue\"\nimport { useForm } from \"@inertiajs/vue3\"\nconst props = defineProps([\n  \"reviews\",\n  \"request\",\n  \"segments\",\n  \"buttons\",\n  \"total\",\n  \"averageRatings\",\n  \"todaysReviews\",\n])\n\nconst { textExcerpt, deleteRow } = sharedComposable()\ndefineOptions({ layout: AdminLayout })\n\nconst reviewStats = computed(() => {\n  return [\n    {\n      value: props.total,\n      title: trans(\"Total Reviews\"),\n      iconClass: \"bx bx-bar-chart\",\n    },\n    {\n      value: props.averageRatings,\n      title: trans(\"Average Ratings\"),\n      iconClass: \"bx bx-bar-chart-alt\",\n    },\n    {\n      value: props.todaysReviews,\n      title: trans(\"Todays Reviews\"),\n      iconClass: \"bx bx-message-alt-detail\",\n    },\n  ]\n})\n\nconst filterForm = useForm({\n  search: props?.request?.search ?? \"\",\n  type: props?.request?.type ?? \"candidate_email\",\n})\n\nconst filter = () => {\n  let route = filterForm.action || location.href\n  filterForm.get(route)\n}\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('Candidate Reviews')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n    <div class=\"space-y-6\">\n      <Overview :items=\"reviewStats\" grid=\"3\" />\n\n      <div\n        class=\"flex flex-col items-center justify-between gap-y-4 md:flex-row md:gap-y-0\"\n      >\n        <div class=\"flex items-center justify-between w-full gap-x-4 md:w-auto\">\n          {{ props.title ?? \"\" }}\n        </div>\n\n        <div class=\"flex items-center justify-between w-full gap-x-4 md:w-auto\">\n          <div class=\"dropdown\" data-placement=\"bottom-end\">\n            <div class=\"dropdown-toggle\">\n              <button\n                type=\"button\"\n                class=\"font-medium bg-white shadow-sm btn dark:bg-slate-800\"\n              >\n                <i class=\"w-4\" data-feather=\"filter\"></i>\n                <span>{{ trans(\"Filter\") }}</span>\n                <i class=\"w-4\" data-feather=\"chevron-down\"></i>\n              </button>\n            </div>\n\n            <div class=\"dropdown-content w-72 !overflow-visible\">\n              <form @submit.prevent=\"filter\">\n                <ul class=\"p-4 space-y-4 dropdown-list\">\n                  <li class=\"dropdown-list-item\">\n                    <h2 class=\"my-1 text-sm font-medium\">{{ trans(\"Status\") }}</h2>\n                    <div class=\"mb-2\">\n                      <input\n                        type=\"text\"\n                        name=\"search\"\n                        v-model=\"filterForm.search\"\n                        class=\"input\"\n                        placeholder=\"Search......\"\n                      />\n                    </div>\n                  </li>\n                  <li class=\"dropdown-list-item\">\n                    <div class=\"mb-2\">\n                      <select class=\"select\" name=\"type\" v-model=\"filterForm.type\">\n                        <option value=\"candidate_email\">\n                          {{ trans(\"Candidate Email\") }}\n                        </option>\n                        <option value=\"company_email\">\n                          {{ trans(\"Company Email\") }}\n                        </option>\n                      </select>\n                    </div>\n                  </li>\n\n                  <li class=\"dropdown-list-item\">\n                    <button class=\"w-full btn btn-primary\">\n                      {{ trans(\"Filter\") }}\n                    </button>\n                  </li>\n                </ul>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"whitespace-normal table-responsive rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans(\"Reviewer\") }}</th>\n              <th>{{ trans(\"Candidate\") }}</th>\n              <th>{{ trans(\"Job\") }}</th>\n              <th>{{ trans(\"Ratting\") }}</th>\n              <th>{{ trans(\"Comment\") }}</th>\n              <th class=\"flex justify-end\">{{ trans(\"Action\") }}</th>\n            </tr>\n          </thead>\n          <tbody v-if=\"reviews.total > 0\">\n            <tr v-for=\"review in reviews.data\" :key=\"review.id\">\n              <td>\n                <div class=\"flex items-center gap-2\" v-if=\"review.company\">\n                  <img\n                    class=\"w-10 avatar-img\"\n                    v-lazy=\"\n                      review.company.avatar == null\n                        ? `https://ui-avatars.com/api/?name=${review.company.name}`\n                        : `${review.company.avatar}`\n                    \"\n                  />\n                  <Link :href=\"route('admin.companies.show', review.company.id)\">\n                    {{ review.company?.name }}</Link\n                  >\n                </div>\n              </td>\n\n              <td>\n                <div class=\"flex items-center gap-2\" v-if=\"review.candidate\">\n                  <img\n                    class=\"w-10 avatar-img\"\n                    v-lazy=\"\n                      review.candidate.avatar == null\n                        ? `https://ui-avatars.com/api/?name=${review.candidate.name}`\n                        : `${review.candidate.avatar}`\n                    \"\n                  />\n                  <Link :href=\"route('admin.candidates.show', review.candidate.id)\">\n                    {{ review.candidate?.name }}</Link\n                  >\n                </div>\n              </td>\n\n              <td>\n                <div v-if=\"review.job?.id\">\n                  <Link :href=\"route('admin.job.show', review.job.id)\">\n                    {{ review.job.title }}\n                  </Link>\n                </div>\n              </td>\n              <td>\n                {{ review.ratting }}\n              </td>\n              <td>\n                {{ textExcerpt(review.comment, 30) }}\n              </td>\n            \n              <td>\n                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                  <div class=\"dropdown-toggle\">\n                    <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                  </div>\n                  <div class=\"w-40 dropdown-content\">\n                    <ul class=\"dropdown-list\">\n                      <li class=\"dropdown-list-item\">\n                        <Link\n                          :href=\"route('admin.candidate-reviews.edit', review.id)\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans(\"Edit\") }}</span>\n                        </Link>\n                      </li>\n\n                      <li class=\"dropdown-list-item\">\n                        <Link\n                          as=\"button\"\n                          class=\"dropdown-link\"\n                          @click=\"deleteRow('/admin/candidate-reviews/' + review.id)\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                            >{{ trans(\"Remove\") }}></i\n                          >\n                          <span>{{ trans(\"Delete\") }}</span>\n                        </Link>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n        <div class=\"py-4 card-footer\">\n          <Paginate :links=\"reviews.links\" />\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport { router } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nimport { reactive } from 'vue'\n\ndefineOptions({ layout: AdminLayout })\nconst props = defineProps(['buttons', 'segments', 'candidate'])\n\nconst form = reactive({\n  ...props.candidate,\n  _method: 'put'\n})\n\nconst submit = () => {\n  router.post(route('admin.candidates.update', props.candidate), form, {\n    onSuccess: () => notify.success('Information has been updated successfully')\n  })\n}\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Edit candidate\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"grid grid-cols-12\">\n        <div class=\"col-span-5\">\n          <strong>{{ trans('Edit candidate') }}</strong>\n          <p>\n            {{ trans('Edit your candidate details and necessary information from here') }}\n          </p>\n        </div>\n        <div class=\"col-span-7\">\n          <div class=\"card\">\n            <form @submit.prevent=\"submit\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <label>{{ trans('Name') }}</label>\n                  <input type=\"text\" v-model=\"form.name\" required class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans('Profile Picture') }}</label>\n                  <input\n                    @input=\"(e) => (form.avatar = e.target.files[0])\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    class=\"input\"\n                  />\n                </div>\n\n                <div class=\"mb-2\">\n                  <label>{{ trans('Email') }}</label>\n                  <input type=\"email\" v-model=\"form.email\" required class=\"input\" />\n                </div>\n\n                <div class=\"mb-2\">\n                  <label>{{ trans('Phone') }}</label>\n                  <input type=\"text\" v-model=\"form.phone\" class=\"input\" />\n                </div>\n\n                <div class=\"mb-2\">\n                  <label>{{ trans('Address') }}</label>\n                  <input type=\"text\" v-model=\"form.address\" class=\"input\" />\n                </div>\n\n                <div class=\"mb-2\">\n                  <label>{{ trans('Password') }}</label>\n                  <input type=\"password\" v-model=\"form.password\" class=\"input\" />\n                </div>\n\n                <div class=\"mb-2\">\n                  <label>{{ trans('Confirm Password') }}</label>\n                  <input type=\"password\" v-model=\"form.password_confirmation\" class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans('Credits') }}</label>\n                  <input type=\"number\" v-model=\"form.credits\" min=\"0\" class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label for=\"toggle-status\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"form.status\"\n                      class=\"toggle-input peer sr-only\"\n                      id=\"toggle-status\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('Is Active?') }}</span>\n                  </label>\n                </div>\n\n                <div class=\"mb-2\">\n                  <label for=\"toggle-email-verified-status\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"form.email_verified\"\n                      class=\"toggle-input peer sr-only\"\n                      id=\"toggle-email-verified-status\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('Email Verified?') }}</span>\n                  </label>\n                </div>\n\n                <div class=\"mb-2\">\n                  <label for=\"toggle-starred-status\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"form.is_star\"\n                      class=\"toggle-input peer sr-only\"\n                      id=\"toggle-starred-status\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('Make Star?') }}</span>\n                  </label>\n                </div>\n\n                <div class=\"mt-2\">\n                  <SpinnerBtn\n                    type=\"submit\"\n                    classes=\"btn btn-primary\"\n                    :btn-text=\"trans('Save Changes')\"\n                    :processing=\"form.processing\"\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport Paginate from '@/Components/Paginate.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport trans from '@/Composables/transComposable'\nimport Filter from '@/Components/Admin/Filter.vue'\nimport Overview from '@/Components/Admin/OverviewGrid.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\nconst { deleteRow } = sharedComposable()\n\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps([\n  'segments',\n  'buttons',\n  'request',\n  'candidates',\n  'total_candidates',\n  'active_candidates',\n  'inactive_candidates',\n  'verified_candidates'\n])\n\nconst candidateStats = [\n  { value: props.total_candidates, title: trans('Total Candidates'), iconClass: 'bx bx-list-ul' },\n  { value: props.active_candidates, title: trans('Active Candidates'), iconClass: 'bx bx-check-shield' },\n  { value: props.inactive_candidates, title: trans('Inactive Candidates'), iconClass: 'bx bx-x-circle' },\n  {\n    value: props.verified_candidates,\n    title: trans('Verified Candidates'),\n    iconClass: 'bx bx-check-shield'\n  }\n]\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Candidates')\" :segments=\"segments\" :buttons=\"buttons\" />\n\n    <div class=\"space-y-6\">\n      <Overview :items=\"candidateStats\" class=\"lg:grid-cols-3\" />\n      <Filter :request=\"request\" :segments=\"segments\" :buttons=\"buttons\" />\n\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans('Candidate') }}</th>\n              <th>{{ trans('Service') }}</th>\n              <th>{{ trans('Is Starred') }}</th>\n              <th>{{ trans('Status') }}</th>\n              <th class=\"text-left\">{{ trans('Created At') }}</th>\n              <th class=\"flex justify-end\">{{ trans('Action') }}</th>\n            </tr>\n          </thead>\n          <tbody class=\"list\" v-if=\"candidates.total != 0\">\n            <tr v-for=\"candidate in candidates.data\" :key=\"candidate.id\">\n              <td>\n                <div class=\"flex items-center gap-3\">\n                  <div class=\"avatar avatar-circle\">\n                    <img class=\"avatar-img\" v-lazy=\"candidate?.avatar == null\n                        ? `https://ui-avatars.com/api/?name=${candidate.name}`\n                        : `${candidate?.avatar}`\n                      \" />\n                  </div>\n                  <div>\n                    <h6 class=\"whitespace-nowrap text-sm font-medium text-slate-700 dark:text-slate-100\">\n                      <Link :href=\"route('admin.candidates.show', candidate)\" class=\"text-dark\">\n                      {{ candidate.name }}\n                      </Link>\n                    </h6>\n                    <p class=\"truncate text-xs text-slate-500 dark:text-slate-400\">\n                      {{ candidate.email }}\n                    </p>\n                  </div>\n                </div>\n              </td>\n\n              <td>{{ candidate.service?.title }}</td>\n\n              <td>\n                <span v-if=\"candidate.is_star\" class=\"badge badge-primary\">{{\n                  trans('Starred')\n                }}</span>\n                <span v-else class=\"badge badge-danger\">{{ trans('Not Starred') }}</span>\n              </td>\n\n              <td>\n                <span :class=\"candidate.status == 1 ? 'badge badge-success' : 'badge badge-danger'\">\n                  {{ candidate.status == 1 ? 'Active' : 'Suspended' }}\n                </span>\n              </td>\n\n              <td class=\"text-center\">\n                {{ candidate.created_at_date }}\n              </td>\n              <td>\n                <div class=\"flex justify-end\">\n                  <div class=\"dropdown\" data-placement=\"bottom-start\">\n                    <div class=\"dropdown-toggle\">\n                      <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                    </div>\n                    <div class=\"dropdown-content w-40\">\n                      <ul class=\"dropdown-list\">\n                        <li class=\"dropdown-list-item\">\n                          <Link :href=\"route('admin.candidates.show', candidate.id)\" class=\"dropdown-link\">\n                          <i class=\"h-5 text-slate-400\" data-feather=\"external-link\"></i>\n                          <span>{{ trans('View') }}</span>\n                          </Link>\n                        </li>\n\n                        <li class=\"dropdown-list-item\">\n                          <a target=\"_blank\" :href=\"route('candidates.show', candidate.username)\" class=\"dropdown-link\">\n                            <i class=\"h-5 text-slate-400\" data-feather=\"external-link\"></i>\n                            <span>{{ trans('View Profile') }}</span>\n                          </a>\n                        </li>\n\n                        <li class=\"dropdown-list-item\">\n                          <Link :href=\"route('admin.candidates.edit', candidate)\" class=\"dropdown-link\">\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans('Edit') }}</span>\n                          </Link>\n                        </li>\n\n                        <li class=\"dropdown-list-item\">\n                          <button @click=\"deleteRow(route('admin.candidates.destroy', candidate))\" class=\"dropdown-link\">\n                            <i class=\"h-5 text-slate-400\" data-feather=\"trash\"></i>\n                            {{ trans('Delete') }}\n                          </button>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n        <Paginate :links=\"candidates.links\" />\n      </div>\n    </div>\n  </main>\n</template>\n","\n<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport trans from '@/Composables/transComposable'\nimport Overview from \"@/Components/Admin/OverviewGrid.vue\"\nimport moment from \"moment\";\nimport NoDataFound from \"@/Components/Admin/NoDataFound.vue\"\n\ndefineOptions({ layout: AdminLayout })\nconst props = defineProps([\n\t'candidate',\n\t'appliedJobs',\n\t'buttons',\n\t'segments',\n\t'total_visitors',\n\t'total_shortlisted',\n\t'total_bookmarks',\n\t'total_applied_jobs',\n])\n\n\nconst candidateStats = [\n\t{ value: props.total_visitors, title: trans('Visits'), iconClass: 'bx bx-box' },\n\t{ value: props.total_shortlisted, title: trans('Shortlisted'), iconClass: 'bx bx-dollar-circle' },\n\t{ value: props.total_bookmarks, title: trans('Bookmarks'), iconClass: 'ti ti-thumb-up' },\n\t{ value: props.total_applied_jobs, title: trans('Applied Jobs'), iconClass: 'ti ti-thumb-up' },\n]\n\n</script>\n\n<template>\n\t<main class=\"container flex-grow p-4 sm:p-6\">\n\t\t<HeaderSegment title=\"Candidate details\" :segments=\"segments\" :buttons=\"buttons\" />\n\t\t<div class=\"space-y-6\">\n\n\n\t\t\t<Overview :items=\"candidateStats\" />\n\n\t\t\t<!-- User Profile Start  -->\n\t\t\t<div class=\"grid grid-cols-1 gap-6 lg:grid-cols-4\">\n\t\t\t\t<!-- Left Section Start  -->\n\t\t\t\t<section class=\"col-span-1 flex h-min w-full flex-col gap-6 lg:sticky lg:top-20\">\n\t\t\t\t\t<!-- User Avatar & Status  -->\n\t\t\t\t\t<div class=\"card\">\n\t\t\t\t\t\t<div class=\"card-body flex flex-col items-center\">\n\t\t\t\t\t\t\t<div class=\"relative my-2 h-24 w-24 rounded-full\">\n\t\t\t\t\t\t\t\t<img :src=\"candidate.avatar\" onerror=\"this.src = '/images/avatar1.png'\" alt=\"avatar-img\"\n\t\t\t\t\t\t\t\t\tclass=\"h-full w-full rounded-full\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t<h2 class=\"text-[16px] font-medium text-slate-700 dark:text-slate-200 mb-4\">{{\n\t\t\t\t\t\t\t\t\tcandidate.name\n\t\t\t\t\t\t\t\t}}</h2>\n\t\t\t\t\t\t\t\t<span class=\"description\">{{ trans('Status') }}: </span>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t:class=\"candidate.status == 1 ? 'badge badge-success badge-sm' : 'badge badge-danger badge-sm'\"><small>{{\n\t\t\t\t\t\t\t\t\t\tcandidate.status == 1 ? 'Active' : 'Suspended' }}</small></span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t\t\t<div class=\"\">\n\t\t\t\t\t\t\t\t\t<i class=\"mr-2\"></i>{{ trans('Join Date: ') }}\n\t\t\t\t\t\t\t\t\t{{ candidate.created_at_date }}\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t</section>\n\t\t\t\t<!-- Left Section End  -->\n\t\t\t\t<!-- Right Section Start  -->\n\t\t\t\t<section class=\"col-span-3\">\n\t\t\t\t\t<div class=\"flex gap-4 h-full flex-wrap\">\n\t\t\t\t\t\t<div class=\"flex-grow\">\n\t\t\t\t\t\t\t<div class=\"card h-full\">\n\t\t\t\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t\t\t\t<small class=\"text-muted font-bold\">{{ trans('Bio') }}</small>\n\t\t\t\t\t\t\t\t\t<p>{{ trans('Name : ') }} {{ candidate.name }}</p>\n\t\t\t\t\t\t\t\t\t<p>{{ trans('Email : ') }} {{ candidate.email }}</p>\n\t\t\t\t\t\t\t\t\t<p>{{ trans('Phone : ') }} {{ candidate.phone }}</p>\n\t\t\t\t\t\t\t\t\t<p>{{ trans('Address : ') }} {{ candidate.address }}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<!-- Right Section End -->\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<h5 class=\"mb-2\">{{ trans('Applied Jobs') }}</h5>\n\t\t\t\t<div class=\"table-responsive whitespace-nowrap rounded-primary\">\n\t\t\t\t\t<table class=\"table\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th class=\"w-[5%] uppercase\">{{ trans('Title') }}</th>\n\t\t\t\t\t\t\t\t<th class=\"w-[10%] uppercase\">{{ trans('Status') }}</th>\n\t\t\t\t\t\t\t\t<th class=\"w-[15%] uppercase\">{{ trans('Job Created') }}</th>\n\t\t\t\t\t\t\t\t<th class=\"w-[5%] !text-right uppercase\">{{ trans('Actions') }}</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t<tbody v-if=\"appliedJobs.total\">\n\t\t\t\t\t\t\t<tr v-for=\"job in appliedJobs.data\" :key=\"job.id\">\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div class=\"job-name fw-500\">\n\t\t\t\t\t\t\t\t\t\t{{ job.title }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"info1\">\n\t\t\t\t\t\t\t\t\t\t{{ job.type.replace(\"_\", \" \") }} .\n\t\t\t\t\t\t\t\t\t\t{{ job.country?.[0]?.name }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{{ job.status == 1 ? trans(\"Active\") : trans(\"Inactive\") }}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{{ moment(job.created_at).format(\"D-MMM-Y\") }}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div class=\"dropdown\" data-placement=\"bottom-end\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"dropdown-toggle\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"dropdown-content w-40\">\n\t\t\t\t\t\t\t\t\t\t\t<ul class=\"dropdown-list\">\n\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"dropdown-list-item\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button @click=\"openEditJobDrawer(job)\" class=\"dropdown-link\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{{ trans('Edit') }}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"dropdown-list-item\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link :href=\"route('admin.job.show', job.id)\" class=\"dropdown-link\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"h-5 text-slate-400\" data-feather=\"eye\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{{ trans('View') }}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"dropdown-list-item\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button as=\"button\" class=\"dropdown-link\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@click=\"deleteRow(route('admin.job.destroy', job.id))\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{{ trans('Delete') }}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t<NoDataFound v-else for-table=\"true\" />\n\n\t\t\t\t\t</table>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</div>\n\t</main>\n</template>\n","<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment title=\"Categories\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"categorieStats\" grid=\"3\" />\n\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"\">{{ trans(\"Name\") }}</th>\n              <th class=\"\">{{ trans(\"Slug\") }}</th>\n              <th class=\"text-center\">{{ trans(\"Language\") }}</th>\n              <th class=\"\">{{ trans(\"Status\") }}</th>\n              <th class=\"\">{{ trans(\"Created At\") }}</th>\n              <th class=\"flex justify-end\">{{ trans('Action') }}</th>\n            </tr>\n          </thead>\n\n          <tbody v-if=\"categories.total\">\n            <tr v-for=\"category in categories.data\" :key=\"category.id\">\n              <td class=\"text-left\">\n                {{ category.title }}\n              </td>\n              <td class=\"text-left\">\n                {{ category.slug }}\n              </td>\n              <td class=\"text-center\">\n                {{ category.lang }}\n              </td>\n              <td class=\"text-left\">\n                <span class=\"badge\" :class=\"category.status == 1 ? 'badge-success' : 'badge-danger'\n                  \">\n                  {{ category.status == 1 ? trans(\"Active\") : trans(\"Draft\") }}\n                </span>\n              </td>\n              <td>\n                {{ moment(category.created_at).format(\"D-MMM-Y\") }}\n              </td>\n              <td>\n                <div class=\"flex justify-end\">\n                  <div class=\"dropdown\" data-placement=\"bottom-start\">\n                    <div class=\"dropdown-toggle\">\n                      <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                    </div>\n                    <div class=\"w-40 dropdown-content\">\n                      <ul class=\"dropdown-list\">\n                        <li class=\"dropdown-list-item\">\n                          <button @click=\"openEditCategoryDrawer(category)\" class=\"dropdown-link\">\n                            <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                            <span>{{ trans(\"Edit\") }}</span>\n                          </button>\n                        </li>\n\n                        <li class=\"dropdown-list-item\">\n                          <Link as=\"button\" class=\"dropdown-link\" @click=\"deleteRow('/admin/category/' + category.id)\">\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\">{{ trans(\"Remove\") }}></i>\n                          <span>{{ trans(\"Delete\") }}</span>\n                          </Link>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n\n      </div>\n      <Paginate :links=\"categories.links\" />\n    </div>\n  </main>\n\n  <div id=\"addNewCategoryDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeCategory()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Add New Category\") }}</h5>\n        <button type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\">\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Title\") }}</label>\n          <input v-model=\"categoryForm.title\" type=\"text\" name=\"title\" class=\"input\" required />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Status\") }}</label>\n          <select required v-model=\"categoryForm.status\" class=\"select\" name=\"status\">\n            <option value=\"1\">{{ trans(\"Active\") }}</option>\n            <option value=\"0\">{{ trans(\"Deactive\") }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Language\") }}</label>\n          <select required v-model=\"categoryForm.language\" class=\"select\" name=\"language\">\n            <template v-for=\"(language, key) in languages\" :key=\"key\">\n              <option :value=\"key\">{{ language }}</option>\n            </template>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn classes=\"btn w-full btn-primary\" :processing=\"categoryForm.processing\" :btn-text=\"trans('Save Changes')\" />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"editCategoryDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateCategory()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Edit Category\") }}</h5>\n        <button type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\">\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Title\") }}</label>\n          <input v-model=\"editForm.title\" type=\"text\" name=\"title\" class=\"input\" required />\n        </div>\n\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Status\") }}</label>\n          <select v-model=\"editForm.status\" class=\"select\" name=\"status\">\n            <option value=\"1\">{{ trans(\"Active\") }}</option>\n            <option value=\"0\">{{ trans(\"Deactive\") }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Language\") }}</label>\n          <select v-model=\"editForm.lang\" class=\"select\" name=\"language\">\n            <template v-for=\"(language, key) in languages\" :key=\"key\">\n              <option :value=\"key\">{{ language }}</option>\n            </template>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn classes=\"btn w-full btn-primary\" :processing=\"editForm.processing\" :btn-text=\"trans('Save Changes')\" />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { Link, useForm, router } from \"@inertiajs/vue3\"\nimport { createToast } from \"mosha-vue-toastify\"\nimport Paginate from \"@/Components/Paginate.vue\"\nimport moment from \"moment\"\nimport { ref } from \"vue\"\nimport trans from '@/Composables/transComposable'\nimport sharedComposable from \"@/Composables/sharedComposable\"\nimport Alert from \"@/Components/Admin/Alert.vue\"\nimport Overview from \"@/Components/Admin/OverviewGrid.vue\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport drawer from \"@/Plugins/Admin/drawer\"\nimport { onMounted } from \"vue\"\nimport notify from \"@/Plugins/Admin/notify\"\nimport NoDataFound from \"@/Components/Admin/NoDataFound.vue\"\n\ndefineOptions({ layout: AdminLayout })\nconst { deleteRow } = sharedComposable()\n\nonMounted(() => {\n  drawer.init()\n})\n\nconst props = defineProps([\n  \"categories\",\n  \"totalCategories\",\n  \"activeCategories\",\n  \"inActiveCategories\",\n  \"languages\",\n  \"buttons\",\n  \"segments\"\n])\n\nconst categorieStats = [\n  {\n    value: props.totalCategories,\n    title: trans(\"Total Categories\"),\n    iconClass: \"bx bx-bar-chart\"\n  },\n  {\n    value: props.activeCategories,\n    title: trans(\"Active Categories\"),\n    iconClass: \"bx bx-check-circle\"\n  },\n  {\n    value: props.inActiveCategories,\n    title: trans(\"Inactive Categories\"),\n    iconClass: \"bx bx-x-circle\"\n  }\n]\n\nconst categoryForm = useForm({\n  title: \"\",\n  status: \"active\",\n  language: \"\"\n})\n\nconst editForm = ref({})\n\nconst storeCategory = () => {\n  categoryForm.post(route(\"admin.category.store\"), {\n    onSuccess: () => {\n      categoryForm.reset()\n      notify.success(trans(\"Category has been added successfully\"))\n      drawer.of(\"#addNewCategoryDrawer\").hide()\n    }\n  })\n}\n\nconst openEditCategoryDrawer = (category) => {\n  editForm.value = { ...category }\n  drawer.of(\"#editCategoryDrawer\").show()\n}\n\nconst updateCategory = () => {\n  router.patch(\n    route(\"admin.category.update\", editForm.value.id),\n    editForm.value,\n    {\n      onSuccess: () => {\n        editForm.value = {}\n        notify.success(trans(\"Category has been updated successfully\"))\n        drawer.of(\"#editCategoryDrawer\").hide()\n      }\n    }\n  )\n}\n</script>\n\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport { router } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nimport { ref } from 'vue'\n\ndefineOptions({ layout: AdminLayout })\nconst props = defineProps(['buttons', 'segments', 'company', 'plans'])\n\nconst form = ref({\n  ...props.company,\n  _method: 'put'\n})\n\nconst submit = () => {\n  router.post(route('admin.companies.update', props.company.id), form.value, {\n    onSuccess: () => notify.success('Information has been updated successfully')\n  })\n}\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Edit company\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"grid grid-cols-12\">\n        <div class=\"col-span-5\">\n          <strong>{{ trans('Edit company') }}</strong>\n          <p>\n            {{ trans('Edit your company details and necessary information from here') }}\n          </p>\n        </div>\n        <div class=\"col-span-7\">\n          <div class=\"card\">\n            <form @submit.prevent=\"submit\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <label>{{ trans('Name') }}</label>\n                  <input type=\"text\" v-model=\"form.name\" required class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans('Profile Picture') }}</label>\n                  <input\n                    @input=\"(e) => (form.avatar = e.target.files[0])\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    class=\"input\"\n                  />\n                </div>\n\n                <div class=\"mb-2\">\n                  <label>{{ trans('Email') }}</label>\n                  <input type=\"email\" v-model=\"form.email\" required class=\"input\" />\n                </div>\n\n                <div class=\"mb-2\">\n                  <label>{{ trans('Phone') }}</label>\n                  <input type=\"text\" v-model=\"form.phone\" class=\"input\" />\n                </div>\n\n                <div class=\"mb-2\">\n                  <label>{{ trans('Address') }}</label>\n                  <input type=\"text\" v-model=\"form.address\" class=\"input\" />\n                </div>\n\n                <div class=\"mb-2\">\n                  <label>{{ trans('Password') }}</label>\n                  <input type=\"password\" v-model=\"form.password\" class=\"input\" />\n                </div>\n\n                <div class=\"mb-2\">\n                  <label>{{ trans('Confirm Password') }}</label>\n                  <input type=\"password\" v-model=\"form.password_confirmation\" class=\"input\" />\n                </div>\n\n                <div class=\"mb-2\">\n                  <label class=\"label mb-2\">{{ trans('Will Expire') }}</label>\n\n                  <input v-model=\"form.will_expire\" type=\"date\" name=\"will_expire\" class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label class=\"label mb-2\">{{ trans('Subscription Plan') }}</label>\n                  <select v-model=\"form.plan_id\" class=\"select\" name=\"status\">\n                    <option value=\"null\">\n                      {{ trans('Without subscription plan') }}\n                    </option>\n                    <option :value=\"plan.id\" v-for=\"plan in plans\" :key=\"plan.id\">\n                      {{ plan.title }}\n                    </option>\n                  </select>\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans('Credits') }}</label>\n                  <input type=\"number\" v-model=\"form.credits\" min=\"0\" class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label for=\"toggle-status\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"form.status\"\n                      class=\"toggle-input peer sr-only\"\n                      id=\"toggle-status\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('Is Active?') }}</span>\n                  </label>\n                </div>\n                <div class=\"mb-2\">\n                  <label for=\"toggle-email-verified-status\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"form.email_verified\"\n                      class=\"toggle-input peer sr-only\"\n                      id=\"toggle-email-verified-status\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('Email Verified?') }}</span>\n                  </label>\n                </div>\n                <div class=\"mb-2\">\n                  <label for=\"toggle-kyc-verified-status\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"form.kyc_verified\"\n                      class=\"toggle-input peer sr-only\"\n                      id=\"toggle-kyc-verified-status\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('KYC Verified?') }}</span>\n                  </label>\n                </div>\n\n                <div class=\"mb-2\">\n                  <label for=\"toggle-starred-status\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"form.is_star\"\n                      class=\"toggle-input peer sr-only\"\n                      id=\"toggle-starred-status\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('Make Star?') }}</span>\n                  </label>\n                </div>\n\n                <div class=\"mt-2\">\n                  <SpinnerBtn\n                    type=\"submit\"\n                    classes=\"btn btn-primary\"\n                    :btn-text=\"trans('Save Changes')\"\n                    :processing=\"form.processing\"\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport Paginate from '@/Components/Paginate.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport trans from '@/Composables/transComposable'\nimport Filter from '@/Components/Admin/Filter.vue'\nimport Overview from '@/Components/Admin/OverviewGrid.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\nconst { deleteRow } = sharedComposable()\n\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps([\n  'segments',\n  'buttons',\n  'request',\n  'companies',\n  'total_companies',\n  'active_companies',\n  'inactive_companies',\n  'verified_companies'\n])\n\nconst companyStats = [\n  { value: props.total_companies, title: trans('Total Companies'), iconClass: 'bx bx-list-ul' },\n  { value: props.active_companies, title: trans('Active Companies'), iconClass: 'bx bx-check-shield' },\n  { value: props.inactive_companies, title: trans('Inactive Companies'), iconClass: 'bx bx-x-circle' },\n  {\n    value: props.verified_companies,\n    title: trans('Verified Companies'),\n    iconClass: 'bx bx-check-shield'\n  }\n]\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Companies')\" :segments=\"segments\" :buttons=\"buttons\" />\n\n    <div class=\"space-y-6\">\n      <Overview :items=\"companyStats\" class=\"lg:grid-cols-3\" />\n      <Filter :request=\"request\" :buttons=\"buttons\" />\n\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans('Company') }}</th>\n              <th>{{ trans('Plan') }}</th>\n              <th>{{ trans('Email Verification') }}</th>\n              <th>{{ trans('ID Verification') }}</th>\n              <th>{{ trans('Is Star?') }}</th>\n              <th>{{ trans('Status') }}</th>\n              <th class=\"text-left\">{{ trans('Created At') }}</th>\n              <th>\n                <p class=\"text-right\">{{ trans('Action') }}</p>\n              </th>\n            </tr>\n          </thead>\n          <tbody class=\"list\" v-if=\"companies.total != 0\">\n            <tr v-for=\"company in companies.data\" :key=\"company.id\">\n              <td>\n                <div class=\"flex items-center gap-3\">\n                  <div class=\"avatar avatar-circle\">\n                    <img :src=\"company.avatar == null\n                      ? `https://ui-avatars.com/api/?name=${company.name}`\n                      : `${company.avatar}`\n                      \" alt=\" avatar-img\" class=\"h-full w-full rounded-full\" />\n                  </div>\n                  <div>\n                    <h6 class=\"whitespace-nowrap text-sm font-medium text-slate-700 dark:text-slate-100\">\n                      <Link :href=\"route('admin.companies.show', company)\" class=\"text-dark\">\n                      {{ company.name }}\n                      </Link>\n                    </h6>\n                    <p class=\"truncate text-xs text-slate-500 dark:text-slate-400\">\n                      {{ company.email }}\n                    </p>\n                  </div>\n                </div>\n              </td>\n\n              <td>\n                {{ company.plan?.title ?? 'NA' }} <br />\n                {{ company.will_expire ?? '' }}\n              </td>\n              <td>\n                <span v-if=\"company.email_verified_at\" class=\"badge badge-primary\">{{\n                  trans('Verified')\n                }}</span>\n                <span v-else class=\"badge badge-danger\">{{ trans('Not Verified') }}</span>\n              </td>\n              <td>\n                <span v-if=\"company.kyc_verified_at\" class=\"badge badge-primary\">{{\n                  trans('Verified')\n                }}</span>\n                <span v-else class=\"badge badge-danger\">{{ trans('Not Verified') }}</span>\n              </td>\n              <td>\n                <span v-if=\"company.is_star\" class=\"badge badge-primary\">{{\n                  trans('Starred')\n                }}</span>\n                <span v-else class=\"badge badge-danger\">{{ trans('Not Starred') }}</span>\n              </td>\n\n              <td>\n                <span :class=\"company.status == 1 ? 'badge badge-success' : 'badge badge-danger'\">\n                  {{ company.status == 1 ? 'Active' : 'Suspended' }}\n                </span>\n              </td>\n\n              <td class=\"text-center\">\n                {{ company.created_at_date }}\n              </td>\n              <td>\n                <div class=\"flex justify-end\">\n                  <div class=\"dropdown\" data-placement=\"bottom-start\">\n                    <div class=\"dropdown-toggle\">\n                      <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                    </div>\n                    <div class=\"dropdown-content w-40\">\n                      <ul class=\"dropdown-list\">\n                        <li class=\"dropdown-list-item\">\n                          <Link :href=\"route('admin.companies.show', company)\" class=\"dropdown-link\">\n                          <i class=\"h-5 text-slate-400\" data-feather=\"external-link\"></i>\n                          <span>{{ trans('View') }}</span>\n                          </Link>\n                        </li>\n\n                        <li class=\"dropdown-list-item\">\n                          <a target=\"_blank\" :href=\"route('companies.show', company.username)\" class=\"dropdown-link\">\n                            <i class=\"h-5 text-slate-400\" data-feather=\"external-link\"></i>\n                            <span>{{ trans('View Profile') }}</span>\n                          </a>\n                        </li>\n\n                        <li class=\"dropdown-list-item\">\n                          <Link :href=\"route('admin.companies.edit', company)\" class=\"dropdown-link\">\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans('Edit') }}</span>\n                          </Link>\n                        </li>\n                        <li class=\"dropdown-list-item\">\n                          <button @click=\"deleteRow(route('admin.companies.destroy', company))\" class=\"dropdown-link\">\n                            <i class=\"h-5 text-slate-400\" data-feather=\"trash\"></i>\n                            {{ trans('Delete') }}\n                          </button>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n        <Paginate :links=\"companies.links\" />\n      </div>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport trans from '@/Composables/transComposable';\nimport Overview from \"@/Components/Admin/OverviewGrid.vue\";\nimport moment from \"moment\";\nimport NoDataFound from \"@/Components/Admin/NoDataFound.vue\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\nconst { deleteRow } = sharedComposable();\n\ndefineOptions({ layout: AdminLayout });\nconst props = defineProps([\n  \"company\",\n  \"jobs\",\n  \"buttons\",\n  \"segments\",\n  \"job_posted\",\n  \"shortlisted\",\n  \"applications\",\n  \"saved_candidate\",\n]);\n\nconst companyStats = [\n  { value: props.job_posted, title: trans(\"Job Posted\"), iconClass: \"bx bx-box\" },\n  {\n    value: props.shortlisted,\n    title: trans(\"Shortlisted\"),\n    iconClass: \"bx bx-dollar-circle\",\n  },\n  {\n    value: props.applications,\n    title: trans(\"Applications\"),\n    iconClass: \"ti ti-thumb-up\",\n  },\n  {\n    value: props.saved_candidate,\n    title: trans(\"Saved Candidates\"),\n    iconClass: \"ti ti-thumb-up\",\n  },\n];\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Company details\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"companyStats\" />\n\n      <!-- User Profile Start  -->\n      <div class=\"grid grid-cols-1 gap-6 lg:grid-cols-4\">\n        <!-- Left Section Start  -->\n        <section class=\"flex flex-col w-full col-span-1 gap-6 h-min lg:sticky lg:top-20\">\n          <!-- User Avatar & Status  -->\n          <div class=\"card\">\n            <div class=\"flex flex-col items-center card-body\">\n              <div class=\"relative w-24 h-24 my-2 rounded-full\">\n                <img\n                  :src=\"\n                    company.avatar == null\n                      ? `https://ui-avatars.com/api/?name=${company.name}`\n                      : `${company.avatar}`\n                  \"\n                  alt=\" avatar-img\"\n                  class=\"w-full h-full rounded-full\"\n                />\n              </div>\n              <div>\n                <h2\n                  class=\"mb-4 text-[16px] font-medium text-slate-700 dark:text-slate-200\"\n                >\n                  {{ company.name }}\n                </h2>\n                <span class=\"description\">{{ trans(\"Status\") }}: </span>\n                <span\n                  :class=\"\n                    company.status == 1\n                      ? 'badge badge-success badge-sm'\n                      : 'badge badge-danger badge-sm'\n                  \"\n                  ><small>{{ company.status == 1 ? \"Active\" : \"Suspended\" }}</small></span\n                >\n              </div>\n\n              <div class=\"text-center\">\n                <div class=\"\">\n                  <i class=\"mr-2\"></i>{{ trans(\"Join Date: \") }}\n                  {{ company.created_at_date }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <!-- Left Section End  -->\n        <!-- Right Section Start  -->\n        <section class=\"col-span-3\">\n          <div class=\"flex flex-wrap h-full gap-4\">\n            <div class=\"flex-grow\">\n              <div class=\"h-full card\">\n                <div class=\"space-y-2 card-body\">\n                  <small class=\"font-bold text-muted\">{{ trans(\"Bio\") }}</small>\n                  <p>{{ trans(\"Name : \") }} {{ company.name }}</p>\n                  <p>{{ trans(\"Email : \") }} {{ company.email }}</p>\n                  <p>{{ trans(\"Phone : \") }} {{ company?.phone || \"None\" }}</p>\n                  <p>{{ trans(\"Address : \") }} {{ company?.address || \"None\" }}</p>\n                  <h5 class=\"my-2 font-bold\">{{ trans(\"Details\") }}</h5>\n                  <div>\n                    <h6>{{ trans(\"Socials\") }}</h6>\n                    <ul class=\"flex flex-wrap gap-x-4\">\n                      <li\n                        class=\"capitalize\"\n                        v-for=\"(social, key) in company.meta.social\"\n                        :key=\"key\"\n                      >\n                        <a\n                          v-if=\"social\"\n                          :href=\"social\"\n                          target=\"_blank\"\n                          class=\"hover:underline\"\n                        >\n                          <span>{{ key }}</span>\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h6>{{ trans(\"Description\") }}</h6>\n                    <div>\n                      {{ company.meta.business.description }}\n                    </div>\n                  </div>\n                  <div class=\"grid grid-cols-4\">\n                    <div>\n                      <h6>{{ trans(\"Name\") }}</h6>\n                      <div>\n                        {{ company.meta.company.name }}\n                      </div>\n                    </div>\n                    <div>\n                      <h6>{{ trans(\"Size\") }}</h6>\n                      <div>{{ company.meta.company.size }}+</div>\n                    </div>\n                    <div>\n                      <h6>{{ trans(\"Address\") }}</h6>\n                      <div>{{ company.meta.company.address }}</div>\n                    </div>\n                    <div>\n                      <h6>{{ trans(\"Founded\") }}</h6>\n                      <div>{{ company.meta.company.year_of_establishment }}</div>\n                    </div>\n                    <div v-if=\"company.meta.business.site_url\">\n                      <h6>{{ trans(\"Website\") }}</h6>\n                      <div>\n                        <a target=\"_blank\" :href=\"company.meta.business.site_url\">\n                          {{ company.meta.business.site_url }}\n                        </a>\n                      </div>\n                    </div>\n                    <div v-if=\"company.meta.business.license_no\">\n                      <h6>{{ trans(\"License No\") }}</h6>\n                      <div>\n                        {{ company.meta.business.license_no }}\n                      </div>\n                    </div>\n                    <div v-if=\"company.meta.business.rl_no\">\n                      <h6>{{ trans(\"RL No\") }}</h6>\n                      <div>\n                        {{ company.meta.business.rl_no }}\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    <h6>{{ trans(\"Contacts\") }}</h6>\n                    <div class=\"grid grid-cols-4\">\n                      <div>\n                        <h6>{{ trans(\"Email\") }}</h6>\n                        <div>\n                          {{ company.meta.contact.email }}\n                        </div>\n                      </div>\n                      <div v-if=\"company.meta.contact.mobile\">\n                        <h6>{{ trans(\"Mobile\") }}</h6>\n                        <div>\n                          {{ company.meta.contact.mobile }}\n                        </div>\n                      </div>\n                      <div>\n                        <h6>{{ trans(\"Designation\") }}</h6>\n                        <div>\n                          {{ company.meta.contact.designation }}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <!-- Right Section End -->\n      </div>\n\n      <div>\n        <h5 class=\"mb-2\">{{ trans(\"Company Jobs\") }}</h5>\n        <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th class=\"w-[5%] uppercase\">{{ trans(\"Title\") }}</th>\n                <th class=\"w-[15%] uppercase\">{{ trans(\"Job Created\") }}</th>\n                <th class=\"w-[10%] uppercase\">{{ trans(\"Applicants\") }}</th>\n                <th class=\"w-[10%] uppercase\">{{ trans(\"Views\") }}</th>\n                <th class=\"w-[10%] uppercase\">{{ trans(\"Status\") }}</th>\n                <th class=\"w-[5%] !text-right uppercase\">{{ trans(\"Actions\") }}</th>\n              </tr>\n            </thead>\n\n            <tbody v-if=\"jobs.total\">\n              <tr v-for=\"job in jobs.data\" :key=\"job.id\">\n                <td>\n                  <div class=\"job-name fw-500\">\n                    {{ job.title }}\n                  </div>\n                  <div class=\"info1\">\n                    {{ job.type.replace(\"_\", \" \") }} .\n                    <template v-if=\"JSON.parse(job.meta).is_remote\">\n                      {{ trans(\"Remote\") }}\n                    </template>\n                    <template v-else>\n                      {{ job.country?.[0]?.name }}\n                    </template>\n                  </div>\n                </td>\n                <td>{{ moment(job.created_at).format(\"D-MMM-Y\") }}</td>\n                <td>{{ job.applied_applicants_count }} Applications</td>\n                <td>{{ job.total_visits }} Views</td>\n                <td>\n                  <span\n                    class=\"badge\"\n                    :class=\"job.status == 1 ? 'badge-primary' : 'badge-danger'\"\n                  >\n                    {{ job.status == 1 ? trans(\"Active\") : trans(\"Inactive\") }}\n                  </span>\n                </td>\n                <td>\n                  <div class=\"dropdown\" data-placement=\"bottom-end\">\n                    <div class=\"dropdown-toggle\">\n                      <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                    </div>\n                    <div class=\"w-40 dropdown-content\">\n                      <ul class=\"dropdown-list\">\n                        <li class=\"dropdown-list-item\">\n                          <Link\n                            :href=\"route('admin.job.show', job.id)\"\n                            class=\"dropdown-link\"\n                          >\n                            <i class=\"h-5 text-slate-400\" data-feather=\"eye\"></i>\n                            <span>{{ trans(\"View\") }}</span>\n                          </Link>\n                        </li>\n\n                        <li class=\"dropdown-list-item\">\n                          <button\n                            as=\"button\"\n                            class=\"dropdown-link\"\n                            @click=\"deleteRow(route('admin.job.destroy', job.id))\"\n                          >\n                            <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"></i>\n                            <span>{{ trans(\"Delete\") }}</span>\n                          </button>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n            <NoDataFound v-else for-table=\"true\" />\n          </table>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { Head, useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport notify from \"@/Plugins/Admin/notify\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps(['companyReview', 'segments', 'buttons'])\n\nconst form = useForm({\n  ratting: props.companyReview.ratting,\n  comment: props.companyReview.comment,\n})\n\n\nconst update = () => {\n  const url = route('admin.company-reviews.update', props.companyReview.id)\n  form.put(url, {\n    onSuccess: () => {\n      notify.success(trans('Review has been updated successfully'))\n    }\n  })\n}\n</script>\n\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Edit Company Review')\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <form @submit.prevent=\"update\" class=\"ajaxform_instant_reload\" enctype=\"multipart/form-data\">\n        <div class=\"grid lg:grid-cols-5\">\n          <div class=\"lg:col-span-2\">\n            <strong>{{ trans('Edit company reviews') }}</strong>\n            <p>{{ trans('modify the necessary information from here') }}</p>\n          </div>\n\n          <div class=\"lg:col-span-3\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n\n                <div class=\"mb-2\">\n                  <label class=\"\">{{ trans('Select Ratting') }}</label>\n                  <div class=\"\">\n                    <select v-model=\"form.ratting\" class=\"select\">\n                      <option v-for=\"i, key in 5\" :key=\"key\" :value=\"i\"> {{ i }} </option>\n                    </select>\n                    <div class=\"invalid-feedback text-danger d-block\" v-if=\"form.errors.ratting\">\n                      {{ form.errors.ratting }}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"mb-2 mt-2\">\n                  <label class=\"\">{{ trans('Comment') }}</label>\n                  <textarea v-model=\"form.comment\" required=\"\" class=\"textarea h-100\"\n                    maxlength=\"500\"></textarea>\n                  <div class=\"invalid-feedback text-danger d-block\" v-if=\"form.errors.comment\">\n                    {{ form.errors.comment }}\n                  </div>\n                </div>\n\n                <div class=\"mb-2 mt-3\">\n                  <SpinnerBtn :processing=\"form.processing\" btn-text=\"Submit\" />\n                </div>\n\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </main>\n</template>\n\n","<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport Overview from \"@/Components/Admin/OverviewGrid.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport trans from '@/Composables/transComposable';\nimport sharedComposable from \"@/Composables/sharedComposable\";\nimport Paginate from \"@/Components/Paginate.vue\";\nimport NoDataFound from \"@/Components/Admin/NoDataFound.vue\";\nimport { computed } from \"vue\";\nimport { useForm } from \"@inertiajs/vue3\";\nconst props = defineProps([\n  \"reviews\",\n  \"request\",\n  \"segments\",\n  \"buttons\",\n  \"total\",\n  \"averageRatings\",\n  \"todaysReviews\",\n]);\n\nconst { textExcerpt, deleteRow } = sharedComposable();\ndefineOptions({ layout: AdminLayout });\n\nconst reviewStats = computed(() => {\n  return [\n    {\n      value: props.total,\n      title: trans(\"Total Reviews\"),\n      iconClass: \"bx bx-bar-chart\",\n    },\n    {\n      value: props.averageRatings,\n      title: trans(\"Average Ratings\"),\n      iconClass: \"bx bx-bar-chart-alt\",\n    },\n    {\n      value: props.todaysReviews,\n      title: trans(\"Todays Reviews\"),\n      iconClass: \"bx bx-message-alt-detail\",\n    },\n  ];\n});\n\nconst filterForm = useForm({\n  search: props?.request?.search ?? \"\",\n  type: props?.request?.type ?? \"company_email\",\n});\n\nconst filter = () => {\n  let route = filterForm.action || location.href;\n  filterForm.get(route);\n};\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('Company Reviews')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n    <div class=\"space-y-6\">\n      <Overview :items=\"reviewStats\" grid=\"3\" />\n\n      <div\n        class=\"flex flex-col items-center justify-between gap-y-4 md:flex-row md:gap-y-0\"\n      >\n        <div class=\"flex items-center justify-between w-full gap-x-4 md:w-auto\">\n          {{ props.title ?? \"\" }}\n        </div>\n\n        <div class=\"flex items-center justify-between w-full gap-x-4 md:w-auto\">\n          <div class=\"dropdown\" data-placement=\"bottom-end\">\n            <div class=\"dropdown-toggle\">\n              <button\n                type=\"button\"\n                class=\"font-medium bg-white shadow-sm btn dark:bg-slate-800\"\n              >\n                <i class=\"w-4\" data-feather=\"filter\"></i>\n                <span>{{ trans(\"Filter\") }}</span>\n                <i class=\"w-4\" data-feather=\"chevron-down\"></i>\n              </button>\n            </div>\n\n            <div class=\"dropdown-content w-72 !overflow-visible\">\n              <form @submit.prevent=\"filter\">\n                <ul class=\"p-4 space-y-4 dropdown-list\">\n                  <li class=\"dropdown-list-item\">\n                    <h2 class=\"my-1 text-sm font-medium\">{{ trans(\"Status\") }}</h2>\n                    <div class=\"mb-2\">\n                      <input\n                        type=\"text\"\n                        name=\"search\"\n                        v-model=\"filterForm.search\"\n                        class=\"input\"\n                        placeholder=\"Search......\"\n                      />\n                    </div>\n                  </li>\n                  <li class=\"dropdown-list-item\">\n                    <div class=\"mb-2\">\n                      <select class=\"select\" name=\"type\" v-model=\"filterForm.type\">\n                        <option value=\"company_email\">\n                          {{ trans(\"Company Email\") }}\n                        </option>\n                        <option value=\"reviewer_email\">\n                          {{ trans(\"Reviewer Email\") }}\n                        </option>\n                      </select>\n                    </div>\n                  </li>\n\n                  <li class=\"dropdown-list-item\">\n                    <button class=\"w-full btn btn-primary\">\n                      {{ trans(\"Filter\") }}\n                    </button>\n                  </li>\n                </ul>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"whitespace-normal table-responsive rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans(\"Reviewer\") }}</th>\n              <th>{{ trans(\"Company\") }}</th>\n              <th>{{ trans(\"Job\") }}</th>\n              <th>{{ trans(\"Ratting\") }}</th>\n              <th>{{ trans(\"Comment\") }}</th>\n              <th class=\"flex justify-end\">{{ trans(\"Action\") }}</th>\n            </tr>\n          </thead>\n          <tbody v-if=\"reviews.total > 0\">\n            <tr v-for=\"review in reviews.data\" :key=\"review.id\">\n              <td>\n                <div class=\"flex items-center gap-2\" v-if=\"review.author\">\n                  <img\n                    class=\"h-12 avatar-img\"\n                    v-lazy=\"\n                      review.author.avatar == null\n                        ? `https://ui-avatars.com/api/?name=${review.author.name}`\n                        : `${review.author.avatar}`\n                    \"\n                  />\n                  <Link :href=\"route('admin.candidates.show', review.author.id)\">\n                    {{ review.author?.name }}</Link\n                  >\n                </div>\n              </td>\n\n              <td>\n                <div v-if=\"review.company?.id\">\n                  <Link :href=\"route('admin.companies.show', review.company.id)\">\n                    {{ review.company?.name }}</Link\n                  >\n                </div></td>\n              <td>\n                <div v-if=\"review.job?.id\">\n                  <Link :href=\"route('admin.job.show', review.job.id)\">\n                    {{ review.job.title }}\n                  </Link>\n                </div>\n              </td>\n              <td>\n                {{ review.ratting }}\n              </td>\n              <td>\n                {{ textExcerpt(review.comment, 30) }}\n              </td>\n             \n              <td>\n                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                  <div class=\"dropdown-toggle\">\n                    <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                  </div>\n                  <div class=\"w-40 dropdown-content\">\n                    <ul class=\"dropdown-list\">\n                      <li class=\"dropdown-list-item\">\n                        <Link\n                          :href=\"route('admin.company-reviews.edit', review.id)\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans(\"Edit\") }}</span>\n                        </Link>\n                      </li>\n\n                      <li class=\"dropdown-list-item\">\n                        <Link\n                          as=\"button\"\n                          class=\"dropdown-link\"\n                          @click=\"deleteRow('/admin/company-reviews/' + review.id)\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                            >{{ trans(\"Remove\") }}></i\n                          >\n                          <span>{{ trans(\"Delete\") }}</span>\n                        </Link>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n        <div class=\"py-4 card-footer\">\n          <Paginate :links=\"reviews.links\" />\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm, router } from '@inertiajs/vue3'\nimport Paginate from '@/Components/Paginate.vue'\nimport moment from 'moment'\nimport { ref } from 'vue'\nimport trans from '@/Composables/transComposable'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport Overview from '@/Components/Admin/OverviewGrid.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport drawer from '@/Plugins/Admin/drawer'\nimport { computed, onMounted } from 'vue'\nimport notify from '@/Plugins/Admin/notify'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\nonMounted(() => {\n  drawer.init()\n})\ndefineOptions({ layout: AdminLayout })\nconst { formatCurrency, textExcerpt } = sharedComposable()\n\nconst props = defineProps([\n  'creditLogs',\n  'per_credit_fee',\n  'per_word_credit',\n  'totalCreditLog',\n  'activeCreditLog',\n  'inactiveCreditLog',\n  'buttons',\n  'segments',\n  'request',\n  'type'\n])\nconst filterData = useForm({\n  search: props.request.search,\n  type: props.type\n})\nconst stats = computed(() => {\n  return [\n    {\n      value: props.totalCreditLog,\n      title: trans('Total Credit Log'),\n      iconClass: 'bx bx-badge'\n    },\n    {\n      value: props.activeCreditLog,\n      title: trans('Active Credit Log'),\n      iconClass: 'bx bx-badge-check'\n    },\n    {\n      value: props.inactiveCreditLog,\n      title: trans('Pending Credit Log'),\n      iconClass: 'bx bx-x-circle'\n    }\n  ]\n})\n\nconst creditFeeForm = useForm({\n  per_credit_fee: props.per_credit_fee\n})\nconst creditWordForm = useForm({\n  per_word_credit: props.per_word_credit\n})\n\nconst creditFeeUpdate = () => {\n  creditFeeForm.put(route('admin.update-credit-fee'), {\n    onSuccess: () => {\n      notify.success('Credit fee updated successfully')\n      drawer.of('#updateCreditFeeDrawer').hide()\n    }\n  })\n}\nconst creditWordUpdate = () => {\n  creditWordForm.put(route('admin.update-credit-word-fee'), {\n    onSuccess: () => {\n      notify.success('Credit word fee updated successfully')\n      drawer.of('#editCreditDrawer').hide()\n    }\n  })\n}\n\nconst editCreditLogForm = ref({})\nconst openEditCreditDrawer = (creditLog) => {\n  editCreditLogForm.value = { ...creditLog }\n  drawer.of('#editCreditDrawer').show()\n}\nconst updateCreditLog = () => {\n  router.patch(\n    route('admin.credit-logs.update', editCreditLogForm.value.id),\n    editCreditLogForm.value,\n    {\n      onSuccess: () => {\n        notify.success('Credit Log Updated successfully')\n      }\n    }\n  )\n}\n</script>\n\n<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment title=\"Job Categories\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"stats\" grid=\"3\" />\n      <div class=\"flex items-center justify-end gap-x-2\">\n        <div class=\"dropdown\" data-placement=\"bottom-end\">\n          <div class=\"dropdown-toggle\">\n            <button type=\"button\" class=\"font-medium bg-white shadow-sm btn dark:bg-slate-800\">\n              <i class=\"w-4\" data-feather=\"filter\"></i>\n              <span>{{ trans('Filter') }}</span>\n              <i class=\"w-4\" data-feather=\"chevron-down\"></i>\n            </button>\n          </div>\n\n          <div class=\"dropdown-content w-72 !overflow-visible\">\n            <form @submit.prevent=\"filterData.get('/admin/credit-logs')\">\n              <ul class=\"p-4 space-y-4 dropdown-list\">\n                <li class=\"dropdown-list-item\">\n                  <h2 class=\"my-1 text-sm font-medium\">{{ trans('Status') }}</h2>\n                  <div class=\"mb-2\">\n                    <input\n                      type=\"text\"\n                      name=\"search\"\n                      v-model=\"filterData.search\"\n                      class=\"input\"\n                      placeholder=\"Search......\"\n                    />\n                  </div>\n                </li>\n                <li class=\"dropdown-list-item\">\n                  <div class=\"mb-2\">\n                    <select class=\"select\" name=\"type\" v-model=\"filterData.type\">\n                      <option value=\"email\">{{ trans('User Email') }}</option>\n                      <option value=\"invoice_no\">{{ trans('Invoice No') }}</option>\n                    </select>\n                  </div>\n                </li>\n\n                <li class=\"dropdown-list-item\">\n                  <button type=\"submit\" class=\"w-full btn btn-primary\">\n                    {{ trans('Filter') }}\n                  </button>\n                </li>\n              </ul>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans('Invoice') }}</th>\n              <th>{{ trans('User Name') }}</th>\n              <th>{{ trans('Credits') }}</th>\n\n              <th>\n                {{ trans('Price') }}\n              </th>\n              <th>\n                {{ trans('Status') }}\n              </th>\n              <th>\n                {{ trans('Gateway') }}\n              </th>\n              <th>\n                {{ trans('Comment') }}\n              </th>\n              <th>\n                {{ trans('Attachment') }}\n              </th>\n              <th>{{ trans('Date') }}</th>\n              <th class=\"flex justify-end\">{{ trans('Action') }}</th>\n            </tr>\n          </thead>\n\n          <tbody v-if=\"creditLogs.total > 0\">\n            <tr v-for=\"creditLog in creditLogs.data\" :key=\"creditLog.id\">\n              <td>\n                <p class=\"text-primary-500\">{{ creditLog.invoice_no }}</p>\n              </td>\n              <td>\n                <Link\n                  :href=\"route('admin.companies.show', creditLog.user_id)\"\n                  v-if=\"creditLog.user.role == 'employer'\"\n                >\n                  {{ textExcerpt(creditLog.user.name, 30) }}\n                </Link>\n                <Link\n                  :href=\"route('admin.candidates.show', creditLog.user_id)\"\n                  v-if=\"creditLog.user.role == 'user'\"\n                >\n                  {{ textExcerpt(creditLog.user.name, 30) }}\n                </Link>\n              </td>\n              <td>\n                {{ creditLog.credits }}\n              </td>\n              <td>\n                {{ formatCurrency(creditLog.price) }}\n              </td>\n              <td>\n                <span\n                  :class=\"creditLog.status == 1 ? 'badge badge-success' : 'badge badge-warning'\"\n                >\n                  {{ creditLog.status == 1 ? 'Complete' : 'Pending' }}\n                </span>\n              </td>\n              <td>\n                {{ creditLog.gateway.name }}\n              </td>\n              <td>\n                <span v-if=\"creditLog?.meta\">\n                  {{ JSON.parse(creditLog.meta).comment }}\n                </span>\n                <span v-else>{{ trans('None') }}</span>\n              </td>\n              <td>\n                <template v-if=\"creditLog?.meta\">\n                  <a :href=\"JSON.parse(creditLog.meta).screenshot\" target=\"_blank\">{{\n                    trans('View Attachment')\n                  }}</a>\n                </template>\n                <span v-else>{{ trans('None') }}</span>\n              </td>\n              <td class=\"text-left\">\n                {{ moment(creditLog.updated_at).format('DD MMM, YYYY') }}\n              </td>\n              <td>\n                <div class=\"flex justify-end\">\n                  <div class=\"dropdown\" data-placement=\"bottom-start\">\n                    <div class=\"dropdown-toggle\">\n                      <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                    </div>\n                    <div class=\"w-40 dropdown-content\">\n                      <ul class=\"dropdown-list\">\n                        <li class=\"dropdown-list-item\">\n                          <button @click=\"openEditCreditDrawer(creditLog)\" class=\"dropdown-link\">\n                            <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                            <span>{{ trans('Edit') }}</span>\n                          </button>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n      </div>\n      <Paginate :links=\"creditLogs.links\" />\n    </div>\n  </main>\n\n  <div id=\"updateCreditFeeDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"creditFeeUpdate\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Edit Credit Fee') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans('Per Credit Fee') }}</label>\n          <input\n            v-model=\"creditFeeForm.per_credit_fee\"\n            type=\"number\"\n            step=\"any\"\n            required\n            class=\"input\"\n          />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"btn btn-primary w-full\"\n            :processing=\"creditFeeForm.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n  <div id=\"updateWordCreditFeeDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"creditWordUpdate\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Edit Credit Word Fee') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans('Per Word Credit Fee') }}</label>\n          <input\n            v-model=\"creditWordForm.per_word_credit\"\n            type=\"number\"\n            step=\"any\"\n            required\n            class=\"input\"\n          />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"btn btn-primary w-full\"\n            :processing=\"creditWordForm.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"editCreditDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateCreditLog\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Edit Order') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans('Status') }}</label>\n          <select v-model=\"editCreditLogForm.status\" class=\"select\" name=\"status\">\n            <option value=\"1\">\n              {{ trans('Approved') }}\n            </option>\n            <option value=\"0\">\n              {{ trans('Pending') }}\n            </option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans('Credits') }}</label>\n          <input\n            v-model=\"editCreditLogForm.credits\"\n            type=\"number\"\n            maxlength=\"500\"\n            class=\"input\"\n            required\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans('Payment ID') }}</label>\n          <input\n            :value=\"editCreditLogForm.payment_id\"\n            type=\"text\"\n            class=\"input read-only:cursor-not-allowed\"\n            readonly\n          />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"btn btn-primary w-full\"\n            :processing=\"editCreditLogForm.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n","<template>\n  <Head title=\"Cron Jobs\" />\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Cron Jobs')\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"row\" v-for=\"job in jobs\" :key=\"job.key\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"flex items-center space-x-5\">\n                <h6 class=\"card-title\">{{ job.title }}</h6>\n                <p class=\"text-green-900 dark:text-primary-50\">({{ job.time }})</p>\n              </div>\n              <div class=\"code-viewer mt-4 rounded-lg p-4\">\n                <code> {{ job.url }}</code>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script>\nimport AdminLayout from '@/Layouts/Admin.vue'\nexport default {\n  layout: AdminLayout\n}\n</script>\n\n<script setup>\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { Head } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nconst props = defineProps(['segments', 'buttons', 'jobs'])\n</script>\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm, router } from '@inertiajs/vue3'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport notify from '@/Plugins/Admin/notify'\nimport drawer from '@/Plugins/Admin/drawer'\nimport trans from '@/Composables/transComposable'\nimport { onMounted, ref } from 'vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\ndefineOptions({ layout: AdminLayout })\n\nconst { deleteRow } = sharedComposable()\n\nonMounted(() => {\n  drawer.init()\n})\n\nconst props = defineProps(['currencies', 'buttons', 'segments'])\n\nconst form = useForm({\n  name: '',\n  code: ''\n})\nconst editForm = ref({})\nconst isProcessing = ref(false)\nconst storeCurrency = () => {\n  form.post(route('admin.currency.store'), {\n    preserveScroll: true,\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('Currency has been added successfully'))\n      drawer.of('#addNewCurrencyDrawer').hide()\n    }\n  })\n}\nconst updateCurrency = () => {\n  isProcessing.value = true\n  router.patch(route('admin.currency.update', editForm.value.id), editForm.value, {\n    preserveScroll: true,\n    onSuccess: () => {\n      editForm.value = {}\n      notify.success(trans('Currency has been updated successfully'))\n      drawer.of('#editCurrencyDrawer').hide()\n    },\n    onFinish: () => (isProcessing.value = false)\n  })\n}\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Create a Currency\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"col-2\">{{ trans('Code') }}</th>\n              <th class=\"col-2\">{{ trans('Name') }}</th>\n              <th class=\"flex justify-end\">{{ trans('Action') }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"currency in currencies\" :key=\"currency.code\">\n              <td class=\"text-left\">\n                {{ currency.code }}\n              </td>\n              <td class=\"text-left\">\n                {{ currency.name }}\n              </td>\n              <td class=\"flex justify-end gap-3\">\n                <button\n                  class=\"delete-confirm btn btn-primary\"\n                  @click=\"\n                    () => {\n                      editForm = { ...currency }\n                      drawer.of('#editCurrencyDrawer').show()\n                    }\n                  \"\n                >\n                  <i class=\"fas fa-edit\"></i>\n                </button>\n                <a\n                  href=\"javascript:void(0)\"\n                  class=\"delete-confirm btn btn-primary\"\n                  @click=\"deleteRow(route('admin.currency.destroy', currency.id))\"\n                  ><i class=\"fas fa-trash\"></i\n                ></a>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-if=\"currencies.length < 1\" for-table=\"true\" />\n        </table>\n      </div>\n    </div>\n  </main>\n\n  <div id=\"addNewCurrencyDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeCurrency()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Add New Currency') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans('Name') }}</label>\n          <input\n            v-model=\"form.name\"\n            type=\"text\"\n            name=\"name\"\n            class=\"input\"\n            required\n            placeholder=\"US\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Code') }}</label>\n          <input\n            v-model=\"form.code\"\n            type=\"text\"\n            name=\"name\"\n            class=\"input\"\n            required\n            placeholder=\"USD\"\n          />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"form.processing\"\n            :btn-text=\"trans('Create')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n  <div id=\"editCurrencyDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateCurrency\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Edit Currency') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Name') }}</label>\n          <input v-model=\"editForm.name\" type=\"text\" name=\"name\" class=\"input\" required />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Code') }}</label>\n          <input v-model=\"editForm.code\" type=\"text\" name=\"code\" class=\"input\" required />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            :processing=\"isProcessing\"\n            classes=\"btn btn-primary\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n","<template>\n  <main class=\"container flex-grow p-4 sm:p6\">\n    <HeaderSegment title=\"Edit Language\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <form @submit.prevent=\"updateLanguage\" method=\"post\">\n\n        <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th class=\"col-6\">{{ trans(\"Translation Key\") }}</th>\n                <th class=\"col-6\">{{ trans(\"Translated Value\") }}</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              <tr v-for=\"(value, key) in posts\" :key=\"key\">\n                <td>\n                  {{ key }}\n                </td>\n                <td>\n                  <input type=\"text\" class=\"input\" v-model=\"posts[key]\" />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"card-footer\">\n          <SpinnerBtn :btn-text=\"trans('Save Changes')\" :processing=\"isProccessing\" />\n        </div>\n      </form>\n    </div>\n\n  </main>\n\n  <div id=\"addNewLanguageKeyDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"createKey()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Add New Language\") }}</h5>\n        <button type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\">\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Key\") }}</label>\n          <input type=\"text\" name=\"key\" v-model=\"form.key\" class=\"input\" required />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Value\") }}</label>\n          <input type=\"text\" name=\"value\" v-model=\"form.value\" class=\"input\" required />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn classes=\"w-full btn btn-primary\" :processing=\"form.processing\" :btn-text=\"trans('Create')\" />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport drawer from \"@/Plugins/Admin/drawer\"\nimport notify from \"@/Plugins/Admin/notify\"\nimport { useForm, router } from \"@inertiajs/vue3\"\nimport trans from '@/Composables/transComposable'\nimport { ref } from \"vue\"\nimport { onMounted } from \"vue\"\n\n\ndefineOptions({ layout: AdminLayout })\n\n\nonMounted(() => {\n  drawer.init()\n})\n\n\nconst props = defineProps([\n  'posts',\n  'id',\n  'buttons',\n  'segments',\n])\n\nconst form = useForm({\n  key: '',\n  value: '',\n  id: props.id\n})\n\n\nconst createKey = () => {\n  form.post('/admin/language/addkey', {\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('Language key has been added successfully'))\n      drawer.of('#addNewLanguageKeyDrawer').hide()\n    }\n  })\n}\n\nconst isProccessing = ref(false)\n\nconst updateLanguage = () => {\n  isProccessing.value = true\n  router.patch(route('admin.language.update', props.id), {\n    values: props.posts\n  }, {\n    onSuccess: () => {\n      form.reset()\n      isProccessing.value = false\n      notify.success(trans('Language key has been added successfully'))\n    }\n  })\n}\n</script>\n","<template>\n    <main class=\"container flex-grow p-4 sm:p-6\">\n        <HeaderSegment :title=\"trans('Edit Customers')\" :segments=\"segments\" :buttons=\"buttons\" />\n        <div class=\"space-y-6\">\n\n            <div class=\"flex\">\n                <div class=\"flex-1 mt-5\">\n                    <strong>{{ trans('Edit User') }}</strong>\n                    <p>{{ trans('Edit user profile information') }}</p>\n                </div>\n\n                <div class=\"flex-1 mt-5\">\n                    <form @submit.prevent=\"submit\">\n\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"mt-2\">\n                                    <label>{{ trans('Name') }}</label>\n                                    <input type=\"text\" name=\"name\" required=\"\" class=\"input\" :value=\"form.name\">\n                                </div>\n                                <div class=\"mt-2\">\n                                    <label>{{ trans('Email') }}</label>\n                                    <input type=\"email\" name=\"email\" required=\"\" class=\"input\" :value=\"form.email\">\n                                </div>\n                                <div class=\"mt-2\">\n                                    <label>{{ trans('Phone') }}</label>\n                                    <input type=\"text\" name=\"phone\" class=\"input\" :value=\"form.phone\">\n                                </div>\n                                <div class=\"mt-2\">\n                                    <label>{{ trans('Address') }}</label>\n                                    <input type=\"text\" name=\"address\" class=\"input\" :value=\"form.address\">\n                                </div>\n                                <div class=\"mt-2\">\n                                    <label>{{ trans('New Password') }}</label>\n                                    <input type=\"text\" name=\"password\" class=\"input\" value=\"\">\n                                </div>\n                                <div class=\"mt-2\">\n                                    <label>{{ trans('Status') }}</label>\n                                    <select class=\"select\" name=\"status\">\n                                        <option value=\"1\" :selected=\"form.status == 1\">{{ trans('Active')\n                                        }}</option>\n                                        <option value=\"0\" :selected=\"form.status == 0\">{{\n                                            trans('Deactive') }}</option>\n                                    </select>\n                                </div>\n                                <div class=\"mt-2\">\n                                    <SpinnerBtn classes=\"btn btn-primary\" :processing=\"form.processing\" :btn-text=\"trans('Save Changes')\" />\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </main>\n</template>\n\n<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport { useForm } from \"@inertiajs/vue3\"\nimport notify from \"@/Plugins/Admin/notify\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nexport default {\n    layout: AdminLayout\n}\n\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport trans from '@/Composables/transComposable'\nconst props = defineProps(['customer', 'segments', 'buttons'])\n\n\nconst form = useForm({\n    ...props.customer\n})\n\n\nconst submit = () => {\n    let actionUrl = route('admin.customer.update', { id: props.customer.id })\n    form.put(actionUrl, {\n        onSuccess: () => {\n            notify.success('Customer has been updated successfully')\n        }\n    })\n}\n\n\n</script>","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Customers')\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"customerStats\" />\n\n      <Filter :request=\"request\" />\n\n      <!-- Blog Table Starts -->\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans('Customer') }}</th>\n              <th>{{ trans('Plan') }}</th>\n              <th>{{ trans('Orders') }}</th>\n              <th>{{ trans('Expire Date') }}</th>\n              <th>{{ trans('Status') }}</th>\n              <th class=\"text-left\">{{ trans('Created At') }}</th>\n              <th class=\"text-left\">{{ trans('Action') }}</th>\n            </tr>\n          </thead>\n          <tbody class=\"list\" v-if=\"customers.length != 0\">\n            <tr v-for=\"customer in customers.data\" :key=\"customer.id\">\n              <td>\n                <div class=\"flex items-center gap-3\">\n                  <div class=\"avatar avatar-circle\">\n                    <img\n                      class=\"avatar-img\"\n                      :src=\"customer.avatar\"\n                      onerror=\"this.src = '/images/avatar1.png'\"\n                    />\n                  </div>\n                  <div>\n                    <h6\n                      class=\"whitespace-nowrap text-sm font-medium text-slate-700 dark:text-slate-100\"\n                    >\n                      <Link :href=\"route('admin.customer.show', customer)\" class=\"text-dark\">\n                        {{ customer.name }}\n                      </Link>\n                    </h6>\n                    <p class=\"truncate text-xs text-slate-500 dark:text-slate-400\">\n                      {{ customer.email }}\n                    </p>\n                  </div>\n                </div>\n              </td>\n\n              <td>\n                {{ customer.subscription?.title ?? 'NA' }}\n              </td>\n\n              <td class=\"text-center\">\n                {{ customer.orders_count }}\n              </td>\n              <td class=\"text-center\">\n                {{ customer.will_expire }}\n              </td>\n              <td>\n                <span :class=\"customer.status == 1 ? 'badge badge-success' : 'badge badge-danger'\">\n                  {{ customer.status == 1 ? 'Active' : 'Suspended' }}\n                </span>\n              </td>\n\n              <td class=\"text-center\">\n                {{ customer.created_at_date }}\n              </td>\n              <td>\n                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                  <div class=\"dropdown-toggle\">\n                    <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                  </div>\n                  <div class=\"dropdown-content w-40\">\n                    <ul class=\"dropdown-list\">\n                      <li class=\"dropdown-list-item\">\n                        <Link\n                          :href=\"route('admin.customer.show', customer.id)\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"external-link\"></i>\n                          <span>{{ trans('View') }}</span>\n                        </Link>\n                      </li>\n\n                      <li class=\"dropdown-list-item\">\n                        <Link :href=\"`/admin/customer/${customer.id}/edit`\" class=\"dropdown-link\">\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans('Edit') }}</span>\n                        </Link>\n                      </li>\n\n                      <li class=\"dropdown-list-item\">\n                        <Link\n                          as=\"button\"\n                          href=\"#\"\n                          @click=\"deleteRow('/admin/customer/' + customer.id)\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash\"></i>\n                          {{ trans('Delete') }}\n                        </Link>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <Alert\n          v-if=\"customers.length == 0\"\n          type=\"info\"\n          :text=\"trans('Opps you have not created any plan....')\"\n        />\n\n        <Paginate\n          v-if=\"customers.length != 0\"\n          :links=\"customers.links\"\n          :currentPage=\"customers.current_page\"\n          :from=\"customers.from\"\n          :lastPage=\"customers.last_page\"\n          :lastPageUrl=\"customers.last_page_url\"\n          :nextpageurl=\"customers.next_page_url\"\n          :perPage=\"customers.per_page\"\n          :prevPageUrl=\"customers.prev_page_url\"\n          :to=\"customers.to\"\n          :total=\"customers.total\"\n        />\n      </div>\n      <!-- Blog Table Ends -->\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport Paginate from '@/Components/Paginate.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport trans from '@/Composables/transComposable'\nimport Alert from '@/Components/Admin/Alert.vue'\nimport Filter from '@/Components/Admin/Filter.vue'\nimport Overview from '@/Components/Admin/OverviewGrid.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\n\ndefineOptions({ layout: AdminLayout })\nconst { deleteRow } = sharedComposable()\nconst props = defineProps([\n  'segments',\n  'buttons',\n  'customers',\n  'request',\n  'type',\n  'totalCustomers',\n  'totalActiveCustomers',\n  'totalSuspendedCustomers',\n  'totalExpiredCustomers'\n])\n\nconst customerStats = [\n  { value: props.totalCustomers, title: trans('Total Customers'), iconClass: 'bx bx-box' },\n  {\n    value: props.totalActiveCustomers,\n    title: trans('Active Customers'),\n    iconClass: 'bx bx-dollar-circle'\n  },\n  {\n    value: props.totalExpiredCustomers,\n    title: trans('Expired Customers'),\n    iconClass: 'ti ti-thumb-up'\n  },\n  {\n    value: props.totalSuspendedCustomers,\n    title: trans('Suspended Customers'),\n    iconClass: 'ti ti-message-2-cog'\n  }\n]\n</script>\n","<template>\n\t<main class=\"container flex-grow p-4 sm:p-6\">\n\t\t<HeaderSegment title=\"Customer details\" :segments=\"segments\" :buttons=\"buttons\" />\n\t\t<div class=\"space-y-6\">\n\t\t\t<!-- User Profile Start  -->\n\t\t\t<div class=\"grid grid-cols-1 gap-6 lg:grid-cols-4\">\n\t\t\t\t<!-- Left Section Start  -->\n\t\t\t\t<section class=\"col-span-1 flex h-min w-full flex-col gap-6 lg:sticky lg:top-20\">\n\t\t\t\t\t<!-- User Avatar & Status  -->\n\t\t\t\t\t<div class=\"card\">\n\t\t\t\t\t\t<div class=\"card-body flex flex-col items-center\">\n\t\t\t\t\t\t\t<div class=\"relative my-2 h-24 w-24 rounded-full\">\n\t\t\t\t\t\t\t\t<img :src=\"customer.avatar\" onerror=\"this.src = '/images/avatar1.png'\" alt=\"avatar-img\"\n\t\t\t\t\t\t\t\t\tclass=\"h-full w-full rounded-full\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t<h2 class=\"text-[16px] font-medium text-slate-700 dark:text-slate-200 mb-4\">{{ customer.name\n\t\t\t\t\t\t\t\t}}</h2>\n\t\t\t\t\t\t\t\t<span class=\"description\">{{ trans('Status') }}: </span>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t:class=\"customer.status == 1 ? 'badge badge-success badge-sm' : 'badge badge-danger badge-sm'\"><small>{{\n\t\t\t\t\t\t\t\t\t\tcustomer.status == 1 ? 'Active' : 'Suspended' }}</small></span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class=\"flex gap-3\">\n\t\t\t\t\t\t\t\t<span class=\"description\">{{ trans('Orders') }}: </span>\n\t\t\t\t\t\t\t\t<span class=\"heading\">{{ customer.orders_count ?? 0 }}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"flex gap-3\">\n\t\t\t\t\t\t\t\t<span class=\"description\">{{ trans('Transactions') }}: </span>\n\t\t\t\t\t\t\t\t<span class=\"heading\">{{ customer.smstransaction_count ?? 0 }}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t\t\t<div class=\"\">\n\t\t\t\t\t\t\t\t\t<i class=\"mr-2\"></i>{{ trans('Join Date: ') }} {{\n\t\t\t\t\t\t\t\t\t\tcustomer.created_at_date }}<br>\n\t\t\t\t\t\t\t\t\t<i class=\"mr-2\"></i>{{ trans('Will Expire: ') }} {{ customer.will_expire\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t</section>\n\t\t\t\t<!-- Left Section End  -->\n\t\t\t\t<!-- Right Section Start  -->\n\t\t\t\t<section class=\"col-span-3\">\n\t\t\t\t\t<div class=\"flex gap-4 h-full flex-wrap\">\n\t\t\t\t\t\t<div class=\"flex-grow\">\n\t\t\t\t\t\t\t<div class=\"card h-full\">\n\t\t\t\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t\t\t\t<small class=\"text-muted font-bold\">{{ trans('Bio') }}</small>\n\t\t\t\t\t\t\t\t\t<p>{{ trans('Name : ') }} {{ customer.name }}</p>\n\t\t\t\t\t\t\t\t\t<p>{{ trans('Email : ') }} {{ customer.email }}</p>\n\t\t\t\t\t\t\t\t\t<p>{{ trans('Phone : ') }} {{ customer.phone }}</p>\n\t\t\t\t\t\t\t\t\t<p>{{ trans('Address : ') }} {{ customer.address }}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"flex-grow\">\n\t\t\t\t\t\t\t<div class=\"card h-full\">\n\t\t\t\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t\t\t\t<small class=\"text-muted font-weight-bold\">{{ trans('Other Info') }}</small>\n\t\t\t\t\t\t\t\t\t<p>{{ trans('Plan:') }} <strong>{{ customer.subscription.title }}</strong></p>\n\t\t\t\t\t\t\t\t\t<p>{{ trans('Plan Expire Date:') }} {{ customer.will_expire }}</p>\n\t\t\t\t\t\t\t\t\t<p>{{ trans('Total Spended:') }} {{ customer.orders_sum_amount }}</p>\n\t\t\t\t\t\t\t\t\t<p>{{ trans('Total Devices:') }} {{ customer.device_count }}</p>\n\t\t\t\t\t\t\t\t\t<p>{{ trans('Total Messages:') }} {{ customer.smstransaction_count }}</p>\n\t\t\t\t\t\t\t\t\t<p>{{ trans('Total Contacts:') }} {{ customer.contact_count }}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<!-- Right Section End -->\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<h5 class=\"mb-2\">{{ trans('Customer Orders') }}</h5>\n\t\t\t\t<div class=\"table-responsive whitespace-nowrap rounded-primary\">\n\t\t\t\t\t<table class=\"table\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th class=\"w-[5%] uppercase\">{{ trans('Order No') }}</th>\n\t\t\t\t\t\t\t\t<th class=\"w-[15%] uppercase\">{{ trans('Plan Name') }}</th>\n\t\t\t\t\t\t\t\t<th class=\"w-[10%] uppercase\">{{ trans('Payment Mode') }}</th>\n\t\t\t\t\t\t\t\t<th class=\"w-[10%] uppercase\">{{ trans('Amount') }}</th>\n\t\t\t\t\t\t\t\t<th class=\"w-[10%] uppercase\">{{ trans('Status') }}</th>\n\t\t\t\t\t\t\t\t<th class=\"w-[10%] uppercase\">{{ trans('Created At') }}</th>\n\t\t\t\t\t\t\t\t<th class=\"w-[5%] !text-right uppercase\">{{ trans('Actions') }}</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr v-for=\"order in orders.data \" :key=\"order.id\">\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Link :href=\"'/admin/order/' + order.id\"\n\t\t\t\t\t\t\t\t\t\tclass=\"text-sm font-medium text-primary-500 transition duration-150 ease-in-out hover:underline\">\n\t\t\t\t\t\t\t\t\t{{ order.invoice_no }}\n\t\t\t\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td> {{ order.plan.title }}</td>\n\t\t\t\t\t\t\t\t<td>{{ order.gateway.name }}</td>\n\t\t\t\t\t\t\t\t<td> {{ order.amount }}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div class=\"badge badge-soft-primary capitalize\">{{ trans(\n\t\t\t\t\t\t\t\t\t\torder.status == 2\n\t\t\t\t\t\t\t\t\t\t\t? \"pending\"\n\t\t\t\t\t\t\t\t\t\t\t: order.status == 1\n\t\t\t\t\t\t\t\t\t\t\t\t? \"approved\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"declined\"\n\t\t\t\t\t\t\t\t\t) }}</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"text-center\">\n\t\t\t\t\t\t\t\t\t{{ order.created_at_diff }}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div class=\"flex justify-center\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"dropdown\" data-placement=\"bottom-start\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"dropdown-toggle\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"dropdown-content w-40\">\n\t\t\t\t\t\t\t\t\t\t\t\t<ul class=\"dropdown-list\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"dropdown-list-item\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link :href=\"'/admin/order/' + order.id\" class=\"dropdown-link\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"h-5 text-slate-400\" data-feather=\"external-link\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>View</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<Alert v-if=\"orders.data.length == 0\" type=\"info\"\n\t\t\t\t\t\t:text=\"trans('Opps you have not created any plan....')\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</div>\n\t</main>\n</template>\n\n<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport trans from '@/Composables/transComposable'\n\ndefineOptions({ layout: AdminLayout })\nconst props = defineProps([\n\t'customer',\n\t'orders',\n\t'buttons',\n\t'segments',\n])\n</script>","<script setup>\nimport sharedComposable from '@/Composables/sharedComposable'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport Alert from '@/Components/Admin/Alert.vue'\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport VueApexCharts from 'vue3-apexcharts'\nimport { router } from '@inertiajs/vue3'\nimport { ref, computed } from 'vue'\nimport moment from 'moment'\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps([\n  'totalOrders',\n  'totalSales',\n  'totalJobs',\n  'totalEmployer',\n  'totalCandidate',\n  'totalAppliedJobs',\n  'totalKYCRequest',\n  'totalJobBookmarks',\n  'mostViewedJob',\n  'mostOrderedPlan',\n  'popularPlans',\n  'recentOrders',\n  'recentJobs',\n  'recentKycRequest',\n  'salesOverview',\n  'request'\n])\nconst { formatCurrency, textExcerpt, pickBy } = sharedComposable()\n\nconst primaryOverview = computed(() => {\n  return [\n    {\n      title: 'Total Orders',\n      value: props.totalOrders,\n      url: route('admin.order.index'),\n      icon: 'bx bx-box',\n      classes: 'bg-primary-500 text-primary-500'\n    },\n    {\n      title: 'Total Sales',\n      value: props.totalSales,\n      url: route('admin.order.index'),\n      icon: 'bx bx-dollar-circle',\n      classes: 'text-success-500 bg-success-500'\n    },\n    {\n      title: 'Total Jobs',\n      value: props.totalJobs,\n      url: route('admin.job.index'),\n      icon: 'bx bxs-receipt',\n      classes: 'text-warning-500 bg-warning-500'\n    },\n    {\n      title: 'Total Employer',\n      value: props.totalEmployer,\n      url: route('admin.companies.index'),\n      icon: 'bx bx-group',\n      classes: 'text-info-500 bg-info-500'\n    },\n    {\n      title: 'Total Candidate',\n      value: props.totalCandidate,\n      url: route('admin.candidates.index'),\n      icon: 'bx bx-user',\n      classes: 'text-sky-500 bg-sky-500'\n    },\n    {\n      title: 'Total Applied Jobs',\n      value: props.totalAppliedJobs,\n      url: route('admin.job.index'),\n      icon: 'bx bx-mail-send',\n      classes: 'text-lime-500 bg-lime-500'\n    },\n    {\n      title: 'Total KYC Request',\n      value: props.totalKYCRequest,\n      url: route('admin.kyc-requests.index'),\n      icon: 'bx bx-id-card',\n      classes: 'text-teal-500 bg-teal-500'\n    },\n    {\n      title: 'Total Job Bookmarks',\n      url: route('admin.job.index'),\n      value: props.totalJobBookmarks,\n      icon: 'bx bx-bookmark-heart',\n      classes: 'text-red-500 bg-red-500'\n    }\n  ]\n})\n\nconst filterForm = ref({\n  job: props.request.job || '',\n  plan: props.request.plan || '',\n  sales: props.request.sales || ''\n})\nconst mostSorts = [\n  { label: 'Today', value: 'today' },\n  { label: 'Month', value: 'month' },\n  { label: 'All', value: '' }\n]\nconst filter = () => {\n  router.get(route('admin.dashboard'), pickBy(filterForm.value), {\n    preserveState: true,\n    replace: true\n  })\n}\nconst salesChart = computed(() => {\n  return {\n    series: [\n      {\n        name: 'Sales',\n        data: props.salesOverview.map((item) => item.sales)\n      }\n    ],\n    chartOptions: {\n      colors: ['#69ae84', '#69ae84', '#69ae84'],\n      chart: {\n        height: 350,\n        type: 'area',\n        toolbar: {\n          show: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'smooth'\n      },\n      xaxis: {\n        type: 'string',\n        categories: props.salesOverview.map((item) => item.date)\n      }\n    }\n  }\n})\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Dashboard')\" />\n\n    <div class=\"space-y-6\">\n      <!-- Overview Section Start -->\n      <section class=\"grid grid-cols-1 gap-6 sm:grid-cols-2 xl:grid-cols-4\">\n        <!-- Product Views  -->\n        <template v-for=\"(item, index) in primaryOverview\" :key=\"index\">\n          <Link :href=\"item.url\">\n            <div class=\"card\">\n              <div class=\"card-body flex items-center gap-4\">\n                <div\n                  class=\"flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-opacity-20\"\n                  :class=\"item.classes\"\n                >\n                  <i class=\"text-3xl\" :class=\"item.icon\"></i>\n                </div>\n                <div class=\"flex flex-1 flex-col gap-1\">\n                  <p class=\"text-sm tracking-wide text-slate-500\">{{ item.title }}</p>\n                  <div class=\"flex flex-wrap items-baseline justify-between gap-2\">\n                    <h4>{{ item.value }}</h4>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Link>\n        </template>\n      </section>\n      <!-- Overview Section End -->\n\n      <!-- Sales Chart  -->\n      <section class=\"grid grid-cols-1 gap-6 md:grid-cols-2 xl:grid-cols-3\">\n        <div class=\"card order-2 col-span-1 md:col-span-2 xl:order-3\">\n          <div class=\"card-body flex h-full flex-col justify-between gap-4\">\n            <div class=\"flex flex-wrap justify-between gap-2\">\n              <h6>{{ trans('Overview Of Sales') }}</h6>\n              <select\n                v-model=\"filterForm.sales\"\n                @change=\"filter\"\n                class=\"select select-xl w-full capitalize md:w-40\"\n              >\n                <option value=\"\" selected>{{ trans('Filter By') }}</option>\n                <option\n                  :value=\"item\"\n                  v-for=\"item in ['day', 'week', 'month', 'year']\"\n                  :key=\"item\"\n                  :selected=\"filterForm.sales === item\"\n                >\n                  {{ item }}\n                </option>\n              </select>\n            </div>\n            <div class=\"min-h-min\">\n              <!-- Sales Location Chart  -->\n              <VueApexCharts\n                type=\"area\"\n                height=\"350\"\n                :options=\"salesChart.chartOptions\"\n                :series=\"salesChart.series\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <!-- Most Ordered Plan  -->\n        <div class=\"order-4 col-span-1 space-y-6\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"flex flex-wrap items-center justify-between\">\n                <h6>{{ trans('Most Ordered Plan') }}</h6>\n                <div class=\"flex items-center gap-2\">\n                  <template v-for=\"(sort, i) in mostSorts\" :key=\"sort.label\">\n                    <button\n                      type=\"button\"\n                      @click=\"\n                        () => {\n                          filterForm.plan = sort.value\n                          filter()\n                        }\n                      \"\n                    >\n                      <span\n                        class=\"text-xs capitalize\"\n                        :class=\"{\n                          'font-medium text-primary-500': filterForm.plan == sort.value\n                        }\"\n                      >\n                        {{ trans(sort.label) }}\n                      </span>\n                    </button>\n                    <span v-if=\"i < 2\" class=\"text-sm text-slate-200 dark:text-slate-600\">|</span>\n                  </template>\n                </div>\n              </div>\n              <div\n                v-if=\"mostOrderedPlan\"\n                class=\"mt-4 flex items-center gap-4 rounded-primary bg-slate-50 p-4 dark:bg-slate-900\"\n              >\n                <Link :href=\"route('admin.plan.index')\">\n                  <div class=\"flex flex-1 flex-col gap-1\">\n                    <h3 class=\"text-sm font-semibold\">{{ mostOrderedPlan.title }}</h3>\n                    <p class=\"text-sm text-slate-500 dark:text-slate-400\">\n                      {{ trans('Price') }}: {{ formatCurrency(mostOrderedPlan.price) }},\n                      {{ mostOrderedPlan.days == 30 ? 'Monthly' : 'Yearly' }},\n                      {{ trans('Total Order') }}:\n                      {{ mostOrderedPlan.orders_count }}\n                    </p>\n                  </div>\n                </Link>\n              </div>\n              <Alert v-else text=\"Nothing found...\" />\n            </div>\n          </div>\n          <!-- Most Viewed Product -->\n          <div class=\"card\">\n            <div class=\"card-body flex flex-col gap-2\">\n              <div class=\"flex flex-wrap items-center justify-between\">\n                <h6>{{ trans('Most Viewed Job') }}</h6>\n                <div class=\"flex items-center gap-2\">\n                  <template v-for=\"(sort, i) in mostSorts\" :key=\"sort.label\">\n                    <button\n                      type=\"button\"\n                      @click=\"\n                        () => {\n                          filterForm.job = sort.value\n                          filter()\n                        }\n                      \"\n                    >\n                      <span\n                        class=\"text-xs\"\n                        :class=\"{\n                          'font-medium text-primary-500': filterForm.job == sort.value\n                        }\"\n                      >\n                        {{ trans(sort.label) }}\n                      </span>\n                    </button>\n                    <span v-if=\"i < 2\" class=\"text-sm text-slate-200 dark:text-slate-600\">|</span>\n                  </template>\n                </div>\n              </div>\n              <template v-if=\"mostViewedJob\">\n                <Link :href=\"route('admin.job.show', mostViewedJob)\">\n                  <div\n                    class=\"flex items-center gap-4 rounded-primary bg-slate-50 p-2 dark:bg-slate-900\"\n                  >\n                    <img\n                      v-lazy=\"\n                        mostViewedJob?.user?.avatar == null\n                          ? `https://ui-avatars.com/api/?name=${mostViewedJob?.user?.name}`\n                          : `${mostViewedJob?.user?.avatar}`\n                      \"\n                      alt=\"product-img\"\n                      class=\"w-16 rounded-primary bg-white p-1 dark:bg-slate-800\"\n                    />\n                    <div class=\"flex flex-1 flex-col gap-1\">\n                      <h3 class=\"text-sm font-semibold\">\n                        {{ mostViewedJob ? textExcerpt(mostViewedJob?.title) : '' }}\n                      </h3>\n                      <p class=\"text-sm text-slate-500 dark:text-slate-400\">\n                        {{ mostViewedJob?.service?.title }}, {{ mostViewedJob?.type }}\n                      </p>\n                      <p class=\"text-xs text-slate-700 dark:text-slate-200\">\n                        {{ trans('By') }} {{ mostViewedJob?.user?.name }}\n                      </p>\n                    </div>\n                  </div>\n                </Link>\n              </template>\n              <Alert v-else text=\"Nothing found...\" />\n            </div>\n          </div>\n        </div>\n      </section>\n      <!-- Store Analytics, Active Users, Sales By Location, Top & Most Viewed Product Section End  -->\n\n      <!-- Top Sellers Section start  -->\n      <section class=\"grid grid-cols-12 place-items-start gap-6\">\n        <div class=\"card col-span-8\">\n          <div class=\"card-body space-y-2\">\n            <h6>{{ trans('Popular Plans') }}</h6>\n            <!-- Seller Table  -->\n            <div\n              v-if=\"popularPlans?.length > 0\"\n              class=\"table-responsive whitespace-nowrap rounded-primary\"\n            >\n              <table class=\"table min-w-[43rem]\">\n                <thead>\n                  <tr>\n                    <th>{{ trans('Plan') }}</th>\n                    <th>{{ trans('Active Users') }}</th>\n                    <th>{{ trans('Sales') }}</th>\n                    <th>{{ trans('Total Amount') }}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"plan in popularPlans\" :key=\"plan.id\">\n                    <td class=\"whitespace-nowrap\">\n                      <Link :href=\"route('admin.plan.index')\">\n                        {{ plan.name }}\n                      </Link>\n                    </td>\n                    <td class=\"whitespace-nowrap\">{{ plan.activeuser }}</td>\n                    <td class=\"whitespace-nowrap\">\n                      <p>{{ plan.orders_count }}</p>\n                    </td>\n                    <td>{{ plan.total_amount }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <Alert v-else text=\"Nothing found...\" />\n          </div>\n        </div>\n        <div class=\"card col-span-4\">\n          <div class=\"card-body flex h-full flex-col\">\n            <!-- Header  -->\n            <h6>{{ trans('Recent Orders') }}</h6>\n\n            <div v-if=\"recentOrders?.length > 0\" class=\"mt-auto divide-y dark:divide-slate-600\">\n              <template v-for=\"order in recentOrders\" :key=\"order.id\">\n                <div class=\"flex items-center gap-4 py-2\">\n                  <div class=\"min-w-12 flex h-12 w-12 items-center justify-center\">\n                    <img\n                      :src=\"order.avatar\"\n                      v-lazy=\"\n                        order.avatar == null\n                          ? `https://ui-avatars.com/api/?name=${order?.name}`\n                          : `${order.avatar}`\n                      \"\n                      class=\"rounded-primary\"\n                      alt=\"avatar\"\n                    />\n                  </div>\n                  <div class=\"flex w-full items-center justify-between\">\n                    <Link :href=\"'/admin/order/' + order.id\">\n                      <div>\n                        <h6 class=\"text-sm font-medium text-slate-600 dark:text-slate-300\">\n                          {{ order.invoice }}\n                        </h6>\n                        <p class=\"text-sm text-slate-400\">{{ order.plan }}</p>\n                        <p class=\"text-xs text-slate-200\">By {{ order.name }}</p>\n                      </div>\n                    </Link>\n\n                    <div>\n                      <h6 class=\"text-sm font-medium text-slate-600 dark:text-slate-300\">\n                        {{ order.amount }}\n                      </h6>\n                      <p class=\"text-sm text-slate-400\">{{ order.created_at }}</p>\n                    </div>\n                  </div>\n                </div>\n              </template>\n            </div>\n            <Alert v-else text=\"Nothing found...\" />\n          </div>\n        </div>\n      </section>\n\n      <!-- Recent Kyc Request -->\n      <section class=\"grid grid-cols-1 place-items-start gap-6 lg:grid-cols-2\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <!-- Header  -->\n            <h6>{{ trans('Recent Kyc Request') }}</h6>\n            <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th>{{ trans('Method') }}</th>\n                    <th>{{ trans('User Name') }}</th>\n                    <th>{{ trans('Status') }}</th>\n                    <th>{{ trans('Note') }}</th>\n                    <th>{{ trans('Documents') }}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"(item, index) in recentKycRequest\" :key=\"index\">\n                    <td>\n                      <Link :href=\"`/admin/kyc-requests/${item.id}`\">\n                        {{ item.method?.title }}\n                      </Link>\n                    </td>\n                    <td class=\"whitespace-nowrap\">\n                      {{ item.user?.name }}\n                    </td>\n                    <td>\n                      <span v-if=\"item.status == 0\" class=\"badge badge-warning\">{{\n                        trans('Pending')\n                      }}</span>\n                      <span v-else-if=\"item.status == 1\" class=\"badge badge-primary\">{{\n                        trans('Approved')\n                      }}</span>\n                      <span v-else-if=\"item.status == 2\" class=\"badge badge-danger\">{{\n                        trans('Rejected')\n                      }}</span>\n                      <span v-else-if=\"item.status == 3\" class=\"badge badge-dark\">{{\n                        trans('Re-Submitted')\n                      }}</span>\n                    </td>\n                    <td>{{ item.note || 'None' }}</td>\n                    <td>{{ item.data?.length || 0 }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        <!-- jobs  -->\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h6>{{ trans('Recent Jobs') }}</h6>\n\n            <!-- jobs Table  -->\n            <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th>{{ trans('Title') }}</th>\n                    <th>{{ trans('Date') }}</th>\n                    <th>{{ trans('Type') }}</th>\n                    <th>{{ trans('Range') }}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"(job, index) in recentJobs\" :key=\"index\">\n                    <td>\n                      <Link :href=\"route('admin.job.show', job)\">\n                        <div class=\"flex gap-2\">\n                          <div class=\"avatar avatar-circle\">\n                            <img\n                              v-lazy=\"\n                                job.user.avatar == null\n                                  ? `https://ui-avatars.com/api/?name=${job.user?.name}`\n                                  : `${job.user.avatar}`\n                              \"\n                              alt=\"avatar-img\"\n                              class=\"avatar-img\"\n                            />\n                          </div>\n                          <div>\n                            <p class=\"text-sm font-medium\">{{ job.title }}</p>\n                            <p class=\"text-xs font-normal text-slate-500\">\n                              {{ job.service?.title }}\n                            </p>\n                          </div>\n                        </div>\n                      </Link>\n                    </td>\n                    <td class=\"whitespace-nowrap\">\n                      {{ moment(job.created_at).format('DD MMM, YYYY') }}\n                    </td>\n                    <td>{{ job.type }}</td>\n                    <td>{{ job.salary_range }} / {{ job.salary_type.charAt(0) }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport Multiselect from \"@vueform/multiselect\";\nimport { useForm } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nimport { computed, ref } from \"vue\";\nimport AdminLayout from \"@/Layouts/Admin.vue\";\ndefineOptions({ layout: AdminLayout });\nconst props = defineProps([\"buttons\", \"segments\", \"categories\", \"shortcodes\"]);\n\nconst types = {\n  companyProfile: \"company\",\n  jobDescription: \"job\",\n};\n\nconst dynamicShortCodes = computed(() => {\n  if (form.type == types.jobDescription) {\n    return [\n      ...props.shortcodes[types.jobDescription],\n      ...props.shortcodes[types.companyProfile],\n    ];\n  }\n\n  return props.shortcodes[types.companyProfile];\n});\n\nconst form = useForm({\n  type: types.companyProfile,\n  body: \"\",\n  categories: [],\n  status: \"active\",\n});\n\nconst submit = () => {\n  form.post(route(\"admin.description-templates.store\"), {\n    onSuccess: () => {\n      notify.success(trans(\"Template has been added successfully\", \"Success\"));\n      form.reset();\n    },\n  });\n};\n\nconst bodyEl = ref(\"\");\nconst addToBody = (code) => {\n  let curPos = bodyEl.value.selectionStart;\n  let text = form.body;\n  form.body = text.slice(0, curPos) + code + text.slice(curPos);\n\n  let focusPosition = curPos + code.length;\n  setTimeout(() => {\n    bodyEl.value.setSelectionRange(focusPosition, focusPosition);\n    bodyEl.value.focus();\n  }, 100);\n};\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('Create Description Template')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n\n    <div class=\"w-2/3 mx-auto card\">\n      <div class=\"card-body\">\n        <h3 class=\"mb-3 card-title\">{{ trans(\"Create New Description Template\") }}</h3>\n\n        <form @submit.prevent=\"submit\">\n          <div class=\"flex gap-1\">\n            <div class=\"w-1/2 mb-3\">\n              <label>{{ trans(\"Description Type\") }}</label>\n              <select class=\"select\" v-model=\"form.type\">\n                <option v-for=\"t in types\" :value=\"t\" :key=\"t\">\n                  {{ t.toUpperCase() }}\n                </option>\n              </select>\n            </div>\n            <div class=\"w-1/2 mb-3\">\n              <label>{{ trans(\"Status\") }}</label>\n              <select class=\"select\" v-model=\"form.status\">\n                <option v-for=\"t in ['active', 'inactive']\" :value=\"t\" :key=\"t\">\n                  {{ t.toUpperCase() }}\n                </option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"w-full mb-3\">\n            <label>{{ trans(\"Categories\") }}</label>\n            <Multiselect\n              class=\"multiselect-dark\"\n              v-model=\"form.categories\"\n              mode=\"tags\"\n              :options=\"categories\"\n              :searchable=\"true\"\n              label=\"title\"\n              trackBy=\"title\"\n              valueProp=\"id\"\n              placeholder=\"Select Categories\"\n            />\n          </div>\n          <div class=\"mb-2\">\n            <label>{{ trans(\"Description Body\") }}</label>\n            <textarea v-model=\"form.body\" ref=\"bodyEl\" class=\"textarea\"></textarea>\n          </div>\n          <label>{{ trans(\"ShortCodes\") }}:</label>\n          <ul class=\"flex flex-wrap items-center gap-1 mb-3\">\n            <li\n              v-for=\"code in dynamicShortCodes\"\n              @click=\"addToBody(code)\"\n              :key=\"code\"\n              class=\"p-1 border rounded\"\n            >\n              {{ code }}\n            </li>\n          </ul>\n          <div class=\"mb-2\">\n            <SpinnerBtn :processing=\"form.processing\" :btn-text=\"trans('Submit')\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport Multiselect from \"@vueform/multiselect\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport { useForm } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nimport { computed, ref } from \"vue\";\ndefineOptions({ layout: AdminLayout });\nconst props = defineProps([\n  \"template\",\n  \"buttons\",\n  \"segments\",\n  \"categories\",\n  \"shortcodes\",\n]);\n\nconst types = {\n  companyProfile: \"company\",\n  jobDescription: \"job\",\n};\n\nconst form = useForm({\n  type: props.template.type ?? types.companyProfile,\n  body: props.template.body ?? \"\",\n  categories: props.template.categories.map((item) => item.id) ?? [],\n  status: props.template.status ?? \"active\",\n});\n\nconst submit = () => {\n  form.put(route(\"admin.description-templates.update\", props.template), {\n    onSuccess: () => {\n      notify.success(trans(\"Template has been updated successfully\", \"Success\"));\n      form.reset();\n    },\n  });\n};\n\nconst dynamicShortCodes = computed(() => {\n  if (form.type == types.jobDescription) {\n    return [\n      ...props.shortcodes[types.jobDescription],\n      ...props.shortcodes[types.companyProfile],\n    ];\n  }\n\n  return props.shortcodes[types.companyProfile];\n});\n\nconst bodyEl = ref();\nconst addToBody = (code) => {\n  let curPos = bodyEl.value.selectionStart;\n  let text = form.body;\n  form.body = text.slice(0, curPos) + code + text.slice(curPos);\n\n  let focusPosition = curPos + code.length;\n  setTimeout(() => {\n    bodyEl.value.setSelectionRange(focusPosition, focusPosition);\n    bodyEl.value.focus();\n  }, 100);\n};\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('Create Description Template')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n\n    <div class=\"w-2/3 mx-auto card\">\n      <div class=\"card-body\">\n        <h3 class=\"mb-3 card-title\">{{ trans(\"Create New Description Template\") }}</h3>\n\n        <form @submit.prevent=\"submit\">\n          <div class=\"flex gap-1\">\n            <div class=\"w-1/2 mb-3\">\n              <label>{{ trans(\"Description Type\") }}</label>\n              <select class=\"select\" v-model=\"form.type\">\n                <option v-for=\"t in types\" :value=\"t\" :key=\"t\">\n                  {{ t.toUpperCase() }}\n                </option>\n              </select>\n            </div>\n            <div class=\"w-1/2 mb-3\">\n              <label>{{ trans(\"Categories\") }}</label>\n              <select class=\"select\" v-model=\"form.status\">\n                <option v-for=\"t in ['active', 'inactive']\" :value=\"t\" :key=\"t\">\n                  {{ t.toUpperCase() }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class=\"w-full mb-3\">\n            <label>{{ trans(\"Status\") }}</label>\n            <Multiselect\n              class=\"multiselect-dark\"\n              v-model=\"form.categories\"\n              mode=\"tags\"\n              :options=\"categories\"\n              :searchable=\"true\"\n              label=\"title\"\n              trackBy=\"title\"\n              valueProp=\"id\"\n              placeholder=\"Select Categories\"\n            />\n          </div>\n          <div class=\"mb-2\">\n            <label>{{ trans(\"Description Body\") }}</label>\n            <textarea v-model=\"form.body\" ref=\"bodyEl\" class=\"textarea\"></textarea>\n          </div>\n          <ul class=\"flex flex-wrap items-center gap-1 mb-3\">\n            <label>{{ trans(\"ShortCodes\") }}:</label>\n            <li\n              v-for=\"code in dynamicShortCodes\"\n              @click=\"addToBody(code)\"\n              :key=\"code\"\n              class=\"p-1 border rounded\"\n            >\n              {{ code }}\n            </li>\n          </ul>\n          <div class=\"mb-2\">\n            <SpinnerBtn :processing=\"form.processing\" :btn-text=\"trans('Submit')\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport NoDataFound from \"@/Components/Admin/NoDataFound.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport Overview from \"@/Components/Admin/OverviewGrid.vue\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\nimport Paginate from '@/Components/Paginate.vue'\nimport { Link } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\n\ndefineOptions({ layout: AdminLayout });\nconst props = defineProps([\n  \"templates\",\n  \"shortcodes\",\n  \"buttons\",\n  \"segments\",\n  \"totalTemplates\",\n  \"activeTemplates\",\n  \"inactiveTemplates\",\n]);\n\nconst { deleteRow, textExcerpt } = sharedComposable();\nconst stats = [\n  { value: props.totalTemplates, title: trans(\"Total Template\"), \n  iconClass: \"bx bx-bar-chart\"\n},\n  {\n    value: props.activeTemplates,\n    title: trans(\"Active Template\"),\n    iconClass: \"bx bx-check-circle\"\n  },\n  {\n    value: props.inactiveTemplates,\n    title: trans(\"Inactive Template\"),\n    iconClass: \"bx bx-x-circle\"\n  },\n];\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment\n      title=\"Description Templates\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n    <div class=\"space-y-6\">\n      <Overview :items=\"stats\" grid=\"3\" />\n\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>{{ trans(\"#\") }}</th>\n            <th>{{ trans(\"Type\") }}</th>\n            <th>{{ trans(\"Body\") }}</th>\n            <th>{{ trans(\"Status\") }}</th>\n            <th>\n              <p class=\"text-right\">{{ trans(\"Action\") }}</p>\n            </th>\n          </tr>\n        </thead>\n        <tbody v-if=\"templates.total\">\n          \n          <tr v-for=\"(template, key) in templates.data\" :key=\"key\">\n            <td>\n              {{ template.id }}\n            </td>\n            <td>\n              <span v-if=\"template.type == 'company'\" class=\"badge badge-primary\">{{\n                trans(\"Business\")\n              }}</span>\n              <span v-if=\"template.type == 'job'\" class=\"badge badge-success\">{{\n                trans(\"Job\")\n              }}</span>\n            </td>\n            <td>\n              {{ textExcerpt(template.body, 50) }}\n            </td>\n            <td>\n              <span v-if=\"template.status == 'active'\" class=\"badge badge-success\">{{\n                trans(\"Active\")\n              }}</span>\n              <span v-if=\"template.status == 'inactive'\" class=\"badge badge-danger\">{{\n                trans(\"Inactive\")\n              }}</span>\n            </td>\n            <td>\n              <div class=\"dropdown\" data-placement=\"bottom-start\">\n                <div class=\"dropdown-toggle\">\n                  <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                </div>\n                <div class=\"w-40 dropdown-content\">\n                  <ul class=\"dropdown-list\">\n                    <li class=\"dropdown-list-item\">\n                      <Link\n                        :href=\"route('admin.description-templates.edit', template)\"\n                        class=\"dropdown-link\"\n                      >\n                        <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                        <span>{{ trans(\"Edit\") }}</span>\n                      </Link>\n                    </li>\n\n                    <li class=\"dropdown-list-item\">\n                      <button\n                        @click=\"\n                          deleteRow(\n                            route('admin.description-templates.destroy', template)\n                          )\n                        \"\n                        class=\"dropdown-link\"\n                      >\n                        <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"></i>\n                        <span>{{ trans(\"Delete\") }}</span>\n                      </button>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n        <NoDataFound v-else :for-table=\"true\" />\n      </table>\n      <Paginate :links=\"templates.links\" />\n    </div>\n  </main>\n</template>\n","<template>\n    <main class=\"container p-4 sm:p-6\">\n        <HeaderSegment :title=\"trans('Dashboard')\" :segments=\"segments\" :buttons=\"buttons\" />\n        <div class=\"space-y-6\">\n            <div class=\"grid grid-cols-1 lg:grid-cols-12\">\n                <div class=\"lg:col-span-5\">\n                    <strong>{{ trans('Application Settings') }}</strong>\n                    <p>{{ trans('Edit you application global settings') }}</p>\n                </div>\n                <div class=\"lg:col-span-7\">\n                    <form @submit.prevent=\"update\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Application Name') }}</label>\n                                    <input type=\"text\" name=\"name\" v-model=\"form.APP_NAME\" required=\"\" class=\"input\">\n                                </div>\n\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Visibility Of Site Error') }}</label>\n                                    <select class=\"select\" name=\"app_debug\" v-model=\"form.APP_DEBUG\">\n                                        <option value=\"true\">{{ trans('Enable') }}</option>\n                                        <option value=\"false\">{{ trans('Disable') }}</option>\n                                    </select>\n                                </div>\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Application Time Zone') }}</label>\n\n                                    <select class=\"select\" name=\"timezone\" v-model=\"form.TIME_ZONE\">\n\n                                        <option v-for=\"timezone, index in tzlist\" :key=\"index\" :value=\"timezone\">{{\n                                            timezone\n                                        }}</option>\n                                    </select>\n                                </div>\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Application Default Language') }}</label>\n\n                                    <select class=\"select\" name=\"default_lang\" v-model=\"form.DEFAULT_LANG\">\n\n                                        <option v-for=\"langauge, langKey in  languages\" :value=\"langKey\">{{ langauge }}\n                                        </option>\n                                    </select>\n                                </div>\n                                <div class=\"mt-3\">\n                                    <SpinnerBtn :processing=\"form.processing\" :btn-text=\"trans('Save Changes')\" />\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </main>\n</template>\n\n<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport notify from \"@/Plugins/Admin/notify\"\nexport default {\n    layout: AdminLayout\n}\n\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nconst props = defineProps(['segments', 'buttons', 'id', 'tzlist', 'languages', 'appName', 'appDebug', 'timeZone', 'default_lang'])\n\nconst form = useForm({\n    APP_NAME: props.appName,\n    APP_DEBUG: props.appDebug,\n    TIME_ZONE: props.timeZone,\n    DEFAULT_LANG: props.default_lang,\n})\n\n\nfunction update() {\n    const url = route('admin.developer-settings.update', props.id)\n    form.put(url, {\n        onSuccess: () => {\n            notify.success(trans('Settings has been updated successfully'))\n        }\n    })\n}\n</script>","\n<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport notify from \"@/Plugins/Admin/notify\"\nexport default {\n    layout: AdminLayout\n}\n\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nconst props = defineProps(['segments', 'buttons', 'id', \n'NEWSLETTER_API_KEY',\n'NEWSLETTER_LIST_ID'\n])\n\nconst form = useForm({\n    NEWSLETTER_API_KEY: props.NEWSLETTER_API_KEY,\n    NEWSLETTER_LIST_ID: props.NEWSLETTER_LIST_ID,\n})\n\n\nfunction update() {\n    const url = route('admin.developer-settings.update', props.id)\n    form.put(url, {\n        onSuccess: () => {\n            notify.success(trans('Settings has been updated successfully'))\n        }\n    })\n}\n</script>\n\n<template>\n    <main class=\"container p-4 sm:p-6\">\n        <HeaderSegment :title=\"trans('Newsletter Developer Settings')\" :segments=\"segments\" :buttons=\"buttons\" />\n        <div class=\"space-y-6\">\n            <div class=\"grid grid-cols-1 lg:grid-cols-12\">\n                <div class=\"lg:col-span-5\">\n                    <strong>{{ trans('Newsletter Developer Settings') }}</strong>\n                    <p>{{ trans('Edit you application Newsletter Api settings') }}</p>\n                </div>\n                <div class=\"lg:col-span-7\">\n                    <form @submit.prevent=\"update\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Newsletter Api Key') }}</label>\n                                    <input type=\"text\" v-model=\"form.NEWSLETTER_API_KEY\" class=\"input\">\n                                </div>\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Newsletter List ID') }}</label>\n                                    <input type=\"text\" v-model=\"form.NEWSLETTER_LIST_ID\" class=\"input\">\n                                </div>\n\n                                <div class=\"mt-3\">\n                                    <SpinnerBtn :processing=\"form.processing\" :btn-text=\"trans('Save Changes')\" />\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </main>\n</template>\n","\n<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport notify from \"@/Plugins/Admin/notify\"\nexport default {\n    layout: AdminLayout\n}\n\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nconst props = defineProps(['segments', 'buttons', 'id', 'OPENAI_API_KEY'])\n\nconst form = useForm({\n    OPENAI_API_KEY: props.OPENAI_API_KEY,\n})\n\n\nfunction update() {\n    const url = route('admin.developer-settings.update', props.id)\n    form.put(url, {\n        onSuccess: () => {\n            notify.success(trans('Settings has been updated successfully'))\n        }\n    })\n}\n</script>\n\n<template>\n    <main class=\"container p-4 sm:p-6\">\n        <HeaderSegment :title=\"trans('OpenAi Api Settings')\" :segments=\"segments\" :buttons=\"buttons\" />\n        <div class=\"space-y-6\">\n            <div class=\"grid grid-cols-1 lg:grid-cols-12\">\n                <div class=\"lg:col-span-5\">\n                    <strong>{{ trans('OpenAi Api Settings') }}</strong>\n                    <p>{{ trans('Edit you application OpenAi Api settings') }}</p>\n                </div>\n                <div class=\"lg:col-span-7\">\n                    <form @submit.prevent=\"update\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('OpenAi Api Key') }}</label>\n                                    <input type=\"text\" v-model=\"form.OPENAI_API_KEY\" class=\"input\">\n                                </div>\n\n                                <div class=\"mt-3\">\n                                    <SpinnerBtn :processing=\"form.processing\" :btn-text=\"trans('Save Changes')\" />\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </main>\n</template>\n","<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport notify from \"@/Plugins/Admin/notify\";\nexport default {\n  layout: AdminLayout,\n};\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport { useForm } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nconst props = defineProps([\n  \"segments\",\n  \"buttons\",\n  \"id\",\n  \"GOOGLE_RECAPTCHA_KEY\",\n  \"GOOGLE_RECAPTCHA_SECRET\",\n]);\n\nconst form = useForm({\n  GOOGLE_RECAPTCHA_KEY: props.GOOGLE_RECAPTCHA_KEY,\n  GOOGLE_RECAPTCHA_SECRET: props.GOOGLE_RECAPTCHA_SECRET\n\n});\n\nfunction update() {\n  const url = route(\"admin.developer-settings.update\", props.id);\n  form.put(url, {\n    onSuccess: () => {\n      notify.success(trans(\"Settings has been updated successfully\"));\n    },\n  });\n}\n</script>\n\n<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('Google Recaptcha (V2) Developer Settings')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n    <div class=\"space-y-6\">\n      <div class=\"grid grid-cols-1 lg:grid-cols-12\">\n        <div class=\"lg:col-span-5\">\n          <strong>{{ trans(\"Google Recaptcha (V2) Developer Settings\") }}</strong>\n          <p>{{ trans(\"Edit you application Google Recaptcha (V2) Api settings\") }}</p>\n        </div>\n        <div class=\"lg:col-span-7\">\n          <form @submit.prevent=\"update\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <label class=\"label\">{{ trans(\"GOOGLE RECAPTCHA KEY\") }}</label>\n                  <input type=\"text\" v-model=\"form.GOOGLE_RECAPTCHA_KEY\" class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label class=\"label\">{{ trans(\"GOOGLE RECAPTCHA SECRET\") }}</label>\n                  <input type=\"text\" v-model=\"form.GOOGLE_RECAPTCHA_SECRET\" class=\"input\" />\n                </div>\n\n                <div class=\"mt-3\">\n                  <SpinnerBtn\n                    :processing=\"form.processing\"\n                    :btn-text=\"trans('Save Changes')\"\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n","<template>\n    <main class=\"container p-4 sm:p-6\">\n\n        <Head title=\"SMTP Settings\" />\n        <HeaderSegment :title=\"trans('SMTP MAIL Settings')\" :segments=\"segments\" :buttons=\"buttons\" />\n        <div class=\"space-y-6\">\n            <div class=\"grid grid-cols-1 lg:grid-cols-12\">\n                <div class=\"lg:col-span-5\">\n                    <strong>{{ trans('SMTP mail Settings') }}</strong>\n                    <p>{{ trans('Edit you smtp settings for mail transaction') }}</p>\n                </div>\n                <div class=\"lg:col-span-7\">\n                    <form @submit.prevent=\"update\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Use Queue Job For Mail Transaction?') }}</label>\n                                    <select name=\"QUEUE_MAIL\" class=\"select\" v-model=\"form.QUEUE_MAIL\">\n                                        <option value=\"true\">{{ trans('Enable') }}</option>\n                                        <option value=\"false\">{{ trans('Disable') }}</option>\n                                    </select>\n                                </div>\n                                <div class=\"from-group row\">\n                                    <label class=\"label\">{{ trans('Mail driver type') }}</label>\n                                    <select name=\"MAIL_DRIVER_TYPE\" v-model=\"form.MAIL_DRIVER_TYPE\" class=\"select\">\n                                        <option value=\"MAIL_MAILER\">{{ trans('MAIL MAILER') }}</option>\n                                        <option value=\"MAIL_DRIVER\">{{ trans('MAIL DRIVER') }}</option>\n                                    </select>\n                                </div>\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Mail Driver') }}</label>\n                                    <select name=\"MAIL_DRIVER\" v-model=\"form.MAIL_DRIVER\" class=\"select\">\n                                        <option value=\"sendmail\">{{ trans('sendmail') }}</option>\n                                        <option value=\"smtp\">{{ trans('smtp') }}</option>\n                                    </select>\n                                </div>\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Mail Host') }}</label>\n                                    <input type=\"text\" name=\"MAIL_HOST\" v-model=\"form.MAIL_HOST\" class=\"input\" required=\"\">\n                                </div>\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Mail Port') }}</label>\n                                    <input type=\"text\" v-model=\"form.MAIL_PORT\" name=\"MAIL_PORT\" class=\"input\" required=\"\">\n                                </div>\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Mail Username') }}</label>\n\n                                    <input type=\"text\" v-model=\"form.MAIL_USERNAME\" name=\"MAIL_USERNAME\" class=\"input\"\n                                        required=\"\">\n                                </div>\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Mail Password') }}</label>\n\n                                    <input type=\"text\" v-model=\"form.MAIL_PASSWORD\" name=\"MAIL_PASSWORD\" class=\"input\"\n                                        required=\"\">\n                                </div>\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Mail Encryption') }}</label>\n\n                                    <select name=\"MAIL_ENCRYPTION\" v-model=\"form.MAIL_ENCRYPTION\" class=\"select\">\n                                        <option value=\"ssl\">{{ trans('SSL') }}</option>\n                                        <option value=\"tls\">{{ trans('TLS') }}</option>\n                                    </select>\n                                </div>\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Mail From Address') }}</label>\n\n                                    <input type=\"email\" v-model=\"form.MAIL_FROM_ADDRESS\" name=\"MAIL_FROM_ADDRESS\"\n                                        class=\"input\" placeholder=\"email\" required=\"\">\n                                </div>\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Mail From Name') }}</label>\n\n                                    <input type=\"text\" v-model=\"form.MAIL_FROM_NAME\" name=\"MAIL_FROM_NAME\" class=\"input\"\n                                        placeholder=\"Website Name\" required=\"\">\n                                </div>\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Incoming Mail') }}</label>\n\n                                    <input type=\"email\" v-model=\"form.MAIL_TO\" name=\"MAIL_TO\" class=\"input\"\n                                        placeholder=\"email\" required=\"\">\n                                </div>\n                                <div class=\"mb-2\">\n                                    <SpinnerBtn :processing=\"form.processing\" :btn-text=\"trans('Save Changes')\" />\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </main>\n</template>\n\n<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport notify from \"@/Plugins/Admin/notify\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nexport default {\n    layout: AdminLayout\n}\n\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { Head, useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nconst props = defineProps([\n    'id',\n    'mailDriver',\n    'segments',\n    'buttons',\n    'QUEUE_MAIL',\n    'MAIL_DRIVER_TYPE',\n    'MAIL_HOST',\n    'MAIL_PORT',\n    'MAIL_USERNAME',\n    'MAIL_PASSWORD',\n    'MAIL_ENCRYPTION',\n    'MAIL_FROM_ADDRESS',\n    'MAIL_FROM_NAME',\n    'MAIL_TO'\n])\n\n\nconst form = useForm({\n    QUEUE_MAIL: props.QUEUE_MAIL,\n    MAIL_DRIVER_TYPE: props.MAIL_DRIVER_TYPE,\n    MAIL_DRIVER: props.mailDriver,\n    MAIL_HOST: props.MAIL_HOST,\n    MAIL_PORT: props.MAIL_PORT,\n    MAIL_USERNAME: props.MAIL_USERNAME,\n    MAIL_PASSWORD: props.MAIL_PASSWORD,\n    MAIL_ENCRYPTION: props.MAIL_ENCRYPTION,\n    MAIL_FROM_ADDRESS: props.MAIL_FROM_ADDRESS,\n    MAIL_FROM_NAME: props.MAIL_FROM_NAME,\n    MAIL_TO: props.MAIL_TO\n})\n\n\nfunction update() {\n    const url = route('admin.developer-settings.update', props.id)\n    form.put(url, {\n        onSuccess: () => {\n            notify.success(trans('Settings has been updated successfully'))\n        }\n    })\n}\n\n\n</script>","<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport notify from \"@/Plugins/Admin/notify\";\nexport default {\n  layout: AdminLayout,\n};\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport { useForm } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nconst props = defineProps([\n  \"segments\",\n  \"buttons\",\n  \"id\",\n  \"GOOGLE_CLIENT_ID\",\n  \"GOOGLE_CLIENT_SECRET\",\n  \"GOOGLE_REDIRECT_URL\",\n  \"FACEBOOK_CLIENT_ID\",\n  \"FACEBOOK_CLIENT_SECRET\",\n  \"FACEBOOK_REDIRECT_URL\",\n]);\n\nconst form = useForm({\n  GOOGLE_CLIENT_ID: props.GOOGLE_CLIENT_ID,\n  GOOGLE_CLIENT_SECRET: props.GOOGLE_CLIENT_SECRET,\n  GOOGLE_REDIRECT_URL: props.GOOGLE_REDIRECT_URL,\n  FACEBOOK_CLIENT_ID: props.FACEBOOK_CLIENT_ID,\n  FACEBOOK_CLIENT_SECRET: props.FACEBOOK_CLIENT_SECRET,\n  FACEBOOK_REDIRECT_URL: props.FACEBOOK_REDIRECT_URL,\n});\n\nfunction update() {\n  const url = route(\"admin.developer-settings.update\", props.id);\n  form.put(url, {\n    onSuccess: () => {\n      notify.success(trans(\"Settings has been updated successfully\"));\n    },\n  });\n}\n</script>\n\n<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('Social Login Developer Settings')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n    <div class=\"space-y-6\">\n      <div class=\"grid grid-cols-1 lg:grid-cols-12\">\n        <div class=\"lg:col-span-5\">\n          <strong>{{ trans(\"Social Login Developer Settings\") }}</strong>\n          <p>{{ trans(\"Edit you application Social Login Api settings\") }}</p>\n        </div>\n        <div class=\"lg:col-span-7\">\n          <form @submit.prevent=\"update\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6>Google Api</h6>\n                <div class=\"mb-2\">\n                  <label class=\"label\">{{ trans(\"Google Client ID\") }}</label>\n                  <input type=\"text\" v-model=\"form.GOOGLE_CLIENT_ID\" class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label class=\"label\">{{ trans(\"Google Client Secret\") }}</label>\n                  <input type=\"text\" v-model=\"form.GOOGLE_CLIENT_SECRET\" class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label class=\"label\">{{ trans(\"Google Redirect Url\") }}</label>\n                 \n                  <input type=\"text\" :value=\"GOOGLE_REDIRECT_URL\" disabled class=\"input\" />\n                </div>\n\n                <div class=\"mt-3\">\n                  <SpinnerBtn\n                    :processing=\"form.processing\"\n                    :btn-text=\"trans('Save Changes')\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"mt-5 card\">\n              <div class=\"card-body\">\n                <h6>Facebook Graph Api</h6>\n                <div class=\"mb-2\">\n                  <label class=\"label\">{{ trans(\"Facebook Client Id\") }}</label>\n                  <input type=\"text\" v-model=\"form.FACEBOOK_CLIENT_ID\" class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label class=\"label\">{{ trans(\"Facebook Client Secret\") }}</label>\n                  <input\n                    type=\"text\"\n                    v-model=\"form.FACEBOOK_CLIENT_SECRET\"\n                    class=\"input\"\n                  />\n                </div>\n                <div class=\"mb-2\">\n                  <label class=\"label\">{{ trans(\"Facebook Redirect Url\") }}</label>\n                  <input type=\"text\" :value=\"FACEBOOK_REDIRECT_URL\" disabled class=\"input\" />\n                </div>\n\n                <div class=\"mt-3\">\n                  <SpinnerBtn\n                    :processing=\"form.processing\"\n                    :btn-text=\"trans('Save Changes')\"\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n","<template>\n    <main class=\"container p-4 sm:p-6\">\n\n        <Head title=\"Storage\" />\n        <HeaderSegment :title=\"trans('Storage Settings')\" :segments=\"segments\" :buttons=\"buttons\" />\n        <div class=\"space-y-6\">\n            <div class=\"grid grid-cols-1 lg:grid-cols-12\">\n                <div class=\"lg:col-span-5\">\n                    <strong>{{ trans('Application Storage Settings') }}</strong>\n                    <p>{{ trans('Edit you storage settings for store uploaded files') }}</p>\n                </div>\n                <div class=\"lg:col-span-7\">\n                    <form @submit.prevent=\"update\">\n\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Storage Upload Mode') }}</label>\n                                    <select class=\"select\" v-model=\"form.FILESYSTEM_DISK\" name=\"FILESYSTEM_DISK\"\n                                        id=\"disk-method\">\n                                        <option value=\"public\">{{ trans('Own server (Uploads folder)') }}</option>\n                                        <option value=\"wasabi\">{{ trans('Wasabi') }}</option>\n                                    </select>\n                                </div>\n\n                                <div v-if=\"form.FILESYSTEM_DISK != 'public'\">\n                                    <div class=\"mb-2\">\n                                        <label class=\"label\">{{ trans('Wasabi Access Key Id') }}</label>\n                                        <input type=\"text\" name=\"WAS_ACCESS_KEY_ID\" class=\"input\"\n                                            v-model=\"form.WAS_ACCESS_KEY_ID\">\n                                    </div>\n                                    <div class=\"mb-2\">\n                                        <label class=\"label\">{{ trans('Wasabi Secret Access Key') }}</label>\n                                        <input type=\"text\" name=\"SECRET_ACCESS_KEY\" class=\"input\"\n                                            v-model=\"form.SECRET_ACCESS_KEY\">\n                                    </div>\n                                    <div class=\"mb-2\">\n                                        <label class=\"label\">{{ trans('Wasabi Default Region') }}</label>\n                                        <input type=\"text\" name=\"WAS_DEFAULT_REGION\" class=\"input\"\n                                            v-model=\"form.WAS_DEFAULT_REGION\">\n                                    </div>\n                                    <div class=\"mb-2\">\n                                        <label class=\"label\">{{ trans('Wasabi Bucket Name') }}</label>\n                                        <input type=\"text\" name=\"WAS_BUCKET\" class=\"input\" v-model=\"form.WAS_BUCKET\">\n                                    </div>\n                                    <div class=\"mb-2\">\n                                        <label class=\"label\">{{ trans('Wasabi Endpoint') }}</label>\n                                        <input type=\"text\" name=\"WAS_ENDPOINT\" class=\"input\" v-model=\"form.WAS_ENDPOINT\">\n                                    </div>\n                                </div>\n\n                                <div class=\"mb-2\">\n                                    <div class=\"\">\n                                        <SpinnerBtn :processing=\"form.processing\" :btn-text=\"trans('Save Changes')\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </main>\n</template>\n\n<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport notify from \"@/Plugins/Admin/notify\"\nexport default {\n    layout: AdminLayout\n}\n\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { Head, useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\n\nconst props = defineProps([\n    'id',\n    'FILESYSTEM_DISK',\n    'WAS_ACCESS_KEY_ID',\n    'SECRET_ACCESS_KEY',\n    'WAS_DEFAULT_REGION',\n    'WAS_BUCKET',\n    'WAS_ENDPOINT',\n    'segments',\n    'buttons'\n])\n\nconst form = useForm({\n    FILESYSTEM_DISK: props.FILESYSTEM_DISK,\n    WAS_ACCESS_KEY_ID: props.WAS_ACCESS_KEY_ID,\n    SECRET_ACCESS_KEY: props.SECRET_ACCESS_KEY,\n    WAS_DEFAULT_REGION: props.WAS_DEFAULT_REGION,\n    WAS_BUCKET: props.WAS_BUCKET,\n    WAS_ENDPOINT: props.WAS_ENDPOINT,\n})\n\nfunction update() {\n    const url = route('admin.developer-settings.update', props.id)\n    form.put(url, {\n        onSuccess: () => {\n            notify.success(trans('Settings has been updated successfully'))\n        }\n    })\n}\n\n</script>","\n<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport notify from \"@/Plugins/Admin/notify\"\nexport default {\n    layout: AdminLayout\n}\n\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nconst props = defineProps(['segments', 'buttons', 'id',\n 'KYC_MUST_VERIFIED',\n 'EMAIL_MUST_VERIFIED'\n])\n\nconst form = useForm({\n    KYC_MUST_VERIFIED: props.KYC_MUST_VERIFIED,\n    EMAIL_MUST_VERIFIED: props.EMAIL_MUST_VERIFIED,\n})\n\n\nfunction update() {\n    const url = route('admin.developer-settings.update', props.id)\n    form.put(url, {\n        onSuccess: () => {\n            notify.success(trans('Settings has been updated successfully'))\n        }\n    })\n}\n</script>\n\n<template>\n    <main class=\"container p-4 sm:p-6\">\n        <HeaderSegment :title=\"trans('Verification Settings')\" :segments=\"segments\" :buttons=\"buttons\" />\n        <div class=\"space-y-6\">\n            <div class=\"grid grid-cols-1 lg:grid-cols-12\">\n                <div class=\"lg:col-span-5\">\n                    <strong>{{ trans('Verification Settings') }}</strong>\n                    <p>{{ trans('Edit you application user verification settings') }}</p>\n                </div>\n                <div class=\"lg:col-span-7\">\n                    <form @submit.prevent=\"update\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('KYC Verification') }}</label>\n                                    <select class=\"select\" v-model=\"form.KYC_MUST_VERIFIED\">\n                                    <option value=\"true\">{{ trans('Enable') }}</option>\n                                    <option value=\"false\">{{ trans('Disable') }}</option>\n                                    </select>\n                                </div>\n                                <div class=\"mb-2\">\n                                    <label class=\"label\">{{ trans('Email Verification') }}</label>\n                                    <select class=\"select\" v-model=\"form.EMAIL_MUST_VERIFIED\">\n                                    <option value=\"true\">{{ trans('Enable') }}</option>\n                                    <option value=\"false\">{{ trans('Disable') }}</option>\n                                    </select>\n                                </div>\n\n                                <div class=\"mt-3\">\n                                    <SpinnerBtn :processing=\"form.processing\" :btn-text=\"trans('Save Changes')\" />\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </main>\n</template>\n","<script setup>\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm } from '@inertiajs/vue3'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport notify from '@/Plugins/Admin/notify'\nimport drawer from '@/Plugins/Admin/drawer'\nimport trans from '@/Composables/transComposable'\nimport { onMounted, ref } from 'vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport AdminLayout from '@/Layouts/Admin.vue'\n\ndefineOptions({ layout: AdminLayout })\n\nconst { deleteRow } = sharedComposable()\n\nonMounted(() => {\n  drawer.init()\n})\n\nconst props = defineProps(['expertLevels', 'buttons', 'segments'])\n\nconst form = useForm({\n  title: ''\n})\n\nconst editingItem = ref({})\n\nconst editForm = useForm({\n  title: ''\n})\n\nconst storeExpertLevel = () => {\n  form.post(route('admin.expert-levels.store'), {\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('ExpertLevel has been added successfully'))\n      drawer.of('#addNewExpertLevelDrawer').hide()\n    }\n  })\n}\n\nconst setEditDrawerForm = expertLevel => {\n  editingItem.value = expertLevel\n  editForm.title = expertLevel.title\n  drawer.of('#editExpertLevelDrawer').show()\n}\n\nconst updateExpertLevel = () => {\n  let updateRoute = route('admin.expert-levels.update', editingItem.value)\n  editForm.put(updateRoute, {\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('ExpertLevel has been updated successfully'))\n      drawer.of('#editExpertLevelDrawer').hide()\n    }\n  })\n}\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Expert Level\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>{{ trans('Title') }}</th>\n              <th>\n                <p class=\"text-right\">{{ trans('Action') }}</p>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(expertLevel, key) in expertLevels\" :key=\"key\">\n              <td>\n                {{ key + 1 }}\n              </td>\n              <td>\n                {{ expertLevel.title }}\n              </td>\n\n              <td class=\"flex justify-end\">\n                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                  <div class=\"dropdown-toggle\">\n                    <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                  </div>\n                  <div class=\"w-40 dropdown-content\">\n                    <ul class=\"dropdown-list\">\n                      <li class=\"dropdown-list-item\">\n                        <button\n                         \n                          @click=\"setEditDrawerForm(expertLevel)\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans('Edit') }}</span>\n                        </button>\n                      </li>\n                      <li class=\"dropdown-list-item\">\n                        <button\n                          @click=\"deleteRow(route('admin.expert-levels.destroy', expertLevel))\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"></i>\n                          <span>{{ trans('Delete') }}</span>\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </main>\n\n  <div id=\"addNewExpertLevelDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeExpertLevel()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Add New ExpertLevel') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans('Title') }}</label>\n          <input\n            v-model=\"form.title\"\n            type=\"text\"\n            class=\"input\"\n            required\n            placeholder=\"Expert, Intermediate, Beginner\"\n          />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex gap-1\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"form.processing\"\n            :btn-text=\"trans('Create')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"editExpertLevelDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateExpertLevel()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Edit ExpertLevel') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans('Title') }}</label>\n          <input\n            v-model=\"editForm.title\"\n            type=\"text\"\n            class=\"input\"\n            required\n            placeholder=\"Expert, Intermediate, Beginner\"\n          />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex gap-1\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"btn btn-primary w-full\"\n            :processing=\"editForm.processing\"\n            :btn-text=\"trans('Update')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('Frequently asked questions')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n    <div class=\"space-y-6\">\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans(\"Question\") }}</th>\n              <th>{{ trans(\"Answer\") }}</th>\n              <th class=\"text-right\">{{ trans(\"Category\") }}</th>\n              <th class=\"text-right\">{{ trans(\"Language\") }}</th>\n              <th class=\"flex justify-end\">{{ trans('Action') }}</th>\n            </tr>\n          </thead>\n          <tbody v-if=\"faqs.total\">\n            <tr v-for=\"faq in faqs.data\" :key=\"faq.id\">\n              <td class=\"text-left\">\n                {{ textExcerpt(faq.title, 20) }}\n              </td>\n              <td class=\"text-left\">\n                {{ textExcerpt(faq.excerpt.value, 70) }}\n              </td>\n              <td class=\"text-left\">\n                {{ textExcerpt(faq.faq_categories[0]?.title || \"\", 70) }}\n              </td>\n              <td class=\"text-right\">\n                {{ faq.lang }}\n              </td>\n              <td class=\"flex justify-end\">\n                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                  <div class=\"dropdown-toggle\">\n                    <i\n                      class=\"w-6 text-slate-400\"\n                      data-feather=\"more-horizontal\"\n                    ></i>\n                  </div>\n                  <div class=\"dropdown-content w-40\">\n                    <ul class=\"dropdown-list\">\n                      <li class=\"dropdown-list-item\">\n                        <button\n                          type=\"button\"\n                          @click=\"openEditFaqDrawer(faq)\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans(\"Edit\") }}</span>\n                        </button>\n                      </li>\n\n                      <li class=\"dropdown-list-item\">\n                        <button\n                          class=\"dropdown-link\"\n                          @click=\"deleteRow('/admin/faq/' + faq.id)\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                            >{{ trans(\"Remove\") }}></i\n                          >\n                          <span>{{ trans(\"Delete\") }}</span>\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n      </div>\n\n      <div class=\"card-footer py-4\">\n        <Paginate :links=\"faqs.links\" />\n      </div>\n    </div>\n  </main>\n\n  <div id=\"addNewFaqDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeFaq()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Add New Faq\") }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Question\") }}</label>\n          <input\n            type=\"text\"\n            v-model=\"createFrom.question\"\n            maxlength=\"150\"\n            class=\"input\"\n            required=\"\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Answer\") }}</label>\n          <textarea\n            class=\"textarea h-100\"\n            maxlength=\"500\"\n            v-model=\"createFrom.answer\"\n            required=\"\"\n          ></textarea>\n        </div>\n\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Select Category\") }}</label>\n          <select\n            class=\"select\"\n            name=\"category\"\n            v-model=\"createFrom.categories\"\n            required\n          >\n            <option\n              v-for=\"category in categories\"\n              :key=\"category.id\"\n              :value=\"category.id\"\n            >\n              {{ category.title }}\n            </option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Select Language\") }}</label>\n          <select\n            class=\"select\"\n            name=\"language\"\n            required=\"\"\n            v-model=\"createFrom.language\"\n          >\n            <option\n              v-for=\"(language, languageKey) in languages\"\n              :key=\"language.key\"\n              :value=\"languageKey\"\n            >\n              {{ language }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"createFrom.processing\"\n            :btn-text=\"trans('Create')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"editFaqDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateFaq()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Edit Faq\") }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Question\") }}</label>\n          <input\n            type=\"text\"\n            name=\"question\"\n            v-model=\"editForm.question\"\n            maxlength=\"150\"\n            class=\"input\"\n            id=\"question\"\n            required=\"\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Answer\") }}</label>\n          <textarea\n            class=\"textarea h-100\"\n            v-model=\"editForm.answer\"\n            maxlength=\"500\"\n            name=\"answer\"\n            required=\"\"\n            id=\"answer\"\n          ></textarea>\n        </div>\n\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Select Categories\") }}</label>\n          <select\n            class=\"select\"\n            name=\"position\"\n            v-model=\"editForm.categories\"\n            id=\"position\"\n            required\n          >\n            <option\n              v-for=\"category in categories\"\n              :key=\"category.id\"\n              :value=\"category.id\"\n              :selected=\"category.id == editForm.categories\"\n            >\n              {{ category.title }}\n            </option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Select Language\") }}</label>\n          <select\n            class=\"select\"\n            name=\"language\"\n            required=\"\"\n            v-model=\"editForm.language\"\n          >\n            <option\n              v-for=\"(language, languageKey) in languages\"\n              :key=\"language.key\"\n              :value=\"languageKey\"\n            >\n              {{ language }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"editForm.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport notify from \"@/Plugins/Admin/notify\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport { onMounted } from \"vue\"\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { useForm, router } from \"@inertiajs/vue3\"\nimport trans from '@/Composables/transComposable'\nimport Paginate from \"@/Components/Paginate.vue\"\nimport sharedComposable from \"@/Composables/sharedComposable\"\nimport drawer from \"@/Plugins/Admin/drawer\"\nimport NoDataFound from \"@/Components/Admin/NoDataFound.vue\"\n\nexport default {\n  layout: AdminLayout\n}\n</script>\n\n<script setup>\nonMounted(() => {\n  drawer.init()\n})\n\nconst props = defineProps([\n  \"segments\",\n  \"buttons\",\n  \"faqs\",\n  \"languages\",\n  \"categories\"\n])\nconst { textExcerpt, deleteRow } = sharedComposable()\n\nconst createFrom = useForm({\n  question: null,\n  answer: null,\n  categories: null,\n  language: null\n})\n\nconst editForm = useForm({\n  question: null,\n  answer: null,\n  categories: null,\n  language: null,\n  id: null\n})\n\nfunction openEditFaqDrawer(faq) {\n  editForm.question = faq.title\n  editForm.answer = faq.excerpt.value\n  editForm.categories = faq.faq_categories[0]?.id || null\n  editForm.language = faq.lang\n  editForm.id = faq.id\n  drawer.of(\"#editFaqDrawer\").show()\n}\n\nconst storeFaq = () => {\n  createFrom.post(route(\"admin.faq.store\"), {\n    onSuccess: () => {\n      createFrom.reset()\n      notify.success(trans(\"Faq has been added successfully\"))\n      drawer.of(\"#addNewFaqDrawer\").hide()\n    }\n  })\n}\n\nconst updateFaq = () => {\n  router.patch(route(\"admin.faq.update\", editForm.id), editForm, {\n    onSuccess: () => {\n      editForm.value = {}\n      notify.success(trans(\"Faq has been updated successfully\"))\n      drawer.of(\"#editFaqDrawer\").hide()\n    }\n  })\n}\n</script>\n","<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport { Link, useForm, router } from \"@inertiajs/vue3\";\nimport Paginate from \"@/Components/Paginate.vue\";\nimport moment from \"moment\";\nimport { ref } from \"vue\";\nimport trans from '@/Composables/transComposable';\nimport sharedComposable from \"@/Composables/sharedComposable\";\nimport Overview from \"@/Components/Admin/OverviewGrid.vue\";\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport drawer from \"@/Plugins/Admin/drawer\";\nimport { onMounted, computed } from \"vue\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport NoDataFound from \"@/Components/Admin/NoDataFound.vue\";\n\ndefineOptions({ layout: AdminLayout });\nconst { deleteRow } = sharedComposable();\n\nonMounted(() => {\n  drawer.init();\n});\n\nconst props = defineProps([\n  \"categories\",\n  \"totalCategories\",\n  \"activeCategories\",\n  \"inActiveCategories\",\n  \"languages\",\n  \"buttons\",\n  \"segments\",\n]);\n\nconst stats = computed(() => {\n  return [\n    {\n      value: props.totalCategories,\n      title: trans(\"Total Categories\"),\n      iconClass: \"bx bx-bar-chart\"\n    },\n    {\n      value: props.activeCategories,\n      title: trans(\"Active Categories\"),\n      iconClass: \"bx bx-check-circle\"\n    },\n    {\n      value: props.inActiveCategories,\n      title: trans(\"Inactive Categories\"),\n      iconClass: \"bx bx-x-circle\"\n    },\n  ];\n});\n\nconst categoryForm = useForm({\n  title: \"\",\n  status: \"active\",\n  language: \"\",\n});\n\nconst editForm = ref({});\n\nconst storeCategory = () => {\n  categoryForm.post(route(\"admin.faq-category.store\"), {\n    onSuccess: () => {\n      categoryForm.reset();\n      notify.success(trans(\"Category has been added successfully\"));\n      drawer.of(\"#addNewCategoryDrawer\").hide();\n    },\n  });\n};\n\nconst openEditCategoryDrawer = (category) => {\n  editForm.value = { ...category };\n  drawer.of(\"#editCategoryDrawer\").show();\n};\n\nconst updateCategory = () => {\n  router.patch(route(\"admin.faq-category.update\", editForm.value.id), editForm.value, {\n    onSuccess: () => {\n      editForm.value = {};\n      notify.success(trans(\"Category has been updated successfully\"));\n      drawer.of(\"#editCategoryDrawer\").hide();\n    },\n  });\n};\n</script>\n\n<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment title=\"Categories\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"stats\" grid=\"3\" />\n\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"\">{{ trans(\"Name\") }}</th>\n              <th class=\"\">{{ trans(\"Slug\") }}</th>\n              <th class=\"text-center\">{{ trans(\"Language\") }}</th>\n              <th class=\"\">{{ trans(\"Status\") }}</th>\n              <th class=\"\">{{ trans(\"Created At\") }}</th>\n              <th class=\"flex justify-end\">{{ trans(\"Action\") }}</th>\n            </tr>\n          </thead>\n\n          <tbody v-if=\"categories.total\">\n            <tr v-for=\"category in categories.data\" :key=\"category.id\">\n              \n              <td class=\"text-left\">\n                {{ category.title }}\n              </td>\n              <td class=\"text-left\">\n                {{ category.slug }}\n              </td>\n              <td class=\"text-center\">\n                {{ category.lang }}\n              </td>\n              <td class=\"text-left\">\n                <span\n                  class=\"badge\"\n                  :class=\"category.status == 1 ? 'badge-success' : 'badge-danger'\"\n                >\n                  {{ category.status == 1 ? trans(\"Active\") : trans(\"Draft\") }}\n                </span>\n              </td>\n              <td>\n                {{ moment(category.created_at).format(\"D-MMM-Y\") }}\n              </td>\n              <td>\n                <div class=\"text-right\">\n                  <div class=\"dropdown\" data-placement=\"bottom-start\">\n                    <div class=\"dropdown-toggle\">\n                      <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                    </div>\n                    <div class=\"w-40 dropdown-content\">\n                      <ul class=\"dropdown-list\">\n                        <li class=\"dropdown-list-item\">\n                          <button\n                            @click=\"openEditCategoryDrawer(category)\"\n                            class=\"dropdown-link\"\n                          >\n                            <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                            <span>{{ trans(\"Edit\") }}</span>\n                          </button>\n                        </li>\n\n                        <li class=\"dropdown-list-item\">\n                          <Link\n                            as=\"button\"\n                            class=\"dropdown-link\"\n                            @click=\"deleteRow('/admin/category/' + category.id)\"\n                          >\n                            <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                              >{{ trans(\"Remove\") }}></i\n                            >\n                            <span>{{ trans(\"Delete\") }}</span>\n                          </Link>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n      </div>\n      <Paginate :links=\"categories.links\" />\n    </div>\n  </main>\n\n  <div id=\"addNewCategoryDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeCategory()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Add New Category\") }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Title\") }}</label>\n          <input\n            v-model=\"categoryForm.title\"\n            type=\"text\"\n            name=\"title\"\n            class=\"input\"\n            required\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Status\") }}</label>\n          <select required v-model=\"categoryForm.status\" class=\"select\" name=\"status\">\n            <option value=\"1\">{{ trans(\"Active\") }}</option>\n            <option value=\"0\">{{ trans(\"Deactive\") }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Language\") }}</label>\n          <select required v-model=\"categoryForm.language\" class=\"select\" name=\"language\">\n            <template v-for=\"(language, key) in languages\" :key=\"key\">\n              <option :value=\"key\">{{ language }}</option>\n            </template>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"categoryForm.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"editCategoryDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateCategory()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Edit Category\") }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Title\") }}</label>\n          <input\n            v-model=\"editForm.title\"\n            type=\"text\"\n            name=\"title\"\n            class=\"input\"\n            required\n          />\n        </div>\n\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Status\") }}</label>\n          <select v-model=\"editForm.status\" class=\"select\" name=\"status\">\n            <option value=\"1\">{{ trans(\"Active\") }}</option>\n            <option value=\"0\">{{ trans(\"Deactive\") }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Language\") }}</label>\n          <select v-model=\"editForm.lang\" class=\"select\" name=\"language\">\n            <template v-for=\"(language, key) in languages\" :key=\"key\">\n              <option :value=\"key\">{{ language }}</option>\n            </template>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"editForm.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n","<template>\n\t<main class=\"container flex-grow p-4 sm:p-6\">\n\t\t<HeaderSegment :title=\"trans('Create Feature')\" :segments=\"segments\" :buttons=\"buttons\" />\n\t\t<div class=\"space-y-6\">\n\t\t\t<form @submit.prevent=\"create\" class=\"ajaxform_instant_reload\" enctype=\"multipart/form-data\">\n\t\t\t\t<div class=\"grid grid-cols-5\">\n\t\t\t\t\t<div class=\"col-span-2\">\n\t\t\t\t\t\t<strong>{{ trans('Create a features post') }}</strong>\n\t\t\t\t\t\t<p>{{ trans('Add your features details and necessary information from here') }}</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-span-3\">\n\t\t\t\t\t\t<div class=\"card\">\n\t\t\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t\t\t<div class=\"mb-2\">\n\t\t\t\t\t\t\t\t\t<label class=\"\">{{ trans('Features Title') }}</label>\n\t\t\t\t\t\t\t\t\t<div class=\"\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" v-model=\"form.title\" name=\"title\" required=\"\" class=\"input\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback text-red-600\" v-if=\"form.errors.title\">\n\t\t\t\t\t\t\t\t\t\t\t{{ form.errors.title }}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mt-2\">\n\t\t\t\t\t\t\t\t\t<label class=\"\">{{ trans('Preview Image') }}</label>\n\t\t\t\t\t\t\t\t\t<div class=\"\">\n\t\t\t\t\t\t\t\t\t\t<input @input=\"(e) => (form.preview_image = e.target.files[0])\" type=\"file\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"input\" required=\"\" name=\"preview_image\" accept=\"image/*\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback text-red-600\" v-if=\"form.errors.preview_image\">\n\t\t\t\t\t\t\t\t\t\t\t{{ form.errors.preview_image }}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mt-2\">\n\t\t\t\t\t\t\t\t\t<label class=\"\">{{ trans('Banner Image') }}</label>\n\t\t\t\t\t\t\t\t\t<div class=\"\">\n\t\t\t\t\t\t\t\t\t\t<input @input=\"(e) => (form.banner_image = e.target.files[0])\" type=\"file\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"input\" required=\"\" name=\"banner_image\" accept=\"image/*\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback text-red-600\" v-if=\"form.errors.banner_image\">\n\t\t\t\t\t\t\t\t\t\t\t{{ form.errors.banner_image }}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mt-2\">\n\t\t\t\t\t\t\t\t\t<label class=\"\">{{ trans('Short Description') }}</label>\n\t\t\t\t\t\t\t\t\t<div class=\"\">\n\t\t\t\t\t\t\t\t\t\t<textarea v-model=\"form.description\" name=\"description\" required=\"\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"textarea h-100\" maxlength=\"500\"></textarea>\n\t\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback text-red-600\" v-if=\"form.errors.description\">\n\t\t\t\t\t\t\t\t\t\t\t{{ form.errors.description }}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mt-3\">\n\t\t\t\t\t\t\t\t\t<label class=\"\">{{ trans('Main Description') }}</label>\n\t\t\t\t\t\t\t\t\t<div class=\"\">\n\t\t\t\t\t\t\t\t\t\t<textarea v-model=\"form.main_description\" name=\"main_description\" required=\"\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"h-200 textarea\"></textarea>\n\t\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback text-red-600\"\n\t\t\t\t\t\t\t\t\t\t\tv-if=\"form.errors.main_description\">\n\t\t\t\t\t\t\t\t\t\t\t{{ form.errors.main_description }}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mt-2\">\n\t\t\t\t\t\t\t\t\t<label class=\"\">{{ trans('Select Langauge') }}</label>\n\t\t\t\t\t\t\t\t\t<div class=\"\">\n\t\t\t\t\t\t\t\t\t\t<select v-model=\"form.language\" name=\"language\" class=\"select\">\n\n\t\t\t\t\t\t\t\t\t\t\t<option v-for=\"language, key in languages\" :key=\"key\" :value=\"key\"> {{ language\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback text-red-600\" v-if=\"form.errors.language\">\n\t\t\t\t\t\t\t\t\t\t\t{{ form.errors.language }}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mt-2\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label for=\"toggle-featured\" class=\"toggle toggle-sm\">\n\t\t\t\t\t\t\t\t\t\t\t<input v-model=\"form.featured\" class=\"toggle-input peer sr-only\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"toggle-featured\" type=\"checkbox\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"toggle-body\"></div>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"label label-md\">{{ trans(\"Make it featured?\") }}</span>\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t\t<label for=\"toggle-status\" class=\"toggle toggle-sm\">\n\t\t\t\t\t\t\t\t\t\t\t<input v-model=\"form.status\" class=\"toggle-input peer sr-only\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"toggle-status\" type=\"checkbox\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"toggle-body\"></div>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"label label-md\">{{ trans(\"Make it publish?\") }}</span>\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mt-5\">\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-primary\">{{ trans('Submit') }}</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t</main>\n</template>\n\n<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport notify from \"@/Plugins/Admin/notify\"\nexport default {\n\tlayout: AdminLayout\n}\n\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { Head, useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\n\nconst props = defineProps(['languages', 'segments', 'buttons'])\n\nconst form = useForm({\n\ttitle: '',\n\tpreview_image: '',\n\tbanner_image: '',\n\tdescription: '',\n\tmain_description: '',\n\tlanguage: '',\n\tfeatured: false,\n\tstatus: false,\n})\n\n\n\nconst create = () => {\n\tconst url = route('admin.features.store')\n\n\tform.post(url, {\n\t\tonSuccess: () => {\n\t\t\t  notify.success(trans('Item has been added successfully'))\n\t\t}\n\t})\n}\n</script>","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Edit Feature')\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <form @submit.prevent=\"update\" class=\"ajaxform_instant_reload\" enctype=\"multipart/form-data\">\n        <div class=\"grid lg:grid-cols-5\">\n          <div class=\"lg:col-span-2\">\n            <strong>{{ trans('Edit a features post') }}</strong>\n            <p>{{ trans('Add your features details and necessary information from here') }}</p>\n          </div>\n\n          <div class=\"lg:col-span-3\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <label class=\"\">{{ trans('Features Title') }}</label>\n                  <div class=\"\">\n                    <input type=\"text\" v-model=\"form.title\" name=\"title\" required=\"\" class=\"input\">\n                    <div class=\"invalid-feedback text-danger d-block\" v-if=\"form.errors.title\">\n                      {{ form.errors.title }}\n                    </div>\n                  </div>\n\n                </div>\n                <div class=\"mb-2  mt-2\">\n                  <label class=\"\">{{ trans('Preview Image') }}</label>\n                  <div class=\"\">\n                    <input @input=\"(e) => (form.preview_image = e.target.files[0])\" type=\"file\" class=\"input\"\n                      name=\"preview_image\" accept=\"image/*\">\n                    <div class=\"invalid-feedback text-danger d-block\" v-if=\"form.errors.preview_image\">\n                      {{ form.errors.preview_image }}\n                    </div>\n                  </div>\n\n                </div>\n                <div class=\"mb-2  mt-2\">\n                  <label class=\"\">{{ trans('Banner Image') }}</label>\n                  <div class=\"\">\n                    <input @input=\"(e) => (form.banner_image = e.target.files[0])\" type=\"file\" class=\"input\"\n                      name=\"banner_image\" accept=\"image/*\">\n                    <div class=\"invalid-feedback text-danger d-block\" v-if=\"form.errors.banner_image\">\n                      {{ form.errors.banner_image }}\n                    </div>\n                  </div>\n\n                </div>\n                <div class=\"mb-2 mt-2\">\n                  <label class=\"\">{{ trans('Short Description') }}</label>\n                  <div class=\"\">\n                    <textarea v-model=\"form.description\" name=\"description\" required=\"\" class=\"textarea h-100\"\n                      maxlength=\"500\"></textarea>\n                    <div class=\"invalid-feedback text-danger d-block\" v-if=\"form.errors.description\">\n                      {{ form.errors.description }}\n                    </div>\n                  </div>\n                </div>\n                <div class=\"mb-2 mt-3\">\n                  <label class=\"\">{{ trans('Main Description') }}</label>\n                  <div class=\"\">\n                    <textarea v-model=\"form.main_description\" name=\"main_description\" required=\"\"\n                      class=\"h-200 textarea\"></textarea>\n                    <div class=\"invalid-feedback text-danger d-block\" v-if=\"form.errors.main_description\">\n                      {{ form.errors.main_description }}\n                    </div>\n                  </div>\n                </div>\n                <div class=\"mb-2  mt-2\">\n                  <label class=\"\">{{ trans('Select Langauge') }}</label>\n                  <div class=\"\">\n                    <select v-model=\"form.language\" name=\"language\" class=\"select\">\n\n                      <option v-for=\"language, key in languages\" :key=\"key\" :value=\"key\"> {{ language }} </option>\n\n                    </select>\n                    <div class=\"invalid-feedback text-danger d-block\" v-if=\"form.errors.language\">\n                      {{ form.errors.language }}\n                    </div>\n                  </div>\n                </div>\n                <div class=\"mb-2  mt-2\">\n\n                  <div>\n                    <label for=\"toggle-featured\" class=\"toggle toggle-sm\">\n                      <input v-model=\"form.featured\" class=\"toggle-input peer sr-only\" id=\"toggle-featured\"\n                        type=\"checkbox\">\n                      <div class=\"toggle-body\"></div>\n                      <span class=\"label label-md\">{{ trans(\"Make it featured?\") }}</span>\n                    </label>\n                  </div>\n\n                  <div>\n\n                    <label for=\"toggle-status\" class=\"toggle toggle-sm\">\n                      <input v-model=\"form.status\" class=\"toggle-input peer sr-only\" id=\"toggle-status\" type=\"checkbox\">\n                      <div class=\"toggle-body\"></div>\n                      <span class=\"label label-md\">{{ trans(\"Make it publish?\") }}</span>\n                    </label>\n                  </div>\n\n                  <div class=\"mb-2 mt-3\">\n                    <button class=\"btn btn-primary\">{{ trans('Submit') }}</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </main>\n</template>\n\n<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport notify from \"@/Plugins/Admin/notify\"\nexport default {\n  layout: AdminLayout\n}\n\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { Head, useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\n\nconst props = defineProps(['languages', 'segments', 'buttons', 'info'])\n\nconst form = useForm({\n  title: props.info.title,\n  preview_image: '',\n  banner_image: '',\n  description: props.info.excerpt.value,\n  main_description: props.info.long_description.value,\n  language: props.info.lang,\n  featured: props.info.featured == 1 ? true : false,\n  status: props.info.status == 1 ? true : false,\n})\n\n\n\nconst update = () => {\n  const url = route('admin.features.update', props.info.id)\n  form.put(url, {\n    onSuccess: () => {\n      notify.success(trans('Item has been updated successfully'))\n    }\n  })\n}\n</script>","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('How it works')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n    <div class=\"space-y-6\">\n      <div class=\"whitespace-normal table-responsive rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"\">{{ trans(\"Title\") }}</th>\n              <th class=\"\">{{ trans(\"Description\") }}</th>\n              <th>\n              <div class=\"text-center\">\n                {{ trans(\"Language\") }}\n                </div>\n              </th>\n              <th>\n                <div class=\"text-right\">\n                  {{ trans(\"Action\") }}\n                </div>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"post in posts.data\" :key=\"post.id\">\n              <td class=\"flex\">\n                <img :src=\"post.preview.value\" class=\"mr-3 avatar rounded-circle\" />\n                <span> {{ textExcerpt(post.title, 30) }}</span>\n              </td>\n              <td class=\"text-left\">\n                {{ textExcerpt(post.excerpt.value, 90) }}\n              </td>\n              <td>\n                <div class=\"text-center\">\n                  {{ post.lang }}\n                  </div>\n              </td>\n              <td>\n                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                  <div class=\"dropdown-toggle\">\n                    <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                  </div>\n                  <div class=\"w-40 dropdown-content\">\n                    <ul class=\"dropdown-list\">\n                      <li class=\"dropdown-list-item\">\n                        <Link\n                          :href=\"route('admin.features.edit', post.id)\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans(\"Edit\") }}</span>\n                        </Link>\n                      </li>\n\n                      <li class=\"dropdown-list-item\">\n                        <Link\n                          as=\"button\"\n                          class=\"dropdown-link\"\n                          @click=\"deleteRow('/admin/features/' + post.id)\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                            >{{ trans(\"Remove\") }}></i\n                          >\n                          <span>{{ trans(\"Delete\") }}</span>\n                        </Link>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div class=\"py-4 card-footer\">\n          <Paginate\n            :links=\"posts.links\"\n            :currentPage=\"posts.current_page\"\n            :from=\"posts.from\"\n            :lastPage=\"posts.last_page\"\n            :lastPageUrl=\"posts.last_page_url\"\n            :nextpageurl=\"posts.next_page_url\"\n            :perPage=\"posts.per_page\"\n            :prevPageUrl=\"posts.prev_page_url\"\n            :to=\"posts.to\"\n            :total=\"posts.total\"\n          />\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport trans from '@/Composables/transComposable';\nimport sharedComposable from \"@/Composables/sharedComposable\";\nconst props = defineProps([\"posts\", \"segments\", \"buttons\"]);\nconst { textExcerpt, deleteRow } = sharedComposable();\ndefineOptions({ layout: AdminLayout });\n</script>\n","<template>\n\t<main class=\"container flex-grow p-4 sm:p-6\">\n\t\t<HeaderSegment :title=\"trans('Create Payment Gateway')\" :segments=\"segments\" :buttons=\"buttons\" />\n\t\t<div class=\"space-y-6\">\n\n\t\t\t<div class=\"grid grid-cols-1 md:grid-cols-2\">\n\t\t\t\t<div class=\"mt-5\">\n\t\t\t\t\t<strong>{{ trans('Create Payment Gateway') }}</strong>\n\t\t\t\t\t<p>{{ trans('Create manual payment gateway for accepting payment') }}</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mt-5\">\n\t\t\t\t\t<form @submit.prevent=\"store\" enctype=\"multipart/form-data\">\n\n\t\t\t\t\t\t<div class=\"card\">\n\t\t\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label class=\"required\" for=\"name\">{{ trans('Gateway Name')\n\t\t\t\t\t\t\t\t\t}}</label>\n\t\t\t\t\t\t\t\t\t<input v-model=\"form.name\" type=\"text\" class=\"input\" name=\"name\" id=\"name\">\n\n\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback\" v-if=\"form.errors.name\">\n\t\t\t\t\t\t\t\t\t\t{{ form.errors.name }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label class=\"required\" for=\"logo\">{{ trans('Logo')\n\t\t\t\t\t\t\t\t\t}}</label>\n\t\t\t\t\t\t\t\t\t<input type=\"file\" id=\"logo\" @input=\"(e) => (form.logo = e.target.files[0])\"\n\t\t\t\t\t\t\t\t\t\tclass=\"input\" name=\"logo\" accept=\"image/*\">\n\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback\" v-if=\"form.errors.logo\">\n\t\t\t\t\t\t\t\t\t\t{{ form.errors.logo }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label class=\"required\" for=\"currency\">{{ trans('Currency')\n\t\t\t\t\t\t\t\t\t}}</label>\n\t\t\t\t\t\t\t\t\t<input v-model=\"form.currency\" type=\"text\" class=\"input\" name=\"currency\" id=\"currency\"\n\t\t\t\t\t\t\t\t\t\trequired>\n\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback\" v-if=\"form.errors.currency\">\n\t\t\t\t\t\t\t\t\t\t{{ form.errors.currency }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label class=\"required\" for=\"min_amount\">\n\t\t\t\t\t\t\t\t\t\t{{ trans('Minimum Amount') }}</label>\n\t\t\t\t\t\t\t\t\t<input v-model=\"form.min_amount\" type=\"number\" name=\"min_amount\" id=\"min_amount\"\n\t\t\t\t\t\t\t\t\t\tstep=\"any\" class=\"input\" required>\n\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback\" v-if=\"form.errors.min_amount\">\n\t\t\t\t\t\t\t\t\t\t{{ form.errors.min_amount }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label class=\"required\" for=\"max_amount\">\n\t\t\t\t\t\t\t\t\t\t{{ trans('Maximum Amount') }}</label>\n\t\t\t\t\t\t\t\t\t<input v-model=\"form.max_amount\" type=\"number\" name=\"max_amount\" id=\"max_amount\"\n\t\t\t\t\t\t\t\t\t\tstep=\"any\" class=\"input\" required>\n\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback\" v-if=\"form.errors.max_amount\">\n\t\t\t\t\t\t\t\t\t\t{{ form.errors.max_amount }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label class=\"required\" for=\"charge\">\n\t\t\t\t\t\t\t\t\t\t{{ trans('Gateway Charge')\n\t\t\t\t\t\t\t\t\t\t}}</label>\n\t\t\t\t\t\t\t\t\t<input type=\"number\" step=\"any\" v-model=\"form.charge\" class=\"input\" name=\"charge\"\n\t\t\t\t\t\t\t\t\t\tid=\"charge\" required>\n\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback\" v-if=\"form.errors.charge\">\n\t\t\t\t\t\t\t\t\t\t{{ form.errors.charge }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label class=\"required\" for=\"multiply\">\n\t\t\t\t\t\t\t\t\t\t{{ trans('Multiply from base currency') }}</label>\n\t\t\t\t\t\t\t\t\t<input type=\"number\" step=\"any\" v-model=\"form.multiply\" class=\"input\" name=\"multiply\"\n\t\t\t\t\t\t\t\t\t\tid=\"multiply\" required>\n\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback\" v-if=\"form.errors.multiply\">\n\t\t\t\t\t\t\t\t\t\t{{ form.errors.multiply }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label class=\"required\" for=\"status\">\n\t\t\t\t\t\t\t\t\t\t{{ trans('Payment Instruction') }}</label>\n\t\t\t\t\t\t\t\t\t<textarea v-model=\"form.comment\" class=\"input\" maxlength=\"1000\"\n\t\t\t\t\t\t\t\t\t\tname=\"comment\"></textarea>\n\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback\" v-if=\"form.errors.comment\">\n\t\t\t\t\t\t\t\t\t\t{{ form.errors.comment }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label class=\"required\" for=\"status\">{{ trans('Status')\n\t\t\t\t\t\t\t\t\t}}</label>\n\t\t\t\t\t\t\t\t\t<select v-model=\"form.status\" class=\"input selectric\" name=\"status\" id=\"status\">\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\">{{ trans('Active') }}</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"0\">{{ trans('Deactivate') }}</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback\" v-if=\"form.errors.status\">\n\t\t\t\t\t\t\t\t\t\t{{ form.errors.status }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<SpinnerBtn :processing=\"form.processing\"  />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</div>\n\t</main>\n</template>\n\n<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nexport default {\n\tlayout: AdminLayout\n}\n\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport { useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nconst props = defineProps(['segments', 'buttons'])\n\n\nconst form = useForm({\n\tname: null,\n\tlogo: null,\n\tcurrency: null,\n\tmin_amount: 1,\n\tmax_amount: 10,\n\tcharge: 0,\n\tmultiply: 1,\n\tcomment: null,\n\tstatus: 1\n})\n\n\nconst store = () => {\n\tform.post('/admin/gateways')\n}\n</script>","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Edit Payment Gateway')\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"grid grid-cols-1 md:grid-cols-2\">\n        <div class=\"mt-5\">\n          <strong>{{ trans('Edit Payment Gateway') }}</strong>\n          <p>{{ trans('Edit gateway information for accepting payment') }}</p>\n        </div>\n        <div class=\"mt-5\">\n          <form @submit.prevent=\"updateGateway\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"mb-4\">\n                  <label class=\"\" for=\"name\">{{ trans('Gateway Name') }}</label>\n                  <input\n                    type=\"text\"\n                    class=\"input\"\n                    name=\"name\"\n                    id=\"name\"\n                    v-model=\"form.name\"\n                    required\n                  />\n                </div>\n                <div class=\"mb-4\">\n                  <label class=\"\" for=\"logo\">{{ trans('Logo') }}</label>\n                  <div class=\"flex-1\">\n                    <input\n                      type=\"file\"\n                      id=\"logo\"\n                      class=\"input mb-3\"\n                      name=\"logo\"\n                      @input=\"(e) => (form.logo = e.target.files[0])\"\n                    />\n\n                    <div class=\"flex justify-start\">\n                      <img\n                        v-if=\"gateway.logo != ''\"\n                        :src=\"gateway.logo\"\n                        height=\"10\"\n                        width=\"30\"\n                        alt=\"\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div class=\"mb-4\">\n                  <label class=\"\" for=\"currency\">{{ trans('Currency') }}</label>\n                  <input\n                    type=\"text\"\n                    class=\"input\"\n                    name=\"currency\"\n                    id=\"currency\"\n                    v-model=\"form.currency\"\n                    required\n                  />\n                </div>\n\n                <div class=\"mb-4\" v-if=\"gateway.is_auto == 1\">\n                  <label class=\"\" for=\"sandbox\">{{ trans('Sandbox Mode') }}</label>\n                  <select\n                    class=\"select flex-1\"\n                    name=\"test_mode\"\n                    id=\"sandbox\"\n                    v-model=\"form.test_mode\"\n                  >\n                    <option value=\"1\">{{ trans('Enable') }}</option>\n                    <option value=\"0\">{{ trans('Disable') }}</option>\n                  </select>\n                </div>\n\n                <div class=\"mb-4\">\n                  <label class=\"\" for=\"min_amount\">{{ trans('Minimum Amount') }}</label>\n                  <input\n                    type=\"number\"\n                    name=\"min_amount\"\n                    id=\"min_amount\"\n                    step=\"any\"\n                    v-model=\"form.min_amount\"\n                    class=\"input\"\n                    required\n                  />\n                </div>\n                <div class=\"mb-4\">\n                  <label class=\"\" for=\"max_amount\">{{ trans('Maximum Amount') }}</label>\n                  <input\n                    type=\"number\"\n                    name=\"max_amount\"\n                    id=\"max_amount\"\n                    step=\"any\"\n                    v-model=\"form.max_amount\"\n                    class=\"input\"\n                    required\n                  />\n                </div>\n                <div class=\"mb-4\">\n                  <label class=\"\" for=\"charge\">{{ trans('Charge') }}</label>\n                  <input\n                    type=\"text\"\n                    class=\"input\"\n                    name=\"charge\"\n                    id=\"charge\"\n                    v-model=\"form.charge\"\n                    required\n                  />\n                </div>\n                <div class=\"mb-4\">\n                  <label class=\"\" for=\"multiply\">{{ trans('Multiply from base currency') }}</label>\n                  <input type=\"number\" step=\"any\" class=\"input\" v-model=\"form.multiply\" required />\n                </div>\n\n                <template v-if=\"gateway.is_auto == 1\">\n                  <div\n                    class=\"mb-4\"\n                    v-for=\"(credential, key) in form.credentials\"\n                    :key=\"Math.random()\"\n                  >\n                    <label class=\"\" for=\"status\">{{ ucwords(str_replace('_', ' ', key)) }}</label>\n                    <input type=\"text\" required class=\"input\" v-model=\"form.credentials[key]\" />\n                  </div>\n                </template>\n\n                <div class=\"mb-4\">\n                  <label class=\"required block\" for=\"status\">{{\n                    trans('Payment Instruction')\n                  }}</label>\n                  <textarea\n                    class=\"textarea\"\n                    maxlength=\"1000\"\n                    name=\"comment\"\n                    v-model=\"form.comment\"\n                    >{{ gateway.comment }}</textarea\n                  >\n                </div>\n                <div class=\"mb-4\">\n                  <label class=\"\" for=\"status\">{{ trans('Status') }}</label>\n                  <select class=\"select flex-1\" name=\"status\" id=\"status\" v-model=\"form.status\">\n                    <option value=\"1\">{{ trans('Active') }}</option>\n                    <option value=\"0\">{{ trans('Deactivate') }}</option>\n                  </select>\n                </div>\n                <div class=\"mb-4\">\n                  <SpinnerBtn :processing=\"form.processing\" />\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\ndefineOptions({ layout: AdminLayout })\nimport { useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\n\nconst props = defineProps(['segments', 'buttons', 'gateway', 'credentials'])\nconst form = useForm({\n  _method: 'Patch',\n  name: props.gateway.name,\n  logo: '',\n  currency: props.gateway.currency,\n  test_mode: props.gateway.test_mode,\n  min_amount: props.gateway.min_amount,\n  max_amount: props.gateway.max_amount,\n  charge: props.gateway.charge,\n  multiply: props.gateway.multiply,\n  credentials: props.credentials ?? [],\n  comment: props.gateway.comment,\n  status: props.gateway.status\n})\n\nfunction ucwords(word) {\n  return word.charAt(0).toUpperCase() + word.slice(1)\n}\n\nfunction str_replace(search, replace, subject) {\n  return subject.replaceAll(search, replace)\n}\n\nfunction updateGateway() {\n  form.post(route('admin.gateways.update', props.gateway.id), {\n    onSuccess: () => {\n      notify.success('Gateway has been updated successfully')\n    }\n  })\n}\n</script>\n","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('Payment Gateways')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n    <div class=\"space-y-6\">\n      <Overview :items=\"gatewayStats\" grid=\"3\" />\n\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\" class=\"w-[30%]\">{{ trans(\"Name\") }}</th>\n\n              <th scope=\"col\" class=\"w-[10%]\">{{ trans(\"Charge\") }}</th>\n              <th scope=\"col\" class=\"w-[10%]\">{{ trans(\"Currency\") }}</th>\n              <th scope=\"col\" class=\"w-[10%]\">{{ trans(\"Gateway Status\") }}</th>\n              <th scope=\"col\" class=\"w-[20%]\">{{ trans(\"Payment Mode\") }}</th>\n              <th scope=\"col\" class=\"w-[20%]\">\n                <div class=\"text-right\">\n                  {{ trans(\"Action\") }}\n                </div>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"gateway in gateways\" :key=\"gateways.id\">\n              <th>\n                <div class=\"flex gap-2\">\n                  <div class=\"avatar avatar-squire\">\n                    <img class=\"avatar-img\" :src=\"gateway.logo\" alt=\"\" />\n                  </div>\n\n                  <div>\n                    <Link\n                      v-if=\"gateway.logo != null\"\n                      :href=\"'/admin/gateways/' + gateway.id + '/edit'\"\n                    >\n                      <h6\n                        class=\"text-sm font-medium whitespace-nowrap text-slate-700 dark:text-slate-100\"\n                      >\n                        {{ gateway.name }}\n                      </h6>\n                    </Link>\n                    <p class=\"text-xs truncate text-slate-500 dark:text-slate-400\">\n                      {{ trans(\"Limit : \") }} {{ number_format(gateway.min_amount, 2) }} -\n                      {{ number_format(gateway.max_amount, 2) }}\n                    </p>\n                  </div>\n                </div>\n              </th>\n\n              <td class=\"text-right\">\n                {{ gateway.charge }}\n                {{ gateway.currency != null ? gateway.currency : \"\" }}\n              </td>\n              <td class=\"text-center\">{{ gateway.currency }}</td>\n              <td class=\"text-center\">\n                <div\n                  class=\"badge\"\n                  :class=\"\n                    gateway.status == 1 ? 'badge-soft-success' : 'badge-soft-danger'\n                  \"\n                >\n                  <span class=\"status\">{{\n                    gateway.status == 1 ? \"Active\" : \"Disabled\"\n                  }}</span>\n                </div>\n              </td>\n\n              <td class=\"text-right\">\n                <span\n                  class=\"badge\"\n                  :class=\"\n                    gateway.test_mode == 1 ? 'badge-soft-primary' : 'badge-soft-success'\n                  \"\n                >\n                  <span class=\"status\">{{\n                    gateway.test_mode == 1 ? \"Sandbox\" : \"Production\"\n                  }}</span>\n                </span>\n              </td>\n              <td>\n                <div class=\"text-right\">\n                  <Link\n                    class=\"btn btn-sm btn-primary\"\n                    :href=\"'/admin/gateways/' + gateway.id + '/edit'\"\n                  >\n                    <i class=\"fas fa-edit\"></i> {{ trans(\"Edit\") }}\n                  </Link>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nexport default {\n  layout: AdminLayout,\n  components: { Link },\n};\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport { Link } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nimport Overview from \"@/Components/Admin/OverviewGrid.vue\";\n\nconst props = defineProps([\n  \"gateways\",\n  \"active_gateway\",\n  \"totalGateways\",\n  \"inactive_gateway\",\n  \"segments\",\n  \"buttons\",\n]);\n\nconst gatewayStats = [\n  { value: props.totalGateways, title: trans(\"Total Gateways\"), iconClass: \"bx bx-bar-chart\" },\n  { value: props.active_gateway, title: trans(\"Active Gateways\"), iconClass: \"bx bx-check\" },\n  { value: props.inactive_gateway, title: trans(\"Inactive Gateways\"), iconClass: \"bx bx-x-circle\" },\n];\n\nfunction number_format(number, decimals, dec_point, thousands_point) {\n  if (number == null || !isFinite(number)) {\n    throw new TypeError(\"number is not valid\");\n  }\n\n  if (!decimals) {\n    var len = number.toString().split(\".\").length;\n    decimals = len > 1 ? len : 0;\n  }\n\n  if (!dec_point) {\n    dec_point = \".\";\n  }\n\n  if (!thousands_point) {\n    thousands_point = \",\";\n  }\n\n  number = parseFloat(number).toFixed(decimals);\n\n  number = number.replace(\".\", dec_point);\n\n  var splitNum = number.split(dec_point);\n  splitNum[0] = splitNum[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands_point);\n  number = splitNum.join(dec_point);\n\n  return number;\n}\n</script>\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm } from '@inertiajs/vue3'\nimport Paginate from '@/Components/Paginate.vue'\nimport moment from 'moment'\nimport trans from '@/Composables/transComposable'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport Overview from '@/Components/Admin/OverviewGrid.vue'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\nimport drawer from '@/Plugins/Admin/drawer'\nimport { onMounted } from 'vue'\nimport { ref } from 'vue'\n\ndefineOptions({ layout: AdminLayout })\nconst { formatCurrency, textExcerpt } = sharedComposable()\nonMounted(() => drawer.init())\nconst props = defineProps([\n  'aiGenerated',\n  'total',\n  'totalCharges',\n  'totalResults',\n  'buttons',\n  'segments',\n  'request',\n  'type'\n])\nconst filterData = useForm({\n  search: props.request.search,\n  type: props.type\n})\nconst stats = [\n  {\n    value: props.total,\n    title: trans('Total Records'),\n    iconClass: 'bx bx-badge'\n  },\n  {\n    value: props.totalCharges,\n    title: trans('Total Charges'),\n    iconClass: 'bx bx-badge-check'\n  },\n  {\n    value: props.totalResults,\n    title: trans('Total Results'),\n    iconClass: 'bx bx-bullseye'\n  }\n]\nconst promptData = ref({\n  prompt: '',\n  content: ''\n})\nconst openDrawer = (data) => {\n  promptData.value.prompt = data.prompt\n  promptData.value.content = data.content\n  drawer.of('#promptDrawer').show()\n}\n</script>\n\n<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment title=\"Ai Generates\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"stats\" grid=\"3\" />\n      <div class=\"flex items-center justify-end gap-x-2\">\n        <div class=\"dropdown\" data-placement=\"bottom-end\">\n          <div class=\"dropdown-toggle\">\n            <button type=\"button\" class=\"btn bg-white font-medium shadow-sm dark:bg-slate-800\">\n              <i class=\"w-4\" data-feather=\"filter\"></i>\n              <span>{{ trans('Filter') }}</span>\n              <i class=\"w-4\" data-feather=\"chevron-down\"></i>\n            </button>\n          </div>\n\n          <div class=\"dropdown-content w-72 !overflow-visible\">\n            <form @submit.prevent=\"filterData.get('/admin/credit-logs')\">\n              <ul class=\"dropdown-list space-y-4 p-4\">\n                <li class=\"dropdown-list-item\">\n                  <h2 class=\"my-1 text-sm font-medium\">{{ trans('Status') }}</h2>\n                  <div class=\"mb-2\">\n                    <input\n                      type=\"text\"\n                      name=\"search\"\n                      v-model=\"filterData.search\"\n                      class=\"input\"\n                      placeholder=\"Search......\"\n                    />\n                  </div>\n                </li>\n                <li class=\"dropdown-list-item\">\n                  <div class=\"mb-2\">\n                    <select class=\"select\" name=\"type\" v-model=\"filterData.type\">\n                      <option value=\"email\">{{ trans('User Email') }}</option>\n                      <option value=\"invoice_no\">{{ trans('Invoice No') }}</option>\n                    </select>\n                  </div>\n                </li>\n\n                <li class=\"dropdown-list-item\">\n                  <button type=\"submit\" class=\"btn btn-primary w-full\">\n                    {{ trans('Filter') }}\n                  </button>\n                </li>\n              </ul>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans('Template') }}</th>\n              <th>{{ trans('User Name') }}</th>\n              <th>{{ trans('Charge') }}</th>\n\n              <th>\n                {{ trans('Result') }}\n              </th>\n              <th>\n                {{ trans('Length') }}\n              </th>\n              <th>\n                {{ trans('Prompt') }}\n              </th>\n              <th>\n                {{ trans('Content') }}\n              </th>\n\n              <th>\n                {{ trans('Date') }}\n              </th>\n              <th>\n                <p class=\"text-end\">{{ trans('Action') }}</p>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody v-if=\"aiGenerated.total > 0\">\n            <tr v-for=\"generated in aiGenerated.data\" :key=\"generated.id\">\n              <td>\n                {{ textExcerpt(generated.ai_template.title, 30) }}\n              </td>\n              <td>\n                <Link\n                  :href=\"route('admin.companies.show', generated.user_id)\"\n                  v-if=\"generated.user.role == 'employer'\"\n                >\n                  {{ textExcerpt(generated.user.name, 30) }}\n                </Link>\n                <Link\n                  :href=\"route('admin.candidates.show', generated.user_id)\"\n                  v-if=\"generated.user.role == 'user'\"\n                >\n                  {{ textExcerpt(generated.user.name, 30) }}\n                </Link>\n              </td>\n              <td>\n                {{ formatCurrency(generated.charge) }}\n              </td>\n              <td>\n                {{ generated.result }}\n              </td>\n\n              <td>\n                {{ generated.length }}\n              </td>\n              <td>\n                {{ textExcerpt(generated.prompt, 30) }}\n              </td>\n              <td>\n                {{ textExcerpt(generated.content, 30) }}\n              </td>\n\n              <td>\n                {{ moment(generated.updated_at).format('DD MMM, YYYY') }}\n              </td>\n\n              <td>\n                <button @click=\"openDrawer(generated)\" class=\"flex w-full justify-end\">\n                  <i class=\"h-5 text-slate-400\" data-feather=\"eye\"></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n      </div>\n      <Paginate :links=\"aiGenerated.links\" />\n    </div>\n  </main>\n  <div id=\"promptDrawer\" class=\"drawer drawer-right max-h-screen overflow-y-auto\">\n    <div class=\"drawer-header\">\n      <h5>{{ trans('Content Details') }}</h5>\n      <button\n        type=\"button\"\n        class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n        data-dismiss=\"drawer\"\n      >\n        <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n      </button>\n    </div>\n    <div class=\"drawer-body space-y-4\">\n      <div class=\"rounded-md bg-secondary-200 p-3 dark:bg-secondary-900\">\n        <label class=\"label mb-1\">Prompt</label>\n        <p>{{ promptData?.prompt }}</p>\n      </div>\n      <div class=\"rounded-md bg-secondary-200 p-3 dark:bg-secondary-900\">\n        <label class=\"label mb-1\">Content</label>\n        <div class=\"\" v-html=\"promptData?.content\"></div>\n      </div>\n    </div>\n    <div class=\"drawer-footer\">\n      <div class=\"flex justify-between gap-2\">\n        <button type=\"button\" class=\"btn btn-dark w-full\" data-dismiss=\"drawer\">\n          <span> {{ trans('Close') }}</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n","<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment title=\"Job Categories\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"jobStats\" grid=\"4\" />\n      <div class=\"flex items-center justify-end gap-x-2\">\n        <div class=\"dropdown\" data-placement=\"bottom-end\">\n          <div class=\"dropdown-toggle\">\n            <button\n              type=\"button\"\n              class=\"font-medium bg-white shadow-sm btn dark:bg-slate-800\"\n            >\n              <i class=\"w-4\" data-feather=\"filter\"></i>\n              <span>{{ trans(\"Filter\") }}</span>\n              <i class=\"w-4\" data-feather=\"chevron-down\"></i>\n            </button>\n          </div>\n\n          <div class=\"dropdown-content w-72 !overflow-visible\">\n            <form @submit.prevent=\"filterData.get('/admin/job')\">\n              <ul class=\"p-4 space-y-4 dropdown-list\">\n                <li class=\"dropdown-list-item\">\n                  <h2 class=\"my-1 text-sm font-medium\">\n                    {{ trans(\"Search\") }}\n                  </h2>\n                  <div class=\"mb-2\">\n                    <select\n                      v-if=\"filterData.type && filterData.type === 'status'\"\n                      class=\"select\"\n                      name=\"type\"\n                      v-model=\"filterData.search\"\n                    >\n                      <option value=\"1\">{{ trans(\"Active\") }}</option>\n                      <option value=\"2\">{{ trans(\"Pending\") }}</option>\n                      <option value=\"0\">{{ trans(\"Inactive\") }}</option>\n                    </select>\n                    <input\n                      v-else\n                      type=\"text\"\n                      name=\"search\"\n                      v-model=\"filterData.search\"\n                      class=\"input\"\n                      placeholder=\"Search......\"\n                    />\n                  </div>\n                </li>\n                <li class=\"dropdown-list-item\">\n                  <div class=\"mb-2\">\n                    <select\n                      class=\"select\"\n                      name=\"type\"\n                      @change=\"filterData.search = ''\"\n                      v-model=\"filterData.type\"\n                    >\n                      <option value=\"email\">\n                        {{ trans(\"Company Email\") }}\n                      </option>\n                      <option value=\"name\">{{ trans(\"Company Name\") }}</option>\n                      <option value=\"title\">\n                        {{ trans(\"Title\") }}\n                      </option>\n                      <option value=\"status\">\n                        {{ trans(\"Status\") }}\n                      </option>\n                      <option value=\"service\">\n                        {{ trans(\"Service\") }}\n                      </option>\n                      <option value=\"category\">\n                        {{ trans(\"Category\") }}\n                      </option>\n                    </select>\n                  </div>\n                </li>\n\n                <li class=\"dropdown-list-item\">\n                  <button type=\"submit\" class=\"w-full btn btn-primary\">\n                    {{ trans(\"Filter\") }}\n                  </button>\n                </li>\n              </ul>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"\">{{ trans(\"Name\") }}</th>\n\n              <th class=\"\">{{ trans(\"Company Name\") }}</th>\n              <th class=\"\">{{ trans(\"Service\") }}</th>\n              <th class=\"\">{{ trans(\"Category\") }}</th>\n              <th class=\"\">{{ trans(\"Created Date\") }}</th>\n              <th class=\"\">{{ trans(\"Status\") }}</th>\n              <th>\n                <div class=\"text-right\">\n                  {{ trans(\"Action\") }}\n                </div>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody v-if=\"jobs.total > 0\">\n            <tr v-for=\"job in jobs.data\" :key=\"job.id\">\n              <td class=\"text-left\">\n                {{ job.title }}\n              </td>\n\n              <td class=\"text-left\">\n                <img\n                  class=\"inline w-10 mr-2 rounded-full\"\n                  :src=\"\n                    job.user.avatar == null\n                      ? `https://ui-avatars.com/api/?name=${job.user.name}`\n                      : `${job.user.avatar}`\n                  \"\n                  alt=\"avatar\"\n                />\n                <Link :href=\"route('admin.companies.show', job.user)\">{{\n                  job.user.name\n                }}</Link>\n              </td>\n              <td class=\"text-left\">\n                {{ job.service.title }}\n              </td>\n              <td class=\"text-left\">\n                {{ job.categories[0]?.title }}\n              </td>\n              <td>\n                {{ moment(job.created_at).format(\"D-MMM-Y\") }}\n              </td>\n              <td class=\"text-left\">\n                <span\n                  class=\"badge\"\n                  :class=\"\n                    job.status == 1\n                      ? 'badge-success'\n                      : job.status == 2\n                      ? 'badge-warning'\n                      : 'badge-danger'\n                  \"\n                >\n                  {{\n                    job.status == 1\n                      ? trans(\"Active\")\n                      : job.status == 2\n                      ? trans(\"Pending\")\n                      : trans(\"Inactive\")\n                  }}\n                </span>\n              </td>\n              <td>\n                <div class=\"flex justify-end\">\n                  <div class=\"dropdown\" data-placement=\"bottom-end\">\n                    <div class=\"dropdown-toggle\">\n                      <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                    </div>\n                    <div class=\"w-40 dropdown-content\">\n                      <ul class=\"dropdown-list\">\n                        <li class=\"dropdown-list-item\">\n                          <button @click=\"openEditJobDrawer(job)\" class=\"dropdown-link\">\n                            <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                            <span>{{ trans(\"Edit\") }}</span>\n                          </button>\n                        </li>\n                        <li class=\"dropdown-list-item\">\n                          <Link\n                            :href=\"route('admin.job.show', job.id)\"\n                            class=\"dropdown-link\"\n                          >\n                            <i class=\"h-5 text-slate-400\" data-feather=\"eye\"></i>\n                            <span>{{ trans(\"View\") }}</span>\n                          </Link>\n                        </li>\n\n                        <li class=\"dropdown-list-item\">\n                          <button\n                            as=\"button\"\n                            class=\"dropdown-link\"\n                            @click=\"deleteRow(route('admin.job.destroy', job.id))\"\n                          >\n                            <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"></i>\n                            <span>{{ trans(\"Delete\") }}</span>\n                          </button>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n      </div>\n    </div>\n  </main>\n  <Paginate :links=\"jobs.links\" />\n  <div id=\"editJobDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateJob()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Edit Job\") }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans(\"Job Live Days\") }}</label>\n          <input\n            v-model=\"editForm.live_expire_at\"\n            type=\"date\"\n            name=\"live_expire_at\"\n            class=\"input\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans(\"Featured Expire Date\") }}</label>\n          <input\n            v-model=\"editForm.featured_expire_at\"\n            type=\"date\"\n            name=\"featured_expire_at\"\n            class=\"input\"\n          />\n        </div>\n\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans(\"Status\") }}</label>\n          <select v-model=\"editForm.status\" class=\"select\" name=\"status\">\n            <option value=\"1\">{{ trans(\"Active\") }}</option>\n            <option value=\"2\">{{ trans(\"Pending\") }}</option>\n            <option value=\"0\">{{ trans(\"Deactive\") }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"isProcessing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport { useForm, router } from \"@inertiajs/vue3\";\nimport Paginate from \"@/Components/Paginate.vue\";\nimport moment from \"moment\";\nimport { ref } from \"vue\";\nimport trans from '@/Composables/transComposable';\nimport sharedComposable from \"@/Composables/sharedComposable\";\nimport Overview from \"@/Components/Admin/OverviewGrid.vue\";\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport drawer from \"@/Plugins/Admin/drawer\";\nimport { onMounted, computed } from \"vue\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport NoDataFound from \"@/Components/Admin/NoDataFound.vue\";\n\ndefineOptions({ layout: AdminLayout });\nconst { deleteRow } = sharedComposable();\n\nonMounted(() => {\n  drawer.init();\n});\n\nconst props = defineProps([\n  \"jobs\",\n  \"totalJobs\",\n  \"activeJobs\",\n  \"pendingJobs\",\n  \"inActiveJobs\",\n  \"languages\",\n  \"buttons\",\n  \"segments\",\n  \"allServices\",\n  \"request\",\n  \"type\",\n]);\nconst jobStats = computed(() => {\n  return [\n    {\n      value: props.totalJobs,\n      title: trans(\"Total Jobs\"),\n     iconClass: \"bx bx-badge-check\",\n    },\n    {\n      value: props.pendingJobs,\n      title: trans(\"Pending Jobs\"),\n     iconClass: \"bx bx-badge\",\n    },\n    {\n      value: props.activeJobs,\n      title: trans(\"Active Jobs\"),\n     iconClass: \"bx bx-check\",\n    },\n    {\n      value: props.inActiveJobs,\n      title: trans(\"Inactive Jobs\"),\n     iconClass: \"bx bx-x-circle\",\n    },\n  ];\n});\nconst filterData = useForm({\n  search: props.request.search,\n  type: props.type,\n});\nconst editForm = ref({});\nconst isProcessing = ref(false);\n\nconst openEditJobDrawer = (job) => {\n  editForm.value = { ...job };\n  drawer.of(\"#editJobDrawer\").show();\n};\n\nconst updateJob = () => {\n  isProcessing.value = true;\n  router.patch(route(\"admin.job.update\", editForm.value.id), editForm.value, {\n    onSuccess: () => {\n      editForm.value = {};\n      notify.success(trans(\"Job has been updated successfully\"));\n      drawer.of(\"#editJobDrawer\").hide();\n      isProcessing.value = false;\n    },\n  });\n};\n</script>\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport moment from 'moment'\nimport { computed } from 'vue'\n\ndefineOptions({ layout: AdminLayout })\nconst props = defineProps(['job', 'buttons', 'segments'])\nconst meta = computed(() => props.job.user.meta)\nconst socials = computed(() => meta.value.social)\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Job details\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"grid grid-cols-1 gap-6 lg:grid-cols-4\">\n        <!-- Left Section Start  -->\n        <section class=\"col-span-1 flex h-min w-full flex-col gap-6 lg:sticky lg:top-20\">\n          <div class=\"card\">\n            <div class=\"card-body flex flex-col gap-y-3\">\n              <div class=\"relative my-2 h-16 w-16\">\n                <img\n                  :src=\"\n                    job.user.avatar == null\n                      ? `https://ui-avatars.com/api/?name=${job.user.name}`\n                      : `${job.user.avatar}`\n                  \"\n                  alt=\" avatar-img\"\n                  class=\"h-full w-full rounded-full\"\n                />\n              </div>\n              <div>\n                <Link\n                  :href=\"route('admin.companies.show', job.user.id)\"\n                  class=\"mb-1 block font-medium text-slate-700 dark:text-slate-200\"\n                >\n                  {{ job.user.name }}\n                </Link>\n                <span class=\"description\">{{ trans('Status') }}: </span>\n                <span\n                  class=\"badge badge-sm\"\n                  :class=\"job.status == 1 ? 'badge-success' : 'badge-danger'\"\n                >\n                  {{ job.status == 1 ? trans('Active') : trans('Inactive') }}\n                </span>\n              </div>\n              <div>\n                <h5>{{ trans('Overview') }}</h5>\n                <div>{{ job.user.meta.business.description }}</div>\n              </div>\n              <div>\n                {{ trans('Join Date: ') }}\n                {{ job.user.created_at_date }}\n              </div>\n              <div>\n                <h5>{{ trans('Socials') }}</h5>\n                <ul class=\"flex flex-wrap gap-x-4\">\n                  <li class=\"capitalize\" v-for=\"(social, key) in socials\" :key=\"key\">\n                    <a\n                      v-if=\"social\"\n                      :href=\"social.startsWith('http') ? social : `https://${social}`\"\n                      target=\"_blank\"\n                      class=\"hover:underline\"\n                    >\n                      <span>{{ key }}</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </section>\n        <!-- Right Section Start  -->\n        <section class=\"col-span-3\">\n          <div class=\"flex h-full flex-wrap gap-4\">\n            <div class=\"flex-grow\">\n              <div class=\"card h-full\">\n                <div class=\"card-body space-y-4\">\n                  <h4 class=\"font-bold\">{{ trans('Details') }}</h4>\n\n                  <div>\n                    <h6>{{ trans('Overview') }}</h6>\n                    <div v-html=\"job.short_description\" class=\"mt-px\"></div>\n                  </div>\n                  <div>\n                    <h6>{{ trans('Description') }}</h6>\n                    <div v-html=\"job.description\" class=\"mt-px\"></div>\n                  </div>\n                  <div>\n                    <h6>{{ trans('Required Skills') }}</h6>\n                    <ul class=\"ml-5\">\n                      <li v-for=\"tag in job.tags\" :key=\"tag.id\" class=\"list-disc\">\n                        {{ tag.title }}\n                      </li>\n                    </ul>\n                  </div>\n                  <div>\n                    <span class=\"font-semibold\">{{ trans('Service') }}</span>\n                    <div>\n                      {{ job.service?.title }}\n                    </div>\n                  </div>\n                  <div>\n                    <h6>{{ trans('Categories') }}</h6>\n                    <ul class=\"ml-5\">\n                      <li v-for=\"cat in job.categories\" :key=\"cat.id\" class=\"list-disc\">\n                        {{ cat.title }}\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"grid grid-cols-4 gap-y-6\">\n                    <div>\n                      <span class=\"font-semibold\">{{ trans('Salary') }}</span>\n                      <div>\n                        {{ job.salary_range }}/{{ job.salary_type.charAt(0).toLowerCase() }}\n                      </div>\n                    </div>\n                    <div>\n                      <span class=\"font-semibold\">{{ trans('Expertise') }}</span>\n                      <div>\n                        {{ job.expertise }}\n                      </div>\n                    </div>\n                    <div>\n                      <span class=\"font-semibold\">{{ trans('Location') }}</span>\n                      <div v-if=\"JSON.parse(job.meta).is_remote\">{{ trans('Remote') }}</div>\n                      <div v-else>{{ job.country?.[0]?.name }},{{ job.state?.[0]?.name }}</div>\n                    </div>\n                    <div>\n                      <span class=\"font-semibold\">{{ trans('Job Type') }}</span>\n                      <div>{{ job.type }}</div>\n                    </div>\n                    <div>\n                      <span class=\"font-semibold\">{{ trans('Date') }}</span>\n                      <div>\n                        {{ moment(job.updated_at).format('D MMM, YYYY') }}\n                      </div>\n                    </div>\n                    <div>\n                      <span class=\"font-semibold\">{{ trans('Experience') }}</span>\n                      <div>\n                        {{ job.experience }}\n                      </div>\n                    </div>\n                    <div>\n                      <span class=\"font-semibold\">{{ trans('Apply Type') }}</span>\n                      <div>\n                        {{\n                          job.apply_type == 1\n                            ? 'Email'\n                            : job.apply_type == 2\n                            ? 'External'\n                            : 'Default'\n                        }}\n                      </div>\n                    </div>\n                    <div>\n                      <span class=\"font-semibold\">{{ trans('Expired Date') }}</span>\n                      <div>\n                        {{ job.expired_at ? moment(job.expired_at).format('D MMM, YYYY') : 'None' }}\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    <h6>{{ trans('Custom fields') }}</h6>\n                    <div class=\"mt-1 grid grid-cols-3\" v-if=\"JSON.parse(job.fields)?.length > 0\">\n                      <div v-for=\"(field, i) in JSON.parse(job.fields)\" :key=\"i\">\n                        <span>{{ trans('Label') }}: {{ field.label }}</span> <br />\n                        <span>{{ trans('Type') }}: {{ field.type }}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm, router } from '@inertiajs/vue3'\nimport Paginate from '@/Components/Paginate.vue'\nimport { ref } from 'vue'\nimport trans from '@/Composables/transComposable'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport Overview from '@/Components/Admin/OverviewGrid.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport drawer from '@/Plugins/Admin/drawer'\nimport { onMounted, computed } from 'vue'\nimport notify from '@/Plugins/Admin/notify'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\n\ndefineOptions({ layout: AdminLayout })\nconst { deleteRow } = sharedComposable()\n\nonMounted(() => {\n  drawer.init()\n})\n\nconst props = defineProps([\n  'categories',\n  'totalCategories',\n  'activeCategories',\n  'inActiveCategories',\n  'languages',\n  'buttons',\n  'segments',\n  'allServices'\n])\nconst stats = computed(() => {\n  return [\n    {\n      value: props.totalCategories,\n      title: trans('Total Categories'),\n      iconClass: 'bx bx-badge'\n    },\n    {\n      value: props.activeCategories,\n      title: trans('Active Categories'),\n      iconClass: 'bx bx-badge-check'\n    },\n    {\n      value: props.inActiveCategories,\n      title: trans('Inactive Categories'),\n      iconClass: 'bx bx-x-circle'\n    }\n  ]\n})\n\nconst categoryForm = useForm({\n  title: '',\n  category_id: '',\n  status: 1,\n  is_menu_item: 0,\n  icon: null,\n  preview: null,\n  is_featured: 0\n})\n\nconst editForm = ref({})\n\nconst storeCategory = () => {\n  categoryForm.post(route('admin.job-category.store'), {\n    onSuccess: () => {\n      categoryForm.reset()\n      notify.success(trans('Category has been added successfully'))\n      drawer.of('#addNewCategoryDrawer').hide()\n    }\n  })\n}\n\nconst openEditCategoryDrawer = (category) => {\n  editForm.value = { ...category }\n  drawer.of('#editCategoryDrawer').show()\n}\n\nconst updateCategory = () => {\n  if (!(editForm.value.preview instanceof File)) {\n    editForm.value.preview = null\n  }\n  router.post(\n    route('admin.job-category.update', editForm.value.id),\n    {\n      _method: 'PATCH',\n      category: editForm.value\n    },\n    {\n      onSuccess: () => {\n        editForm.value = {}\n        notify.success(trans('Category has been updated successfully'))\n        drawer.of('#editCategoryDrawer').hide()\n      }\n    }\n  )\n}\n</script>\n\n<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment title=\"Job Categories\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"stats\" grid=\"3\" />\n\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"\">{{ trans('Name') }}</th>\n              <th class=\"\">{{ trans('Service Title') }}</th>\n              <th class=\"\">{{ trans('Slug') }}</th>\n              <th class=\"\">{{ trans('Status') }}</th>\n              <th class=\"\">{{ trans('Featured') }}</th>\n              <th class=\"\">{{ trans('Menu Status') }}</th>\n              <th class=\"flex justify-end\">{{ trans('Action') }}</th>\n            </tr>\n          </thead>\n\n          <tbody v-if=\"categories.total > 0\">\n            <tr v-for=\"category in categories.data\" :key=\"category.id\">\n              <td class=\"text-left\">\n                <img class=\"mr-1 inline w-12 rounded-full\" :src=\"category.preview\" alt=\"preview\" />\n                {{ category.title }}\n              </td>\n              <td class=\"text-left\">\n                {{ category.parent?.title }}\n              </td>\n              <td class=\"text-left\">\n                {{ category.slug }}\n              </td>\n\n              <td class=\"text-left\">\n                <span\n                  class=\"badge\"\n                  :class=\"category.status == 1 ? 'badge-primary' : 'badge-danger'\"\n                >\n                  {{ category.status == 1 ? trans('Active') : trans('Inactive') }}\n                </span>\n              </td>\n              <td class=\"text-left\">\n                <span\n                  class=\"badge\"\n                  :class=\"category.is_featured == 1 ? 'badge-success' : 'badge-danger'\"\n                >\n                  {{ category.is_featured == 1 ? trans('Featured') : trans('Not Featured') }}\n                </span>\n              </td>\n              <td class=\"text-right\">\n                <span\n                  class=\"badge\"\n                  :class=\"category.is_menu_item == 1 ? 'badge-success' : 'badge-danger'\"\n                >\n                  {{ category.is_menu_item == 1 ? trans('Enabled') : trans('Disabled') }}\n                </span>\n              </td>\n              \n              <td>\n                <div class=\"flex justify-end\">\n                  <div class=\"dropdown\" data-placement=\"bottom-start\">\n                    <div class=\"dropdown-toggle\">\n                      <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                    </div>\n                    <div class=\"dropdown-content w-40\">\n                      <ul class=\"dropdown-list\">\n                        <li class=\"dropdown-list-item\">\n                          <button @click=\"openEditCategoryDrawer(category)\" class=\"dropdown-link\">\n                            <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                            <span>{{ trans('Edit') }}</span>\n                          </button>\n                        </li>\n\n                        <li class=\"dropdown-list-item\">\n                          <button\n                            as=\"button\"\n                            class=\"dropdown-link\"\n                            @click=\"deleteRow(route('admin.job-category.destroy', category.id))\"\n                          >\n                            <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                              >{{ trans('Remove') }}></i\n                            >\n                            <span>{{ trans('Delete') }}</span>\n                          </button>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n      </div>\n      <Paginate :links=\"categories.links\" />\n    </div>\n  </main>\n\n  <div id=\"addNewCategoryDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeCategory()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Add New Category') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Title') }}</label>\n          <input v-model=\"categoryForm.title\" type=\"text\" class=\"input\" required />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Icon') }}</label>\n          <input\n            @input=\"(e) => (categoryForm.icon = e.target.files[0])\"\n            type=\"file\"\n            class=\"input\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Preview') }}</label>\n          <input\n            @input=\"(e) => (categoryForm.preview = e.target.files[0])\"\n            type=\"file\"\n            class=\"input\"\n            required\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Service') }}</label>\n          <select required v-model=\"categoryForm.category_id\" class=\"select\" name=\"category_id\">\n            <option value=\"\" selected disabled>SELECT SERVICE</option>\n            <option :value=\"service.id\" v-for=\"service in allServices\" :key=\"service.id\">\n              {{ service.title }}\n            </option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Status') }}</label>\n          <select required v-model=\"categoryForm.status\" class=\"select\" name=\"status\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Deactive') }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Is Featured ?') }}</label>\n          <select required v-model=\"categoryForm.is_featured\" class=\"select\" name=\"IsFeatured\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Deactive') }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Add to menu ?') }}</label>\n          <select required v-model=\"categoryForm.is_menu_item\" class=\"select\" name=\"is_menu_item\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Deactive') }}</option>\n          </select>\n        </div>\n        \n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"btn btn-secondary w-full\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"btn btn-primary w-full\"\n            :processing=\"categoryForm.processing\"\n            :btn-text=\"trans('Save Now')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"editCategoryDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateCategory()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Edit Category') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Title') }}</label>\n          <input v-model=\"editForm.title\" type=\"text\" class=\"input\" required />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Service') }}</label>\n          <select required v-model=\"editForm.category_id\" class=\"select\">\n            <option\n              :selected=\"editForm.category_id == service.id\"\n              :value=\"service.id\"\n              v-for=\"service in allServices\"\n              :key=\"service.id\"\n            >\n              {{ service.title }}\n            </option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Preview') }}</label>\n          <input @input=\"(e) => (editForm.preview = e.target.files[0])\" type=\"file\" class=\"input\" />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Status') }}</label>\n          <select v-model=\"editForm.status\" class=\"select\" name=\"status\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Inactive') }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Is Featured?') }}</label>\n          <select v-model=\"editForm.is_featured\" class=\"select\" name=\"is_featured\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Inactive') }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Add to menu ?') }}</label>\n          <select required v-model=\"editForm.is_menu_item\" class=\"select\" name=\"is_menu_item\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Deactive') }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"btn btn-secondary w-full\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"btn btn-primary w-full\"\n            :processing=\"editForm.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm, router } from '@inertiajs/vue3'\nimport Paginate from '@/Components/Paginate.vue'\nimport { ref } from 'vue'\nimport trans from '@/Composables/transComposable'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport Overview from '@/Components/Admin/OverviewGrid.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport drawer from '@/Plugins/Admin/drawer'\nimport { onMounted, computed } from 'vue'\nimport notify from '@/Plugins/Admin/notify'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\n\ndefineOptions({ layout: AdminLayout })\nconst { deleteRow } = sharedComposable()\n\nonMounted(() => {\n  drawer.init()\n})\n\nconst props = defineProps([\n  'categories',\n  'totalCategories',\n  'activeCategories',\n  'inActiveCategories',\n  'languages',\n  'buttons',\n  'segments'\n])\nconst serviceStats = computed(() => {\n  return [\n    {\n      value: props.totalCategories,\n      title: trans('Total Services'),\n      iconClass: 'bx bx-badge'\n    },\n    {\n      value: props.activeCategories,\n      title: trans('Active Services'),\n      iconClass: 'bx bx-badge-check'\n    },\n    {\n      value: props.inActiveCategories,\n      title: trans('Inactive Services'),\n      iconClass: 'bx bx-x-circle'\n    }\n  ]\n})\n\nconst serviceForm = useForm({\n  title: '',\n  status: 1,\n  icon: null,\n  preview: null,\n  is_menu_item: 0,\n  is_featured: 0\n})\n\nconst editForm = ref({})\n\nconst storeService = () => {\n  serviceForm.post(route('admin.job-service.store'), {\n    onSuccess: () => {\n      serviceForm.reset()\n      notify.success(trans('Service has been added successfully'))\n      drawer.of('#addNewCategoryDrawer').hide()\n    }\n  })\n}\n\nconst openEditServiceDrawer = (category) => {\n  editForm.value = { ...category }\n  drawer.of('#editCategoryDrawer').show()\n}\n\nconst updateService = () => {\n  if (!(editForm.value.preview instanceof File)) {\n    editForm.value.preview = null\n  }\n  router.post(\n    route('admin.job-service.update', editForm.value.id),\n    {\n      _method: 'PATCH',\n      service: editForm.value\n    },\n    {\n      onSuccess: () => {\n        editForm.value = {}\n        notify.success(trans('Service has been updated successfully'))\n        drawer.of('#editCategoryDrawer').hide()\n      }\n    }\n  )\n}\n</script>\n\n<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment title=\"Services\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"serviceStats\" grid=\"3\" />\n\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans('Name') }}</th>\n              <th>{{ trans('Slug') }}</th>\n              <th>{{ trans('Status') }}</th>\n              <th>{{ trans('Featured') }}</th>\n              <th>{{ trans('Menu Status') }}</th>\n              <th>\n                <p class=\"text-end\">{{ trans('Action') }}</p>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody v-if=\"categories.total\">\n            <tr v-for=\"category in categories.data\" :key=\"category.id\">\n              <td class=\"text-left\">\n                <img class=\"mr-1 inline w-12 rounded-full\" :src=\"category.preview\" alt=\"preview\" />\n                {{ category.title }}\n              </td>\n              <td class=\"text-left\">\n                {{ category.slug }}\n              </td>\n\n              <td class=\"text-left\">\n                <span\n                  class=\"badge\"\n                  :class=\"category.status == 1 ? 'badge-success' : 'badge-danger'\"\n                >\n                  {{ category.status == 1 ? trans('Active') : trans('Draft') }}\n                </span>\n              </td>\n              <td class=\"text-left\">\n                <span\n                  class=\"badge\"\n                  :class=\"category.is_featured == 1 ? 'badge-success' : 'badge-danger'\"\n                >\n                  {{ category.is_featured == 1 ? trans('Featured') : trans('Not Featured') }}\n                </span>\n              </td>\n              <td class=\"text-right\">\n                <span\n                  class=\"badge\"\n                  :class=\"category.is_menu_item == 1 ? 'badge-success' : 'badge-danger'\"\n                >\n                  {{ category.is_menu_item == 1 ? trans('Enabled') : trans('Disabled') }}\n                </span>\n              </td>\n              <td class=\"\">\n                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                  <div class=\"dropdown-toggle\">\n                    <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                  </div>\n                  <div class=\"dropdown-content w-40\">\n                    <ul class=\"dropdown-list\">\n                      <li class=\"dropdown-list-item\">\n                        <button @click=\"openEditServiceDrawer(category)\" class=\"dropdown-link\">\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans('Edit') }}</span>\n                        </button>\n                      </li>\n\n                      <li class=\"dropdown-list-item\">\n                        <button\n                          as=\"button\"\n                          class=\"dropdown-link\"\n                          @click=\"deleteRow(route('admin.job-service.destroy', category.id))\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                            >{{ trans('Remove') }}></i\n                          >\n                          <span>{{ trans('Delete') }}</span>\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n      </div>\n      <Paginate :links=\"categories.links\" />\n    </div>\n  </main>\n\n  <div id=\"addNewCategoryDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeService()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Add New Service') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Title') }}</label>\n          <input v-model=\"serviceForm.title\" type=\"text\" name=\"title\" class=\"input\" required />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Icon') }}</label>\n          <input\n            @input=\"(e) => (serviceForm.icon = e.target.files[0])\"\n            type=\"file\"\n            name=\"icon\"\n            class=\"input\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Preview') }}</label>\n          <input\n            @input=\"(e) => (serviceForm.preview = e.target.files[0])\"\n            type=\"file\"\n            name=\"preview\"\n            class=\"input\"\n            required\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Status') }}</label>\n          <select required v-model=\"serviceForm.status\" class=\"select\" name=\"status\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Deactive') }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Is Featured') }}</label>\n          <select required v-model=\"serviceForm.is_featured\" class=\"select\" name=\"IsFeatured\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Deactive') }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Add to menu') }}</label>\n          <select required v-model=\"serviceForm.is_menu_item\" class=\"select\" name=\"IsFeatured\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Deactive') }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex gap-2\">\n          <button type=\"button\" class=\"btn btn-secondary w-full\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"btn btn-primary w-full\"\n            :processing=\"serviceForm.processing\"\n            :btn-text=\"trans('Save Now')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"editCategoryDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateService()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Edit Category') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Title') }}</label>\n          <input v-model=\"editForm.title\" type=\"text\" name=\"title\" class=\"input\" required />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Icon') }}</label>\n          <input\n            @input=\"(e) => (editForm.icon = e.target.files[0])\"\n            type=\"file\"\n            name=\"icon\"\n            class=\"input\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Preview') }}</label>\n          <input\n            @input=\"(e) => (editForm.preview = e.target.files[0])\"\n            type=\"file\"\n            name=\"preview\"\n            class=\"input\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Status') }}</label>\n          <select v-model=\"editForm.status\" class=\"select\" name=\"status\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Deactive') }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Is Featured') }}</label>\n          <select v-model=\"editForm.is_featured\" class=\"select\" name=\"is_featured\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Deactive') }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"label mb-2\">{{ trans('Add to menu') }}</label>\n          <select v-model=\"editForm.is_menu_item\" class=\"select\" name=\"is_menu_item\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Deactive') }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex gap-2\">\n          <button type=\"button\" class=\"btn btn-secondary w-full\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"btn btn-primary w-full\"\n            :processing=\"editForm.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n","\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm, router } from '@inertiajs/vue3'\nimport Paginate from '@/Components/Paginate.vue'\nimport moment from 'moment'\nimport { ref } from 'vue'\nimport trans from '@/Composables/transComposable'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport Overview from '@/Components/Admin/OverviewGrid.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport drawer from '@/Plugins/Admin/drawer'\nimport { onMounted, computed } from 'vue'\nimport notify from '@/Plugins/Admin/notify'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\n\ndefineOptions({ layout: AdminLayout })\nconst { deleteRow } = sharedComposable()\n\nonMounted(() => {\n  drawer.init()\n})\n\nconst props = defineProps([\n  'tags',\n  'totalTags',\n  'activeTags',\n  'inActiveTags',\n  'languages',\n  'buttons',\n  'segments',\n  'allCategory'\n])\n\nconst tagsStats = computed(() => {\n  return [\n    {\n      value: props.totalTags,\n      title: trans('Total Skills'),\n      iconClass: \"bx bx-badge\",\n    },\n    {\n      value: props.activeTags,\n      title: trans('Active Skills'),\n      iconClass: \"bx bx-badge-check\",\n    },\n    {\n      value: props.inActiveTags,\n      title: trans('Inactive Skills'),\n      iconClass: \"bx bx-x-circle\",\n    }\n  ]\n})\n\nconst tagForm = useForm({\n  title: '',\n  category_id: '',\n  status: 1\n})\n\nconst editForm = ref({})\n\nconst storeTag = () => {\n  tagForm.post(route('admin.job-skills.store'), {\n    onSuccess: () => {\n      tagForm.reset()\n      notify.success(trans('Tag has been added successfully'))\n      drawer.of('#addNewCategoryDrawer').hide()\n    }\n  })\n}\n\nconst openEditTagDrawer = (tag) => {\n  editForm.value = { ...tag }\n  drawer.of('#editCategoryDrawer').show()\n}\n\nconst updateTag = () => {\n  router.patch(route('admin.job-skills.update', editForm.value.id), editForm.value, {\n    onSuccess: () => {\n      editForm.value = {}\n      notify.success(trans('Tag has been updated successfully'))\n      drawer.of('#editCategoryDrawer').hide()\n    }\n  })\n}\n</script>\n\n\n<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment title=\"Job Tags\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"tagsStats\" grid=\"3\" />\n\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"\">{{ trans('Name') }}</th>\n              <th class=\"\">{{ trans('Category Title') }}</th>\n              <th class=\"\">{{ trans('Slug') }}</th>\n              <th class=\"\">{{ trans('Status') }}</th>\n              <th class=\"\">{{ trans('Created At') }}</th>\n              <th class=\"flex justify-end\">{{ trans('Action') }}</th>\n            </tr>\n          </thead>\n\n          <tbody v-if=\"tags.total\">\n            <tr v-for=\"tag in tags.data\" :key=\"tag.id\">\n              <td class=\"text-left\">\n                {{ tag.title }}\n              </td>\n              <td class=\"text-left\">\n                {{ tag.parent?.title }}\n              </td>\n              <td class=\"text-left\">\n                {{ tag.slug }}\n              </td>\n              <td class=\"text-left\">\n                <span class=\"badge\" :class=\"tag.status == 1 ? 'badge-success' : 'badge-danger'\">\n                  {{ tag.status == 1 ? trans('Active') : trans('Draft') }}\n                </span>\n              </td>\n              <td>\n                {{ moment(tag.created_at).format('D-MMM-Y') }}\n              </td>\n              <td>\n                <div class=\"flex justify-end\">\n                  <div class=\"dropdown\" data-placement=\"bottom-start\">\n                    <div class=\"dropdown-toggle\">\n                      <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                    </div>\n                    <div class=\"w-40 dropdown-content\">\n                      <ul class=\"dropdown-list\">\n                        <li class=\"dropdown-list-item\">\n                          <button @click=\"openEditTagDrawer(tag)\" class=\"dropdown-link\">\n                            <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                            <span>{{ trans('Edit') }}</span>\n                          </button>\n                        </li>\n\n                        <li class=\"dropdown-list-item\">\n                          <button\n                            as=\"button\"\n                            class=\"dropdown-link\"\n                            @click=\"deleteRow(route('admin.job-skills.destroy', tag.id))\"\n                          >\n                            <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                              >{{ trans('Remove') }}></i\n                            >\n                            <span>{{ trans('Delete') }}</span>\n                          </button>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n      </div>\n      <Paginate :links=\"tags.links\" />\n    </div>\n  </main>\n\n  <div id=\"addNewCategoryDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeTag()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Add New Skill') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans('Title') }}</label>\n          <input v-model=\"tagForm.title\" type=\"text\" name=\"title\" class=\"input\" required />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans('Category') }}</label>\n          <select required v-model=\"tagForm.category_id\" class=\"select\" name=\"category_id\">\n            <option :value=\"category.id\" v-for=\"category in allCategory\" :key=\"category.id\">\n              {{ category.title }}\n            </option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans('Status') }}</label>\n          <select required v-model=\"tagForm.status\" class=\"select\" name=\"status\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Deactive') }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"tagForm.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"editCategoryDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateTag()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Edit Skill') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans('Title') }}</label>\n          <input v-model=\"editForm.title\" type=\"text\" name=\"title\" class=\"input\" required />\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans('Category') }}</label>\n          <select required v-model=\"editForm.category_id\" class=\"select\" name=\"category_id\">\n            <option\n              :selected=\"editForm.category_id == category.id\"\n              :value=\"category.id\"\n              v-for=\"category in allCategory\"\n              :key=\"category.id\"\n            >\n              {{ category.title }}\n            </option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"mb-2 label\">{{ trans('Status') }}</label>\n          <select v-model=\"editForm.status\" class=\"select\" name=\"status\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Deactive') }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"editForm.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n","<script setup>\nimport notify from \"@/Plugins/Admin/notify\"\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport { useForm } from \"@inertiajs/vue3\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport InputFieldError from \"@/Components/InputFieldError.vue\"\ndefineOptions({ layout: AdminLayout })\n\ndefineProps(['types', 'segments', 'buttons'])\n\nconst form = useForm({\n    image: '',\n    title: '',\n    status: 1,\n    image_accept: 1,\n    fields: [\n        {\n            label: '',\n            type: 'text',\n        }\n    ]\n})\n\nconst submit = () => {\n    form.post(route('admin.kyc-methods.store'), {\n        onSuccess: () => {\n            notify.success('Method has been added successfully')\n        }\n    })\n}\n\nconst addItem = () => {\n    form.fields.push({\n        label: '',\n        type: 'text',\n    })\n}\n\nconst removeItem = (index) => {\n    form.fields.splice(index, 1)\n}\n\n</script>\n\n<template>\n    <main class=\"container p-4 sm:p-6\">\n        <HeaderSegment :title=\"trans('KYC Methods Create')\" :segments=\"segments\" :buttons=\"buttons\" />\n        <form @submit.prevent=\"submit\">\n            <div class=\"grid grid-cols-1 lg:grid-cols-2 space-x-5\">\n\n                <div class=\"col-1\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <div class=\"mb-2\">\n                                <label for=\"image\" class=\"required\">{{ trans('Image') }}</label>\n                                <input type=\"file\" @change=\"e => form.image = e.target.files[0]\" class=\"input\">\n                                <InputFieldError :message=\"form.errors.image\" />\n                            </div>\n                            <div class=\"mb-2\">\n                                <label for=\"title\" class=\"required\">{{ trans('Title') }}</label>\n                                <input type=\"text\" v-model=\"form.title\" id=\"title\" class=\"input\"\n                                    :placeholder=\"trans('Enter Title')\">\n                                <InputFieldError :message=\"form.errors.title\" />\n                            </div>\n                            <div class=\"mb-2\">\n                                <label for=\"image_accept\" class=\"required\">{{ trans('Accept Attachments') }}</label>\n                                <select v-model=\"form.image_accept\" id=\"image_accept\" class=\"select\" data-control=\"select2\"\n                                    required>\n                                    <option value=\"1\">{{ trans('Yes') }}</option>\n                                    <option value=\"0\">{{ trans('No') }}</option>\n                                </select>\n                            </div>\n                            <div class=\"mb-2\">\n                                <label for=\"status\" class=\"required\">{{ trans('Status:') }}</label>\n                                <select v-model=\"form.status\" id=\"status\" class=\"select\" data-control=\"select2\" required>\n                                    <option value=\"1\">{{ trans('Active') }}</option>\n                                    <option value=\"0\">{{ trans('Inactive') }}</option>\n                                </select>\n                            </div>\n                            <SpinnerBtn classes=\"btn btn-primary\" :processing=\"form.processing\" btn-text=\"Save Method\" />\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-1\">\n                    <div class=\"card\">\n                        <div class=\"card-header \">\n                            <div class=\"flex justify-between\">\n                                <h4>{{ trans('Document Fields') }}</h4>\n                                <button type=\"button\" class=\"btn btn-primary\" @click=\"addItem\">\n                                    <i class=\"fas fa-plus-circle\"></i>\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class=\"card-body\">\n                            <div class=\"mb-2\">\n                                <div class=\"input-group mb-5\" v-for=\"(field, index) in form.fields\" :key=\"field\">\n\n                                    <input type=\"text\" v-model=\"field.label\" class=\"input\"\n                                        :placeholder=\"trans('Enter input label')\" aria-label=\"\" required>\n                                    <select v-model=\"field.type\" class=\"input\" required>\n                                        <option v-for=\"item in types\" :key=\"item\" :value=\"item\">{{ item }}</option>\n                                       \n                                    </select>\n\n                                    <button type=\"button\" class=\"btn btn-danger\" @click=\"removeItem(index)\">\n                                        <i class=\"fas fa-times-circle\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        </form>\n    </main>\n</template>","<script setup>\nimport notify from '@/Plugins/Admin/notify'\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport { useForm } from '@inertiajs/vue3'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport InputFieldError from '@/Components/InputFieldError.vue'\n\ndefineOptions({ layout: AdminLayout })\n\nconst { kycMethod, types, segments, buttons } = defineProps([\n  'types',\n  'kycMethod',\n  'segments',\n  'buttons'\n])\n\nconst form = useForm({ ...kycMethod, _method: 'put' })\n\nform.image = null\n\nconst submit = () => {\n  form.post(route('admin.kyc-methods.update', kycMethod), {\n    onSuccess: () => {\n      notify.success('Method has been updated successfully')\n    }\n  })\n}\n\nconst addItem = () => {\n  form.fields.push({\n    label: '',\n    type: 'text'\n  })\n}\n\nconst removeItem = (index) => {\n  form.fields.splice(index, 1)\n}\n</script>\n\n<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('KYC Methods Create')\" :segments=\"segments\" :buttons=\"buttons\" />\n    <form @submit.prevent=\"submit\">\n      <div class=\"grid grid-cols-1 space-x-5 lg:grid-cols-2\">\n        <div class=\"col-1\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"mb-2\">\n                <label for=\"image\" class=\"required\">{{ trans('Image') }}</label>\n                <input\n                  type=\"file\"\n                  @change=\"(e) => (form.image = e.target.files[0])\"\n                  class=\"input\"\n                />\n                <InputFieldError :message=\"form.errors.image\" />\n              </div>\n              <div class=\"mb-2\">\n                <label for=\"title\" class=\"required\">{{ trans('Title') }}</label>\n                <input\n                  type=\"text\"\n                  v-model=\"form.title\"\n                  id=\"title\"\n                  class=\"input\"\n                  :placeholder=\"trans('Enter Title')\"\n                />\n                <InputFieldError :message=\"form.errors.title\" />\n              </div>\n              <div class=\"mb-2\">\n                <label for=\"image_accept\" class=\"required\">{{ trans('Accept Attachments') }}</label>\n                <select\n                  v-model=\"form.image_accept\"\n                  id=\"image_accept\"\n                  class=\"select\"\n                  data-control=\"select2\"\n                  required\n                >\n                  <option value=\"1\">{{ trans('Yes') }}</option>\n                  <option value=\"0\">{{ trans('No') }}</option>\n                </select>\n              </div>\n              <div class=\"mb-2\">\n                <label for=\"status\" class=\"required\">{{ trans('Status:') }}</label>\n                <select\n                  v-model=\"form.status\"\n                  id=\"status\"\n                  class=\"select\"\n                  data-control=\"select2\"\n                  required\n                >\n                  <option value=\"1\">{{ trans('Active') }}</option>\n                  <option value=\"0\">{{ trans('Inactive') }}</option>\n                </select>\n              </div>\n              <SpinnerBtn\n                classes=\"btn btn-primary\"\n                :processing=\"form.processing\"\n                btn-text=\"Save Changes\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-1\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <div class=\"flex justify-between\">\n                <h4>{{ trans('Document Fields') }}</h4>\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"addItem\">\n                  <i class=\"fas fa-plus-circle\"></i>\n                </button>\n              </div>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"mb-2\">\n                <div class=\"input-group mb-5\" v-for=\"(field, index) in form.fields\" :key=\"field\">\n                  <input\n                    type=\"text\"\n                    v-model=\"field.label\"\n                    class=\"input\"\n                    :placeholder=\"trans('Enter input label')\"\n                    aria-label=\"\"\n                    required\n                  />\n                  <select v-model=\"field.type\" class=\"input\" required>\n                    <option v-for=\"item in types\" :key=\"item\" :value=\"item\">\n                      {{ item }}\n                    </option>\n                  </select>\n\n                  <button type=\"button\" class=\"btn btn-danger\" @click=\"removeItem(index)\">\n                    <i class=\"fas fa-times-circle\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </main>\n</template>\n","<script setup>\nimport Paginate from '@/Components/Paginate.vue'\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport { useForm } from '@inertiajs/vue3'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport moment from 'moment'\nimport trans from '@/Composables/transComposable'\nimport OverviewGrid from '@/Components/Admin/OverviewGrid.vue'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps([\n  'kycMethods',\n  'all',\n  'active',\n  'inactive',\n  'segments',\n  'buttons',\n  'KYC_MUST_VERIFIED'\n])\n\nconst overviewItems = [\n  { value: props.all, title: trans('All'), iconClass: 'bx bx-bar-chart' },\n  { value: props.active, title: trans('Active'), iconClass: 'bx bx-check-circle' },\n  { value: props.inactive, title: trans('Inactive'), iconClass: 'bx bx-x-circle' }\n]\n\nconst form = useForm({\n  method: '',\n  ids: []\n})\n\nconst submit = () => {\n  modal.init(route('admin.kyc-methods.mass-destroy'), {\n    method: 'post',\n    data: form.ids,\n    options: {\n      confirm_text: 'Are you sure want to do this action ?',\n      message: '',\n      accept_btn_text: 'Yes, Confirm',\n      reject_btn_text: 'No, Cancel',\n      success_message: 'Methods has been deleted successfully'\n    }\n  })\n}\n\nconst selectAll = (e) => {\n  let isAllSelected = form.ids.length == props.kycMethods.data.length\n\n  if (isAllSelected) {\n    if (!e) {\n      form.ids = []\n    }\n  } else {\n    if (e) {\n      form.ids = props.kycMethods.data.map((item) => item.id)\n    }\n  }\n}\n</script>\n\n<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('KYC Methods')\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-4\">\n      <OverviewGrid :items=\"overviewItems\" grid=\"3\" />\n\n      <form @submit.prevent=\"submit\">\n        <div class=\"mb-3 w-72\">\n          <div class=\"input-group\">\n            <select class=\"select\" v-model=\"form.method\">\n              <option value=\"\">{{ trans('Select Action') }}</option>\n              <option value=\"delete\">{{ trans('Delete Permanently') }}</option>\n            </select>\n            <button class=\"btn btn-primary\" type=\"submit\" :disabled=\"!form.ids.length\">\n              {{ trans('Submit') }}\n            </button>\n          </div>\n        </div>\n\n        <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th>\n                  <input\n                    type=\"checkbox\"\n                    class=\"checkbox\"\n                    @input=\"selectAll($event.target.checked)\"\n                  />\n                </th>\n                <th>{{ trans('Method') }}</th>\n                <th>{{ trans('Total Used') }}</th>\n\n                <th>{{ trans('Accept Attach.') }}</th>\n                <th>{{ trans('Created At') }}</th>\n                <th>{{ trans('Status') }}</th>\n                <th>\n                  <p class=\"text-end\">{{ trans('Action') }}</p>\n                </th>\n              </tr>\n            </thead>\n            <tbody v-if=\"kycMethods.total\">\n              <tr v-for=\"item in kycMethods.data\" :key=\"item.id\">\n                <td>\n                  <input type=\"checkbox\" v-model=\"form.ids\" class=\"checkbox\" :value=\"item.id\" />\n                </td>\n                <td>\n                  <div class=\"flex items-center gap-2\">\n                    <img :src=\"item.image\" height=\"50\" width=\"50\" />\n                    {{ item.title }}\n                  </div>\n                </td>\n                <td>\n                  {{ item.requests_count ?? 0 }}\n                </td>\n\n                <td>\n                  <span v-if=\"item.image_accept\" class=\"badge badge-success\">\n                    {{ trans('Yes') }}\n                  </span>\n                  <span v-else class=\"badge badge-danger\">{{ trans('No') }} </span>\n                </td>\n\n                <td>{{ moment(item.created_at).format('DD MMM, YYYY') }}</td>\n\n                <td>\n                  <span v-if=\"item.status\" class=\"badge badge-success\">{{ trans('Active') }} </span>\n                  <span v-else class=\"badge badge-danger\">{{ trans('Inactive') }} </span>\n                </td>\n\n                <td>\n                  <div class=\"flex justify-end\">\n                    <Link :href=\"route('admin.kyc-methods.edit', item)\" class=\"btn btn-primary\">\n                      <i class=\"fa fa-edit\"></i>\n                    </Link>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n            <NoDataFound v-else :for-table=\"true\" />\n          </table>\n          <!-- pagination -->\n        </div>\n        <Paginate :links=\"kycMethods.links\" />\n      </form>\n    </div>\n  </main>\n</template>\n","\n<script setup>\nimport { Link } from \"@inertiajs/vue3\"\n\nconst props = defineProps(['pages'])\nconst pages = props.pages ?? []\n\nconst links = pages.links ?? []\nconst currentPage = pages.current_page\nconst from = pages.from\nconst lastPage = pages.last_page\nconst lastPageUrl = pages.last_page_url\nconst nextpageurl = pages.next_page_url\nconst perPage = pages.per_page\nconst prevPageUrl = pages.prev_page_url\nconst to = pages.to\nconst total = pages.total\n\n\n\n</script>\n\n<template>\n    <div class=\"flex flex-col items-center justify-between gap-y-4 md:flex-row\" v-if=\"perPage < total > 0\">\n        <p class=\"text-xs font-normal text-slate-400\">{{ trans('Showing') }} {{ from }} {{ trans('to') }} {{ to }} {{\n            trans('of') }} {{ total }} {{ trans('result') }}</p>\n\n        <nav class=\"pagination\">\n            <ul class=\"pagination-list\">\n                <template v-if=\"links.length > 3\">\n                    <template v-for=\"pageLink in links\" :key=\"pageLink\">\n                        <template v-if=\"pageLink.url != null\">\n\n                            <!-- prev item -->\n                            <li v-if=\"pageLink.label == '&laquo; Previous'\" class=\"pagination-item\">\n                                <Link class=\"pagination-link pagination-link-prev-icon\" :href=\"pageLink.url\" tabindex=\"-1\">\n                                <i data-feather=\"chevron-left\" width=\"1em\" height=\"1em\"></i>\n                                </Link>\n                            </li>\n\n                            <!-- next item -->\n                            <li class=\"pagination-item\" v-else-if=\"pageLink.label == 'Next &raquo;'\">\n                                <Link class=\"pagination-link pagination-link-next-icon\" :href=\"pageLink.url\">\n                                <i data-feather=\"chevron-right\" width=\"1em\" height=\"1em\"></i>\n                                </Link>\n                            </li>\n\n                            <!-- regular item -->\n                            <li class=\"pagination-item\" :class=\"{ 'active': pageLink.active == true }\" v-else>\n                                <Link class=\"pagination-link\" :href=\"pageLink.url\">{{\n                                    pageLink.label\n                                }}</Link>\n                            </li>\n                        </template>\n                    </template>\n                </template>\n            </ul>\n        </nav>\n\n    </div>\n</template>\n","<script setup>\nimport { Link, useForm } from '@inertiajs/vue3'\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport Pagination from '@/Components/Admin/Pagination.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport OverviewGrid from '@/Components/Admin/OverviewGrid.vue'\nimport trans from '@/Composables/transComposable'\nimport { modal } from '@/Composables/modalComposable'\nimport { ref } from 'vue'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\ndefineOptions({ layout: AdminLayout })\nimport sharedComposable from '@/Composables/sharedComposable'\nconst { getQueryParams } = sharedComposable()\n\nconst request = getQueryParams()\n\nconst props = defineProps([\n  'requests',\n  'all',\n  'approved',\n  'pending',\n  'rejected',\n  'reSubmitted',\n  'segments',\n  'buttons',\n  'request'\n])\n\nconst orderOverviews = [\n  {\n    value: props.all,\n    title: trans('All'),\n    iconClass: 'bx bx-bar-chart'\n  },\n  {\n    value: props.pending,\n    title: trans('Pending'),\n    iconClass: 'bx bx-badge'\n  },\n  {\n    value: props.approved,\n    title: trans('Approved'),\n    iconClass: 'bx bx-check-circle'\n  },\n  {\n    value: props.rejected,\n    title: trans('Rejected'),\n    iconClass: 'bx bx-x-circle'\n  },\n  {\n    value: props.reSubmitted,\n    title: trans('re-submitted'),\n    iconClass: 'bx bx-redo'\n  }\n]\n\nconst filterForm = useForm({\n  keyword: request.keyword ?? ''\n})\n\nconst filterFormSubmit = () => {\n  filterForm.get(window.location.href)\n}\n\nconst ids = ref([])\nconst selectedAction = ref('')\n\nconst submit = () => {\n  if (selectedAction.value == 'delete') {\n    modal.init(route('admin.kyc-requests.destroy.mass'), {\n      method: 'post',\n      data: ids,\n      options: {\n        confirm_text: 'Are you sure want to do this action ?',\n        message: '',\n        accept_btn_text: 'Yes, Confirm',\n        reject_btn_text: 'No, Cancel',\n        success_message: 'Requests has been deleted successfully'\n      }\n    })\n  }\n}\n\nconst selectAll = (e) => {\n  let isAllSelected = ids.value.length == props.requests.data.length\n\n  if (isAllSelected) {\n    if (!e) {\n      ids.value = []\n    }\n  } else {\n    if (e) {\n      ids.value = props.requests.data.map((item) => item.id)\n    }\n  }\n}\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('KYC Requests')\" :segments=\"segments\" :buttons=\"buttons\" />\n\n    <div class=\"space-y-4\">\n      <OverviewGrid\n        :items=\"orderOverviews\"\n        class=\"grid grid-cols-2 gap-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5\"\n      />\n\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <form @submit.prevent=\"filterFormSubmit\">\n            <div class=\"flex justify-between\">\n              <h4>{{ trans('KYC Requests') }}</h4>\n              <div class=\"input-group w-72\">\n                <input\n                  type=\"text\"\n                  v-model=\"filterForm.keyword\"\n                  class=\"input\"\n                  :placeholder=\"trans('Search by invoice or user')\"\n                />\n                <button type=\"submit\" class=\"btn btn-primary btn-icon\">\n                  <i class=\"fas fa-search\"></i>\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"card-body\">\n          <div v-if=\"requests.data\">\n            <div class=\"input-group w-72\">\n              <select :disabled=\"!ids.length\" class=\"select\" v-model=\"selectedAction\">\n                <option value=\"\">{{ trans('Action') }}</option>\n                <option value=\"delete\">{{ trans('Delete') }}</option>\n              </select>\n              <button\n                @click=\"submit\"\n                :disabled=\"!ids.length || selectedAction == ''\"\n                class=\"btn btn-outline-secondary\"\n              >\n                {{ trans('Go') }}\n              </button>\n            </div>\n\n            <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th class=\"pt-2 text-center\">\n                      <input\n                        type=\"checkbox\"\n                        class=\"checkbox\"\n                        @input=\"selectAll($event.target.checked)\"\n                      />\n                    </th>\n                    <th>{{ trans('Request ID') }}</th>\n                    <th>{{ trans('Method') }}</th>\n                    <th>{{ trans('Company') }}</th>\n                    <th>{{ trans('Status') }}</th>\n                    <th>{{ trans('Documents') }}</th>\n                    <th>{{ trans('Created At') }}</th>\n                    <th>\n                      <p class=\"text-end\">{{ trans('Action') }}</p>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody v-if=\"requests.total\">\n                  <tr v-for=\"item in requests.data\" :key=\"item\">\n                    <td class=\"text-center\">\n                      <input\n                        type=\"checkbox\"\n                        v-model=\"ids\"\n                        :id=\"`request-${item.id}`\"\n                        class=\"checkbox\"\n                        :value=\"item.id\"\n                      />\n                    </td>\n                    <td>#{{ item.id }}</td>\n                    <td>{{ item.method?.title }}</td>\n                    <td>\n                      <Link :href=\"route('admin.companies.show', item.user)\">{{\n                        item.user?.name\n                      }}</Link>\n                    </td>\n                    <td>\n                      <span v-if=\"item.status == 0\" class=\"badge badge-warning\">{{\n                        trans('Pending')\n                      }}</span>\n                      <span v-else-if=\"item.status == 1\" class=\"badge badge-primary\">{{\n                        trans('Approved')\n                      }}</span>\n                      <span v-else-if=\"item.status == 2\" class=\"badge badge-danger\">{{\n                        trans('Rejected')\n                      }}</span>\n                      <span v-else-if=\"item.status == 3\" class=\"badge badge-dark\">{{\n                        trans('Re-Submitted')\n                      }}</span>\n                    </td>\n                    <td>{{ item.data.length }}</td>\n                    <td>{{ item.created_at_date }}</td>\n                    <td>\n                      <div class=\"flex justify-end gap-2\">\n                        <Link\n                          class=\"btn btn-primary\"\n                          :href=\"route('admin.kyc-requests.show', item.id)\"\n                        >\n                          <i class=\"fas fa-eye\"></i>\n                          {{ trans('View') }}\n                        </Link>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n                <NoDataFound v-else :for-table=\"true\" />\n              </table>\n\n              <Pagination v-if=\"requests.data.length != 0\" />\n            </div>\n          </div>\n          <p v-else class=\"text-center font-bold\">\n            {{ trans('No requests available yet') }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport trans from '@/Composables/transComposable'\nimport { modal } from '@/Composables/modalComposable'\nimport moment from 'moment'\n\ndefineOptions({ layout: AdminLayout })\ndefineProps(['kycRequest', 'segments', 'buttons'])\n\nconst submitForm = (route, request, status) => {\n  let data = {\n    request: request,\n    status: status\n  }\n\n  modal.init(route, {\n    method: 'post',\n    data,\n    options: {\n      confirm_text: 'Are you sure want to do this action ?',\n      message: '',\n      accept_btn_text: 'Yes, Confirm',\n      reject_btn_text: 'No, Cancel'\n    }\n  })\n}\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('KYC Requests details')\" :segments=\"segments\" :buttons=\"buttons\" />\n\n    <div class=\"space-y-4\">\n      <div class=\"grid grid-cols-3 gap-3\">\n        <div class=\"col-span-1 rounded bg-white p-5 shadow dark:bg-dark-800\">\n          <table class=\"table shadow-none\">\n            <tbody>\n              <tr>\n                <td colspan=\"3\">\n                  <img :src=\"kycRequest.user?.avatar\" alt=\"\" class=\"card-img\" />\n                </td>\n              </tr>\n              <tr>\n                <th>{{ trans('Name') }}</th>\n                <td>:</td>\n                <td>\n                  {{ kycRequest.user?.name }}\n                </td>\n              </tr>\n              <tr>\n                <th>{{ trans('Email') }}</th>\n                <td>:</td>\n                <td>{{ kycRequest.user?.email }}</td>\n              </tr>\n              <tr>\n                <th>{{ trans('Phone') }}</th>\n                <td>:</td>\n                <td>{{ kycRequest.user?.phone ?? '-' }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"col-span-2 rounded bg-white p-5 shadow dark:bg-dark-800\">\n          <table class=\"table-borderless table shadow-none\">\n            <tbody>\n              <tr>\n                <th>{{ trans('KYC Verified At') }}</th>\n                <td>\n                  <div v-if=\"kycRequest.user?.kyc_verified_at\">\n                    {{ moment(kycRequest.user?.kyc_verified_at).format('DD MMM, Y') }}\n                  </div>\n                  <div v-else>\n                    <div class=\"badge badge-danger\">\n                      {{ trans('Not yet verified!') }}\n                    </div>\n                    <br />\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <th>{{ trans('Current Status') }}</th>\n                <td>\n                  <span v-if=\"kycRequest.status == 0\" class=\"badge badge-warning\">\n                    {{ trans('Pending') }}</span>\n                  <span v-else-if=\"kycRequest.status == 1\" class=\"badge badge-primary\">\n                    {{ trans('Approved') }}</span>\n                  <span v-else-if=\"kycRequest.status == 2\" class=\"badge badge-danger\">\n                    {{ trans('Rejected') }}</span>\n                  <span v-else-if=\"kycRequest.status == 3\" class=\"badge badge-dark\">\n                    {{ trans('Re-Submitted') }}</span>\n                </td>\n              </tr>\n              <tr>\n                <th>{{ trans('Submitted At') }}</th>\n                <td>{{ kycRequest.created_at_date }}</td>\n              </tr>\n\n              <tr v-if=\"kycRequest.status == 2\">\n                <th>{{ trans('Rejected At') }}</th>\n                <td>{{ kycRequest.rejected_at }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <div class=\"card\">\n        <h6 class=\"card-header\">{{ trans('Submissions') }}</h6>\n        <table class=\"mt-3 table shadow-none\">\n          <tbody>\n            <tr v-for=\"item in kycRequest.data\" :key=\"item\">\n              <th>{{ item.label }}</th>\n              <td>\n                <a target=\"_blank\" class=\"btn btn-success\" :href=\"item.value\" v-if=\"item.type == 'file'\">{{\n                  trans('View') }}</a>\n                <p v-else>{{ item.value }}</p>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div class=\"card p-5\">\n        <div class=\"mt-5 flex justify-center gap-3\">\n          <button v-if=\"kycRequest.status !== 1\" class=\"btn btn-primary\"\n            @click=\"submitForm(route('admin.kyc-requests.store'), kycRequest.id, 'approve')\">\n            <i class=\"fas fa-check-circle\"></i>\n            {{ trans('Approve documents') }}\n          </button>\n\n          <button class=\"btn btn-secondary\"\n            @click=\"submitForm(route('admin.kyc-requests.store'), kycRequest.id, 'approve_all')\">\n            <i class=\"fas fa-check-circle\"></i>\n            {{ trans('Approve with profile') }}\n          </button>\n\n          <button class=\"btn btn-danger\"\n            @click=\"submitForm(route('admin.kyc-requests.store'), kycRequest.id, 'reject')\">\n            <i class=\"fas fa-times-circle\"></i>\n            {{ trans('Reject') }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Create a language\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"col-2\">{{ trans('Language Name') }}</th>\n              <th class=\"col-2\">{{ trans('Language Key') }}</th>\n              <th class=\"col-8\">\n                <div class=\"text-right\">\n                  {{ trans('Action') }}\n                </div>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(language, key) in languages\" :key=\"key\">\n              <td class=\"text-left\">\n                {{ language }}\n              </td>\n              <td class=\"text-left\">\n                {{ key }}\n              </td>\n              <td class=\"flex justify-end gap-3\">\n                <Link :href=\"route('admin.language.show', key)\" class=\"btn btn-primary\"\n                  ><i class=\"fas fa-edit\"></i\n                ></Link>\n                <a\n                  href=\"javascript:void(0)\"\n                  class=\"delete-confirm btn btn-primary\"\n                  @click=\"deleteRow(route('admin.language.show', key))\"\n                  ><i class=\"fas fa-trash\"></i\n                ></a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </main>\n\n  <div id=\"addNewLanguageDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeLanguage()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Add New Language') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans('Language Name') }}</label>\n          <input\n            v-model=\"form.name\"\n            type=\"text\"\n            name=\"name\"\n            class=\"input\"\n            required\n            placeholder=\"English\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Select Language') }}</label>\n          <select v-model=\"form.language_code\" class=\"select\" name=\"language_code\">\n            <option v-for=\"country in countries\" :key=\"country\" :value=\"country.code\">\n              {{ country.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"btn btn-secondary w-full\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"form.processing\"\n            :btn-text=\"trans('Create')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { Link, useForm } from '@inertiajs/vue3'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport notify from '@/Plugins/Admin/notify'\nimport drawer from '@/Plugins/Admin/drawer'\nimport trans from '@/Composables/transComposable'\nimport { onMounted } from 'vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\ndefineOptions({ layout: AdminLayout })\n\nconst { deleteRow } = sharedComposable()\n\nonMounted(() => {\n  drawer.init()\n})\n\nconst props = defineProps(['languages', 'countries', 'buttons', 'segments'])\n\nconst form = useForm({\n  name: '',\n  language_code: ''\n})\n\nconst storeLanguage = () => {\n  form.post(route('admin.language.store'), {\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('Language has been added successfully'))\n      drawer.of('#addNewLanguageDrawer').hide()\n    }\n  })\n}\n</script>\n","<template>\n  <main class=\"container flex-grow p-4 sm:p6\">\n    <HeaderSegment title=\"Edit Language\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <form @submit.prevent=\"updateLanguage\" method=\"post\">\n\n        <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th class=\"col-6\">{{ trans(\"Translation Key\") }}</th>\n                <th class=\"col-6\">{{ trans(\"Translated Value\") }}</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              <tr v-for=\"(value, key) in posts\" :key=\"key\">\n                <td>\n                  {{ key }}\n                </td>\n                <td>\n                  <input type=\"text\" class=\"input\" v-model=\"posts[key]\" />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"card-footer\">\n          <SpinnerBtn :btn-text=\"trans('Save Changes')\" :processing=\"isProccessing\" />\n        </div>\n      </form>\n    </div>\n\n  </main>\n\n  <div id=\"addNewLanguageKeyDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"createKey()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Add New Language\") }}</h5>\n        <button type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\">\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Key\") }}</label>\n          <input type=\"text\" name=\"key\" v-model=\"form.key\" class=\"input\" required />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Value\") }}</label>\n          <input type=\"text\" name=\"value\" v-model=\"form.value\" class=\"input\" required />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn classes=\"w-full btn btn-primary\" :processing=\"form.processing\" :btn-text=\"trans('Create')\" />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport drawer from \"@/Plugins/Admin/drawer\"\nimport notify from \"@/Plugins/Admin/notify\"\nimport { useForm, router } from \"@inertiajs/vue3\"\nimport trans from '@/Composables/transComposable'\nimport { ref } from \"vue\"\nimport { onMounted } from \"vue\"\n\n\ndefineOptions({ layout: AdminLayout })\n\n\nonMounted(() => {\n  drawer.init()\n})\n\n\nconst props = defineProps([\n  'posts',\n  'id',\n  'buttons',\n  'segments',\n])\n\nconst form = useForm({\n  key: '',\n  value: '',\n  id: props.id\n})\n\n\nconst createKey = () => {\n  form.post('/admin/language/addkey', {\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('Language key has been added successfully'))\n      drawer.of('#addNewLanguageKeyDrawer').hide()\n    }\n  })\n}\n\nconst isProccessing = ref(false)\n\nconst updateLanguage = () => {\n  isProccessing.value = true\n  router.patch(route('admin.language.update', props.id), {\n    values: props.posts\n  }, {\n    onSuccess: () => {\n      form.reset()\n      isProccessing.value = false\n      notify.success(trans('Language key has been added successfully'))\n    }\n  })\n}\n</script>\n","<script setup>\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { Link, useForm } from '@inertiajs/vue3'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport notify from '@/Plugins/Admin/notify'\nimport drawer from '@/Plugins/Admin/drawer'\nimport trans from '@/Composables/transComposable'\nimport { onMounted, ref } from 'vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\nimport Pagination from '@/Components/Admin/Pagination.vue'\n\ndefineOptions({ layout: AdminLayout })\n\nconst { deleteRow } = sharedComposable()\n\nonMounted(() => {\n  drawer.init()\n})\n\nconst props = defineProps(['countries', 'buttons', 'segments'])\n\nconst form = useForm({\n  name: ''\n})\n\nconst editingItem = ref({})\nconst editForm = useForm({\n  name: ''\n})\n\nconst storeLocation = () => {\n  form.post(route('admin.countries.store'), {\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('Country has been added successfully'))\n      drawer.of('#addNewLocationDrawer').hide()\n    }\n  })\n}\n\nconst setEditDrawerForm = country => {\n  editingItem.value = country\n  editForm.name = country.name\n}\n\nconst updateLocation = () => {\n  let updateRoute = route('admin.countries.update', editingItem.value)\n  editForm.put(updateRoute, {\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('Country has been updated successfully'))\n      drawer.of('#editLocationDrawer').hide()\n    }\n  })\n}\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Locations\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"w-3/12\">{{ trans('Country Name') }}</th>\n              <th>{{ trans('States') }}</th>\n              <th>\n                <p class=\"text-right\">{{ trans('Action') }}</p>\n              </th>\n            </tr>\n          </thead>\n          <tbody v-if=\"countries.total\">\n            <tr v-for=\"(country, key) in countries.data\" :key=\"key\">\n              <td>\n                {{ country.name }}\n              </td>\n              <td>\n                {{ country.children_location_count }}\n              </td>\n              <td class=\"flex justify-end\">\n                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                  <div class=\"dropdown-toggle\">\n                    <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                  </div>\n                  <div class=\"w-40 dropdown-content\">\n                    <ul class=\"dropdown-list\">\n                      <li class=\"dropdown-list-item\">\n                        <Link :href=\"route('admin.countries.show', country)\" class=\"dropdown-link\">\n                          <i class=\"h-5 text-slate-400\" data-feather=\"external-link\"></i>\n                          <span>States</span>\n                        </Link>\n                      </li>\n                      <li class=\"dropdown-list-item\">\n                        <button\n                          data-toggle=\"drawer\"\n                          data-target=\"#editLocationDrawer\"\n                          @click=\"setEditDrawerForm(country)\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans('Edit') }}</span>\n                        </button>\n                      </li>\n                      <li class=\"dropdown-list-item\">\n                        <button\n                          @click=\"deleteRow(route('admin.countries.destroy', country))\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"></i>\n                          <span>{{ trans('Delete') }}</span>\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n        <Pagination :links=\"countries.links\" />\n      </div>\n    </div>\n  </main>\n\n  <div id=\"addNewLocationDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeLocation()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Add New Country') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans('Country Name') }}</label>\n          <input\n            v-model=\"form.name\"\n            type=\"text\"\n            name=\"name\"\n            class=\"input\"\n            required\n            placeholder=\"America\"\n          />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"form.processing\"\n            :btn-text=\"trans('Create')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"editLocationDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateLocation()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Edit Country') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans('Country Name') }}</label>\n          <input\n            v-model=\"editForm.name\"\n            type=\"text\"\n            name=\"name\"\n            class=\"input\"\n            required\n            placeholder=\"America\"\n          />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex gap-1\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"editForm.processing\"\n            :btn-text=\"trans('Update')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n","\n<script setup>\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm } from '@inertiajs/vue3'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport notify from '@/Plugins/Admin/notify'\nimport drawer from '@/Plugins/Admin/drawer'\nimport trans from '@/Composables/transComposable'\nimport { onMounted, ref } from 'vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\n\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\nimport Pagination from '@/Components/Admin/Pagination.vue'\nimport { onUpdated } from 'vue'\n\ndefineOptions({ layout: AdminLayout })\n\nconst { deleteRow } = sharedComposable()\n\nonMounted(() => {\n  drawer.init()\n})\nonUpdated(() => {\n  drawer.init()\n})\n\nconst props = defineProps(['country', 'states', 'buttons', 'segments'])\n\nconst form = useForm({\n  country_id: props.country.id,\n  name: ''\n})\n\nconst storeState = () => {\n  form.post(route('admin.states.store'), {\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('State has been added successfully'))\n      drawer.of('#addNewStateDrawer').hide()\n    }\n  })\n}\n\nconst editingItem = ref({})\nconst editForm = useForm({\n  name: ''\n})\n\nconst setEditDrawerForm = state => {\n  editingItem.value = state\n  editForm.name = state.name\n}\n\nconst updateState = () => {\n  let updateRoute = route('admin.states.update', editingItem.value)\n  editForm.put(updateRoute, {\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('State has been updated successfully'))\n      drawer.of('#editStateDrawer').hide()\n    }\n  })\n}\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"States\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"w-3/12\">{{ trans('State') }}</th>\n              <th>{{ trans('Country') }}</th>\n              <th>\n                <p class=\"text-right\">{{ trans('Action') }}</p>\n              </th>\n            </tr>\n          </thead>\n          <tbody v-if=\"states.total\">\n            <tr v-for=\"(state, key) in states.data\" :key=\"key\">\n              <td>\n                {{ state.name }}\n              </td>\n              <td>\n                {{ country.name }}\n              </td>\n              <td class=\"flex justify-end\">\n                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                  <div class=\"dropdown-toggle\">\n                    <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                  </div>\n                  <div class=\"w-40 dropdown-content\">\n                    <ul class=\"dropdown-list\">\n                      <li class=\"dropdown-list-item\">\n                        <button\n                          data-toggle=\"drawer\"\n                          data-target=\"#editStateDrawer\"\n                          @click=\"setEditDrawerForm(state)\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans('Edit') }}</span>\n                        </button>\n                      </li>\n                      <li class=\"dropdown-list-item\">\n                        <button\n                          @click=\"deleteRow(route('admin.states.destroy', state))\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"></i>\n                          <span>{{ trans('Delete') }}</span>\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n        <Pagination :links=\"states.links\" />\n      </div>\n    </div>\n  </main>\n\n  <div id=\"addNewStateDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeState()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Add New State') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n      \n        <div class=\"mb-2\">\n          <label>{{ trans('State Name') }}</label>\n          <input\n            v-model=\"form.name\"\n            type=\"text\"\n            name=\"name\"\n            class=\"input\"\n            required\n            placeholder=\"London\"\n          />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex gap-1\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"form.processing\"\n            :btn-text=\"trans('Create')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"editStateDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateState()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Edit Country') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans('State Name') }}</label>\n          <input\n            v-model=\"editForm.name\"\n            type=\"text\"\n            name=\"name\"\n            class=\"input\"\n            required\n            placeholder=\"America\"\n          />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex gap-1\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"editForm.processing\"\n            :btn-text=\"trans('Update')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n","<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport { Link, useForm, router } from \"@inertiajs/vue3\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\nimport Paginate from \"@/Components/Paginate.vue\";\nimport trans from '@/Composables/transComposable';\nimport moment from \"moment\";\nimport Overview from \"@/Components/Admin/OverviewGrid.vue\";\nimport Filter from \"@/Components/Admin/Filter.vue\";\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport drawer from \"@/Plugins/Admin/drawer\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport { onMounted } from \"vue\";\nimport NoDataFound from \"@/Components/Admin/NoDataFound.vue\";\n\ndefineOptions({ layout: AdminLayout });\nconst { textExcerpt, deleteRow } = sharedComposable();\n\nonMounted(() => {\n  drawer.init();\n});\n\nconst props = defineProps([\n  \"segments\",\n  \"buttons\",\n  \"request\",\n  \"notificationItems\",\n  \"totalNotifications\",\n  \"readNotifications\",\n  \"unreadNotifications\",\n  \"type\",\n]);\n\nconst notificatoinOverviews = [\n  {\n    value: props.totalNotifications,\n    title: trans(\"Total Notifications\"),\n    iconClass: \"bx bx-user-voice\",\n  },\n  {\n    value: props.readNotifications,\n    title: trans(\"Read Notifications\"),\n    iconClass: \"bx bx-envelope-open\",\n  },\n  {\n    value: props.unreadNotifications,\n    title: trans(\"Unread Notifications\"),\n    iconClass: \"bx bx-envelope\",\n  },\n];\n\nconst filterData = useForm({\n  search: props.request.search,\n  type: props.type,\n});\n\nconst form = useForm({\n  email: \"\",\n  title: \"\",\n  description: \"\",\n  url: \"\",\n});\n\nconst createNotification = () => {\n  form.post(route(\"admin.notification.store\"), {\n    onSuccess: () => {\n      form.reset();\n      notify.success(trans(\"Notification created successfully\"));\n      drawer.of(\"#addNewNotificationDrawer\").hide();\n    },\n  });\n};\n</script>\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Notifications\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"notificatoinOverviews\" grid=\"3\" />\n\n      <Filter :request=\"request\" filterType=\"notification\" />\n\n      <!-- Order Table Starts -->\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"w-[5%] uppercase\">{{ trans(\"Title\") }}</th>\n              <th class=\"w-[15%] uppercase\">{{ trans(\"Comment\") }}</th>\n              <th class=\"w-[10%] uppercase\">{{ trans(\"User\") }}</th>\n              <th class=\"w-[10%] uppercase\">{{ trans(\"Seen\") }}</th>\n              <th class=\"w-[10%] uppercase\">{{ trans(\"Created At\") }}</th>\n              <th class=\"w-[5%] !text-right uppercase\">{{ trans(\"Actions\") }}</th>\n            </tr>\n          </thead>\n          <tbody v-if=\"notificationItems.total\">\n            <tr v-for=\"notification in notificationItems.data\" :key=\"notification.id\">\n              <td class=\"text-left\">\n                {{ textExcerpt(notification.title, 80) }}\n              </td>\n              <td>\n                {{ textExcerpt(notification.comment, 50) }}\n              </td>\n              <td>\n                <Link\n                  class=\"text-dark\"\n                  :href=\"\n                    route(\n                      notification.user.role == 'user'\n                        ? 'admin.candidates.show'\n                        : 'admin.companies.show',\n                      notification.user_id\n                    )\n                  \"\n                >\n                  {{ textExcerpt(notification.user.name, 15) }}\n                </Link>\n              </td>\n\n              <td>\n                <span\n                  class=\"badge\"\n                  :class=\"notification.seen == 1 ? 'badge-success' : 'badge-danger'\"\n                >\n                  {{ notification.seen == 1 ? \"Read\" : \"Unread\" }}\n                </span>\n              </td>\n\n              <td class=\"text-center\">\n                {{ moment(notification.created_at).format(\"DD-MMM-YYYY\") }}\n              </td>\n              <td>\n                <div class=\"flex justify-end\">\n                  <div class=\"dropdown\" data-placement=\"bottom-start\">\n                    <div class=\"dropdown-toggle\">\n                      <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                    </div>\n                    <div class=\"w-40 dropdown-content\">\n                      <ul class=\"dropdown-list\">\n                        <li class=\"dropdown-list-item\">\n                          <a\n                            class=\"dropdown-link delete-confirm\"\n                            href=\"javascript:void(0)\"\n                            @click=\"\n                              deleteRow(\n                                route('admin.notification.destroy', notification.id)\n                              )\n                            \"\n                          >\n                            <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"></i>\n                            <span>{{ trans(\"Delete\") }}</span>\n                          </a>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n      </div>\n      <!-- Order Table Ends -->\n\n      <!-- Order Pagination Starts -->\n      <Paginate v-if=\"notificationItems.data.length != 0\" :links=\"notificationItems.links\" />\n      <!-- Order Pagination Ends -->\n    </div>\n  </main>\n\n  <div id=\"addNewNotificationDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"createNotification\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Send Notification\") }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"form-group\">\n          <label>{{ trans(\"Receive Email\") }}</label>\n          <input v-model=\"form.email\" type=\"email\" name=\"email\" class=\"input\" required />\n        </div>\n        <div class=\"form-group\">\n          <label>{{ trans(\"Title\") }}</label>\n          <input\n            v-model=\"form.title\"\n            type=\"text\"\n            name=\"title\"\n            class=\"input\"\n            required\n            maxlength=\"100\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label>{{ trans(\"Description\") }}</label>\n          <textarea\n            v-model=\"form.description\"\n            class=\"textarea\"\n            required\n            name=\"description\"\n            maxlength=\"200\"\n          ></textarea>\n        </div>\n        <div class=\"form-group\">\n          <label>{{ trans(\"Action Link\") }}</label>\n          <input\n            v-model=\"form.url\"\n            type=\"url\"\n            name=\"url\"\n            class=\"input\"\n            required\n            maxlength=\"100\"\n          />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"form.processing\"\n            :btn-text=\"trans('Create Notification')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Menu')\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"menuStats\" grid=\"3\" />\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"col-2\">{{ trans('Menu Name') }}</th>\n              <th class=\"col-2\">{{ trans('Position') }}</th>\n              <th class=\"col-2 text-center\">{{ trans('Language') }}</th>\n              <th class=\"col-2\">{{ trans('Status') }}</th>\n              <th class=\"col-2\">{{ trans('Last Update') }}</th>\n              <th class=\"col-2\">\n                <p class=\"text-right\">{{ trans('Action') }}</p>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr v-for=\"menu in menus\" :key=\"menu.id\">\n              <td class=\"text-left\">\n                <Link :href=\"route('admin.menu.show', menu.id)\">{{ menu.name }}</Link>\n              </td>\n              <td class=\"text-left\">\n                {{ menu.position }}\n              </td>\n              <td class=\"text-center\">\n                {{ menu.lang }}\n              </td>\n              <td class=\"text-left\">\n                <span class=\"badge\" :class=\"menu.status == 1 ? 'badge-success' : 'badge-danger'\">\n                  {{ menu.status == 1 ? trans('Active') : trans('Draft') }}\n                </span>\n              </td>\n              <td>\n                {{ menu.created_at_diff }}\n              </td>\n              <td>\n                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                  <div class=\"dropdown-toggle\">\n                    <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                  </div>\n                  <div class=\"dropdown-content w-40\">\n                    <ul class=\"dropdown-list\">\n                      <li class=\"dropdown-list-item\">\n                        <Link :href=\"route('admin.menu.show', menu.id)\" class=\"dropdown-link\">\n                          <i class=\"h-5 text-slate-400\" data-feather=\"list\"></i>\n                          <span>{{ trans('Manage') }}</span>\n                        </Link>\n                      </li>\n                      <li class=\"dropdown-list-item\">\n                        <button @click=\"openEditFaqDrawer(menu)\" class=\"dropdown-link\">\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans('Edit') }}</span>\n                        </button>\n                      </li>\n\n                      <li class=\"dropdown-list-item\">\n                        <button\n                          class=\"dropdown-link\"\n                          @click=\"deleteRow(route('admin.menu.destroy', menu.id))\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                            >{{ trans('Remove') }}></i\n                          >\n                          <span>{{ trans('Delete') }}</span>\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </main>\n\n  <div id=\"addNewMenuDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeMenu()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Add New Menu') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div>\n          <label class=\"label label-required mb-1\">{{ trans('Menu Name') }}</label>\n          <input\n            type=\"text\"\n            v-model=\"form.name\"\n            name=\"name\"\n            class=\"input\"\n            required\n            placeholder=\"Example\"\n          />\n        </div>\n        <div>\n          <label class=\"label label-required mb-1\">{{ trans('Select Menu Position') }}</label>\n          <select class=\"input\" name=\"position\" v-model=\"form.position\">\n            <option value=\"main-menu\">{{ trans('Main Menu') }}</option>\n            <option value=\"footer-left\">\n              {{ trans('Footer Left') }}\n            </option>\n            <option value=\"footer-right\">\n              {{ trans('Footer right') }}\n            </option>\n            <option value=\"footer-center\">\n              {{ trans('Footer Center') }}\n            </option>\n          </select>\n        </div>\n        <div>\n          <label class=\"label label-required mb-1\">{{ trans('Select Language') }}</label>\n          <select class=\"input\" name=\"language\" v-model=\"form.language\">\n            <option\n              v-for=\"(language, languageKey) in languages\"\n              :key=\"language.id\"\n              :value=\"languageKey\"\n            >\n              {{ language }}\n            </option>\n          </select>\n        </div>\n        <div>\n          <label class=\"label label-required mb-1\">{{ trans('Menu Status') }}</label>\n          <select class=\"input\" name=\"status\" v-model=\"form.status\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Draft') }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"btn btn-secondary w-full\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"form.processing\"\n            :btn-text=\"trans('Create')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"editMenuDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateMenu()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Edit Menu') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div>\n          <label class=\"label label-required\">{{ trans('Menu Name') }}</label>\n          <input\n            v-model=\"edit.name\"\n            type=\"text\"\n            name=\"name\"\n            class=\"input\"\n            required\n            placeholder=\"Name\"\n          />\n        </div>\n        <div>\n          <label class=\"label label-required\">{{ trans('Select Menu Position') }}</label>\n          <select class=\"input\" name=\"position\" v-model=\"edit.position\">\n            <option value=\"main-menu\">{{ trans('Main Menu') }}</option>\n            <option value=\"footer-left\">\n              {{ trans('Footer Left') }}\n            </option>\n            <option value=\"footer-right\">\n              {{ trans('Footer right') }}\n            </option>\n            <option value=\"footer-center\">\n              {{ trans('Footer Center') }}\n            </option>\n          </select>\n        </div>\n        <div>\n          <label class=\"label label-required\">{{ trans('Select Language') }}</label>\n          <select name=\"language\" class=\"input\" v-model=\"edit.language\" required>\n            <option\n              v-for=\"(language, languageKey) in languages\"\n              :key=\"language.id\"\n              :value=\"languageKey\"\n            >\n              {{ language }}\n            </option>\n          </select>\n        </div>\n        <div c>\n          <label class=\"label label-required\">{{ trans('Menu Status') }}</label>\n          <select class=\"input\" name=\"status\" v-model=\"edit.status\">\n            <option value=\"1\">{{ trans('Active') }}</option>\n            <option value=\"0\">{{ trans('Draft') }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"btn btn-secondary w-full\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"edit.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm, router } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport Overview from '@/Components/Admin/OverviewGrid.vue'\n\nimport drawer from '@/Plugins/Admin/drawer'\nimport notify from '@/Plugins/Admin/notify'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport { onMounted } from 'vue'\ndefineOptions({ layout: AdminLayout })\n\nonMounted(() => {\n  drawer.init()\n})\n\nconst props = defineProps([\n  'menus',\n  'languages',\n  'totalMenus',\n  'totalActiveMenus',\n  'totalDraftMenus',\n  'segments',\n  'buttons'\n])\nconst { deleteRow } = sharedComposable()\n\nconst form = useForm({\n  name: null,\n  position: null,\n  language: 'en',\n  status: 0\n})\nconst menuStats = [\n  {\n    value: props.totalMenus,\n    title: trans('Total Menus'),\n    iconClass: 'bx bx-box'\n  },\n  {\n    value: props.totalActiveMenus,\n    title: trans('Active Menus'),\n    iconClass: 'bx bx-dollar-circle'\n  },\n  {\n    value: props.totalDraftMenus,\n    title: trans('Inactive Menus'),\n    iconClass: 'ti ti-thumb-up'\n  }\n]\nconst edit = useForm({\n  name: null,\n  position: null,\n  language: 'en',\n  status: null,\n  id: null\n})\n\nconst openEditFaqDrawer = (menu) => {\n  edit.name = menu.name\n  edit.position = menu.position\n  edit.language = menu.lang\n  edit.status = menu.status\n  edit.id = menu.id\n  drawer.of('#editMenuDrawer').show()\n}\n\nfunction storeMenu() {\n  const url = route('admin.menu.store')\n  router.post(url, form, {\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('Menu has been added successfully'))\n      drawer.of('#addNewMenuDrawer').hide()\n    }\n  })\n}\n\nfunction updateMenu() {\n  const url = route('admin.menu.update', edit.id)\n\n  router.patch(url, edit, {\n    onSuccess: () => {\n      notify.success(trans('Menu has been updated successfully'))\n      drawer.of('#editMenuDrawer').hide()\n    }\n  })\n}\n</script>\n","import { reactive } from 'vue'\n\nexport const menu = reactive({\n  contents: [],\n  contentId: null,\n  isEdit: false,\n  newItem: reactive({\n    id: null,\n    text: '',\n    icon: '',\n    href: '',\n    target: '_self',\n    title: '',\n    children: []\n  }),\n\n  addNewItem() {\n    if (this.newItem.text) {\n      this.newItem.id = Math.floor(Math.random() * Date.now()).toString(36)\n      const newItemCopy = JSON.parse(JSON.stringify(this.newItem))\n      this.contents.push(newItemCopy)\n      this.resetItem()\n    }\n  },\n  editItem() {\n    this.isEdit = true\n    const item = this.findItemById(this.contents, this.contentId)\n    if (item) {\n      this.newItem = { ...item }\n    }\n  },\n  updateItem() {\n    const item = this.findItemById(this.contents, this.newItem.id)\n    if (item && this.newItem.text) {\n      Object.assign(item, this.newItem)\n      this.resetItem()\n      this.isEdit = false\n    }\n  },\n  removeItemById(arr, id) {\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].id === id) {\n        arr.splice(i, 1)\n        return\n      }\n      if (arr[i].children && arr[i].children.length > 0) {\n        this.removeItemById(arr[i].children, id)\n      }\n    }\n  },\n  removeItem() {\n    this.removeItemById(this.contents, this.contentId)\n  },\n  resetItem() {\n    setTimeout(() => {\n      this.newItem = {\n        id: null,\n        text: '',\n        icon: '',\n        href: '',\n        target: '_self',\n        title: '',\n        children: []\n      }\n    }, 500)\n  },\n  findItemById(arr, id) {\n    for (const item of arr) {\n      if (item.id === id) {\n        return item\n      }\n      if (item.children && item.children.length > 0) {\n        const found = this.findItemById(item.children, id)\n        if (found) return found\n      }\n    }\n    return null\n  }\n})\n","<template>\n  <draggable\n    class=\"dragArea\"\n    tag=\"ul\"\n    :list=\"tasks\"\n    :group=\"{ name: 'g' }\"\n    item-key=\"text\"\n    @start=\"dragging = true\"\n    @end=\"dragging = false\"\n  >\n    <template #item=\"{ element }\">\n      <li>\n        <div class=\"flex items-center justify-between rounded border p-2\">\n          <p>\n            <i class=\"fa fa-arrows-alt\" aria-hidden=\"true\"></i>\n            {{ element.text }}\n          </p>\n          <div>\n            <button class=\"btn\" @click=\"edit(element.id)\">\n              <i class=\"fas fa-pen\"></i>\n            </button>\n            <button class=\"btn\" @click=\"remove(element.id)\">\n              <i class=\"fas fa-trash\"></i>\n            </button>\n          </div>\n        </div>\n        <nested-draggable :tasks=\"element.children\" />\n      </li>\n    </template>\n  </draggable>\n</template>\n\n<script setup>\nimport draggable from 'vuedraggable'\nimport { menu } from '@/Composables/menuComposable'\nimport { ref } from 'vue'\ndefineProps({\n  tasks: {\n    required: true\n  }\n})\nconst dragging = ref(false)\nconst remove = (id) => {\n  menu.contentId = id\n  menu.removeItem()\n}\nconst edit = (id) => {\n  menu.contentId = id\n  menu.editItem()\n}\n</script>\n\n<style scoped>\n.dragArea:first-child {\n  padding-left: 0px;\n}\n\n.dragArea {\n  margin-top: 10px;\n  min-height: 10px;\n  padding-left: 20px;\n  padding-bottom: 10px;\n}\n\n.dragArea li {\n  list-style: none;\n  cursor: move;\n}\n</style>\n","<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Manage Menu')\" :segments=\"segments\" :buttons=\"buttons\" />\n\n    <div class=\"grid grid-cols-12 place-items-start gap-6\">\n      <div class=\"card col-span-8\">\n        <div class=\"card-body\">\n          <div class=\"mb-8 flex items-center justify-between\">\n            <h4>{{ trans('Menu Items') }}</h4>\n\n            <button\n              type=\"button\"\n              id=\"form-button\"\n              class=\"btn btn-success\"\n              @click.prevent=\"updateData\"\n            >\n              {{ trans('Save') }}\n            </button>\n          </div>\n          <div>\n            <template v-if=\"props.contents\">\n              <NestedDraggable :tasks=\"menu.contents\" />\n            </template>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-span-4\">\n        <div class=\"card fixed w-[380px]\">\n          <div class=\"card-body\">\n            <h4 class=\"mb-5\">{{ trans('Create Menu Items') }}</h4>\n\n            <form class=\"space-y-6\">\n              <div>\n                <label for=\"text\" class=\"label label-required\">{{ trans('Text') }}</label>\n                <input\n                  type=\"text\"\n                  class=\"input\"\n                  name=\"text\"\n                  id=\"text\"\n                  placeholder=\"Text\"\n                  autocomplete=\"off\"\n                  v-model=\"menu.newItem.text\"\n                />\n              </div>\n              <div>\n                <label for=\"href\" class=\"label label-required\">{{ trans('URL') }}</label>\n                <input\n                  type=\"text\"\n                  class=\"input\"\n                  id=\"href\"\n                  name=\"href\"\n                  placeholder=\"URL\"\n                  required\n                  autocomplete=\"off\"\n                  v-model=\"menu.newItem.href\"\n                />\n              </div>\n              <div>\n                <label for=\"target\" class=\"label label-required\">{{ trans('Target') }}</label>\n                <select name=\"target\" class=\"input\" v-model=\"menu.newItem.target\">\n                  <option value=\"_self\">\n                    {{ trans('Self') }}\n                  </option>\n                  <option value=\"_blank\">\n                    {{ trans('Blank') }}\n                  </option>\n                  <option value=\"_top\">\n                    {{ trans('Top') }}\n                  </option>\n                </select>\n              </div>\n            </form>\n            <div class=\"menu-add-update mt-6 flex\">\n              <button\n                type=\"button\"\n                id=\"btnUpdate\"\n                class=\"btn btn-update btn-warning mr-2 flex-1 text-white\"\n                @click=\"menu.updateItem\"\n                :disabled=\"!menu.isEdit\"\n              >\n                <i class=\"w-4\" data-feather=\"refresh-cw\"></i>\n                {{ trans('Update') }}\n              </button>\n              <button\n                type=\"button\"\n                id=\"btnAdd\"\n                @click=\"menu.addNewItem\"\n                class=\"btn btn-success flex-1\"\n                :disabled=\"menu.isEdit\"\n              >\n                <i class=\"w-5\" data-feather=\"plus\"></i>\n                {{ trans('Add') }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport NestedDraggable from '@/Components/NestedDraggable.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { onMounted } from 'vue'\nimport axios from 'axios'\nimport { menu } from '@/Composables/menuComposable'\nimport notify from '@/Plugins/Admin/notify'\nimport trans from '@/Composables/transComposable'\n\ndefineOptions({ layout: AdminLayout })\nconst props = defineProps(['info', 'contents', 'segments', 'buttons'])\n\nonMounted(() => {\n  menu.contents = props.contents\n})\n\nconst updateData = () => {\n  axios\n    .patch(route('admin.menu.data.update', props.info.id), {\n      data: menu.contents\n    })\n    .then((res) => {\n      if (res.status == 200) {\n        notify.success(trans('Menu item has been updated successfully'))\n      }\n    })\n}\n</script>\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport Paginate from '@/Components/Paginate.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport trans from '@/Composables/transComposable'\nimport Filter from '@/Components/Admin/Filter.vue'\nimport Overview from '@/Components/Admin/OverviewGrid.vue'\nimport moment from 'moment'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\nconst { deleteRow } = sharedComposable()\n\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps([\n  'segments',\n  'buttons',\n  'request',\n  'conversations',\n  'type',\n  'totalConversation',\n  'totalDeleted',\n  'totalBlocked'\n])\n\nconst conversationStats = [\n  {\n    value: props.totalConversation,\n    title: trans('Total Conversation'),\n    iconClass: 'bx bx-list-ul'\n  },\n  {\n    value: props.totalDeleted,\n    title: trans('Total Deleted'),\n    iconClass: 'bx bx-message-rounded-x'\n  },\n  {\n    value: props.totalBlocked,\n    title: trans('Total Blocked'),\n    iconClass: 'bx bx-user-x'\n  }\n]\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('Conversation Delete Requests')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n\n    <div class=\"space-y-6\">\n      <Overview :items=\"conversationStats\" grid=\"1\" />\n      <Filter :request=\"request\" />\n\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans('Employer') }}</th>\n              <th>{{ trans('Candidate') }}</th>\n\n              <th class=\"text-left\">{{ trans('Created At') }}</th>\n              <th class=\"text-left\">{{ trans('Replies') }}</th>\n              <th class=\"flex justify-end\">{{ trans('Action') }}</th>\n            </tr>\n          </thead>\n          <tbody class=\"list\" v-if=\"conversations.total\">\n            <tr v-for=\"conversation in conversations.data\" :key=\"conversation.id\">\n              <td>\n                <div\n                  class=\"flex items-center gap-3\"\n                  v-for=\"user in conversation.users\"\n                  :key=\"user.id\"\n                >\n                  <Link\n                    :href=\"route('admin.companies.show', user.id)\"\n                    v-if=\"user.role === 'employer'\"\n                  >\n                    <div class=\"avatar avatar-circle\">\n                      <img\n                        class=\"avatar-img\"\n                        :src=\"\n                          user.avatar == null\n                            ? `https://ui-avatars.com/api/?name=${user.name}`\n                            : user.avatar\n                        \"\n                      />\n                    </div>\n                  </Link>\n                  <Link\n                    :href=\"route('admin.companies.show', user.id)\"\n                    v-if=\"user.role === 'employer'\"\n                  >\n                    {{ user.name }}\n                  </Link>\n                </div>\n              </td>\n              <td>\n                <div\n                  class=\"flex items-center gap-3\"\n                  v-for=\"user in conversation.users\"\n                  :key=\"user.id\"\n                >\n                  <Link :href=\"route('admin.candidates.show', user.id)\" v-if=\"user.role === 'user'\">\n                    <div class=\"avatar avatar-circle\">\n                      <img\n                        class=\"avatar-img\"\n                        :src=\"\n                          user.avatar == null\n                            ? `https://ui-avatars.com/api/?name=${user.name}`\n                            : user.avatar\n                        \"\n                      />\n                    </div>\n                  </Link>\n                  <Link :href=\"route('admin.candidates.show', user.id)\" v-if=\"user.role === 'user'\">\n                    {{ user.name }}\n                  </Link>\n                </div>\n              </td>\n\n              <td class=\"text-center\">\n                {{ moment(conversation.created_at).format('D MMM, YYYY') }}\n              </td>\n              <td class=\"text-center\">\n                {{ conversation.replies_count }}\n              </td>\n              <td>\n                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                  <div class=\"dropdown-toggle\">\n                    <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                  </div>\n                  <div class=\"dropdown-content w-40\">\n                    <ul class=\"dropdown-list\">\n                      <li class=\"dropdown-list-item\">\n                        <Link\n                          :href=\"route('admin.message.show', conversation.uuid)\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"external-link\"></i>\n                          <span>{{ trans('View') }}</span>\n                        </Link>\n                      </li>\n\n                      <li class=\"dropdown-list-item\">\n                        <button\n                          @click=\"deleteRow(route('admin.message.destroy', conversation, id))\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash\"></i>\n                          {{ trans('Delete') }}\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n        <Paginate :links=\"conversations.links\" />\n      </div>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport Paginate from \"@/Components/Paginate.vue\"\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport trans from '@/Composables/transComposable'\nimport Alert from \"@/Components/Admin/Alert.vue\"\nimport Overview from \"@/Components/Admin/OverviewGrid.vue\"\nimport moment from \"moment\"\nimport sharedComposable from \"@/Composables/sharedComposable\"\nconst { textExcerpt } = sharedComposable()\n\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps([\n  \"segments\",\n  \"buttons\",\n  \"request\",\n  \"conversation\",\n  \"replies\",\n  \"totalReplies\"\n])\n\nconst ReplyStats = [\n  {\n    value: props.totalReplies,\n    title: trans(\"Total Replies\"),\n    iconClass: \"bx bx-list-ul\"\n  }\n]\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('Replies')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n\n    <div class=\"space-y-6\">\n      <Overview :items=\"ReplyStats\" grid=\"1\" />\n\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans(\"Name\") }}</th>\n              <th>{{ trans(\"Email\") }}</th>\n\n              <th class=\"text-left\">{{ trans(\"Message\") }}</th>\n              <th class=\"text-left\">{{ trans(\"Attachments\") }}</th>\n              <th class=\"text-left\">{{ trans(\"Date\") }}</th>\n            </tr>\n          </thead>\n          <tbody class=\"list\" v-if=\"replies.total != 0\">\n            <tr v-for=\"reply in replies.data\" :key=\"reply.id\">\n              <td>\n                <div class=\"flex items-center gap-3\">\n                  <div class=\"avatar avatar-circle\">\n                    <img\n                      class=\"avatar-img\"\n                      :src=\"\n                        reply.user.avatar == null\n                          ? `https://ui-avatars.com/api/?name=${reply.user.name}`\n                          : reply.user.avatar\n                      \"\n                    />\n                  </div>\n\n                  {{ reply.user.name }}\n                </div>\n              </td>\n\n              <td>{{ reply.user.email }}</td>\n              <td>{{ textExcerpt(reply.body, 40) }}</td>\n              <td>\n                <template v-if=\"reply.attachments\">\n                  <a\n                    v-for=\"(att, i) in JSON.parse(reply.attachments)\"\n                    :key=\"i\"\n                    :href=\"att\"\n                    class=\"mb-1 block\"\n                    download\n                  >\n                    <div class=\"file-name\">{{ textExcerpt(att, 25) }}</div>\n                  </a>\n                </template>\n                <span v-else>None</span>\n              </td>\n\n              <td class=\"text-center\">\n                {{ moment(reply.created_at).format(\"D MMM, YYYY h:m a\") }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <Paginate :links=\"replies.links\" />\n\n        <Alert\n          v-if=\"replies.total == 0\"\n          type=\"info\"\n          :text=\"trans('Opps do not have any replies....')\"\n        />\n      </div>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport { useForm } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nimport Overview from \"@/Components/Admin/OverviewGrid.vue\";\nimport Pagination from \"@/Components/Admin/Pagination.vue\";\nimport drawer from \"@/Plugins/Admin/drawer\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport { onMounted } from \"vue\";\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport NoDataFound from \"@/Components/Admin/NoDataFound.vue\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\n\ndefineOptions({ layout: AdminLayout });\n\nonMounted(() => {\n  drawer.init();\n});\nconst { formatCurrency } = sharedComposable();\nconst props = defineProps([\n  \"segments\",\n  \"buttons\",\n  \"orders\",\n  \"request\",\n  \"totalOrders\",\n  \"totalPendingOrders\",\n  \"totalCompleteOrders\",\n  \"totalDeclinedOrders\",\n  \"type\",\n  \"invoice\",\n  \"currency\",\n  \"tax\",\n]);\n\nconst orderOverviews = [\n  {\n    value: props.totalOrders,\n    title: trans(\"Total Orders\"),\n    iconClass: \"bx bx-badge-check\",\n  },\n  {\n    value: props.totalPendingOrders,\n    title: trans(\"Pending Orders\"),\n    iconClass: \"bx bx-badge\",\n  },\n  {\n    value: props.totalCompleteOrders,\n    title: trans(\"Completed Orders\"),\n    iconClass: \"bx bx-check\",\n  },\n  {\n    value: props.totalDeclinedOrders,\n    title: trans(\"Declined Orders\"),\n    iconClass: \"bx bx-x-circle\",\n  },\n];\n\nconst filterData = useForm({\n  search: props.request.search,\n  type: props.type,\n});\n\nconst invoiceFrom = useForm({\n  company_name: props.invoice.company_name,\n  address: props.invoice.address,\n  city: props.invoice.city,\n  post_code: props.invoice.post_code,\n  country: props.invoice.country,\n});\n\nconst currencyFrom = useForm({\n  name: props.currency.name,\n  icon: props.currency.icon,\n  position: props.currency.position,\n});\n\nconst taxFrom = useForm({\n  tax: props.tax,\n});\n\nfunction updateOption(form, key, drawerId) {\n  form.put(route(\"admin.option.update\", key), {\n    onSuccess: () => {\n      notify.success(\"Option Updated successfully\");\n      drawer.of(drawerId).hide();\n    },\n  });\n}\n</script>\n\n<template>\n  <!-- Main Content Starts -->\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Order List')\" :segments=\"segments\" :buttons=\"buttons\" />\n\n    <div class=\"space-y-4\">\n      <Overview :items=\"orderOverviews\" />\n      <div class=\"flex items-center justify-end gap-x-2\">\n        <div class=\"dropdown\" data-placement=\"bottom-end\">\n          <div class=\"dropdown-toggle\">\n            <button\n              type=\"button\"\n              class=\"font-medium bg-white shadow-sm btn dark:bg-slate-800\"\n            >\n              <i class=\"w-4\" data-feather=\"filter\"></i>\n              <span>{{ trans(\"Filter\") }}</span>\n              <i class=\"w-4\" data-feather=\"chevron-down\"></i>\n            </button>\n          </div>\n\n          <div class=\"dropdown-content w-72 !overflow-visible\">\n            <form @submit.prevent=\"filterData.get('/admin/order')\">\n              <ul class=\"p-4 space-y-4 dropdown-list\">\n                <li class=\"dropdown-list-item\">\n                  <h2 class=\"my-1 text-sm font-medium\">{{ trans(\"Status\") }}</h2>\n                  <div class=\"mb-2\">\n                    <input\n                      type=\"text\"\n                      name=\"search\"\n                      v-model=\"filterData.search\"\n                      class=\"input\"\n                      placeholder=\"Search......\"\n                    />\n                  </div>\n                </li>\n                <li class=\"dropdown-list-item\">\n                  <div class=\"mb-2\">\n                    <select class=\"select\" name=\"type\" v-model=\"filterData.type\">\n                      <option value=\"email\">{{ trans(\"User Email\") }}</option>\n                      <option value=\"invoice_no\">{{ trans(\"Invoice No\") }}</option>\n                    </select>\n                  </div>\n                </li>\n\n                <li class=\"dropdown-list-item\">\n                  <button type=\"submit\" class=\"w-full btn btn-primary\">\n                    {{ trans(\"Filter\") }}\n                  </button>\n                </li>\n              </ul>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"w-[5%] uppercase\">{{ trans(\"Order No\") }}</th>\n              <th class=\"w-[15%] uppercase\">{{ trans(\"Plan Name\") }}</th>\n              <th class=\"w-[10%] uppercase\">{{ trans(\"Payment Mode\") }}</th>\n              <th class=\"w-[10%] uppercase\">{{ trans(\"Amount\") }}</th>\n              <th class=\"w-[10%] uppercase\">{{ trans(\"Status\") }}</th>\n              <th class=\"w-[10%] uppercase\">{{ trans(\"Created At\") }}</th>\n              <th class=\"w-[5%] !text-right uppercase\">{{ trans(\"Actions\") }}</th>\n            </tr>\n          </thead>\n          <tbody v-if=\"orders.total\">\n            <tr v-for=\"order in orders.data\" :key=\"order.id\">\n              <td>\n                <Link\n                  :href=\"'/admin/order/' + order.id\"\n                  class=\"text-sm font-medium transition duration-150 ease-in-out text-primary-500 hover:underline\"\n                >\n                  {{ order.invoice_no }}\n                </Link>\n              </td>\n              <td>{{ order.plan.title }}</td>\n              <td>{{ order.gateway.name }}</td>\n              <td>{{ formatCurrency(order.amount) }}</td>\n              <td>\n                <div class=\"capitalize badge badge-soft-primary\">\n                  {{\n                    trans(\n                      order.status == 2\n                        ? \"pending\"\n                        : order.status == 1\n                        ? \"approved\"\n                        : \"declined\"\n                    )\n                  }}\n                </div>\n              </td>\n              <td class=\"text-center\">\n                {{ order.created_at_diff }}\n              </td>\n              <td>\n                <div class=\"flex justify-center\">\n                  <div class=\"dropdown\" data-placement=\"bottom-start\">\n                    <div class=\"dropdown-toggle\">\n                      <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                    </div>\n                    <div class=\"w-40 dropdown-content\">\n                      <ul class=\"dropdown-list\">\n                        <li class=\"dropdown-list-item\">\n                          <Link :href=\"'/admin/order/' + order.id\" class=\"dropdown-link\">\n                            <i\n                              class=\"h-5 text-slate-400\"\n                              data-feather=\"external-link\"\n                            ></i>\n                            <span>{{ trans(\"View\") }}</span>\n                          </Link>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n      </div>\n\n      <Pagination v-if=\"orders.data.length != 0\" :pages=\"{ ...orders, data: null }\" />\n    </div>\n  </main>\n  <!-- Main Content Ends -->\n\n  <div id=\"invoiceSettingDrawer\" class=\"drawer drawer-right\">\n    <form\n      method=\"POST\"\n      @submit.prevent=\"updateOption(invoiceFrom, 'invoice_data', '#invoiceSettingDrawer')\"\n    >\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Edit Invoice Information\") }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Company Name\") }}</label>\n          <input\n            type=\"text\"\n            v-model=\"invoiceFrom.company_name\"\n            class=\"input\"\n            required=\"\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Company Address\") }}</label>\n          <input\n            type=\"text\"\n            name=\"data[address]\"\n            v-model=\"invoiceFrom.address\"\n            class=\"input\"\n            required=\"\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Company City\") }}</label>\n          <input\n            type=\"text\"\n            name=\"data[city]\"\n            v-model=\"invoiceFrom.city\"\n            class=\"input\"\n            required=\"\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Post Code\") }}</label>\n          <input\n            type=\"text\"\n            name=\"data[post_code]\"\n            v-model=\"invoiceFrom.post_code\"\n            class=\"input\"\n            required=\"\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Country\") }}</label>\n          <input\n            type=\"text\"\n            name=\"data[country]\"\n            v-model=\"invoiceFrom.country\"\n            class=\"input\"\n            required=\"\"\n          />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"btn btn-primary w-full\"\n            :processing=\"invoiceFrom.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"currencySettingDrawer\" class=\"drawer drawer-right\">\n    <form\n      method=\"POST\"\n      @submit.prevent=\"\n        updateOption(currencyFrom, 'base_currency', '#currencySettingDrawer')\n      \"\n    >\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Currency Settings\") }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Currency Name\") }}</label>\n          <input\n            type=\"text\"\n            name=\"data[name]\"\n            v-model=\"currencyFrom.name\"\n            class=\"input\"\n            required=\"\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Currency Icon\") }}</label>\n          <input\n            type=\"text\"\n            name=\"data[icon]\"\n            v-model=\"currencyFrom.icon\"\n            class=\"input\"\n            required=\"\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Currency Icon\") }}</label>\n          <select class=\"select\" name=\"data[position]\" v-model=\"currencyFrom.position\">\n            <option value=\"left\">\n              {{ trans(\"Left\") }}\n            </option>\n            <option value=\"right\">\n              {{ trans(\"Right\") }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"btn btn-primary w-full\"\n            :processing=\"currencyFrom.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"taxSettingDrawer\" class=\"drawer drawer-right\">\n    <form\n      method=\"POST\"\n      @submit.prevent=\"updateOption(taxFrom, 'tax', '#taxSettingDrawer')\"\n    >\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Tax Settings\") }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Tax Amount\") }}</label>\n          <input\n            type=\"number\"\n            step=\"any\"\n            name=\"data\"\n            v-model=\"taxFrom.tax\"\n            class=\"input\"\n            required\n          />\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"btn btn-primary w-full\"\n            :processing=\"taxFrom.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n    <div class=\"drawer-backdrop\"></div>\n  </div>\n</template>\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport moment from 'moment'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm } from '@inertiajs/vue3'\nimport notify from '@/Plugins/Admin/notify'\nimport sharedComposable from '@/Composables/sharedComposable'\ndefineOptions({ layout: AdminLayout })\nconst props = defineProps(['order', 'invoice_data', 'segments', 'buttons', 'meta'])\nconst { formatCurrency } = sharedComposable()\nconst form = useForm({\n  status: props.order.status,\n  assign_order: 'no'\n})\n\nconst updateOrder = (actionUrl) => {\n  form.put(actionUrl, {\n    onSuccess: () => {\n      notify.success('Order status updated')\n    }\n  })\n}\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Invoice details\" :segments=\"segments\" :buttons=\"buttons\" />\n\n    <!-- Invoice Details Starts -->\n    <div class=\"card\">\n      <div class=\"space-y-6 card-body\">\n        <!-- Invoice Header Starts -->\n        <div class=\"flex flex-col justify-between p-1 space-y-4 md:flex-row\">\n          <div class=\"flex items-center justify-center md:justify-start\">\n            <!-- Logo Starts -->\n            <div class=\"flex items-center w-full h-16 gap-4 pr-4\">\n              <img\n                v-lazy=\"$page.props.primaryData.deep_logo\"\n                alt=\"logo\"\n                class=\"block h-[45px] dark:hidden\"\n              />\n              <img\n                v-lazy=\"$page.props.primaryData.logo\"\n                alt=\"logo\"\n                class=\"hidden h-[45px] dark:block\"\n              />\n            </div>\n            <!-- Logo Ends -->\n          </div>\n          <div class=\"flex flex-col items-start justify-center md:items-end\">\n            <h4>Invoice #{{ order.invoice_no }}</h4>\n            <p class=\"py-0 my-0 text-sm font-medium text-slate-700 dark:text-slate-300\">\n              {{ trans('Order Date') }}:\n              <span class=\"font-normal text-slate-600 dark:text-slate-300\">\n                {{ moment(order.created_at).format('DD-MM-YYYY') }}\n              </span>\n            </p>\n\n            <p class=\"py-0 my-0 text-sm font-medium text-slate-700 dark:text-slate-300\">\n              {{ trans('Expire Date') }}:\n              <span class=\"font-normal text-slate-600 dark:text-slate-300\">\n                {{ moment(order.will_expire).format('DD-MM-YYYY') }}\n              </span>\n            </p>\n\n            <p class=\"py-0 my-0 text-sm font-medium text-slate-700 dark:text-slate-300\">\n              {{ trans('Status') }}:\n              <span class=\"font-normal text-slate-600 dark:text-slate-300\">\n                {{\n                  order.status == 2 ? 'pending' : order.status == 1 ? 'approved' : 'declined'\n                }}</span\n              >\n            </p>\n          </div>\n        </div>\n        <!-- Invoice Header Ends -->\n\n        <!-- Invoice Info Starts -->\n        <div class=\"flex flex-col justify-between p-1 space-y-6 md:flex-row md:space-y-0\">\n          <div\n            class=\"flex flex-col items-start justify-center w-full md:mb-0 md:w-2/3 md:justify-center\"\n          >\n            <p class=\"text-xs font-medium uppercase text-slate-400\">BILLED FROM</p>\n            <h6 class=\"my-1\">{{ invoice_data.company_name }}</h6>\n            <p class=\"text-sm font-normal whitespace-nowrap text-slate-600 dark:text-slate-300\">\n              {{ invoice_data.address }}\n            </p>\n            <p class=\"text-sm font-normal whitespace-nowrap text-slate-600 dark:text-slate-300\">\n              {{ invoice_data.city }}\n            </p>\n            <p class=\"text-sm font-normal whitespace-nowrap text-slate-600 dark:text-slate-300\">\n              {{ invoice_data.post_code }}\n            </p>\n            <p class=\"text-sm font-normal whitespace-nowrap text-slate-600 dark:text-slate-300\">\n              {{ invoice_data.country }}\n            </p>\n          </div>\n\n          <div class=\"flex flex-col items-start justify-center w-full md:w-1/3 md:items-end\">\n            <p class=\"text-xs font-medium uppercase text-slate-400\">BILLED TO</p>\n            <h6 class=\"my-1\">{{ order.user.name }}</h6>\n            <p class=\"text-sm font-normal whitespace-nowrap text-slate-600 dark:text-slate-300\">\n              {{ order.user.address }}\n            </p>\n            <p class=\"text-sm font-normal whitespace-nowrap text-slate-600 dark:text-slate-300\">\n              {{ order.user.email }}\n            </p>\n            <p class=\"text-sm font-normal whitespace-nowrap text-slate-600 dark:text-slate-300\">\n              {{ order.user.phone }}\n            </p>\n          </div>\n        </div>\n        <!-- Invoice Info Ends -->\n\n        <!-- Product Table Starts -->\n        <div class=\"w-full p-1 overflow-auto\">\n          <div class=\"min-w-[38rem]\">\n            <div\n              class=\"border table-responsive whitespace-nowrap rounded-primary border-slate-200 dark:border-slate-600\"\n            >\n              <table class=\"table table-striped table-hover table-md\">\n                <tbody>\n                  <tr>\n                    <td>{{ trans('Subscription Plan Name') }}</td>\n                    <td>\n                      <p class=\"text-end\">{{ trans('Amount') }}</p>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>{{ order.plan.title }}</td>\n                    <td>\n                      <p class=\"text-end\">{{ formatCurrency(order.amount) }}</p>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <div class=\"flex items-stretch justify-between mt-4\">\n              <div class=\"w-2/5\">\n                <p class=\"py-0 my-2 text-sm font-semibold\">\n                  {{ trans('Payment Method') }}:\n                  <span class=\"font-normal\"> {{ order.gateway.name }}</span>\n                </p>\n                <p class=\"py-0 my-2 text-sm font-semibold\">\n                  {{ trans('Payment Id') }}:\n                  <span class=\"font-normal\">{{ order.payment_id }}</span>\n                </p>\n                <div class=\"\">\n                  <template v-if=\"meta != null\">\n                    <div class=\"font-semibold\">{{ trans('Payment Info:') }}</div>\n                    <br />\n                    <p class=\"section-lead\">{{ meta.comment }}</p>\n                    <p class=\"section-lead\">\n                      <a target=\"_blank\" :href=\"meta.screenshot\">{{ trans('Attachment') }}</a>\n                    </p>\n                  </template>\n                </div>\n              </div>\n\n              <div class=\"space-y-3\">\n                <div class=\"flex items-center justify-between gap-x-2\">\n                  <p class=\"text-sm text-slate-400 dark:text-slate-300\">\n                    {{ trans('Subtotal') }}:\n                  </p>\n\n                  <p class=\"text-sm font-semibold text-slate-700 dark:text-slate-300\">\n                    {{ formatCurrency(order.amount) }}\n                  </p>\n                </div>\n                <div class=\"flex items-center justify-between gap-x-2\">\n                  <p class=\"text-sm text-slate-400 dark:text-slate-300\">\n                    {{ trans('Tax') }}:\n                  </p>\n\n                  <p class=\"text-sm font-semibold text-slate-700 dark:text-slate-300\">\n                    {{ formatCurrency(order.tax || 0) }}\n                  </p>\n                </div>\n\n                <hr class=\"mt-5 mb-1 border-slate-200 dark:border-slate-600\" />\n                <div class=\"flex items-center justify-between gap-x-2\">\n                  <p class=\"text-sm text-slate-400\">{{ trans('Total') }}:</p>\n                  <p class=\"text-sm font-semibold text-slate-700 dark:text-slate-300\">\n                    {{ formatCurrency(order.amount + order.tax || 0) }}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- Product Table Ends -->\n\n        <p class=\"py-2 text-sm text-center\">{{ trans('Thanks for your Business') }}</p>\n      </div>\n    </div>\n    <!-- Invoice Details Ends -->\n\n    <div class=\"mt-4 card\">\n      <form @submit.prevent=\"updateOrder('/admin/order/' + order.id)\">\n        <div class=\"flex space-x-2 card-body\">\n          <div class=\"col-span-3 mb-2\">\n            <label class=\"float-left\">{{ trans('Order Status') }}</label>\n            <select class=\"select\" name=\"status\" v-model=\"form.status\">\n              <option value=\"1\">{{ trans('Approved') }}</option>\n              <option value=\"2\">{{ trans('Pending') }}</option>\n              <option value=\"0\">{{ trans('Rejected') }}</option>\n            </select>\n          </div>\n          <div class=\"col-span-3 mb-2\">\n            <label class=\"float-left\">{{ trans('Assign This Plan?') }}</label>\n            <select class=\"select\" name=\"assign_order\" v-model=\"form.assign_order\">\n              <option value=\"yes\">{{ trans('Yes') }}</option>\n              <option value=\"no\">{{ trans('No') }}</option>\n            </select>\n          </div>\n          <div class=\"col-auto mb-2\">\n            <br />\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"form.processing\">\n              {{ trans('Update') }}\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </main>\n</template>\n","<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment title=\"Create Page\" :segments=\"segments\" :buttons=\"buttons\" />\n\n    <form method=\"post\" @submit.prevent=\"createPage\">\n      <div class=\"card\">\n        <div class=\"space-y-5 card-body\">\n          <div class=\"mb-2\">\n            <label class=\"mb-1 label label-required\">{{ trans(\"Page Title\") }}</label>\n            <input type=\"text\" name=\"title\" v-model=\"form.title\" required class=\"input\" />\n          </div>\n          <div class=\"mb-2\">\n            <label class=\"mb-1 label label-required\">{{\n              trans(\"Page Description\")\n            }}</label>\n            <cke tag-name=\"textarea\" :editor=\"ClassicEditor\" v-model=\"form.description\" />\n          </div>\n\n          <div class=\"mb-2\">\n            <label class=\"mb-1 label label-required\">{{ trans(\"SEO Meta Title\") }}</label>\n            <div class=\"col-lg-12\">\n              <input\n                v-model=\"form.meta_title\"\n                type=\"text\"\n                name=\"meta_title\"\n                required\n                class=\"input\"\n              />\n            </div>\n          </div>\n          <div class=\"mt-2 mb-2\">\n            <label class=\"mb-1 label label-required\">{{\n              trans(\"SEO Meta Description\")\n            }}</label>\n            <div class=\"col-lg-12\">\n              <textarea\n                v-model=\"form.meta_description\"\n                name=\"meta_description\"\n                required\n                class=\"textarea\"\n              ></textarea>\n            </div>\n          </div>\n          <div class=\"mt-3 mb-2\">\n            <label class=\"mb-1 label label-required\">{{ trans(\"SEO Meta Tags\") }}</label>\n            <div class=\"col-lg-12\">\n              <input\n                v-model=\"form.meta_tags\"\n                type=\"text\"\n                name=\"meta_tags\"\n                required\n                class=\"input\"\n              />\n            </div>\n          </div>\n          <div class=\"mt-3 mb-2\">\n            <div>\n              <label for=\"toggle-status\" class=\"toggle toggle-sm\">\n                <input\n                  v-model=\"form.status\"\n                  class=\"sr-only toggle-input peer\"\n                  id=\"toggle-status\"\n                  type=\"checkbox\"\n                />\n                <div class=\"toggle-body\"></div>\n                <span class=\"label label-md\">{{ trans(\"Make it publish?\") }}</span>\n              </label>\n            </div>\n          </div>\n          <SpinnerBtn :processing=\"form.processing\" :btnText=\"trans('Create')\" />\n        </div>\n      </div>\n    </form>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport { useForm } from \"@inertiajs/vue3\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport trans from '@/Composables/transComposable';\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport ckeEditor from \"@/Plugins/ckeEditor\";\nconst { cke, ClassicEditor } = ckeEditor();\n\ndefineOptions({ layout: AdminLayout });\n\nconst props = defineProps([\"buttons\", \"segments\"]);\nconst form = useForm({\n  title: \"\",\n  description: \"\",\n  meta_title: \"\",\n  meta_description: \"\",\n  meta_tags: \"\",\n  status: false,\n});\nconst createPage = () => {\n  form.post(route(\"admin.page.store\"), {\n    onSuccess: () => {\n      form.reset();\n      notify.success(trans(\"Page has been added successfully\"));\n    },\n  });\n};\n</script>\n","<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment title=\"Edit Page\" :segments=\"segments\" :buttons=\"buttons\" />\n\n    <form method=\"post\" @submit.prevent=\"editPage\">\n      <!-- Alerts -->\n      <div class=\"card\">\n        <div class=\"space-y-5 card-body\">\n          <div>\n            <label class=\"mb-1 label label-required\">{{ trans('Page Title') }}</label>\n            <input type=\"text\" name=\"title\" v-model=\"info.title\" required class=\"input\" />\n          </div>\n          <div>\n            <label class=\"mb-1 label label-required\">{{ trans('Page Description') }}</label>\n\n            <cke tag-name=\"textarea\" :editor=\"ClassicEditor\" v-model=\"info.description.value\" />\n          </div>\n\n          <div class=\"mb-2\">\n            <label class=\"mb-1 label label-required\">{{ trans('SEO Meta Title') }}</label>\n            <input\n              v-model=\"seoMeta.meta_title\"\n              type=\"text\"\n              name=\"meta_title\"\n              required\n              class=\"input\"\n            />\n          </div>\n          <div class=\"mt-2 mb-2\">\n            <label class=\"mb-1 label label-required\">{{ trans('SEO Meta Description') }}</label>\n            <textarea\n              v-model=\"seoMeta.meta_description\"\n              name=\"meta_description\"\n              required\n              class=\"textarea\"\n            ></textarea>\n          </div>\n          <div class=\"mt-3 mb-2\">\n            <label class=\"mb-1 label label-required\">{{ trans('SEO Meta Tags') }}</label>\n            <input\n              v-model=\"seoMeta.meta_tags\"\n              type=\"text\"\n              name=\"meta_tags\"\n              required\n              class=\"input\"\n            />\n          </div>\n\n          <div class=\"mt-3 mb-2\">\n                <div>\n                  <label for=\"toggle-status\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"info.status\"\n                      class=\"sr-only toggle-input peer\"\n                      id=\"toggle-status\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('Make it publish?') }}</span>\n                  </label>\n                </div>\n              </div>\n\n          <SpinnerBtn :processing=\"isProcessing\" :btnText=\"trans('Save Changes')\" />\n        </div>\n      </div>\n    </form>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { router } from '@inertiajs/vue3'\nimport { ref, onMounted } from 'vue'\nimport notify from '@/Plugins/Admin/notify'\nimport trans from '@/Composables/transComposable'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport ckeEditor from '@/Plugins/ckeEditor'\nconst { cke, ClassicEditor } = ckeEditor()\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps(['buttons', 'segments', 'info', 'seo'])\n\nconst isProcessing = ref(false)\n\nconst seoMeta = ref({\n  meta_title: '',\n  meta_description: '',\n  meta_tags: ''\n})\n\nonMounted(() => {\n  seoMeta.value.meta_title = props.seo.title\n  seoMeta.value.meta_description = props.seo.description\n  seoMeta.value.meta_tags = props.seo.tags\n})\n\nconst editPage = () => {\n  const data = { ...seoMeta.value, ...props.info }\n  isProcessing.value = true\n  router.patch(route('admin.page.update', props.info.id), data, {\n    onSuccess: () => {\n      isProcessing.value = false\n      notify.success(trans('Page has been updated successfully'))\n    }\n  })\n}\n</script>\n","<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment title=\"Custom Page\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"pageStats\" grid=\"3\" />\n\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans('Title') }}</th>\n              <th>{{ trans('Url') }}</th>\n              <th>{{ trans('Status') }}</th>\n              <th>{{ trans('Created At') }}</th>\n              <th>\n                <p class=\"text-end\">{{ trans('Action') }}</p>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"page in pages.data\" :key=\"page.id\">\n              <td class=\"text-left\">\n                {{ textExcerpt(page.title, 50) }}\n              </td>\n              <td class=\"text-left\">\n                <a :href=\"page.posturl\" target=\"_blank\">{{ textExcerpt(page.posturl, 100) }}</a>\n              </td>\n\n              <td class=\"text-left\">\n                <span class=\"badge\" :class=\"page.status == 1 ? 'badge-success' : 'badge-danger'\">\n                  {{ page.status == 1 ? trans('Active') : trans('Draft') }}\n                </span>\n              </td>\n              <td>\n                {{ page.created_at_diff }}\n              </td>\n\n              <td>\n                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                  <div class=\"dropdown-toggle\">\n                    <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                  </div>\n                  <div class=\"dropdown-content w-40\">\n                    <ul class=\"dropdown-list\">\n                      <li class=\"dropdown-list-item\">\n                        <Link :href=\"route('admin.page.edit', page.id)\" class=\"dropdown-link\">\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans('Edit') }}</span>\n                        </Link>\n                      </li>\n\n                      <li class=\"dropdown-list-item\">\n                        <button\n                          as=\"button\"\n                          class=\"dropdown-link\"\n                          @click=\"deleteRow(route('admin.page.destroy', page.id))\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                            >{{ trans('Remove') }}></i\n                          >\n                          <span>{{ trans('Delete') }}</span>\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div class=\"card py-4\">\n          <Paginate :links=\"pages.links\" />\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport Paginate from '@/Components/Paginate.vue'\nimport Overview from '@/Components/Admin/OverviewGrid.vue'\nimport trans from '@/Composables/transComposable'\n\ndefineOptions({ layout: AdminLayout })\nconst { textExcerpt, deleteRow } = sharedComposable()\nconst props = defineProps([\n  'pages',\n  'totalActivePosts',\n  'totalInActivePosts',\n  'totalPosts',\n  'buttons',\n  'segments'\n])\nconst pageStats = [\n  {\n    value: props.totalPosts,\n    title: trans('Total Page'),\n    iconClass: 'bx bx-bar-chart'\n  },\n  {\n    value: props.totalActivePosts,\n    title: trans('Active Page'),\n    iconClass: 'bx bx-check-circle'\n  },\n  {\n    value: props.totalInActivePosts,\n    title: trans('Inactive Page'),\n    iconClass: 'bx bx-x-circle'\n  }\n]\n</script>\n","<script setup>\nimport trans from '@/Composables/transComposable'\nimport { ref } from 'vue'\n\nconst { data } = defineProps(['data'])\nconst home = ref({ ...data })\n</script>\n\n<template>\n  <h6>{{ trans('Hero Banner With Search Section') }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Sub title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Right Image') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.hero.image = e.target.files[0])\"\n      />\n    </div>\n  </div>\n\n  <h6>{{ trans('Category Section') }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.category_section.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Right title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.category_section.title_right\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Text') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.category_section.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Link') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.category_section.btn_link\" />\n    </div>\n\n  </div>\n\n  <h6>{{ trans('Call to action') }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Sub title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Features') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.features\" />\n      <p>{{ trans('use comma (,) for line break') }}</p>\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('CTA Button Text') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Link') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Left image 1') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s1.image1 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Left image 2') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s1.image2 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Left image 3') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s1.image3 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Left image 4') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s1.image4 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Left image 5') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s1.image5 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Left image 6') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s1.image6 = e.target.files[0])\"\n      />\n    </div>\n  </div>\n\n  <h6>{{ trans('Call to action 2') }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Sup Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.top_title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Main Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Sub title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('CTA Button Text') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Link') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Left Circle image 1') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s2.image1 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Left Circle image 2') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s2.image2 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Left Circle image 3') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s2.image3 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Left Circle image 4') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s2.image4 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Left Circle image 5') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s2.image5 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Left Circle image 6') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s2.image6 = e.target.files[0])\"\n      />\n    </div>\n  </div>\n\n  <h6>{{ trans('Call to action 3') }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s3.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Sub title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s3.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('CTA Button Text') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s3.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Link') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s3.btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Left Image') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s3.image = e.target.files[0])\"\n      />\n    </div>\n  </div>\n</template>\n","<script setup>\nimport trans from '@/Composables/transComposable';\nimport { ref } from \"vue\";\n\nconst { data } = defineProps([\"data\"]);\nconst home = ref({ ...data });\n\nconst defaultFeature = {\n  title: \"\",\n  body: \"\",\n};\n\nconst addFeatureItem = () => {\n  home.value.cta_s2.features.push({ ...defaultFeature });\n};\n\nconst removeFeatureItem = (index) => {\n  home.value.cta_s2.features.splice(index, 1);\n};\n</script>\n\n<template>\n  <h6>{{ trans(\"Hero Banner Section\") }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Sub title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Left Image\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.hero.image1 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Left Image top overlap\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.hero.image2 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Left Image center overlap\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.hero.image3 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Left Image bottom overlap\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.hero.image4 = e.target.files[0])\"\n      />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Individual Freelancer\") }}</label>\n      <input\n        type=\"text\"\n        class=\"input\"\n        v-model=\"home.hero.footer_item1\"\n        placeholder=\"18k+\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Rating text\") }}</label>\n      <input\n        type=\"text\"\n        class=\"input\"\n        v-model=\"home.hero.footer_item2\"\n        placeholder=\"A+ Ratting\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Rating Point\") }}</label>\n      <select class=\"select\" v-model=\"home.hero.footer_item3\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Ratting point text\") }}</label>\n      <input\n        type=\"text\"\n        class=\"input\"\n        v-model=\"home.hero.footer_item4\"\n        placeholder=\"5 (300k+)\"\n      />\n    </div>\n  </div>\n\n  <h6>{{ trans(\"Call to action 1\") }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Sub title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Features\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.features\" />\n      <p>use comma (,) for line break</p>\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Button Text\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Button Link\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 1\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s1.image1 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 2\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s1.image2 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 3\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s1.image3 = e.target.files[0])\"\n      />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Youtube Video ID\") }}</label>\n      <input type=\"text\" v-model=\"home.cta_s1.video_id\" class=\"input\" />\n      <small>https://www.youtube.com/watch?v=<code>XJTD3VOIWuw</code></small>\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Completed Jobs\") }}</label>\n      <input type=\"text\" v-model=\"home.cta_s1.item1\" class=\"input\" />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Worldwide Client\") }}</label>\n      <input type=\"text\" v-model=\"home.cta_s1.item2\" class=\"input\" />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Applied Jobs\") }}</label>\n      <input type=\"text\" v-model=\"home.cta_s1.item3\" class=\"input\" />\n    </div>\n  </div>\n\n  <h6>{{ trans(\"Call to action 2\") }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Top Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.top_title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label class=\"mr-2\">{{ trans(\"List Items\") }}</label>\n      <div\n        class=\"flex items-center p-2 mb-2 border gap-x-2\"\n        v-for=\"(item, index) in home.cta_s2.features\"\n        :key=\"index\"\n      >\n        <span class=\"p-2 py-1 text-center text-white bg-indigo-600 rounded-full\">{{\n          index + 1\n        }}</span>\n        <div class=\"flex flex-col flex-grow gap-1\">\n          <input\n            type=\"text\"\n            class=\"input\"\n            placeholder=\"item title\"\n            v-model=\"item.title\"\n          />\n          <textarea class=\"textarea\" v-model=\"item.body\"> </textarea>\n        </div>\n        <button type=\"button\" @click=\"removeFeatureItem(index)\" class=\"btn btn-danger\">\n          X\n        </button>\n      </div>\n      <button type=\"button\" @click=\"addFeatureItem\" class=\"btn btn-primary\">+</button>\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Button Text\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Button Link\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Top Image \") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s2.image1 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Container Image\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s2.image2 = e.target.files[0])\"\n      />\n    </div>\n  </div>\n\n  <h6>{{ trans(\"Feedback Section\") }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Top Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.feedback_section.top_title\" />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.feedback_section.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Bottom Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.feedback_section.bottom_title\" />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Bottom Sub Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.feedback_section.bottom_sub_title\" />\n    </div>\n  </div>\n</template>\n","<script setup>\nimport trans from '@/Composables/transComposable'\nimport { ref } from 'vue'\n\nconst { data } = defineProps(['data'])\nconst home = ref({ ...data })\n\nconst defaultFeature = {\n  title: '',\n  body: ''\n}\n\nconst addFeatureItem = () => {\n  home.value.cta_s1.features.push({ ...defaultFeature })\n}\n\nconst removeFeatureItem = index => {\n  home.value.cta_s1.features.splice(index, 1)\n}\n\nconst AddCatListItem = section => {\n  section.items.push({\n    text: '',\n    url: ''\n  })\n}\n\nconst removeCatListItem = (section, index) => {\n  if (section.items.length > 1) {\n    section.items.splice(index, 1)\n  }\n}\n</script>\n\n<template>\n  <h6>{{ trans('Hero Banner Section') }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Top Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.top_title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Sub title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Text') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Link') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Trusted Partner 1') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.hero.image1 = e.target.files[0])\"\n      />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Trusted Partner 2') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.hero.image2 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Trusted Partner 3') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.hero.image3 = e.target.files[0])\"\n      />\n    </div>\n\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Right Main Image') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.hero.image4 = e.target.files[0])\"\n      />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Animation Image (png)') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.hero.image5 = e.target.files[0])\"\n      />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Bottom Left Image') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.hero.image6 = e.target.files[0])\"\n      />\n    </div>\n\n  </div>\n\n  <h6>{{ trans('Call to action 1') }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Top Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.top_title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label class=\"mr-2\">{{ trans('List Items') }}</label>\n      <div\n        class=\"flex items-center p-2 mb-2 border gap-x-2\"\n        v-for=\"(item, index) in home.cta_s1.features\"\n        :key=\"index\"\n      >\n        <span class=\"p-2 py-1 text-center text-white bg-indigo-600 rounded-full\">{{\n          index + 1\n        }}</span>\n        <div class=\"flex flex-col flex-grow gap-1\">\n          <input type=\"text\" class=\"input\" placeholder=\"item title\" v-model=\"item.title\" />\n          <textarea class=\"textarea\" v-model=\"item.body\"> </textarea>\n        </div>\n        <button type=\"button\" @click=\"removeFeatureItem(index)\" class=\"btn btn-danger\">X</button>\n      </div>\n      <button type=\"button\" @click=\"addFeatureItem\" class=\"btn btn-primary\">+</button>\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Text') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Link') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Image 1') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s1.image1 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Image 2') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s1.image2 = e.target.files[0])\"\n      />\n    </div>\n  </div>\n\n  <h6>{{ trans('Call to action 2') }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Top Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.top_title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Sub Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Completed Jobs') }}</label>\n      <input type=\"text\" v-model=\"home.cta_s2.item1\" class=\"input\" />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Worldwide Client') }}</label>\n      <input type=\"text\" v-model=\"home.cta_s2.item2\" class=\"input\" />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Applied Jobs') }}</label>\n      <input type=\"text\" v-model=\"home.cta_s2.item3\" class=\"input\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Text') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Link') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Right Image') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s2.image1 = e.target.files[0])\"\n      />\n    </div>\n  </div>\n\n  <h6>{{ trans('Call to action 3') }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s3.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Sub Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s3.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Footer item 1 text') }}</label>\n      <input type=\"text\" v-model=\"home.cta_s3.footer_item1\" class=\"input\" />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Footer item 2 text') }}</label>\n      <input type=\"text\" v-model=\"home.cta_s3.footer_item2\" class=\"input\" />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Footer item 3 text') }}</label>\n      <input type=\"text\" v-model=\"home.cta_s3.footer_item3\" class=\"input\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Video Link') }}</label>\n      <input type=\"text\" v-model=\"home.cta_s3.video\" class=\"input\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Background Image') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s3.image = e.target.files[0])\"\n      />\n    </div>\n  </div>\n\n  <h6>{{ trans('Call to action 4') }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s4.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Sub title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s4.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('CTA Button Text') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s4.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Link') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s4.btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Right Circle text upper') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s4.circle_text1\" />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Right Circle text lower') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s4.circle_text2\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Right Circle image 1') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s4.image1 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Right Circle image 2') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s4.image2 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Right Circle image 3') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s4.image3 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Right Circle image 4') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s4.image4 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Right Circle image 5') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s4.image5 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Right Circle image 6') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s4.image6 = e.target.files[0])\"\n      />\n    </div>\n  </div>\n\n  <h6>{{ trans('Footer Category Section') }}</h6>\n  <div>\n    <div v-for=\"(section, index) in home.footer_cats\" :key=\"index\" class=\"p-3 mb-2 border\">\n      <div class=\"flex items-center mt-2 mb-2 space-x-2\">\n        <input\n          type=\"text\"\n          class=\"input\"\n          v-model=\"section.title\"\n          :placeholder=\"`List ${index + 1} title`\"\n        />\n        <button\n          type=\"button\"\n          @click=\"AddCatListItem(section, index)\"\n          class=\"btn btn-primary whitespace-nowrap\"\n        >\n          {{ trans('Add Link') }}\n        </button>\n      </div>\n\n      <div\n        v-for=\"(item, index) in section.items\"\n        :key=\"index\"\n        class=\"flex items-center pb-4 space-x-2\"\n      >\n        <input type=\"text\" class=\"input\" v-model=\"item.text\" placeholder=\"text\" />\n        <input type=\"text\" class=\"input\" v-model=\"item.url\" placeholder=\"url\" />\n        <button\n          type=\"button\"\n          @click=\"removeCatListItem(section, index)\"\n          class=\"btn btn-outline-danger\"\n        >\n          X\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport trans from '@/Composables/transComposable'\nimport { ref } from 'vue'\n\nconst { data } = defineProps(['data'])\nconst home = ref({ ...data })\n\nconst defaultFeature = {\n  title: '',\n  body: ''\n}\n\nconst addFeatureItem = () => {\n  home.value.cta_s2.features.push({ ...defaultFeature })\n}\n\nconst removeFeatureItem = index => {\n  home.value.cta_s2.features.splice(index, 1)\n}\n</script>\n\n<template>\n  <h6>{{ trans('Hero Banner Section') }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Sub title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Text') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Link') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Bottom Image') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.hero.image = e.target.files[0])\"\n      />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Left Top Overlap Image') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.hero.image1 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Left Bottom Overlap Image') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.hero.image2 = e.target.files[0])\"\n      />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Right Top Overlap Image') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.hero.image3 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Right Bottom Overlap Image') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.hero.image4 = e.target.files[0])\"\n      />\n    </div>\n\n  </div>\n\n  <h6>{{ trans('Call to action 1') }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Sub title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Text') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Link') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Image 1') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s1.image1 = e.target.files[0])\"\n      />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Image 2') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s1.image2 = e.target.files[0])\"\n      />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Completed Jobs') }}</label>\n      <input type=\"text\" v-model=\"home.cta_s1.item1\" class=\"input\" />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Worldwide Client') }}</label>\n      <input type=\"text\" v-model=\"home.cta_s1.item2\" class=\"input\" />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Applied Jobs') }}</label>\n      <input type=\"text\" v-model=\"home.cta_s1.item3\" class=\"input\" />\n    </div>\n  </div>\n\n  <h6>{{ trans('Call to action 2') }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans('Top Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.top_title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Title') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label class=\"mr-2\">{{ trans('List Items') }}</label>\n      <div\n        class=\"flex items-center p-2 mb-2 border gap-x-2\"\n        v-for=\"(item, index) in home.cta_s2.features\"\n        :key=\"index\"\n      >\n        <span class=\"p-2 py-1 text-center text-white bg-indigo-600 rounded-full\">{{\n          index + 1\n        }}</span>\n        <div class=\"flex flex-col flex-grow gap-1\">\n          <input type=\"text\" class=\"input\" placeholder=\"item title\" v-model=\"item.title\" />\n          <textarea class=\"textarea\" v-model=\"item.body\"> </textarea>\n        </div>\n        <button type=\"button\" @click=\"removeFeatureItem(index)\" class=\"btn btn-danger\">X</button>\n      </div>\n      <button type=\"button\" @click=\"addFeatureItem\" class=\"btn btn-primary\">+</button>\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Text') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Button Link') }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Image 1') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s2.image1 = e.target.files[0])\"\n      />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Image 2') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s2.image2 = e.target.files[0])\"\n      />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans('Image 3') }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"e => (home.cta_s2.image3 = e.target.files[0])\"\n      />\n    </div>\n  </div>\n</template>\n","<script setup>\nimport trans from '@/Composables/transComposable'\nimport { ref } from \"vue\"\n\nconst { data } = defineProps(['data'])\nconst home = ref({ ...data })\n\nconst defaultFeature = {\n    title: '',\n    body: '',\n}\n\nconst addFeatureItem = () => {\n    home.value.cta_s1?.features.push({ ...defaultFeature })\n}\n\nconst removeFeatureItem = (index) => {\n    home.value.cta_s1?.features.splice(index, 1)\n}\n\n</script>\n\n<template>\n    <h6>{{ trans('Hero Banner Section') }}</h6>\n    <div>\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Title\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.hero.title\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Sub title\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.hero.subtitle\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Right Image\") }}</label>\n            <input type=\"file\" accept=\"image/*\" class=\"input\" @input=\"(e) => (home.hero.image = e.target.files[0])\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Bottom Image\") }}</label>\n            <input type=\"file\" accept=\"image/*\" class=\"input\" @input=\"(e) => (home.hero.image2 = e.target.files[0])\" />\n        </div>\n    </div>\n\n    <h6>{{ trans('Call to action 1') }}</h6>\n    <div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Title\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.title\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label class=\"mr-2\">{{ trans(\"List Items\") }}</label>\n            <div class=\"flex items-center p-2 mb-2 border gap-x-2\" v-for=\"(item, index) in home.cta_s1.features\"\n                :key=\"index\">\n                <span class=\"p-2 py-1 text-center text-white bg-indigo-600 rounded-full\">{{ index + 1 }}</span>\n                <div class=\"flex flex-col flex-grow gap-1\">\n                    <input type=\"text\" class=\"input\" placeholder=\"item title\" v-model=\"item.title\" />\n                    <textarea class=\"textarea\" v-model=\"item.body\">\n                    </textarea>\n                </div>\n                <button type=\"button\" @click=\"removeFeatureItem(index)\" class=\"btn btn-danger\">X</button>\n            </div>\n            <button type=\"button\" @click=\"addFeatureItem\" class=\"btn btn-primary\">+</button>\n        </div>\n\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Button Text\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.btn_text\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Button Link\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.btn_link\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Image 1\") }}</label>\n            <input type=\"file\" accept=\"image/*\" class=\"input\" @input=\"(e) => (home.cta_s1.image1 = e.target.files[0])\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Image 2\") }}</label>\n            <input type=\"file\" accept=\"image/*\" class=\"input\" @input=\"(e) => (home.cta_s1.image2 = e.target.files[0])\" />\n        </div>\n    </div>\n\n    <h6>{{ trans('Bottom CTA Section') }}</h6>\n    <div>\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Title\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.title\" />\n        </div>\n        \n        <div class=\"mb-2\">\n            <label>{{ trans(\"Left Button Text\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.left_btn_text\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Left Button Link\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.left_btn_link\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Right Button Text\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.right_btn_text\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Right Button Link\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.right_btn_link\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Right Image\") }}</label>\n            <input type=\"file\" accept=\"image/*\" class=\"input\" @input=\"(e) => (home.cta_s2.image1 = e.target.files[0])\" />\n        </div>\n    </div>\n\n</template>\n","<script setup>\nimport trans from '@/Composables/transComposable';\nimport { ref } from \"vue\";\n\nconst { data } = defineProps([\"data\"]);\nconst home = ref({ ...data });\n\nconst defaultFeature = {\n  title: \"\",\n  body: \"\",\n};\n\nconst addFeatureItem = () => {\n  home.value.cta_s2.features.push({ ...defaultFeature });\n};\n\nconst removeFeatureItem = (index) => {\n  home.value.cta_s2.features.splice(index, 1);\n};\n\n</script>\n\n<template>\n  <h6>{{ trans(\"Hero Banner Section\") }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Sub title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.hero.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Worldwide Client\") }}</label>\n      <input type=\"text\" v-model=\"home.hero.item1\" class=\"input\" />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Top Talents\") }}</label>\n      <input type=\"text\" v-model=\"home.hero.item2\" class=\"input\" />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Applied Jobs\") }}</label>\n      <input type=\"text\" v-model=\"home.hero.item3\" class=\"input\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Slider Image 1\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.hero.image1 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Slider Image 2\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.hero.image2 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Slider Image 2\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.hero.image3 = e.target.files[0])\"\n      />\n    </div>\n  </div>\n\n  <h6>{{ trans(\"Call to action 1\") }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Sub title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label class=\"mr-2\">{{ trans(\"Step Items\") }}</label>\n      <div\n        class=\"flex items-center p-2 mb-2 border gap-x-2\"\n        v-for=\"(item, index) in home.cta_s1.steps\"\n        :key=\"index\"\n      >\n        <span class=\"p-2 py-1 text-center text-white bg-indigo-600 rounded-full\">{{\n          index + 1\n        }}</span>\n        <div class=\"flex flex-col flex-grow gap-1\">\n          <input\n            type=\"text\"\n            class=\"input\"\n            placeholder=\"item title\"\n            v-model=\"item.title\"\n          />\n          <input\n            type=\"text\"\n            class=\"input\"\n            placeholder=\"item link text\"\n            v-model=\"item.text\"\n          />\n          <input\n            type=\"text\"\n            class=\"input\"\n            placeholder=\"item link\"\n            v-model=\"item.link\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Youtube Video ID\") }}</label>\n      <input type=\"text\" v-model=\"home.cta_s1.video_id\" class=\"input\" />\n      <small>https://www.youtube.com/watch?v=<code>XJTD3VOIWuw</code></small>\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Background Image\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s1.image1 = e.target.files[0])\"\n      />\n    </div>\n  </div>\n\n  <h6>{{ trans(\"Call to action 2\") }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Top Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.top_title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label class=\"mr-2\">{{ trans(\"List Items\") }}</label>\n      <div\n        class=\"flex items-center p-2 mb-2 border gap-x-2\"\n        v-for=\"(item, index) in home.cta_s2.features\"\n        :key=\"index\"\n      >\n        <span class=\"p-2 py-1 text-center text-white bg-indigo-600 rounded-full\">{{\n          index + 1\n        }}</span>\n        <div class=\"flex flex-col flex-grow gap-1\">\n          <input\n            type=\"text\"\n            class=\"input\"\n            placeholder=\"item title\"\n            v-model=\"item.title\"\n          />\n          <textarea class=\"textarea\" v-model=\"item.body\"> </textarea>\n        </div>\n        <button type=\"button\" @click=\"removeFeatureItem(index)\" class=\"btn btn-danger\">\n          X\n        </button>\n      </div>\n      <button type=\"button\" @click=\"addFeatureItem\" class=\"btn btn-primary\">+</button>\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Button Text\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Button Link\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 1\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s2.image1 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 2\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s2.image2 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 3\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s2.image3 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 4\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s2.image4 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 5\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s2.image5 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 6\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s2.image6 = e.target.files[0])\"\n      />\n    </div>\n  </div>\n  <h6>{{ trans(\"Feedback Section\") }}</h6>\n  <div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.feedback_section.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Background Image\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.feedback_section.image = e.target.files[0])\"\n      />\n    </div>\n    \n  </div>\n\n  <h6>{{ trans(\"Call to action 3\") }}</h6>\n  <div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Top Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s3.top_title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s3.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Sub title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s3.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Button Text\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s3.btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Button Link\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s3.btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 1\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s3.image1 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 2\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s3.image2 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 3\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s3.image3 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 4\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s3.image4 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 5\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s3.image5 = e.target.files[0])\"\n      />\n    </div>\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Image 6\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s3.image6 = e.target.files[0])\"\n      />\n    </div>\n  </div>\n\n  <h6>{{ trans(\"Footer CTA Section\") }}</h6>\n  <div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s4.title\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Sub title\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s4.subtitle\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Left Button Text\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s4.left_btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Left Button Link\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s4.left_btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Right Button Text\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s4.right_btn_text\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Right Button Link\") }}</label>\n      <input type=\"text\" class=\"input\" v-model=\"home.cta_s4.right_btn_link\" />\n    </div>\n\n    <div class=\"mb-2\">\n      <label>{{ trans(\"Background Image\") }}</label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"input\"\n        @input=\"(e) => (home.cta_s4.image1 = e.target.files[0])\"\n      />\n    </div>\n  </div>\n</template>\n","<script setup>\nimport trans from '@/Composables/transComposable'\nimport { ref } from \"vue\"\n\nconst { data } = defineProps(['data'])\nconst home = ref({ ...data })\n\n\nconst defaultFeature = {\n    title: '',\n    body: '',\n}\n\nconst addFeatureItem = () => {\n    home.value.cta_s1.features.push({ ...defaultFeature })\n}\n\nconst removeFeatureItem = (index) => {\n    home.value.cta_s1.features.splice(index, 1)\n}\n\n\n</script>\n\n<template>\n    <h6>{{ trans('Hero Banner Section') }}</h6>\n    <div>\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Title\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.hero.title\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Sub title\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.hero.subtitle\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Left Image\") }}</label>\n            <input type=\"file\" accept=\"image/*\" class=\"input\" @input=\"(e) => (home.hero.image1 = e.target.files[0])\" />\n        </div>\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Right Image\") }}</label>\n            <input type=\"file\" accept=\"image/*\" class=\"input\" @input=\"(e) => (home.hero.image2 = e.target.files[0])\" />\n        </div>\n\n    </div>\n\n\n    <h6>{{ trans('Call to action 1') }}</h6>\n    <div>\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Top Title\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.top_title\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Title\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.title\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Sub title\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.subtitle\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label class=\"mr-2\">{{ trans(\"List Items\") }}</label>\n            <div class=\"flex items-center p-2 mb-2 border gap-x-2\" v-for=\"(item, index) in home.cta_s1.features\"\n                :key=\"index\">\n                <span class=\"p-2 py-1 text-center text-white bg-indigo-600 rounded-full\">{{ index + 1 }}</span>\n                <div class=\"flex flex-col flex-grow gap-1\">\n                    <input type=\"text\" class=\"input\" placeholder=\"item title\" v-model=\"item.title\" />\n                    <textarea class=\"textarea\" v-model=\"item.body\">\n                    </textarea>\n                </div>\n                <button type=\"button\" @click=\"removeFeatureItem(index)\" class=\"btn btn-danger\">X</button>\n            </div>\n            <button type=\"button\" @click=\"addFeatureItem\" class=\"btn btn-primary\">+</button>\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Button Text\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.btn_text\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Button Link\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s1.btn_link\" />\n        </div>\n\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Image 1\") }}</label>\n            <input type=\"file\" accept=\"image/*\" class=\"input\" @input=\"(e) => (home.cta_s1.image1 = e.target.files[0])\" />\n        </div>\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Image 2\") }}</label>\n            <input type=\"file\" accept=\"image/*\" class=\"input\" @input=\"(e) => (home.cta_s1.image2 = e.target.files[0])\" />\n        </div>\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Image 3\") }}</label>\n            <input type=\"file\" accept=\"image/*\" class=\"input\" @input=\"(e) => (home.cta_s1.image3 = e.target.files[0])\" />\n        </div>\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Image 4\") }}</label>\n            <input type=\"file\" accept=\"image/*\" class=\"input\" @input=\"(e) => (home.cta_s1.image4 = e.target.files[0])\" />\n        </div>\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Image 5\") }}</label>\n            <input type=\"file\" accept=\"image/*\" class=\"input\" @input=\"(e) => (home.cta_s1.image5 = e.target.files[0])\" />\n        </div>\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Image 6\") }}</label>\n            <input type=\"file\" accept=\"image/*\" class=\"input\" @input=\"(e) => (home.cta_s1.image6 = e.target.files[0])\" />\n        </div>\n\n    </div>\n\n    <h6>{{ trans('Call to action 2') }}</h6>\n    <div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Title\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.title\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Sub title\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.subtitle\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Button Text\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.btn_text\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Button Link\") }}</label>\n            <input type=\"text\" class=\"input\" v-model=\"home.cta_s2.btn_link\" />\n        </div>\n\n        <div class=\"mb-2\">\n            <label>{{ trans(\"Left Image\") }}</label>\n            <input type=\"file\" accept=\"image/*\" class=\"input\" @input=\"(e) => (home.cta_s2.image = e.target.files[0])\" />\n        </div>\n    </div>\n</template>\n","<script setup>\nimport { ref, onMounted } from 'vue'\nimport { router, useForm } from '@inertiajs/vue3'\nimport notify from '@/Plugins/Admin/notify'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport trans from '@/Composables/transComposable'\nimport { onBeforeMount } from 'vue'\n\nimport HomeOne from '@/Pages/Admin/PageSetting/Home/Partials/HomeOne.vue'\nimport HomeTwo from '@/Pages/Admin/PageSetting/Home/Partials/HomeTwo.vue'\nimport HomeThree from '@/Pages/Admin/PageSetting/Home/Partials/HomeThree.vue'\nimport HomeFour from '@/Pages/Admin/PageSetting/Home/Partials/HomeFour.vue'\nimport HomeFive from '@/Pages/Admin/PageSetting/Home/Partials/HomeFive.vue'\nimport HomeSix from '@/Pages/Admin/PageSetting/Home/Partials/HomeSix.vue'\nimport HomeSeven from '@/Pages/Admin/PageSetting/Home/Partials/HomeSeven.vue'\n\nconst { data, theme } = defineProps(['data', 'theme'])\n\nconst home = ref({ ...data })\n\nconst isProcessing = ref(false)\n\nonBeforeMount(() => {\n  let properties = ['hero', 'cta_s1', 'cta_s2', 'cta_s3', 'cta_s4', 'footer_cats','category_section','feedback_section']\n  properties.forEach(key => (home.value[key] = home.value[key] || {}))\n\n  // home 2 | 4\n  if (!home.value.cta_s2?.features?.length && ['themeTwo', 'themeFour'].includes(theme)) {\n    home.value.cta_s2.features = [\n      {\n        title: '',\n        body: ''\n      }\n    ]\n  }\n\n  // home 3 | 5 | 7\n  if (\n    !home.value.cta_s1?.features?.length &&\n    ['themeThree', 'themeFive', 'themeSeven'].includes(theme)\n  ) {\n    home.value.cta_s1.features = [\n      {\n        title: '',\n        body: ''\n      }\n    ]\n  }\n  // home 6\n  if (\n    !home.value.cta_s1?.steps?.length &&\n    ['themeSix'].includes(theme)\n  ) {\n    home.value.cta_s1.steps = [\n      {\n        title: '',\n        text: '',\n        link: ''\n      },\n      {\n        title: '',\n        text: '',\n        link: ''\n      },\n      {\n        title: '',\n        text: '',\n        link: ''\n      },\n    ]\n  }\n\n  if (!home.value?.footer_cats?.length && ['themeThree'].includes(theme)) {\n    home.value.footer_cats = [\n      {\n        id: 1,\n        title: '',\n        items: [\n          {\n            text: '',\n            url: ''\n          }\n        ]\n      },\n      {\n        id: 2,\n        title: '',\n        items: [\n          {\n            text: '',\n            url: ''\n          }\n        ]\n      },\n      {\n        id: 3,\n        title: '',\n        items: [\n          {\n            text: '',\n            url: ''\n          }\n        ]\n      },\n      {\n        id: 4,\n        title: '',\n        items: [\n          {\n            text: '',\n            url: ''\n          }\n        ]\n      }\n    ]\n  }\n})\n\nconst submit = () => {\n  isProcessing.value = true\n  router.post(\n    route('admin.page-settings.update', 'home-page'),\n    {\n      _method: 'PUT',\n      home: home.value,\n      theme: theme\n    },\n    {\n      onSuccess: () => notify.success(trans('Home Page Updated successfully')),\n      onFinish: () => (isProcessing.value = false)\n    }\n  )\n}\n\nconst addItem = () => {}\n\nconst themeForm = useForm({\n  theme: theme ?? 'themeOne'\n})\n\nconst setTheme = () => {\n  themeForm.get(location.href)\n}\n</script>\n\n<template>\n  <div class=\"tabs-panel active\" id=\"homepage\">\n    <div class=\"mb-4 text-center\">\n      Active:\n      <span class=\"px-2 py-1 text-white bg-blue-900 rounded\">\n        {{ theme }}\n      </span>\n    </div>\n\n    <select class=\"mb-4 select\" @change=\"setTheme\" v-model=\"themeForm.theme\">\n      <option value=\"themeOne\">themeOne</option>\n      <option value=\"themeTwo\">themeTwo</option>\n      <option value=\"themeThree\">themeThree</option>\n      <option value=\"themeFour\">themeFour</option>\n      <option value=\"themeFive\">themeFive</option>\n      <option value=\"themeSix\">themeSix</option>\n      <option value=\"themeSeven\">themeSeven</option>\n    </select>\n\n    <form @submit.prevent=\"submit\">\n      <HomeOne v-if=\"theme == 'themeOne'\" :data=\"home\" />\n      <HomeTwo v-if=\"theme == 'themeTwo'\" :data=\"home\" />\n      <HomeThree v-if=\"theme == 'themeThree'\" :data=\"home\" />\n      <HomeFour v-if=\"theme == 'themeFour'\" :data=\"home\" />\n      <HomeFive v-if=\"theme == 'themeFive'\" :data=\"home\" />\n      <HomeSix v-if=\"theme == 'themeSix'\" :data=\"home\" />\n      <HomeSeven v-if=\"theme == 'themeSeven'\" :data=\"home\" />\n\n      <div class=\"mb-2\">\n        <SpinnerBtn :processing=\"isProcessing\" :btn-text=\"trans('Save Changes')\" />\n      </div>\n    </form>\n  </div>\n</template>\n","class Tabs {\n  constructor(target) {\n    //Store all .tab-btn elemens\n    this.tabBtns = target.querySelectorAll('.tabs-btn:not(.disabled)');\n\n    // Store .tab-content element\n    this.tabContent = target.querySelector('.tabs-content');\n\n    // Store all .tab-panels.\n    this.tabPanels = target.querySelectorAll('.tabs-panel');\n\n    // Store the .tab-panel depending on .tab-btn. Default is null.\n    this.tabPanel = null;\n\n    // Store the current tab button. Default is null.\n    this.tabBtn = null;\n\n    this.tabBtns.forEach((tabBtn) => {\n      tabBtn.addEventListener('click', () => {\n        // Set the current tab button\n        this.tabBtn = tabBtn;\n\n        // Set the current tab panel\n        this.tabPanel = this.tabContent.querySelector(this.tabBtn.dataset.panelId);\n\n        // Step - 1: Update active class of tab buttons\n        this.updateActiveClass(this.tabBtn, this.tabBtns);\n\n        // Step - 2: Update active class of tab panels\n        this.updateActiveClass(this.tabPanel, this.tabPanels);\n      });\n    });\n  }\n\n  updateActiveClass(element, elements) {\n    // check if the element contains active class\n    if (!element.classList.contains('active')) {\n      // Remove the active class from active element\n      elements.forEach((ele) => {\n        if (ele.classList.contains('active')) {\n          ele.classList.remove('active');\n        }\n      });\n\n      // Add active class in current element\n      element.classList.add('active');\n    }\n  }\n}\n\nconst tabs = {\n  init() {\n    //Store tabs element\n    const elements = document.querySelectorAll('.tabs');\n\n    // Check if the page contains any tab component\n    if (elements.length) {\n      // Create instance for each tab\n      [...elements].forEach((element) => new Tabs(element));\n    }\n  },\n};\n\nexport default tabs;\n","<script setup>\nimport { ref, onMounted } from \"vue\"\nimport tabs from \"@/Plugins/Admin/tabs\"\nimport { router } from \"@inertiajs/vue3\"\nimport trans from '@/Composables/transComposable'\nimport notify from \"@/Plugins/Admin/notify\"\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport HomePageSetting from \"@/Pages/Admin/PageSetting/Home/HomePageSetting.vue\"\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps([\n  \"primary_data\",\n  \"headerFooter\",\n  \"contact_page\",\n  \"home\",\n  \"features_area\",\n  \"brand_area\",\n  \"account_area\",\n  \"why_choose\",\n  \"buttons\",\n  \"segments\",\n  \"theme\"\n])\n\n\nonMounted(() => {\n  tabs.init()\n})\n\n\nconst isProcessing = ref(false)\n\n\nconst updatePrimaryData = (...data) => {\n  const primary_data = Object.assign({}, ...data)\n\n  const fileProperties = [\"logo\", \"favicon\", \"deep_logo\"]\n  fileProperties.forEach((property) => {\n    if (!(primary_data[property] instanceof File)) {\n      primary_data[property] = null\n    }\n  })\n\n  isProcessing.value = true\n  router.post(\n    route(\"admin.page-settings.update\", \"primary_data\"),\n    {\n      _method: \"PUT\",\n      primary_data: primary_data,\n    },\n    {\n      onSuccess: () => {\n        isProcessing.value = false\n        notify.success(trans('Primary Data Updated successfully'))\n      },\n    }\n  )\n}\n\nconst updateContactPage = (...data) => {\n  const contact_page = Object.assign({}, ...data)\n\n  router.put(\n    route(\"admin.page-settings.update\", \"contact-page\"),\n    {\n      contact_page,\n    },\n    {\n      onSuccess: () => {\n        isProcessing.value = false\n\n        notify.success(trans('Contact Page Updated successfully'))\n      },\n    }\n  )\n}\n\n</script>\n\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Page Settings\" :segments=\"segments\" :buttons=\"buttons\" />\n\n    <div class=\"space-y-6\">\n      <div class=\"card\">\n\n        <div class=\"card-body\">\n          <div class=\"tabs tabs-vertical\">\n\n            <ul class=\"tabs-list w-72\">\n              <li class=\"tabs-item\">\n                <button class=\"tabs-btn active\" data-panel-id=\"#homepage\" type=\"button\">\n                  <span>{{ trans(\"Home Page\") }}</span>\n                </button>\n              </li>\n\n              <li class=\"tabs-item\">\n                <button class=\"tabs-btn\" data-panel-id=\"#primary\" type=\"button\">\n                  <span>{{ trans(\"Primary\") }}</span>\n                </button>\n              </li>\n\n              <li class=\"tabs-item\">\n                <button class=\"tabs-btn\" data-panel-id=\"#contact\" type=\"button\">\n                  <span>{{ trans(\"Contact Page\") }}</span>\n                </button>\n              </li>\n            </ul>\n\n            <div class=\"tabs-content\">\n\n              <HomePageSetting :data=\"home\" :theme=\"props.theme\" />\n              <div class=\"tabs-panel\" id=\"primary\">\n                <form method=\"POST\" @submit.prevent=\"\n                  updatePrimaryData(primary_data)\n                  \" enctype=\"multipart/form-data\">\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Site Logo - light Color\") }}</label>\n                    <input type=\"file\" @input=\"(e) => (primary_data.logo = e.target.files[0])\" accept=\"image/*\"\n                      name=\"logo\" class=\"input\" />\n                  </div>\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Site Logo - Deep color\") }}</label>\n                    <input type=\"file\" accept=\"image/*\" name=\"deep_logo\" @input=\"(e) => (primary_data.deep_logo = e.target.files[0])\n                      \" class=\"input\" />\n                  </div>\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Favicon\") }}</label>\n                    <input type=\"file\" accept=\"image/*\" name=\"favicon\" @input=\"(e) => (primary_data.favicon = e.target.files[0])\n                      \" class=\"input\" />\n                  </div>\n\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Contact Email address\") }}</label>\n                    <input type=\"email\" name=\"contact_email\" v-model=\"primary_data.contact_email\" class=\"input\"\n                      required />\n                  </div>\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Contact Phone\") }}</label>\n                    <input type=\"number\" name=\"contact_phone\" class=\"input\" required\n                      v-model=\"primary_data.contact_phone\" />\n                  </div>\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Office Location\") }}</label>\n                    <input type=\"text\" name=\"address\" class=\"input\" required=\"\" v-model=\"primary_data.address\" />\n                  </div>\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Facebook Profile Link\") }}</label>\n                    <input type=\"url\" name=\"socials[facebook]\" class=\"input\" v-model=\"primary_data.socials.facebook\" />\n                  </div>\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Youtube Profile Link\") }}</label>\n                    <input type=\"url\" name=\"socials[youtube]\" class=\"input\" v-model=\"primary_data.socials.youtube\" />\n                  </div>\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Twitter Profile Link\") }}</label>\n                    <input type=\"url\" name=\"socials[twitter]\" class=\"input\" v-model=\"primary_data.socials.twitter\" />\n                  </div>\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Instagram Profile Link\") }}</label>\n                    <input type=\"url\" name=\"socials[instagram]\" class=\"input\" v-model=\"primary_data.socials.instagram\" />\n                  </div>\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Linkedin Profile Link\") }}</label>\n                    <input type=\"url\" name=\"socials[linkedin]\" class=\"input\" v-model=\"primary_data.socials.linkedin\" />\n                  </div>\n                  <div class=\"mb-2\">\n                    <SpinnerBtn :processing=\"isProcessing\" :btn-text=\"trans('Save Changes')\" />\n                  </div>\n\n                </form>\n              </div>\n\n              <div class=\"tabs-panel\" id=\"contact\">\n                <form method=\"POST\" @submit.prevent=\"updateContactPage(contact_page)\"\n                  enctype=\"multipart/form-data\">\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Office Address\") }}</label>\n                    <input type=\"text\" class=\"input\" v-model=\"contact_page.address\" required />\n                  </div>\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Country Name\") }}</label>\n                    <input type=\"text\" class=\"input\" v-model=\"contact_page.country\" required />\n                  </div>\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Google Map Link\") }}</label>\n                    <input type=\"text\" class=\"input\" v-model=\"contact_page.map_link\" required />\n                  </div>\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Contact Info subtitle\") }}</label>\n                    <input type=\"text\" class=\"input\" v-model=\"contact_page.contact_info_text\" required />\n                  </div>\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Contact Info Number\") }}</label>\n                    <input type=\"tel\" class=\"input\" v-model=\"contact_page.contact_info_number\" required />\n                  </div>\n\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Live Support subtitle\") }}</label>\n                    <input type=\"text\" class=\"input\" v-model=\"contact_page.live_chat_service_text\" required />\n                  </div>\n                  <div class=\"mb-2\">\n                    <label>{{ trans(\"Live Support Website\") }}</label>\n                    <input type=\"text\" class=\"input\" v-model=\"contact_page.live_chat_service_website\" required />\n                  </div>\n\n                  <div class=\"mb-2\">\n                    <SpinnerBtn :processing=\"isProcessing\" :btn-text=\"trans('Save Changes')\" />\n                  </div>\n                </form>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </main>\n</template>\n\n<style scoped>\nhr {\n  margin: 30px 0;\n}\n</style>\n","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Edit Plan')\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"w-100 flex\">\n        <div class=\"flex-1\">\n          <strong>{{ trans('Edit Plan') }}</strong>\n          <p>{{ trans('Edit subscription plan for charging from the customer') }}</p>\n        </div>\n        <div class=\"flex-1\">\n          <form @submit.prevent=\"update()\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"my-2\">\n                  <label>{{ trans('Plan Name') }}</label>\n                  <input type=\"text\" name=\"title\" required=\"\" class=\"input\" v-model=\"form.title\" />\n                </div>\n                <div class=\"my-2\">\n                  <label>{{ trans('Select Duration') }}</label>\n                  <select class=\"select\" name=\"days\" v-model=\"form.days\">\n                    <option value=\"30\">{{ trans('Monthly') }}</option>\n                    <option value=\"365\">{{ trans('yearly') }}</option>\n                  </select>\n                </div>\n                <div class=\"my-2\">\n                  <label>{{ trans('Price') }}</label>\n                  <input\n                    type=\"number\"\n                    name=\"price\"\n                    v-model=\"form.price\"\n                    step=\"any\"\n                    required=\"\"\n                    class=\"input\"\n                  />\n                </div>\n\n                <div class=\"mb-2\">\n                  <label class=\"\">{{ trans('Job Limit') }}</label>\n                  <div class=\"\">\n                    <input\n                      type=\"number\"\n                      v-model=\"form.plan_data['job_limit']\"\n                      required\n                      class=\"input\"\n                    />\n                  </div>\n                </div>\n                <div class=\"mb-2\">\n                  <label class=\"\">{{ trans('Featured Jobs') }}</label>\n                  <div class=\"\">\n                    <input\n                      type=\"number\"\n                      v-model=\"form.plan_data['featured_jobs']\"\n                      required\n                      class=\"input\"\n                    />\n                  </div>\n                </div>\n                <div class=\"mb-2\">\n                  <label class=\"\">{{ trans('Live For (Days)') }}</label>\n                  <div class=\"\">\n                    <input\n                      type=\"number\"\n                      v-model=\"form.plan_data['live_job_for_days']\"\n                      required\n                      class=\"input\"\n                    />\n                  </div>\n                </div>\n                <div class=\"mb-2\">\n                  <label class=\"\">{{ trans('Ai Credits') }}</label>\n                  <div class=\"\">\n                    <input\n                      type=\"number\"\n                      v-model=\"form.plan_data['ai_credits']\"\n                      required\n                      class=\"input\"\n                    />\n                  </div>\n                </div>\n\n                <div class=\"mb-2\">\n                  <label for=\"toggle-featured\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"form.is_featured\"\n                      class=\"toggle-input peer sr-only\"\n                      id=\"toggle-featured\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('Featured in home page?') }}</span>\n                  </label>\n                </div>\n                <div class=\"mb-2\">\n                  <label for=\"toggle-is_recommended\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"form.is_recommended\"\n                      class=\"toggle-input peer sr-only\"\n                      id=\"toggle-is_recommended\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('Is recommended?') }}</span>\n                  </label>\n                </div>\n\n                <div class=\"mb-2\">\n                  <label for=\"toggle-is_trial\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"form.is_trial\"\n                      class=\"toggle-input peer sr-only\"\n                      id=\"toggle-is_trial\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('Accept Trial?') }}</span>\n                  </label>\n                </div>\n                <div class=\"from-group trial-days mb-2 mt-2\" v-if=\"form.is_trial\">\n                  <label class=\"col-lg-12\">{{ trans('Trial days') }}</label>\n                  <div class=\"col-lg-12\">\n                    <input\n                      type=\"number\"\n                      v-model=\"form.trial_days\"\n                      name=\"trial_days\"\n                      class=\"input\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div class=\"mb-2\">\n                  <label for=\"toggle-status\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"form.status\"\n                      class=\"toggle-input peer sr-only\"\n                      id=\"toggle-status\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('Activate This Plan?') }}</span>\n                  </label>\n                </div>\n\n                <div class=\"mt-6\">\n                  <SpinnerBtn\n                    classes=\"btn btn-primary\"\n                    :processing=\"form.processing\"\n                    btn-text=\"Update\"\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nexport default {\n  layout: AdminLayout\n}\n</script>\n\n<script setup>\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { Head, router } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nimport { useForm } from '@inertiajs/vue3'\nimport notify from '@/Plugins/Admin/notify'\n\nconst props = defineProps(['segments', 'buttons', 'plan'])\n\nconst form = useForm({\n  title: props.plan.title,\n  days: props.plan.days,\n  price: props.plan.price,\n  plan_data: props.plan.data,\n  is_featured: props.plan.is_featured == 1 ? true : false,\n  is_recommended: props.plan.is_recommended == 1 ? true : false,\n  is_trial: props.plan.is_trial == 1 ? true : false,\n  status: props.plan.status == 1 ? true : false,\n  trial_days: props.plan.trial_days\n})\n\nfunction update() {\n  form.put('/admin/plan/' + props.plan.id, {\n    onSuccess: () => {\n      notify.success('Plan has been updated successfully')\n    }\n  })\n}\n</script>\n","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Subscriptions')\" :segments=\"segments\" :buttons=\"buttons\" />\n\n    <div class=\"space-y-6\">\n      <div v-if=\"plans.length != 0\" class=\"grid grid-cols-1 gap-5 sm:grid-cols-2 xl:grid-cols-4\">\n        <div class=\"card\" v-for=\"plan in plans\" :key=\"plan.id\">\n          <div class=\"flex flex-col justify-between h-full card-body\">\n            <div>\n              <div class=\"text-center\">\n                <h5>{{ plan.title }}</h5>\n                <h4>{{ plan.price_format }}</h4>\n                {{ plan.days == 30 ? trans('Per month') : trans('Per year') }}\n\n                <p class=\"text-muted\">{{ trans('Active Users') }} ({{ plan.activeuser_count }})</p>\n              </div>\n              <hr class=\"mt-3 opacity-60\" />\n\n              <div class=\"mt-3 text-left\" v-for=\"(planData, key) in plan.data\" :key=\"planData.key\">\n                <i\n                  v-if=\"planData.toString == 'true' || planData == 'false'\"\n                  :class=\"\n                    planData == true\n                      ? 'far fa-check-circle text-green-600'\n                      : 'fas fa-times-circle text-red-600'\n                  \"\n                ></i>\n\n                <i class=\"text-green-600 far fa-check-circle\" v-else></i>\n                {{ key.replace(/_/g, ' ') }}\n                {{\n                  planData == '-1'\n                    ? '(Unlimited)'\n                    : planData == 'true' || planData == 'false'\n                    ? ''\n                    : `(${planData})`\n                }}\n              </div>\n            </div>\n\n            <div class=\"mt-4\">\n              <hr class=\"opacity-60\" />\n\n              <div class=\"flex justify-center gap-2 mt-4\">\n                <Link :href=\"route('admin.plan.edit', plan.id)\" class=\"px-5 btn btn-primary\"\n                  ><i class=\"fa fa-edit\" aria-hidden=\"true\"></i> Edit\n                </Link>\n\n                <button\n                  @click=\"\n                    plan.activeuser_count == 0 ? deleteRow('/admin/plan/' + plan.id) : toastError()\n                  \"\n                  class=\"px-5 text-left btn btn-sm btn-danger delete-confirm\"\n                  data-icon=\"fa fa-plus-circle\"\n                >\n                  <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                  {{ trans('Delete') }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Alert v-else type=\"info\" :text=\"trans('Opps you have not created any plan....')\" />\n    </div>\n  </main>\n\n  <div id=\"addNewPlanDrawer\" class=\"drawer drawer-right\">\n    <form method=\"POST\" @submit.prevent=\"storePlan\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Add New Plan') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"pt-0 drawer-body\">\n        <div class=\"mb-2\">\n          <label class=\"\">{{ trans('Plan Name') }}</label>\n          <div class=\"\">\n            <input type=\"text\" name=\"title\" required=\"\" class=\"input\" v-model=\"form.title\" />\n          </div>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"\">{{ trans('Select Duration') }}</label>\n          <div class=\"\">\n            <select class=\"select\" name=\"days\" v-model=\"form.days\">\n              <option value=\"30\">{{ trans('Monthly') }}</option>\n              <option value=\"365\">{{ trans('yearly') }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"\">{{ trans('Price') }}</label>\n          <div class=\"\">\n            <input\n              type=\"number\"\n              name=\"price\"\n              v-model=\"form.price\"\n              step=\"any\"\n              required=\"\"\n              class=\"input\"\n            />\n          </div>\n        </div>\n\n        <div class=\"mb-2\">\n          <label class=\"\">{{ trans('Job Limit') }}</label>\n          <div class=\"\">\n            <input type=\"number\" v-model=\"form.plan_data['job_limit']\" required class=\"input\" />\n          </div>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"\">{{ trans('Featured Jobs Limit') }}</label>\n          <div class=\"\">\n            <input type=\"number\" v-model=\"form.plan_data['featured_jobs']\" required class=\"input\" />\n          </div>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"\">{{ trans('Live For (Days)') }}</label>\n          <div class=\"\">\n            <input\n              type=\"number\"\n              v-model=\"form.plan_data['live_job_for_days']\"\n              required\n              class=\"input\"\n            />\n          </div>\n        </div>\n        <div class=\"mb-2\">\n          <label class=\"\">{{ trans('Ai Credits') }}</label>\n          <div class=\"\">\n            <input type=\"number\" v-model=\"form.plan_data['ai_credits']\" required class=\"input\" />\n          </div>\n        </div>\n\n        <div class=\"mb-2\">\n          <label for=\"toggle-featured\" class=\"toggle toggle-sm\">\n            <input\n              v-model=\"form.is_featured\"\n              class=\"sr-only toggle-input peer\"\n              id=\"toggle-featured\"\n              type=\"checkbox\"\n            />\n            <div class=\"toggle-body\"></div>\n            <span class=\"label label-md\">{{ trans('Featured in home page?') }}</span>\n          </label>\n        </div>\n        <div class=\"mb-2\">\n          <label for=\"toggle-is_recommended\" class=\"toggle toggle-sm\">\n            <input\n              v-model=\"form.is_recommended\"\n              class=\"sr-only toggle-input peer\"\n              id=\"toggle-is_recommended\"\n              type=\"checkbox\"\n            />\n            <div class=\"toggle-body\"></div>\n            <span class=\"label label-md\">{{ trans('Is recommended?') }}</span>\n          </label>\n        </div>\n        <div class=\"mb-2\">\n          <label for=\"toggle-is_trial\" class=\"toggle toggle-sm\">\n            <input\n              v-model=\"form.is_trial\"\n              class=\"sr-only toggle-input peer\"\n              id=\"toggle-is_trial\"\n              type=\"checkbox\"\n            />\n            <div class=\"toggle-body\"></div>\n            <span class=\"label label-md\">{{ trans('Accept Trial?') }}</span>\n          </label>\n        </div>\n        <div class=\"mt-2 mb-2 from-group trial-days\" v-if=\"form.is_trial\">\n          <label class=\"col-lg-12\">{{ trans('Trial days') }}</label>\n          <div class=\"col-lg-12\">\n            <input\n              type=\"number\"\n              v-model=\"form.trial_days\"\n              name=\"trial_days\"\n              class=\"input\"\n              required\n            />\n          </div>\n        </div>\n        <div class=\"mb-2\">\n          <label for=\"toggle-status\" class=\"toggle toggle-sm\">\n            <input\n              v-model=\"form.status\"\n              class=\"sr-only toggle-input peer\"\n              id=\"toggle-status\"\n              type=\"checkbox\"\n            />\n            <div class=\"toggle-body\"></div>\n            <span class=\"label label-md\">{{ trans('Activate This Plan?') }}</span>\n          </label>\n        </div>\n      </div>\n\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"btn btn-primary w-full\"\n            :processing=\"form.processing\"\n            :btn-text=\"trans('Save Plan')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport Alert from '@/Components/Admin/Alert.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport { onMounted } from 'vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm } from '@inertiajs/vue3'\nimport notify from '@/Plugins/Admin/notify'\nimport drawer from '@/Plugins/Admin/drawer'\n\nimport sharedComposable from '@/Composables/sharedComposable'\n\ndefineOptions({ layout: AdminLayout })\nonMounted(() => {\n  drawer.init()\n})\n\nconst props = defineProps(['segments', 'buttons', 'plans'])\nconst { deleteRow } = sharedComposable()\nconst form = useForm({\n  title: null,\n  days: 30,\n  price: null,\n  plan_data: {\n    job_limit: 0,\n    featured_jobs: 0,\n    live_job_for_days: 0,\n    ai_credits: 0\n  },\n  is_featured: false,\n  is_recommended: false,\n  is_trial: false,\n  status: true,\n  trial_days: 0\n})\nfunction toastError() {\n  notify.danger('You cant delete this plan because someone already using this plan')\n}\nconst storePlan = () => {\n  form.post('/admin/plan', {\n    onSuccess: () => {\n      form.reset()\n      notify.success('Plan has been added successfully')\n      drawer.of('#addNewPlanDrawer').hide()\n    }\n  })\n}\n</script>\n","<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport { useForm, router } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nimport { ref } from \"vue\";\ndefineOptions({ layout: AdminLayout });\n\nconst props = defineProps([\"user\", \"buttons\", \"segments\"]);\nconst form = useForm({\n  oldpassword: null,\n  password: \"\",\n  password_confirmation: \"\",\n});\n\nconst updatePassword = () => {\n  form.put(route(\"admin.profile.update\", \"password\"), {\n    onSuccess: () => {\n      notify.success(trans(\"Password Updated Successfully\"), trans(\"Success\"));\n      form.reset();\n    },\n  });\n};\n\nconst newProfilePic = ref(null);\n\nconst updateGeneral = () => {\n  props.user.avatar = newProfilePic.value || null;\n  router.post(\n    route(\"admin.profile.update\", \"general\"),\n    {\n      _method: \"put\",\n      user: props.user,\n    },\n    {\n      onSuccess: () => {\n        notify.success(trans(\"General Settings Updated Successfully\"), trans(\"Updated\"));\n      },\n    }\n  );\n};\n\nconst getUserPhoto = () => {\n\n  if (newProfilePic.value) {\n    return URL.createObjectURL(newProfilePic.value)\n  }\n\n  return props.user.avatar == null\n    ? `https://ui-avatars.com/api/?name=${props.user.name}`\n    : `${props.user.avatar}`;\n};\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Edit Profile\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <!-- User Profile Start  -->\n      <div class=\"grid grid-cols-1 gap-6 lg:grid-cols-4\">\n        <!-- Left Section Start  -->\n        <section class=\"flex flex-col w-full col-span-1 gap-6 h-min lg:sticky lg:top-20\">\n          <!-- User Avatar & Status  -->\n          <div class=\"card\">\n            <div class=\"flex flex-col items-center card-body\">\n              <div class=\"relative w-24 h-24 my-2 rounded-full\">\n                <form>\n                \n                  <img\n                    :src=\"getUserPhoto()\"\n                    alt=\"avatar-img\"\n                    id=\"user-image\"\n                    class=\"w-full h-full rounded-full\"\n                  />\n                  <label\n                    for=\"upload-avatar\"\n                    class=\"absolute bottom-0 right-0 flex items-center justify-center w-8 h-8 p-2 rounded-full cursor-pointer bg-slate-50 dark:bg-slate-900\"\n                  >\n                    <span class=\"text-slate-600 dark:text-slate-300\">\n                      <i class=\"w-full\" data-feather=\"camera\"></i>\n                    </span>\n\n                    <input\n                      @input=\"(e) => (newProfilePic = e.target.files[0])\"\n                      type=\"file\"\n                      class=\"hidden\"\n                      accept=\"image/jpeg, image/png, image/jpg\"\n                      id=\"upload-avatar\"\n                    />\n                  </label>\n                </form>\n              </div>\n              <h2 class=\"text-[16px] font-medium text-slate-700 dark:text-slate-200\">\n                {{ user.name }}\n              </h2>\n             \n              <div class=\"inline-block px-4 my-3 badge badge-soft-success\">\n                {{ trans(\"Active\") }}\n              </div>\n            </div>\n          </div>\n        </section>\n        <!-- Left Section End  -->\n        <!-- Right Section Start  -->\n        <section\n          class=\"flex flex-col flex-1 w-full col-span-1 gap-6 lg:col-span-3 lg:w-auto\"\n        >\n          <!-- Personal Details  -->\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <h2 class=\"text-[16px] font-semibold text-slate-700 dark:text-slate-300\">\n                {{ trans(\"Personal Details\") }}\n              </h2>\n              <p class=\"mb-4 text-sm font-normal text-slate-400\">\n                {{ trans(\"Manage your personal information\") }}\n              </p>\n              <form\n                @submit.prevent=\"updateGeneral\"\n                enctype=\"multipart/form-data\"\n                class=\"flex flex-col gap-5\"\n              >\n                <!-- Name  -->\n                <div class=\"grid grid-cols-1 gap-5 md:grid-cols-2\">\n                  <label class=\"label\" for=\"first-name\">\n                    <span class=\"block my-1\">{{ trans(\"Name\") }}</span>\n                    <input\n                      type=\"text\"\n                      class=\"input\"\n                      v-model=\"user.name\"\n                      id=\"first-name\"\n                    />\n                  </label>\n                  <label class=\"label\" for=\"email\">\n                    <span class=\"block my-1\">{{ trans(\"Email\") }}</span>\n                    <input type=\"email\" class=\"input\" v-model=\"user.email\" id=\"email\" />\n                  </label>\n                </div>\n                <!-- Phone & Email  -->\n                <div class=\"grid grid-cols-1 gap-5 md:grid-cols-2\">\n                  <label class=\"label\" for=\"phone\">\n                    <span class=\"block my-1\">{{ trans(\"Phone Number\") }}</span>\n                    <input type=\"tell\" class=\"input\" v-model=\"user.phone\" id=\"phone\" />\n                  </label>\n                  <label class=\"label\" for=\"street-address\">\n                    <span class=\"block my-1\">{{\n                      trans(\"Address (will used for invoice)\")\n                    }}</span>\n                    <input\n                      type=\"text\"\n                      class=\"input\"\n                      v-model=\"user.address\"\n                      id=\"street-address\"\n                    />\n                  </label>\n                </div>\n                <!-- Button  -->\n                <div class=\"flex items-center justify-end gap-4\">\n                  <button type=\"submit\" class=\"btn btn-primary\">\n                    {{ trans(\"Save Changes\") }}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n          <!-- Change Password  -->\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <h2 class=\"text-[16px] font-semibold text-slate-700 dark:text-slate-300\">\n                {{ trans('Change Password') }}\n              </h2>\n              <p class=\"mb-4 text-sm font-normal text-slate-400\">\n                {{ trans('Protect your account with a strong and secure password') }}\n              </p>\n              <form @submit.prevent=\"updatePassword\" class=\"flex flex-col gap-5\">\n                <div class=\"grid grid-cols-1 gap-5 md:grid-cols-2\">\n                  <label class=\"label\" for=\"new-password\">\n                    <span class=\"block my-1\">{{ trans(\"Old Password\") }}</span>\n                    <input\n                      type=\"password\"\n                      class=\"input\"\n                      v-model=\"form.oldpassword\"\n                      id=\"new-password\"\n                    />\n                  </label>\n                  <label class=\"label\" for=\"new-password\">\n                    <span class=\"block my-1\">{{ trans(\"New Password\") }}</span>\n                    <input\n                      type=\"password\"\n                      class=\"input\"\n                      v-model=\"form.password\"\n                      id=\"new-password\"\n                    />\n                  </label>\n                  <label class=\"label\" for=\"confirm-password\">\n                    <span class=\"block my-1\">{{ trans(\"Confirm Password\") }}</span>\n                    <input\n                      type=\"password\"\n                      class=\"input\"\n                      v-model=\"form.password_confirmation\"\n                      id=\"confirm-password\"\n                    />\n                  </label>\n                </div>\n                <!-- Button  -->\n                <div class=\"flex items-center justify-end gap-4\">\n                  <button type=\"submit\" class=\"btn btn-primary\">\n                    {{ trans(\"Update Password\") }}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </section>\n        <!-- Right Section End -->\n      </div>\n      <!-- Social Link Modal Box -->\n      <div class=\"modal\" id=\"social-link\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <div class=\"flex items-center justify-between\">\n                <h6>Social Media</h6>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n                  data-dismiss=\"modal\"\n                >\n                  <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n                </button>\n              </div>\n            </div>\n            <div class=\"modal-body\">\n              <form method=\"post\" class=\"-mt-1.5 flex w-full flex-col space-y-3\">\n                <div>\n                  <label class=\"label\" for=\"facebook\"> {{ trans('Facebook') }} </label>\n                  <input\n                    type=\"text\"\n                    class=\"input\"\n                    value=\"\"\n                    id=\"facebook\"\n                    name=\"facebook\"\n                  />\n                </div>\n\n                <div>\n                  <label class=\"label\" for=\"instagram\"> {{ trans('Instragram') }} </label>\n                  <input\n                    type=\"text\"\n                    class=\"input\"\n                    value=\"https://www.instagram.com/abc\"\n                    name=\"instagram\"\n                    id=\"instagram\"\n                  />\n                </div>\n\n                <div>\n                  <label class=\"label\" for=\"twitter\"> {{ trans('Twitter') }} </label>\n                  <input\n                    type=\"text\"\n                    class=\"input\"\n                    value=\"https://twitter.com/abc\"\n                    id=\"twitter\"\n                    name=\"twitter\"\n                  />\n                </div>\n\n                <div>\n                  <label class=\"label\" for=\"linkedin\"> {{ trans('LinkedIn') }} </label>\n                  <input\n                    type=\"text\"\n                    class=\"input\"\n                    value=\"https://linkedin.com/abc\"\n                    id=\"linkedin\"\n                    name=\"linkedin\"\n                  />\n                </div>\n              </form>\n            </div>\n            <div class=\"modal-footer\">\n              <div class=\"flex items-center justify-end gap-4\">\n                <button\n                  type=\"cancel\"\n                  class=\"btn btn-outline-secondary\"\n                  data-dismiss=\"modal\"\n                >\n                  {{ trans(\"Cancel\") }}\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary\">\n                  {{ trans(\"Update\") }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- User Profile End  -->\n    </div>\n  </main>\n</template>\n","\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { useForm } from \"@inertiajs/vue3\"\nimport sharedComposable from \"@/Composables/sharedComposable\"\nimport notify from \"@/Plugins/Admin/notify\"\nimport drawer from \"@/Plugins/Admin/drawer\"\nimport trans from '@/Composables/transComposable'\nimport { onMounted, ref } from \"vue\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport AdminLayout from \"@/Layouts/Admin.vue\"\n\ndefineOptions({ layout: AdminLayout })\n\nconst { deleteRow } = sharedComposable()\n\n\nonMounted(() => {\n    drawer.init()\n})\n\n\nconst props = defineProps([\n    'qualifications',\n    'buttons',\n    'segments',\n])\n\nconst form = useForm({\n    title: '',\n    gpa: '',\n})\n\nconst editingItem = ref({})\nconst editForm = useForm({\n    title: '',\n    gpa: '',\n})\n\nconst storeQualification = () => {\n    form.post(route('admin.qualifications.store'), {\n        onSuccess: () => {\n            form.reset()\n            notify.success(trans('Qualification has been added successfully'))\n            drawer.of('#addNewQualificationDrawer').hide()\n        }\n    })\n}\n\nconst setEditDrawerForm = (qualification) => {\n    editingItem.value = qualification\n    editForm.title = qualification.title\n    editForm.gpa = qualification.gpa\n}\n\nconst updateQualification = () => {\n    let updateRoute = route('admin.qualifications.update', editingItem.value)\n    editForm.put(updateRoute, {\n        onSuccess: () => {\n            form.reset()\n            notify.success(trans('Qualification has been updated successfully'))\n            drawer.of('#editQualificationDrawer').hide()\n        }\n    })\n}\n</script>\n\n\n<template>\n    <main class=\"container flex-grow p-4 sm:p-6\">\n        <HeaderSegment title=\"Educational Qualification\" :segments=\"segments\" :buttons=\"buttons\" />\n        <div class=\"space-y-6\">\n            <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th class=\"col-2\">{{ trans(\"Title\") }}</th>\n                            <th class=\"col-2\">{{ trans(\"GPA\") }}</th>\n                            <th class=\"flex justify-end col-8\">{{ trans(\"Action\") }}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"(qualification, key) in qualifications\" :key=\"key\">\n                            <td>\n                                {{ qualification.title }}\n                            </td>\n                            <td>\n                                {{ qualification.gpa }}\n                            </td>\n                            <td class=\"flex justify-end\">\n                                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                                    <div class=\"dropdown-toggle\">\n                                        <i class=\"text-slate-400\" data-feather=\"more-horizontal\"></i>\n                                    </div>\n                                    <div class=\"w-40 dropdown-content\">\n                                        <ul class=\"dropdown-list\">\n                                            <li class=\"dropdown-list-item\">\n                                                <button data-toggle=\"drawer\" data-target=\"#editQualificationDrawer\"\n                                                    @click=\"setEditDrawerForm(qualification)\" class=\"dropdown-link\">\n                                                    <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                                                    <span>{{ trans('Edit') }}</span>\n                                                </button>\n                                            </li>\n                                            <li class=\"dropdown-list-item\">\n                                                <button\n                                                    @click=\"deleteRow(route('admin.qualifications.destroy', qualification))\"\n                                                    class=\"dropdown-link\">\n                                                    <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"></i>\n                                                    <span>{{ trans('Delete') }}</span>\n                                                </button>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n        </div>\n    </main>\n\n\n\n    <div id=\"addNewQualificationDrawer\" class=\"drawer drawer-right\">\n        <form @submit.prevent=\"storeQualification()\">\n            <div class=\"drawer-header\">\n                <h5>{{ trans(\"Add New Qualification\") }}</h5>\n                <button type=\"button\"\n                    class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n                    data-dismiss=\"drawer\">\n                    <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n                </button>\n            </div>\n            <div class=\"drawer-body\">\n                <div class=\"mb-2\">\n                    <label>{{ trans(\"Title\") }}</label>\n                    <input v-model=\"form.title\" type=\"text\" class=\"input\" required placeholder=\"Master Degree\" />\n                </div>\n                <div class=\"mb-2\">\n                    <label>{{ trans(\"GPA Point\") }}</label>\n                    <input v-model=\"form.gpa\" type=\"number\" class=\"input\" required placeholder=\"4 or 5\" />\n                </div>\n            </div>\n            <div class=\"drawer-footer\">\n                <div class=\"flex justify-end gap-2\">\n                    <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n                        <span> {{ trans(\"Close\") }}</span>\n                    </button>\n                    <SpinnerBtn classes=\"btn w-full btn-primary\" :processing=\"form.processing\" :btn-text=\"trans('Create')\" />\n                </div>\n            </div>\n        </form>\n    </div>\n\n    <div id=\"editQualificationDrawer\" class=\"drawer drawer-right\">\n        <form @submit.prevent=\"updateQualification()\">\n            <div class=\"drawer-header\">\n                <h5>{{ trans(\"Edit Qualification\") }}</h5>\n                <button type=\"button\"\n                    class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n                    data-dismiss=\"drawer\">\n                    <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n                </button>\n            </div>\n            <div class=\"drawer-body\">\n                <div class=\"mb-2\">\n                    <label>{{ trans(\"Title\") }}</label>\n                    <input v-model=\"editForm.title\" type=\"text\" class=\"input\" required placeholder=\"Master Degree\" />\n                </div>\n                <div class=\"mb-2\">\n                    <label>{{ trans(\"GPA Point\") }}</label>\n                    <input v-model=\"editForm.gpa\" type=\"number\" class=\"input\" required placeholder=\"4 or 5\" />\n                </div>\n            </div>\n            <div class=\"drawer-footer\">\n                <div class=\"flex justify-end gap-2\">\n                    <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n                        <span> {{ trans(\"Close\") }}</span>\n                    </button>\n                    <SpinnerBtn classes=\"w-full btn btn-primary\" :processing=\"editForm.processing\" :btn-text=\"trans('Update')\" />\n                </div>\n            </div>\n        </form>\n    </div>\n</template>\n","<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment\n      :title=\"trans('Create Role')\"\n      :segments=\"segments\"\n      :buttons=\"buttons\"\n    />\n    <div class=\"space-y-6\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"mb-3\">\n            <label>{{ trans(\"Role Name\") }}</label>\n            <input\n              type=\"text\"\n              class=\"input\"\n              required=\"\"\n              name=\"name\"\n              placeholder=\"sub admin\"\n              v-model=\"form.name\"\n            />\n          </div>\n          <ValidationErrors />\n          <div>\n            <label for=\"customCheck12\" class=\"toggle toggle-sm\">\n              <input\n                :checked=\"isAllSelected\"\n                @input=\"selectAll\"\n                class=\"toggle-input peer sr-only\"\n                id=\"customCheck12\"\n                type=\"checkbox\"\n              />\n              <div class=\"toggle-body\"></div>\n              <span class=\"label label-md\">{{\n                trans(\"Check All Permissions\")\n              }}</span>\n            </label>\n          </div>\n          <hr />\n          <div\n            class=\"mt-3\"\n            v-for=\"(group, key) in permissions_groups\"\n            :key=\"group.key\"\n          >\n            <div class=\"grid grid-cols-12\">\n              <div class=\"col-span-3\">\n                <div class=\"flex items-center gap-2\">\n                  <input\n                    @change=\"selectGroup(group.group_name)\"\n                    :checked=\"selectedGroup.includes(group.group_name)\"\n                    type=\"checkbox\"\n                    class=\"checkbox\"\n                    :id=\"key + 'Management'\"\n                    :value=\"group.group_name\"\n                    :data-class=\"`role-${key}-management-checkbox`\"\n                  />\n                  <label class=\"label\" :for=\"key + 'Management'\">\n                    {{ group.group_name }} name\n                  </label>\n                </div>\n              </div>\n              <div :class=\"`col-span-9 role-${key}-management-checkbox`\">\n                <div\n                  class=\"flex items-center gap-2\"\n                  v-for=\"permission in group.permissions\"\n                  :key=\"permission.id\"\n                >\n                  <input\n                    @change=\"selectPermission(permission.name)\"\n                    :checked=\"form.permissions.includes(permission.name)\"\n                    type=\"checkbox\"\n                    class=\"checkbox\"\n                    name=\"permissions[]\"\n                    :id=\"`checkPermission${permission.id}`\"\n                    :value=\"permission.name\"\n                  />\n                  <label\n                    class=\"label\"\n                    :for=\"`checkPermission${permission.id}`\"\n                    >{{ permission.name }}</label\n                  >\n                </div>\n\n                <br />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <button\n            @click.prevent=\"submitRole\"\n            type=\"submit\"\n            class=\"btn btn-primary\"\n          >\n            <i class=\"fa fa-save\"></i> {{ trans(\"Save\") }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport ValidationErrors from \"@/Components/Admin/ValidationErrors.vue\";\nimport { useForm } from \"@inertiajs/vue3\";\nconst props = defineProps([\"segments\", \"buttons\", \"permissions_groups\"]);\nimport { createToast } from \"mosha-vue-toastify\";\nimport { ref, computed } from \"vue\";\ndefineOptions({ layout: AdminLayout });\nconst form = useForm({\n  permissions: [],\n  name: null,\n});\nconst selectedGroup = ref([]);\nconst isAllSelected = computed(\n  () => props.permissions_groups.length === selectedGroup.value.length\n);\nconst selectAll = () => {\n  selectedGroup.value = [];\n  if (form.permissions.length < 1) {\n    props.permissions_groups.forEach((group) => {\n      selectedGroup.value.push(group.group_name);\n      group.permissions.forEach((permission) => {\n        form.permissions.push(permission.name);\n      });\n    });\n    return;\n  }\n  form.permissions = [];\n};\nconst selectGroup = (name) => {\n  const index = selectedGroup.value.indexOf(name);\n\n  if (index !== -1) {\n    selectedGroup.value.splice(index, 1);\n  } else {\n    selectedGroup.value.push(name);\n  }\n\n  const selectedPermissions = props.permissions_groups\n    .filter((group) => selectedGroup.value.includes(group.group_name))\n    .flatMap((group) => group.permissions.map((permission) => permission.name));\n\n  form.permissions = selectedGroup.value.length >= 1 ? selectedPermissions : [];\n};\nconst selectPermission = (name) => {\n  const index = form.permissions.indexOf(name);\n  if (index !== -1) {\n    form.permissions.splice(index, 1);\n  } else {\n    form.permissions.push(name);\n  }\n};\nconst submitRole = () => {\n  form.post(route(\"admin.role.store\"), {\n    onSuccess: () => {\n      form.reset();\n      createToast(\n        {\n          title: \"Created\",\n          description: \"Role Created successfully\",\n        },\n        {\n          transition: \"slide\",\n          position: \"top-right\",\n        }\n      );\n    },\n  });\n};\n</script>\n","<template>\n  <main class=\"container p-4 sm:p-6\">\n    <Head title=\"Edit Admin Role\" />\n    <HeaderSegment :title=\"trans('Edit Admin Role')\" :segments=\"segments\" :buttons=\"buttons\" />\n  </main>\n</template>\n\n<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nexport default {\n  layout: AdminLayout\n}\n\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { Head } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nconst props = defineProps(['segments', 'buttons'])\n</script>","<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment :title=\"trans('Admin Roles')\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"table-responsive rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans('Name') }}</th>\n              <th>{{ trans('Permissions') }}</th>\n              <th>\n                <div class=\"text-right\">\n                  {{ trans('Action') }}\n                </div>\n              </th>\n            </tr>\n          </thead>\n          <tbody v-if=\"roles.length\">\n            <tr v-for=\"role in roles\" :key=\"role.id\">\n              <td>\n                {{ role.name }}\n              </td>\n              <td>\n                <span\n                  class=\"badge badge-primary mb-2 mr-1\"\n                  v-for=\"perm in role.permissions\"\n                  :key=\"perm.name\"\n                >\n                  {{ perm.name }}\n                </span>\n              </td>\n              <td>\n                <div class=\"hover\">\n                  <button\n                    @click=\"deleteRow(route('admin.role.destroy', role.id))\"\n                    class=\"btn btn-danger btn-sm\"\n                  >\n                    <i class=\"h-3 text-white\" data-feather=\"trash-2\"></i>\n                  </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else :for-table=\"true\" />\n        </table>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\n\nconst props = defineProps(['segments', 'buttons', 'roles'])\n\ndefineOptions({ layout: AdminLayout })\nconst { deleteRow } = sharedComposable()\n</script>\n","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <Head title=\"SEO Settings\" />\n    <HeaderSegment :title=\"trans('SEO Settings')\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th class=\"w-3/12\">{{ trans('Page') }}</th>\n              <th colspan=\"1\">{{ trans('Meta Title') }}</th>\n              <th>\n                <p class=\"text-right\">{{ trans('Action') }}</p>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr v-for=\"seo in posts\" :key=\"seo\">\n              <td>\n                {{ seo.key }}\n              </td>\n              <td>\n                {{ seo.content.site_name }}\n              </td>\n\n              <td class=\"flex justify-end\">\n                <Link :href=\"route('admin.seo.edit', seo.id)\" class=\"btn btn-primary btn-sm\"\n                  ><i class=\"fas fa-edit\"></i\n                ></Link>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script>\nimport AdminLayout from '@/Layouts/Admin.vue'\nexport default {\n  layout: AdminLayout\n}\n</script>\n\n<script setup>\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { Head, Link } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nconst props = defineProps(['segments', 'buttons', 'posts'])\n</script>\n","\n<script>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport notify from \"@/Plugins/Admin/notify\"\nexport default {\n\tlayout: AdminLayout\n}\n\n</script>\n\n<script setup>\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { Head, useForm, router } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nconst props = defineProps(['segments', 'buttons', 'id', 'contents'])\n\nconst form = useForm({\n\t_method: 'patch',\n\tmetadata: props.contents,\n\timage: '',\n})\n\n\nconst update = () => {\n\tconst url = route('admin.seo.update', props.id)\n\tform.post(url, {\n\t\tonSuccess: () => {\n\t\t\tnotify.success('SEO Metadata updated successfully')\n\t\t}\n\t})\n}\n\n</script>\n\n<template>\n\t<main class=\"container flex-grow p-4 sm:p-6\">\n\n\t\t<Head title=\"Edit SEO Settings\" />\n\t\t<HeaderSegment :title=\"trans('Edit SEO Settings')\" :segments=\"segments\" :buttons=\"buttons\" />\n\t\t<div class=\"space-y-6\">\n\t\t\t<form @submit.prevent=\"update\" enctype=\"multipart/form-data\">\n\n\t\t\t\t<div class=\"grid grid-cols-12\">\n\t\t\t\t\t<div class=\"lg:col-span-5\">\n\t\t\t\t\t\t<strong>{{ trans('Edit page seo settings') }}</strong>\n\t\t\t\t\t\t<p>{{ trans('Edit page seo and necessary information from here') }}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"lg:col-span-7\">\n\t\t\t\t\t\t<!-- Alerts -->\n\t\t\t\t\t\t<div class=\"card\">\n\t\t\t\t\t\t\t<div class=\"card-header\">\n\t\t\t\t\t\t\t\t<h3 class=\"mb-0\">{{ trans('Edit Settings') }}</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t\t\t<div class=\"mb-2\">\n\t\t\t\t\t\t\t\t\t<label>{{ trans('Meta Title') }}</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" v-model=\"form.metadata['site_name']\" class=\"input\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mb-2\">\n\t\t\t\t\t\t\t\t\t<label>{{ trans('Meta Description') }}</label>\n\t\t\t\t\t\t\t\t\t<textarea v-model=\"form.metadata['matadescription']\" \n\t\t\t\t\t\t\t\t\t\tclass=\"summernote input h-200\"></textarea>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mb-2\">\n\t\t\t\t\t\t\t\t\t<label>{{ trans('Meta Tags') }}</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" v-model=\"form.metadata['matatag']\" class=\"input\">\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"mb-2\">\n\t\t\t\t\t\t\t\t\t<label>{{ trans('Twitter Site Title') }}</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" v-model=\"form.metadata['twitter_site_title']\" class=\"input\">\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"mb-2\">\n\t\t\t\t\t\t\t\t\t<label>{{ trans('Meta Image') }}</label>\n\t\t\t\t\t\t\t\t\t<input @input=\"(e) => (form.image = e.target.files[0])\n\t\t\t\t\t\t\t\t\t\t\" type=\"file\" accept=\"image/*\" class=\"input\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mt-3 from-group row\">\n\t\t\t\t\t\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t\t\t\t\t\t<SpinnerBtn :processing=\"form.processing\" :btn-text=\"trans('Save Changes')\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t</main>\n</template>\n","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Supports\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"supportStats\" />\n\n      <Filter :request=\"request\" :buttons=\"buttons\" filterType=\"support\" />\n\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans('Ticket No') }}</th>\n              <th>{{ trans('Subject') }}</th>\n              <th>\n                {{ trans('Conversations') }}\n              </th>\n              <th>{{ trans('Status') }}</th>\n              <th>{{ trans('User') }}</th>\n              <th>\n                {{ trans('Created At') }}\n              </th>\n              <th>\n                <p class=\"text-end\">{{ trans('Ticket') }}</p>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody v-if=\"supports.total\">\n            <tr v-for=\"support in supports.data\" :key=\"support.id\">\n              <td class=\"text-center\">\n                <Link :href=\"'/admin/support/' + support.id\">\n                  {{ support.ticket_no }}\n                </Link>\n              </td>\n              <td>\n                <a class=\"text-dark\" :href=\"'/admin/support/' + support.id\">\n                  {{ imitedString(support.subject, 50) }}\n                </a>\n              </td>\n              <td class=\"text-center\">\n                {{ support.conversations_count }}\n              </td>\n              <td>\n                <span\n                  :class=\"\n                    support.status == 2\n                      ? 'badge badge-warning'\n                      : support.status == 1\n                      ? 'badge badge-success'\n                      : 'badge badge-danger'\n                  \"\n                >\n                  {{\n                    trans(support.status == 2 ? 'pending' : support.status == 1 ? 'Open' : 'Closed')\n                  }}\n                </span>\n              </td>\n              <td class=\"text-center\">\n                <a :href=\"'/admin/customer/' + support.user_id\" class=\"text-dark\">\n                  {{ support.user?.name ?? '' }}\n                </a>\n              </td>\n              <td class=\"text-center\">\n                {{ moment(support.created_at).format('d MMM y') }}\n              </td>\n              <td>\n                <Link :href=\"'/admin/support/' + support.id\" class=\"flex w-full justify-end\">\n                  <i class=\"h-5 text-slate-400\" data-feather=\"eye\"></i>\n                </Link>\n              </td>\n            </tr>\n          </tbody>\n          <NoDataFound v-else for-table=\"true\" />\n        </table>\n\n        <Paginate v-if=\"supports.data.length != 0\" :links=\"supports.links\" />\n      </div>\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { Link, useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nimport Alert from '@/Components/Admin/Alert.vue'\nimport Overview from '@/Components/Admin/OverviewGrid.vue'\nimport moment from 'moment'\nimport Filter from '@/Components/Admin/Filter.vue'\nimport NoDataFound from '@/Components/Admin/NoDataFound.vue'\nimport Paginate from '@/Components/Paginate.vue'\n\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps([\n  'segments',\n  'buttons',\n  'request',\n  'supports',\n  'pendingSupport',\n  'openSupport',\n  'closedSupport',\n  'totalSupports',\n  'type'\n])\n\nconst supportStats = [\n  {\n    value: props.totalSupports,\n    title: trans('Total Supports'),\n    iconClass: 'bx bx-bar-chart'\n  },\n  {\n    value: props.pendingSupport,\n    title: trans('Pending Supports'),\n    iconClass: 'bx bx-badge'\n  },\n  {\n    value: props.openSupport,\n    title: trans('Open Supports'),\n    iconClass: 'bx bx-archive-out'\n  },\n  {\n    value: props.closedSupport,\n    title: trans('Closed Supports'),\n    iconClass: 'bx bx-archive-in'\n  }\n]\n\nfunction imitedString(text, maxLength) {\n  if (text.length <= maxLength) {\n    return text\n  } else {\n    return text.substring(0, maxLength) + '...'\n  }\n}\n</script>\n","<template>\n  <main class=\"container flex-grow p-4 sm:pr-4\">\n    <HeaderSegment title=\"Support\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"h-fit space-y-6\">\n      <div class=\"h-full\">\n        <div class=\"relative mx-auto rounded-primary bg-white shadow dark:bg-slate-800 2xl:w-8/12\">\n          <div\n            class=\"flex items-center justify-between rounded-t-primary border-b border-b-slate-200 p-4 dark:border-b-slate-600\"\n          >\n            <div class=\"flex items-center justify-start gap-x-3\">\n              <button\n                id=\"chat-btn-show-sidebar\"\n                class=\"text-slate-500 hover:text-slate-700 focus:text-slate-700 dark:text-slate-400 dark:hover:text-slate-300 dark:focus:text-slate-300 xl:hidden\"\n              >\n                <i width=\"20\" height=\"20\" data-feather=\"menu\"></i>\n              </button>\n              <div class=\"avatar avatar-circle avatar-indicator avatar-indicator-online\">\n                <img\n                  class=\"avatar-img\"\n                  :src=\"\n                    support.user?.avatar\n                      ? support.user?.avatar\n                      : `https://ui-avatars.com/api/?name=${support.user?.name}`\n                  \"\n                  alt=\"profile-img\"\n                />\n              </div>\n\n              <div>\n                <h6\n                  class=\"whitespace-nowrap text-sm font-medium text-slate-700 dark:text-slate-100\"\n                >\n                  {{ support.user?.name }}\n                </h6>\n                <p class=\"whitespace-normal text-sm font-normal text-slate-500 dark:text-slate-400\">\n                  {{ trans('Subject :') }} {{ support.subject ?? '' }}\n                </p>\n              </div>\n            </div>\n            <!-- Avatar and Menu Button End -->\n          </div>\n\n          <div\n            class=\"relative max-h-[calc(100vh-18rem)] overflow-auto px-4 pb-28 md:max-h-[calc(100vh-17rem)]\"\n            data-simplebar\n          >\n            <ul class=\"space-y-3\">\n              <!-- Friend Chat -->\n              <li\n                class=\"group mt-5\"\n                :class=\"reply.is_admin != 0 ? 'pr' : ''\"\n                v-for=\"reply in support.conversations\"\n                :key=\"reply.id\"\n              >\n                <div class=\"flex gap-x-3 group-[.pr]:flex-row-reverse\">\n                  <div class=\"avatar avatar-circle avatar-sm shrink-0\">\n                    <img\n                      class=\"avatar-img\"\n                      :src=\"\n                        reply.user.avatar\n                          ? reply.user.avatar\n                          : `https://ui-avatars.com/api/?name=${reply.user.name}`\n                      \"\n                      onerror=\"this.src = '/images/avatar1.png'\"\n                      alt=\"profile-img\"\n                    />\n                  </div>\n                  <div class=\"flex max-w-sm flex-col items-start gap-y-2 group-[.pr]:items-end\">\n                    <p\n                      class=\"rounded-primary rounded-tl-none bg-slate-100 p-2 text-sm text-slate-600 group-[.pr]:rounded-tl-primary group-[.pr]:rounded-tr-none group-[.pr]:bg-primary-500 group-[.pr]:text-slate-100 dark:bg-slate-700 dark:text-slate-300\"\n                    >\n                      {{ reply.comment }}\n                    </p>\n                    <span class=\"text-xs font-normal text-slate-400\">\n                      {{ moment(reply.created_at).format('D MMM, YYYY') }}</span\n                    >\n                  </div>\n                </div>\n              </li>\n            </ul>\n            <!-- For Div: Scroll To Bottom  -->\n            <div id=\"chat-scroll-view\"></div>\n          </div>\n\n          <div\n            class=\"absolute bottom-[-0.5px] left-0 right-0 z-10 rounded-b-primary bg-white py-4 dark:bg-slate-800\"\n          >\n            <form\n              @submit.prevent=\"updateSupport\"\n              class=\"mx-4 flex h-[4.5rem] items-center rounded-primary border border-slate-200 shadow dark:border-slate-600\"\n            >\n              <input\n                v-model=\"form.message\"\n                class=\"h-full w-full border-transparent bg-transparent px-4 text-sm text-slate-700 placeholder:text-slate-500 focus:border-transparent focus:ring-0 dark:text-slate-300 dark:placeholder:text-slate-400\"\n                type=\"text\"\n                placeholder=\"Type your message here\"\n              />\n              <div class=\"flex items-center justify-end gap-x-4 px-4\">\n                <select class=\"select w-[120px]\" name=\"status\" v-model=\"form.status\">\n                  <option value=\"1\">\n                    {{ trans('Open') }}\n                  </option>\n                  <option value=\"2\">\n                    {{ trans('Pending') }}\n                  </option>\n                  <option value=\"0\">\n                    {{ trans('Closed') }}\n                  </option>\n                </select>\n\n                <button type=\"submit\" :disabled=\"form.processing\" class=\"btn btn-sm btn-primary\">\n                  <i width=\"18\" height=\"18\" data-feather=\"send\"></i>\n                  <span class=\"hidden md:inline-block\">{{ trans('Send') }}</span>\n                </button>\n              </div>\n            </form>\n          </div>\n          <!-- Chat Wrapper Footer Ends -->\n        </div>\n\n        <div\n          id=\"chat-overlay\"\n          class=\"absolute inset-0 z-10 hidden h-full w-full bg-black bg-opacity-0 transition-colors duration-300 ease-in-out xl:hidden\"\n        ></div>\n        <!-- Email Overlay Ends -->\n      </div>\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { router } from '@inertiajs/vue3'\nimport moment from 'moment'\nimport { ref } from 'vue'\nimport notify from '@/Plugins/Admin/notify'\n\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps(['segments', 'buttons', 'support'])\n\nconst form = ref({\n  message: '',\n  status: props.support.status\n})\n\nconst updateSupport = () => {\n  router.patch(\n    route('admin.support.update', props.support.id),\n    {\n      status: form.value.status,\n      message: form.value.message\n    },\n    {\n      onSuccess: () => {\n        form.value.message = ''\n        notify.success('Submitted successfully')\n      }\n    }\n  )\n}\n</script>\n","<template>\n  <main class=\"container p-4 sm:p-6\">\n    <HeaderSegment title=\"Tags\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <Overview :items=\"tagsStats\" grid=\"3\" />\n\n      <div class=\"card\">\n        <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th class=\"w-2/12\">{{ trans(\"Name\") }}</th>\n                <th class=\"w-2/12\">{{ trans(\"Slug\") }}</th>\n                <th class=\"w-2/12\">\n                  <p class=\"text-center\">{{ trans(\"Uses for blog\") }}</p>\n                </th>\n                <th class=\"w-2/12\">{{ trans(\"Status\") }}</th>\n                <th class=\"w-2/12\">{{ trans(\"Created At\") }}</th>\n                <th class=\"w-2/12 mr-auto\">\n                  <p class=\"text-end\">{{ trans(\"Action\") }}</p>\n                </th>\n              </tr>\n            </thead>\n            <tbody v-if=\"tags.total\">\n              <tr v-for=\"tag in tags.data\" :key=\"tag.id\">\n                <td class=\"text-left\">\n                  {{ tag.title }}\n                </td>\n                <td class=\"text-left\">\n                  {{ tag.slug }}\n                </td>\n                <td>\n                  <p class=\"text-center\">{{ tag.postcategories_count }}</p>\n                </td>\n                <td class=\"text-left\">\n                  <span\n                    class=\"badge\"\n                    :class=\"[tag.status == 1 ? 'badge-primary' : 'badge-danger']\"\n                  >\n                    {{ tag.status == 1 ? trans(\"Active\") : trans(\"Draft\") }}\n                  </span>\n                </td>\n                <td>\n                  {{ moment(tag.created_at).format(\"D-MMM-Y\") }}\n                </td>\n\n                <td>\n                  <div class=\"flex justify-end\">\n                    <div class=\"dropdown\" data-placement=\"bottom-start\">\n                      <div class=\"dropdown-toggle\">\n                        <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                      </div>\n                      <div class=\"w-40 dropdown-content\">\n                        <ul class=\"dropdown-list\">\n                          <li class=\"dropdown-list-item\">\n                            <button @click=\"openEditTagDrawer(tag)\" class=\"dropdown-link\">\n                              <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                              <span>{{ trans(\"Edit\") }}</span>\n                            </button>\n                          </li>\n\n                          <li class=\"dropdown-list-item\">\n                            <Link\n                              as=\"button\"\n                              class=\"dropdown-link\"\n                              @click=\"deleteRow('/admin/tag/' + tag.id)\"\n                            >\n                              <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                                >{{ trans(\"Remove\") }}></i\n                              >\n                              <span>{{ trans(\"Delete\") }}</span>\n                            </Link>\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n            <NoDataFound v-else for-table=\"true\" />\n          </table>\n        </div>\n        <Paginate :links=\"tags.links\" />\n      </div>\n    </div>\n  </main>\n\n  <div id=\"addNewTagDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeTag()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Add New Tag\") }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Title\") }}</label>\n          <input\n            v-model=\"tagForm.title\"\n            type=\"text\"\n            name=\"title\"\n            class=\"input\"\n            required=\"\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Status\") }}</label>\n          <select v-model=\"tagForm.status\" class=\"select\" name=\"status\">\n            <option value=\"1\">{{ trans(\"Active\") }}</option>\n            <option value=\"0\">{{ trans(\"Deactive\") }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Language\") }}</label>\n          <select v-model=\"tagForm.language\" class=\"select\" name=\"language\">\n            <template v-for=\"(language, key) in languages\" :key=\"key\">\n              <option :value=\"key\">{{ language }}</option>\n            </template>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"tagForm.processing\"\n            :btn-text=\"trans('Save Tag')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"editTagDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateTag()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans(\"Edit Tag\") }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Title\") }}</label>\n          <input\n            v-model=\"editForm.title\"\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            class=\"input\"\n            required\n          />\n        </div>\n\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Status\") }}</label>\n          <select v-model=\"editForm.status\" class=\"select\" name=\"status\" id=\"status\">\n            <option value=\"1\">{{ trans(\"Active\") }}</option>\n            <option value=\"0\">{{ trans(\"Deactive\") }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans(\"Language\") }}</label>\n          <select v-model=\"editForm.lang\" class=\"select\" name=\"language\" id=\"language\">\n            <template v-for=\"(language, key) in languages\" :key=\"key\">\n              <option :value=\"key\">{{ language }}</option>\n            </template>\n          </select>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"w-full btn btn-secondary\" data-dismiss=\"drawer\">\n            <span> {{ trans(\"Close\") }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"editForm.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport { Link, useForm, router } from \"@inertiajs/vue3\";\nimport Paginate from \"@/Components/Paginate.vue\";\nimport moment from \"moment\";\nimport { ref } from \"vue\";\nimport trans from '@/Composables/transComposable';\nimport sharedComposable from \"@/Composables/sharedComposable\";\nimport Alert from \"@/Components/Admin/Alert.vue\";\nimport Overview from \"@/Components/Admin/OverviewGrid.vue\";\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport { onMounted } from \"vue\";\nimport drawer from \"@/Plugins/Admin/drawer\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport NoDataFound from \"@/Components/Admin/NoDataFound.vue\";\ndefineOptions({ layout: AdminLayout });\nconst { deleteRow } = sharedComposable();\n\nonMounted(() => {\n  drawer.init();\n});\n\nconst props = defineProps([\n  \"tags\",\n  \"totalTags\",\n  \"activeTags\",\n  \"inActiveTags\",\n  \"languages\",\n  \"buttons\",\n  \"segments\",\n]);\n\nconst tagsStats = [\n  { value: props.totalTags, title: trans(\"Total Tags\"),\n   iconClass: \"bx bx-bar-chart\"\n  },\n  {\n    value: props.activeTags,\n    title: trans(\"Active Tags\"),\n    iconClass: \"bx bx-check-circle\"\n  },\n  {\n    value: props.inActiveTags,\n    title: trans(\"Inactive Tags\"),\n    iconClass: \"bx bx-x-circle\"\n  },\n];\n\nconst tagForm = useForm({\n  title: \"\",\n  status: \"active\",\n  language: \"\",\n});\nconst editForm = ref({});\nconst storeTag = () => {\n  tagForm.post(route(\"admin.tag.store\"), {\n    onSuccess: () => {\n      tagForm.reset();\n      notify.success(trans(\"Tag has been added successfully\"));\n      drawer.of(\"#addNewTagDrawer\").hide();\n    },\n  });\n};\n\nconst openEditTagDrawer = (tag) => {\n  editForm.value = { ...tag };\n  drawer.of(\"#editTagDrawer\").show();\n};\n\nconst updateTag = () => {\n  router.patch(route(\"admin.tag.update\", editForm.value.id), editForm.value, {\n    onSuccess: () => {\n      editForm.value = {};\n      notify.success(trans(\"Tag has been updated successfully\"));\n      drawer.of(\"#editTagDrawer\").hide();\n    },\n  });\n};\n</script>\n","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Create Team Member\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n\n      <form method=\"post\" @submit.prevent=\"createTeam\" enctype=\"multipart/form-data\">\n        <div class=\"grid grid-cols-12\">\n          <div class=\"col-span-5\">\n            <strong>{{ trans(\"Create a team member\") }}</strong>\n            <p> {{ trans(\"Add your team member details and necessary information from here\") }} </p>\n          </div>\n          <div class=\"col-span-7 card-wrapper\">\n\n            <div class=\"card\">\n              <div class=\"card-body\">\n\n                <div class=\"mb-2\">\n                  <label>{{ trans(\"Member Name\") }}</label>\n                  <input v-model=\"form.member_name\" type=\"text\" name=\"member_name\" required class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans(\"Member Position\") }}</label>\n                  <input v-model=\"form.member_position\" type=\"text\" name=\"member_position\" required class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans(\"Profile Picture\") }}</label>\n                  <input @input=\"(e) => (form.profile_picture = e.target.files[0])\" type=\"file\" accept=\"image/*\"\n                    name=\"profile_picture\" required class=\"input\" />\n                </div>\n\n                <div class=\"mb-2\">\n                  <label>{{ trans(\"Profile Description\") }}</label>\n                  <textarea v-model=\"form.about\" class=\"input h-200\" name=\"about\" maxlength=\"1000\" required></textarea>\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans(\"Facebook profile link\") }}</label>\n                  <input v-model=\"form.socials.facebook\" type=\"url\" name=\"socials[facebook]\" class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans(\"Twitter profile link\") }}</label>\n                  <input v-model=\"form.socials.twitter\" type=\"url\" name=\"socials[twitter]\" class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans(\"Linkedin profile link\") }}</label>\n                  <input v-model=\"form.socials.linkedin\" type=\"url\" name=\"socials[linkedin]\" class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans(\"Instagram profile link\") }}</label>\n                  <input v-model=\"form.socials.instagram\" type=\"url\" name=\"socials[instagram]\" class=\"input\" />\n                </div>\n                <div class=\"mb-2\">\n                  <label for=\"toggle-status\" class=\"toggle toggle-sm\">\n                    <input v-model=\"form.status\" class=\"sr-only toggle-input peer\" id=\"toggle-status\" type=\"checkbox\">\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans(\"Make it publish?\") }}</span>\n                  </label>\n                </div>\n\n                <div class=\"mt-3 from-group row\">\n                  <div class=\"col-lg-12\">\n                    <SpinnerBtn :processing=\"form.processing\" :btn-text=\"trans('Save Changes')\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </form>\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\"\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\"\nimport { useForm } from \"@inertiajs/vue3\"\nimport sharedComposable from \"@/Composables/sharedComposable\"\nimport notify from \"@/Plugins/Admin/notify\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport trans from '@/Composables/transComposable'\ndefineOptions({ layout: AdminLayout })\n\nconst props = defineProps([\n  'buttons',\n  'segments',\n])\nconst form = useForm({\n  member_name: '',\n  member_position: '',\n  profile_picture: '',\n  about: '',\n  status: false,\n  socials: {\n    facebook: null,\n    twitter: null,\n    linkedin: null,\n    instagram: null,\n  }\n})\nconst createTeam = () => {\n  form.post(route('admin.team.store'), {\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('Team has been added successfully'))\n    }\n  })\n}\n</script>","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Edit Team Member\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <form method=\"post\" @submit.prevent=\"editTeam\" enctype=\"multipart/form-data\">\n        <div class=\"grid grid-cols-12\">\n          <div class=\"col-span-5\">\n            <strong>{{ trans('Edit team member') }}</strong>\n            <p>\n              {{ trans('Edit your team member details and necessary information from here') }}\n            </p>\n          </div>\n          <div class=\"col-span-7\">\n            <!-- Alerts -->\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <label>{{ trans('Member Name') }}</label>\n                  <input\n                    type=\"text\"\n                    name=\"member_name\"\n                    v-model=\"info.title\"\n                    required\n                    class=\"input\"\n                  />\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans('Member Position') }}</label>\n                  <input\n                    type=\"text\"\n                    name=\"member_position\"\n                    v-model=\"info.slug\"\n                    required\n                    class=\"input\"\n                  />\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans('Profile Picture') }}</label>\n                  <input\n                    @input=\"(e) => (info.preview.value = e.target.files[0])\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    name=\"profile_picture\"\n                    class=\"input\"\n                  />\n                </div>\n\n                <div class=\"mb-2\">\n                  <label>{{ trans('Profile Description') }}</label>\n                  <textarea\n                    class=\"textarea h-200\"\n                    name=\"about\"\n                    maxlength=\"1000\"\n                    required\n                    v-model=\"info.description.value\"\n                  ></textarea>\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans('Facebook profile link') }}</label>\n                  <input\n                    type=\"url\"\n                    name=\"socials[facebook]\"\n                    v-model=\"socials.facebook\"\n                    class=\"input\"\n                  />\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans('Twitter profile link') }}</label>\n                  <input\n                    type=\"url\"\n                    name=\"socials[twitter]\"\n                    v-model=\"socials.twitter\"\n                    class=\"input\"\n                  />\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans('Linkedin profile link') }}</label>\n                  <input\n                    type=\"url\"\n                    name=\"socials[linkedin]\"\n                    v-model=\"socials.linkedin\"\n                    class=\"input\"\n                  />\n                </div>\n                <div class=\"mb-2\">\n                  <label>{{ trans('Instagram profile link') }}</label>\n                  <input\n                    type=\"url\"\n                    name=\"socials[instagram]\"\n                    v-model=\"socials.instagram\"\n                    class=\"input\"\n                  />\n                </div>\n                <div class=\"mb-2\">\n                  <label for=\"toggle-status\" class=\"toggle toggle-sm\">\n                    <input\n                      v-model=\"info.status\"\n                      class=\"toggle-input peer sr-only\"\n                      id=\"toggle-status\"\n                      type=\"checkbox\"\n                    />\n                    <div class=\"toggle-body\"></div>\n                    <span class=\"label label-md\">{{ trans('Make it publish?') }}</span>\n                  </label>\n                </div>\n\n                <div class=\"mt-2\">\n                  <SpinnerBtn :btn-text=\"trans('Save Changes')\" :processing=\"isProcessing\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport { router } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nimport { ref, onMounted } from 'vue'\ndefineOptions({ layout: AdminLayout })\nconst props = defineProps(['buttons', 'segments', 'info', 'socials'])\nonMounted(() => {\n  props.info.status = props.info.status == 1 ? true : false\n})\n\nconst isProcessing = ref(false)\n\nconst editTeam = () => {\n  if (!(props.info.preview.value instanceof File)) {\n    props.info.preview.value = null\n  }\n\n  isProcessing.value = true\n  router.post(\n    route('admin.team.update', props.info.id),\n    {\n      _method: 'patch',\n      team: props.info,\n      socials: props.socials\n    },\n    {\n      onSuccess: () => {\n        isProcessing.value = false\n        notify.success(trans('Team has been updated successfully'))\n      }\n    }\n  )\n}\n</script>\n","<template>\n  <main class=\"flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Pages\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <OverviewGrid :items=\"teamStats\" grid=\"3\" />\n\n      <div class=\"table-responsive whitespace-nowrap rounded-primary\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>{{ trans(\"Name\") }}</th>\n              <th>{{ trans(\"Position\") }}</th>\n\n              <th class=\"text-right\">{{ trans(\"Status\") }}</th>\n              <th class=\"flex justify-end\">{{ trans(\"Action\") }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"post in posts.data\" :key=\"post.id\">\n              <td class=\"flex items-center gap-2\">\n                <img :src=\"post.preview.value\" class=\"mr-3 avatar rounded-square\" />\n                {{ textExcerpt(post.title, 50) }}\n              </td>\n              <td class=\"text-left\">\n                {{ textExcerpt(post.slug, 50) }}\n              </td>\n\n              <td class=\"text-right\">\n                <span\n                  class=\"badge\"\n                  :class=\"post.status == 1 ? 'badge-success' : 'badge-danger'\"\n                >\n                  {{ post.status == 1 ? trans(\"Active\") : trans(\"Draft\") }}\n                </span>\n              </td>\n\n              <td>\n                <div class=\"dropdown\" data-placement=\"bottom-start\">\n                  <div class=\"dropdown-toggle\">\n                    <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                  </div>\n                  <div class=\"w-40 dropdown-content\">\n                    <ul class=\"dropdown-list\">\n                      <li class=\"dropdown-list-item\">\n                        <Link\n                          :href=\"route('admin.team.edit', post.id)\"\n                          class=\"dropdown-link\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                          <span>{{ trans(\"Edit\") }}</span>\n                        </Link>\n                      </li>\n\n                      <li class=\"dropdown-list-item\">\n                        <button\n                          type=\"button\"\n                          class=\"dropdown-link\"\n                          @click=\"deleteRow(route('admin.team.destroy', post.id))\"\n                        >\n                          <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                            >{{ trans(\"Remove\") }}></i\n                          >\n                          <span>{{ trans(\"Delete\") }}</span>\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <Alert\n          v-if=\"posts.data.length == 0\"\n          type=\"info\"\n          :text=\"trans('Opps you have not created any plan....')\"\n        />\n      </div>\n\n      <Pagination v-if=\"posts.data.length != 0\" :pages=\"{ ...posts, data: null }\" />\n    </div>\n  </main>\n</template>\n\n<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\nimport OverviewGrid from \"@/Components/Admin/OverviewGrid.vue\";\nimport Alert from \"@/Components/Admin/Alert.vue\";\nimport Pagination from \"@/Components/Admin/Pagination.vue\";\nimport trans from '@/Composables/transComposable';\nimport { Link } from \"@inertiajs/vue3\";\n\ndefineOptions({ layout: AdminLayout });\nconst { textExcerpt, deleteRow } = sharedComposable();\n\nconst props = defineProps([\n  \"posts\",\n  \"buttons\",\n  \"segments\",\n  \"totalMembers\",\n  \"totalActiveMembers\",\n  \"totalInActiveMembers\",\n]);\n\nconst teamStats = [\n  { value: props.totalMembers, title: trans(\"Total Members\"),\n   iconClass: \"bx bx-user-pin\"\n   },\n  {\n    value: props.totalActiveMembers,\n    title: trans(\"Active Members\"),\n    iconClass: \"bx bx-check-circle\"\n  },\n  {\n    value: props.totalInActiveMembers,\n    title: trans(\"Expired Members\"),\n    iconClass: \"bx bx-x-circle\"\n  },\n];\n</script>\n","<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Testimonial\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>{{ trans('Reviewer Name') }}</th>\n            <th>{{ trans('Reviewer Position') }}</th>\n            <th>{{ trans('Comment') }}</th>\n            <th>{{ trans('Ratings') }}</th>\n            <th>{{ trans('Brand Avatar') }}</th>\n            <th>\n              <p class=\"text-end\">{{ trans('Action') }}</p>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"post in posts.data\" :key=\"post.id\">\n            <td class=\"flex\">\n              <img :src=\"post.preview.value\" class=\"avatar rounded-square mr-3\" />\n              <span>\n                {{ textExcerpt(post.title, 30) }}\n              </span>\n            </td>\n            <td class=\"text-left\">\n              {{ textExcerpt(post.slug, 30) }}\n            </td>\n            <td class=\"text-left\">\n              {{ textExcerpt(post.excerpt.value ?? '', 50) }}\n            </td>\n            <td class=\"text-right\">{{ post.lang }} {{ trans('Star') }}</td>\n            <td>\n              <img\n                v-if=\"post.banner\"\n                :src=\"post.banner?.value\"\n                class=\"avatar rounded-square mr-3\"\n              />\n              <span v-else>None</span>\n            </td>\n            <td>\n              <div class=\"dropdown\" data-placement=\"bottom-start\">\n                <div class=\"dropdown-toggle\">\n                  <i class=\"w-6 text-slate-400\" data-feather=\"more-horizontal\"></i>\n                </div>\n                <div class=\"dropdown-content w-40\">\n                  <ul class=\"dropdown-list\">\n                    <li class=\"dropdown-list-item\">\n                      <button @click=\"openEditTestimonialDrawer(post)\" class=\"dropdown-link\">\n                        <i class=\"h-5 text-slate-400\" data-feather=\"edit\"></i>\n                        <span>{{ trans('Edit') }}</span>\n                      </button>\n                    </li>\n\n                    <li class=\"dropdown-list-item\">\n                      <button\n                        class=\"dropdown-link\"\n                        @click=\"deleteRow('/admin/testimonials/' + post.id)\"\n                      >\n                        <i class=\"h-5 text-slate-400\" data-feather=\"trash-2\"\n                          >{{ trans('Remove') }}></i\n                        >\n                        <span>{{ trans('Delete') }}</span>\n                      </button>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <Paginate :links=\"posts.links\" />\n    </div>\n  </main>\n\n  <div id=\"addNewTestimonialDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"storeTestimonial()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Add New Testimonial') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans('Reviewer Name') }}</label>\n          <input\n            v-model=\"form.reviewer_name\"\n            type=\"text\"\n            name=\"reviewer_name\"\n            maxlength=\"150\"\n            class=\"input\"\n            required\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Reviewer Position') }}</label>\n          <input\n            v-model=\"form.reviewer_position\"\n            type=\"text\"\n            name=\"reviewer_position\"\n            class=\"input\"\n            required\n            placeholder=\"CEO of Google\"\n            maxlength=\"50\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Reviewer Avatar') }}</label>\n          <input\n            @input=\"(e) => (form.reviewer_avatar = e.target.files[0])\"\n            type=\"file\"\n            name=\"reviewer_avatar\"\n            accept=\"image/*\"\n            class=\"input\"\n            required\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Brand Avatar') }}</label>\n          <input\n            @input=\"(e) => (form.brand_avatar = e.target.files[0])\"\n            type=\"file\"\n            name=\"brand_avatar\"\n            accept=\"image/*\"\n            class=\"input\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Review Star') }}</label>\n          <select v-model=\"form.star\" class=\"select\" name=\"star\">\n            <option value=\"5\">{{ trans('5 Star') }}</option>\n            <option value=\"4\">{{ trans('4 Star') }}</option>\n            <option value=\"3\">{{ trans('3 Star') }}</option>\n            <option value=\"2\">{{ trans('2 Star') }}</option>\n            <option value=\"1\">{{ trans('1 Star') }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Comment') }}</label>\n          <textarea\n            v-model=\"form.comment\"\n            class=\"textarea h-100\"\n            maxlength=\"500\"\n            name=\"comment\"\n            required\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"btn btn-secondary w-full\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"form.processing\"\n            :btn-text=\"trans('Create')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div id=\"editTestimonialDrawer\" class=\"drawer drawer-right\">\n    <form @submit.prevent=\"updateTestimonial()\">\n      <div class=\"drawer-header\">\n        <h5>{{ trans('Edit Testimonial') }}</h5>\n        <button\n          type=\"button\"\n          class=\"btn btn-plain-secondary dark:text-slate-300 dark:hover:bg-slate-700 dark:focus:bg-slate-700\"\n          data-dismiss=\"drawer\"\n        >\n          <i data-feather=\"x\" width=\"1.5rem\" height=\"1.5rem\"></i>\n        </button>\n      </div>\n      <div class=\"drawer-body\">\n        <div class=\"mb-2\">\n          <label>{{ trans('Reviewer Name') }}</label>\n          <input\n            v-model=\"editTestimonialForm.title\"\n            type=\"text\"\n            name=\"reviewer_name\"\n            id=\"reviewer_name\"\n            maxlength=\"150\"\n            class=\"input\"\n            required\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Reviewer Position') }}</label>\n          <input\n            v-model=\"editTestimonialForm.slug\"\n            type=\"text\"\n            name=\"reviewer_position\"\n            id=\"reviewer_position\"\n            class=\"input\"\n            required=\"\"\n            placeholder=\"CEO of Google\"\n            maxlength=\"50\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Reviewer Avatar') }}</label>\n          <input\n            @input=\"(e) => (editTestimonialForm.preview.value = e.target.files[0])\"\n            type=\"file\"\n            name=\"reviewer_avatar\"\n            accept=\"image/*\"\n            class=\"input\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Brand Avatar') }}</label>\n          <input\n            @input=\"(e) => (editTestimonialForm.banner.value = e.target.files[0])\"\n            type=\"file\"\n            name=\"reviewer_avatar\"\n            accept=\"image/*\"\n            class=\"input\"\n          />\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Review Star') }}</label>\n          <select v-model=\"editTestimonialForm.lang\" class=\"select\" name=\"star\" id=\"star\">\n            <option value=\"5\">{{ trans('5 Star') }}</option>\n            <option value=\"4\">{{ trans('4 Star') }}</option>\n            <option value=\"3\">{{ trans('3 Star') }}</option>\n            <option value=\"2\">{{ trans('2 Star') }}</option>\n            <option value=\"1\">{{ trans('1 Star') }}</option>\n          </select>\n        </div>\n        <div class=\"mb-2\">\n          <label>{{ trans('Comment') }}</label>\n          <textarea\n            :value=\"editTestimonialForm?.excerpt?.value ?? ''\"\n            @input=\"(e) => (editTestimonialForm.excerpt.value = e.target.value)\"\n            class=\"textarea h-100\"\n            maxlength=\"500\"\n            name=\"comment\"\n            id=\"comment\"\n            required\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"drawer-footer\">\n        <div class=\"flex justify-between gap-2\">\n          <button type=\"button\" class=\"btn btn-secondary w-full\" data-dismiss=\"drawer\">\n            <span> {{ trans('Close') }}</span>\n          </button>\n          <SpinnerBtn\n            classes=\"w-full btn btn-primary\"\n            :processing=\"editTestimonialForm.processing\"\n            :btn-text=\"trans('Save Changes')\"\n          />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport { useForm, router } from '@inertiajs/vue3'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport Paginate from '@/Components/Paginate.vue'\nimport { ref } from 'vue'\nimport notify from '@/Plugins/Admin/notify'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport drawer from '@/Plugins/Admin/drawer'\nimport { onMounted } from 'vue'\nimport trans from '@/Composables/transComposable'\n\ndefineOptions({ layout: AdminLayout })\n\nconst { textExcerpt, deleteRow } = sharedComposable()\n\nonMounted(() => {\n  drawer.init()\n})\n\nconst props = defineProps(['posts', 'buttons', 'segments'])\nconst form = useForm({\n  reviewer_name: '',\n  reviewer_position: '',\n  reviewer_avatar: '',\n  brand_avatar: '',\n  star: 0,\n  comment: ''\n})\n\nconst editTestimonialForm = ref({})\n\nfunction openEditTestimonialDrawer(testimonial) {\n  editTestimonialForm.value = { ...testimonial, banner: { value: null } }\n  drawer.of('#editTestimonialDrawer').show()\n}\n\nconst storeTestimonial = () => {\n  form.post(route('admin.testimonials.store'), {\n    onSuccess: () => {\n      form.reset()\n      notify.success(trans('Testimonial has been added successfully'))\n      drawer.of('#addNewTestimonialDrawer').hide()\n    }\n  })\n}\n\nconst updateTestimonial = () => {\n  if (!(editTestimonialForm.value.preview.value instanceof File)) {\n    editTestimonialForm.value.preview.value = null\n  }\n\n  router.post(\n    route('admin.testimonials.update', editTestimonialForm.value.id),\n    {\n      _method: 'patch',\n      testimonial: editTestimonialForm.value\n    },\n    {\n      onSuccess: () => {\n        notify.success('Testimonial Updated successfully')\n        drawer.of('#editTestimonialDrawer').hide()\n      }\n    }\n  )\n}\n</script>\n\n","<script setup>\nimport AdminLayout from '@/Layouts/Admin.vue'\nimport HeaderSegment from '@/Layouts/Admin/HeaderSegment.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport { router } from '@inertiajs/vue3'\nimport { computed, ref } from 'vue'\ndefineOptions({ layout: AdminLayout })\nconst props = defineProps(['theme_path', 'buttons', 'segments'])\nconst isProcessing = ref(false)\nconst themeData = computed(() => JSON.parse(props.theme_path))\n\nconst homePage = [\n  {\n    img: '/assets/images/theme/home/one.png',\n    value: 'One'\n  },\n  {\n    img: '/assets/images/theme/home/two.png',\n    value: 'Two'\n  },\n  {\n    img: '/assets/images/theme/home/three.png',\n    value: 'Three'\n  },\n  {\n    img: '/assets/images/theme/home/four.png',\n    value: 'Four'\n  },\n  {\n    img: '/assets/images/theme/home/five.png',\n    value: 'Five'\n  },\n  {\n    img: '/assets/images/theme/home/six.png',\n    value: 'Six'\n  },\n  {\n    img: '/assets/images/theme/home/seven.png',\n    value: 'Seven'\n  }\n]\nconst jobLists = [\n  {\n    img: '/assets/images/theme/job_list/job_list_one_list.png',\n    path: 'One',\n    type: 'List'\n  },\n  {\n    img: '/assets/images/theme/job_list/job_list_one_grid.png',\n    path: 'One',\n    type: 'Grid'\n  },\n  {\n    img: '/assets/images/theme/job_list/job_list_two_list.png',\n    path: 'Two',\n    type: 'List'\n  },\n  {\n    img: '/assets/images/theme/job_list/job_list_two_list.png',\n    path: 'Two',\n    type: 'Grid'\n  },\n  {\n    img: '/assets/images/theme/job_list/job_list_three_list.png',\n    path: 'Three',\n    type: 'List'\n  },\n  {\n    img: '/assets/images/theme/job_list/job_list_three_list.png',\n    path: 'Three',\n    type: 'Grid'\n  }\n]\nconst jobDetails = [\n  {\n    img: '/assets/images/theme/job_detail/one.png',\n    value: 'One'\n  },\n  {\n    img: '/assets/images/theme/job_detail/two.png',\n    value: 'Two'\n  }\n]\nconst candidateLists = [\n  {\n    img: '/assets/images/theme/candidate/candidate_one_grid.png',\n    value: 'One'\n  },\n  {\n    img: '/assets/images/theme/candidate/candidate_one_list.png',\n    value: 'Two'\n  },\n  {\n    img: '/assets/images/theme/candidate/candidate_two_grid.png',\n    value: 'Three'\n  },\n  {\n    img: '/assets/images/theme/candidate/candidate_two_list.png',\n    value: 'Four'\n  }\n]\nconst candidateDetails = [\n  {\n    img: '/assets/images/theme/candidate/candidate_detail_one.png',\n    value: 'One'\n  },\n  {\n    img: '/assets/images/theme/candidate/candidate_detail_two.png',\n    value: 'Two'\n  }\n]\nconst companyLists = [\n  {\n    img: '/assets/images/theme/company/company_one.png',\n    value: 'One'\n  },\n  {\n    img: '/assets/images/theme/company/company_two.png',\n    value: 'Two'\n  },\n  {\n    img: '/assets/images/theme/company/company_three.png',\n    value: 'Three'\n  },\n  {\n    img: '/assets/images/theme/company/company_four.png',\n    value: 'Four'\n  }\n]\nconst blogs = [\n  {\n    img: '/assets/images/theme/blog/one.png',\n    value: 'One'\n  },\n  {\n    img: '/assets/images/theme/blog/two.png',\n    value: 'Two'\n  },\n  {\n    img: '/assets/images/theme/blog/three.png',\n    value: 'Three'\n  }\n]\nfunction btnInfo(condition) {\n  const buttonText = condition ? 'Deactivate' : 'Activate'\n\n  const buttonClass = condition ? 'btn-outline-secondary' : 'btn-outline-success'\n\n  return { text: buttonText, class: buttonClass }\n}\nconst themeForm = ref({\n  home: themeData.value?.home || '',\n  job_list: {\n    path: themeData.value?.job_list?.path,\n    type: themeData.value?.job_list?.type\n  },\n  job_detail: themeData.value?.job_detail || '',\n  candidate_list: themeData.value?.candidate_list || '',\n  candidate_detail: themeData.value?.candidate_detail || '',\n  company_list: themeData.value?.company_list || '',\n  blog: themeData.value?.blog || ''\n})\nconst updateThemePath = () => {\n  isProcessing.value = true\n\n  router.put(\n    route('admin.page-settings.update', 'theme'),\n    { themeData: themeForm.value },\n    {\n      preserveScroll: true,\n      onSuccess: () => {\n        notify.success('Theme Updated successfully')\n        isProcessing.value = false\n      }\n    }\n  )\n}\n</script>\n\n<template>\n  <main class=\"container flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Themes Settings\" :segments=\"segments\" :buttons=\"buttons\" />\n\n    <div class=\"space-y-6\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <form\n            class=\"space-y-6\"\n            method=\"POST\"\n            @submit.prevent=\"updateThemePath\"\n            enctype=\"multipart/form-data\"\n          >\n            <div>\n              <h5>{{ trans('Home') }}</h5>\n              <div class=\"grid grid-cols-4 gap-5 mt-3\">\n                <div class=\"rounded-md\" v-for=\"theme in homePage\" :key=\"theme.value\">\n                  <a :href=\"theme.img\" target=\"_blank\" class=\"relative\">\n                    <span\n                      v-if=\"themeData.home === theme.value\"\n                      class=\"absolute -rotate-45 badge badge-danger badge-rounded -left-3 top-2\"\n                    >\n                      {{ trans('Active') }}\n                    </span>\n                    <img v-lazy=\"theme.img\" class=\"border rounded-md\" alt=\"img\" />\n                  </a>\n                  <div class=\"flex items-center justify-center mt-2\">\n                    <button\n                      :disabled=\"isProcessing\"\n                      type=\"submit\"\n                      @click=\"themeForm.home = theme.value\"\n                      class=\"btn btn-xs disabled:cursor-not-allowed\"\n                      :class=\"btnInfo(themeData.home === theme.value).class\"\n                    >\n                      {{ btnInfo(themeData.home === theme.value).text }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div>\n              <h5>{{ trans('Job Listing') }}</h5>\n              <div class=\"grid grid-cols-4 gap-5 mt-3\">\n                <div class=\"rounded-md\" v-for=\"(jobList, i) in jobLists\" :key=\"i\">\n                  <a :href=\"jobList.img\" target=\"_blank\" class=\"relative\">\n                    <span\n                      v-if=\"\n                        themeData.job_list.type === jobList.type &&\n                        themeData.job_list.path === jobList.path\n                      \"\n                      class=\"absolute -rotate-45 badge badge-danger badge-rounded -left-3 top-2\"\n                    >\n                      {{ trans('Active') }}\n                    </span>\n                    <img v-lazy=\"jobList.img\" class=\"border rounded-md\" alt=\"img\" />\n                  </a>\n                  <div class=\"flex items-center justify-center mt-2\">\n                    <button\n                      :disabled=\"isProcessing\"\n                      @click=\"\n                        () => {\n                          themeForm.job_list.path = jobList.path\n                          themeForm.job_list.type = jobList.type\n                        }\n                      \"\n                      type=\"submit\"\n                      class=\"btn btn-xs disabled:cursor-not-allowed\"\n                      :class=\"\n                        btnInfo(\n                          themeData.job_list.type === jobList.type &&\n                            themeData.job_list.path === jobList.path\n                        ).class\n                      \"\n                    >\n                      {{\n                        btnInfo(\n                          themeData.job_list.type === jobList.type &&\n                            themeData.job_list.path === jobList.path\n                        ).text\n                      }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div>\n              <h5>{{ trans('Job Details') }}</h5>\n              <div class=\"grid grid-cols-4 gap-5 mt-3\">\n                <div class=\"rounded-md\" v-for=\"jobDetail in jobDetails\" :key=\"jobDetail.value\">\n                  <a :href=\"jobDetail.img\" target=\"_blank\" class=\"relative\">\n                    <span\n                      v-if=\"themeData.job_detail === jobDetail.value\"\n                      class=\"absolute -rotate-45 badge badge-danger badge-rounded -left-3 top-2\"\n                    >\n                      {{ trans('Active') }}\n                    </span>\n                    <img v-lazy=\"jobDetail.img\" class=\"border rounded-md\" alt=\"img\" />\n                  </a>\n                  <div class=\"flex items-center justify-center mt-2\">\n                    <button\n                      :disabled=\"isProcessing\"\n                      type=\"submit\"\n                      @click=\"themeForm.job_detail = jobDetail.value\"\n                      class=\"btn btn-xs disabled:cursor-not-allowed\"\n                      :class=\"btnInfo(themeData.job_detail === jobDetail.value).class\"\n                    >\n                      {{ btnInfo(themeData.job_detail === jobDetail.value).text }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div>\n              <h5>{{ trans('Candidate Lists') }}</h5>\n              <div class=\"grid grid-cols-4 gap-5 mt-3\">\n                <div\n                  class=\"rounded-md\"\n                  v-for=\"candidateList in candidateLists\"\n                  :key=\"candidateList.value\"\n                >\n                  <a :href=\"candidateList.img\" target=\"_blank\" class=\"relative\">\n                    <span\n                      v-if=\"themeData.candidate_list === candidateList.value\"\n                      class=\"absolute -rotate-45 badge badge-danger badge-rounded -left-3 top-2\"\n                    >\n                      {{ trans('Active') }}\n                    </span>\n                    <img v-lazy=\"candidateList.img\" class=\"border rounded-md\" alt=\"img\" />\n                  </a>\n                  <div class=\"flex items-center justify-center mt-2\">\n                    <button\n                      :disabled=\"isProcessing\"\n                      type=\"submit\"\n                      @click=\"themeForm.candidate_list = candidateList.value\"\n                      class=\"btn btn-xs disabled:cursor-not-allowed\"\n                      :class=\"btnInfo(themeData.candidate_list === candidateList.value).class\"\n                    >\n                      {{ btnInfo(themeData.candidate_list === candidateList.value).text }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div>\n              <h5>{{ trans('Candidate Details') }}</h5>\n              <div class=\"grid grid-cols-4 gap-5 mt-3\">\n                <div\n                  class=\"rounded-md\"\n                  v-for=\"candidateDetail in candidateDetails\"\n                  :key=\"candidateDetail.value\"\n                >\n                  <a :href=\"candidateDetail.img\" target=\"_blank\" class=\"relative\">\n                    <span\n                      v-if=\"themeData.candidate_detail === candidateDetail.value\"\n                      class=\"absolute -rotate-45 badge badge-danger badge-rounded -left-3 top-2\"\n                    >\n                      {{ trans('Active') }}\n                    </span>\n                    <img v-lazy=\"candidateDetail.img\" class=\"border rounded-md\" alt=\"img\" />\n                  </a>\n                  <div class=\"flex items-center justify-center mt-2\">\n                    <button\n                      :disabled=\"isProcessing\"\n                      type=\"submit\"\n                      @click=\"themeForm.candidate_detail = candidateDetail.value\"\n                      class=\"btn btn-xs disabled:cursor-not-allowed\"\n                      :class=\"btnInfo(themeData.candidate_detail === candidateDetail.value).class\"\n                    >\n                      {{ btnInfo(themeData.candidate_detail === candidateDetail.value).text }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div>\n              <h5>{{ trans('Company Lists') }}</h5>\n              <div class=\"grid grid-cols-4 gap-5 mt-3\">\n                <div\n                  class=\"rounded-md\"\n                  v-for=\"companyList in companyLists\"\n                  :key=\"companyList.value\"\n                >\n                  <a :href=\"companyList.img\" target=\"_blank\" class=\"relative\">\n                    <span\n                      v-if=\"themeData.company_list === companyList.value\"\n                      class=\"absolute -rotate-45 badge badge-danger badge-rounded -left-3 top-2\"\n                    >\n                      {{ trans('Active') }}\n                    </span>\n                    <img v-lazy=\"companyList.img\" class=\"border rounded-md\" alt=\"img\" />\n                  </a>\n                  <div class=\"flex items-center justify-center mt-2\">\n                    <button\n                      :disabled=\"isProcessing\"\n                      type=\"submit\"\n                      @click=\"themeForm.company_list = companyList.value\"\n                      class=\"btn btn-xs disabled:cursor-not-allowed\"\n                      :class=\"btnInfo(themeData.company_list === companyList.value).class\"\n                    >\n                      {{ btnInfo(themeData.company_list === companyList.value).text }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div>\n              <h5>{{ trans('Blog Lists') }}</h5>\n              <div class=\"grid grid-cols-4 gap-5 mt-3\">\n                <div class=\"rounded-md\" v-for=\"blog in blogs\" :key=\"blog.value\">\n                  <a :href=\"blog.img\" target=\"_blank\" class=\"relative\">\n                    <span\n                      v-if=\"themeData.blog === blog.value\"\n                      class=\"absolute -rotate-45 badge badge-danger badge-rounded -left-3 top-2\"\n                    >\n                      {{ trans('Active') }}\n                    </span>\n                    <img v-lazy=\"blog.img\" class=\"border rounded-md\" alt=\"img\" />\n                  </a>\n                  <div class=\"flex items-center justify-center mt-2\">\n                    <button\n                      :disabled=\"isProcessing\"\n                      type=\"submit\"\n                      @click=\"themeForm.blog = blog.value\"\n                      class=\"btn btn-xs disabled:cursor-not-allowed\"\n                      :class=\"btnInfo(themeData.blog === blog.value).class\"\n                    >\n                      {{ btnInfo(themeData.blog === blog.value).text }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n","<script setup>\nimport AdminLayout from \"@/Layouts/Admin.vue\";\nimport HeaderSegment from \"@/Layouts/Admin/HeaderSegment.vue\";\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport { useForm } from \"@inertiajs/vue3\";\nimport { modal } from \"@/Composables/modalComposable\";\nimport trans from '@/Composables/transComposable';\nimport { ref } from \"vue\";\ndefineOptions({ layout: AdminLayout });\nconst props = defineProps([\n  \"segments\",\n  \"buttons\",\n  \"version\",\n  \"purchaseKey\",\n  \"updateData\",\n]);\n\nconst updating = ref(false);\n\nconst form = useForm({\n  purchase_key: props.purchaseKey,\n});\n\nconst updateForm = useForm({\n  version: props.updateData?.version,\n});\n\nconst submit = () => {\n  form.post(route(\"admin.update.store\"), {\n    onError: (e) => {\n      console.log(e);\n    },\n  });\n};\n\nconst update = () => {\n  modal.init(null, {\n    options: {\n      message: trans(\n        \"Before send a request for update please take a backup of your site with database\"\n      ),\n      confirm_text: trans(\"Note\"),\n      accept_btn_text: trans(\"Procced for update\"),\n      reject_btn_text: trans(\"Cancel\"),\n    },\n    callback: () => {\n      \n      updating.value = true;\n      updateForm.put(route(\"admin.update.update\",props.updateData?.version), {\n        onError: (e) => {\n          console.log(e);\n        },\n      });\n    },\n  });\n};\n</script>\n\n<template>\n  <main class=\"flex-grow p-4 sm:p-6\">\n    <HeaderSegment title=\"Pages\" :segments=\"segments\" :buttons=\"buttons\" />\n    <div class=\"space-y-6\">\n      <div\n        class=\"mb-5 alert alert-outline-danger\"\n        v-show=\"$page.props.flash?.length != 0\"\n        role=\"alert\"\n      >\n        <i width=\"1rem\" height=\"1rem\" data-feather=\"alert-triangle\"></i>\n        <p>{{ $page.props.flash }}</p>\n      </div>\n\n      <div class=\"alert alert-info\" role=\"alert\" v-show=\"updateData?.message\">\n        <i width=\"1rem\" height=\"1rem\" data-feather=\"alert-circle\"></i>\n        <p>\n          <b>{{ trans(\"Note\") }}:</b>\n          {{ updateData?.message }}\n        </p>\n      </div>\n\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"flex justify-between\">\n            <h4 class=\"card-title\">{{ trans(\"Site Update\") }}</h4>\n            <p>{{ trans(\"Current Version\") }} {{ version }}</p>\n          </div>\n\n          <div class=\"card-body\">\n            <template v-if=\"updateData\">\n              <div class=\"flex items-center justify-between p-4 my-3 border rounded-lg\">\n                <p>{{ trans(\"Update Available\") }}</p>\n                <h6>\n                  {{ updateData.version }}\n                </h6>\n                <div>\n                  <form @submit.prevent=\"update\">\n                    <SpinnerBtn\n                      :processing=\"updateForm.processing\"\n                      :btn-text=\"trans('Update Now')\"\n                    />\n                  </form>\n                </div>\n              </div>\n            </template>\n\n            <!-- show if has not update data -->\n            <form @submit.prevent=\"submit\" v-else>\n              <div class=\"mb-2\">\n                <label for=\"\">{{ trans(\"Purchase Key\") }}</label>\n                <input type=\"text\" class=\"input\" :value=\"purchaseKey\" disabled />\n              </div>\n              <div class=\"mb-2\">\n                <SpinnerBtn\n                  :processing=\"form.processing\"\n                  :btn-text=\"trans('Check New Update')\"\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"!updateData\" class=\"alert alert-info\" role=\"alert\">\n        <i width=\"1rem\" height=\"1rem\" data-feather=\"alert-circle\"></i>\n        <p>\n          <b>{{ trans(\"Note\") }}:</b>\n          {{\n            trans(\n              \"If you have customized the script from codebase do not use this option. you will lose your customization.\"\n            )\n          }}\n        </p>\n      </div>\n    </div>\n  </main>\n</template>\n","import { defineStore } from 'pinia'\nimport { shallowRef } from 'vue'\nexport const useThemeLoaderStore = defineStore({\n  id: 'themeLoader',\n  state: () => ({\n    theme: '',\n    loadedComponents: shallowRef({})\n  })\n})\n","<script setup>\nimport { computed } from 'vue'\nimport { usePage } from '@inertiajs/vue3'\n\nconst errors = computed(() => usePage().props.flash)\nconst close = () => (usePage().props.flash = [])\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0)\nif (hasErrors) {\n  setTimeout(() => {\n    usePage().props.flash = []\n  }, 3000)\n}\n</script>\n\n<template>\n  <transition name=\"slide-right\">\n    <div v-if=\"hasErrors\" class=\"validation-errors-user\" @click=\"close\">\n      <ul class=\"list-unstyled mb-0\">\n        <li\n          class=\"d-flex align-items-center gap-2 text-white\"\n          v-for=\"(error, key) in errors\"\n          :key=\"key\"\n        >\n          <img src=\"/assets/images/icon/warning-outline.svg\" alt=\"\" />\n          {{ error.replace(/[.,]/g, ' ') }}\n        </li>\n      </ul>\n    </div>\n  </transition>\n</template>\n","<script setup>\nimport { usePage } from '@inertiajs/vue3'\nimport { defineAsyncComponent, onMounted, watch } from 'vue'\nimport Modal from '@/Components/Admin/Modal.vue'\nimport { useThemeLoaderStore } from '@/Store/themeLoaderStore'\nimport FlashErrors from '@/Components/FlashErrors.vue'\nconst themeLoader = useThemeLoaderStore()\nconst setComponent = () => {\n  themeLoader.$patch({ theme: usePage().props.theme })\n  themeLoader.loadedComponents[themeLoader.theme] = {\n    header: defineAsyncComponent(() => import(`./Default/${themeLoader.theme}/Header.vue`)),\n    footer: defineAsyncComponent(() => import(`./Default/${themeLoader.theme}/Footer.vue`))\n  }\n}\nonMounted(() => setComponent())\n// only for demo\nwatch(\n  () => usePage().url,\n  () => {\n    if (route().current('home')) setComponent()\n  }\n)\nconst loadDynamicThemes = () => themeLoader.loadedComponents[themeLoader.theme]\n</script>\n\n<template>\n  <FlashErrors />\n  <div class=\"main-page-wrapper\">\n    <template v-if=\"themeLoader.theme\">\n      <component :is=\"loadDynamicThemes().header\" />\n    </template>\n    <slot />\n    <template v-if=\"themeLoader.theme\">\n      <component :is=\"loadDynamicThemes().footer\" />\n    </template>\n    <button class=\"scroll-top\">\n      <i class=\"bi bi-arrow-up-short\"></i>\n    </button>\n  </div>\n\n  <Modal />\n</template>\n","<script setup>\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport { Head, useForm } from '@inertiajs/vue3'\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\ndefineOptions({ layout: DefaultLayout })\n\nconst form = useForm({\n  password: ''\n})\n\nconst submit = () => {\n  form.post(route('password.confirm'), {\n    onFinish: () => form.reset()\n  })\n}\n</script>\n\n<template>\n  <Head title=\"Confirm Password\" />\n  <div\n    class=\"\"\n    :class=\"{ 'inner-banner-one': ($page.props.theme ?? 'Two') == 'One' }\"\n  ></div>\n\n  <section class=\"registration-section position-relative pt-100 lg-pt-80 pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"user-data-form\">\n        <div class=\"text-center\">\n          <h2>{{ trans('Confirm Password') }}</h2>\n          <p>\n            {{\n              trans(\n                'This is a secure area of the application. Please confirm your password before continuing.'\n              )\n            }}\n          </p>\n        </div>\n        <div class=\"form-wrapper m-auto\">\n          <form @submit.prevent=\"submit\">\n            <div class=\"mb-2\">\n              <div class=\"input-group-meta position-relative\">\n                <label>{{ trans('Password') }} *</label>\n                <input\n                  type=\"password\"\n                  v-model=\"form.password\"\n                  required\n                  autocomplete=\"new-password\"\n                  :placeholder=\"trans('Enter Password')\"\n                  class=\"pass_log_id\"\n                />\n                <span class=\"placeholder_icon\">\n                  <span class=\"passVicon\">\n                    <img src=\"/assets/images/icon/icon_60.svg\" alt=\"icon\" />\n                  </span>\n                </span>\n              </div>\n              <InputFieldError :message=\"form.errors.password\" />\n            </div>\n\n            <div class=\"mb-2\">\n              <SpinnerBtn\n                classes=\"btn-eleven fw-500 d-flex align-items-center justify-content-center\"\n                :processing=\"form.processing\"\n                btn-text=\"Confirm\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport { Head, useForm } from '@inertiajs/vue3'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport DefaultLayout from '@/Layouts/Default.vue'\ndefineOptions({ layout: DefaultLayout })\n\ndefineProps({\n  status: {\n    type: String\n  }\n})\n\nconst form = useForm({\n  email: ''\n})\n\nconst submit = () => {\n  form.post(route('password.email'))\n}\n</script>\n\n<template>\n  <Head title=\"Forgot Password\" />\n  <div\n    class=\"\"\n    :class=\"{ 'inner-banner-one': ($page.props.theme ?? 'Two') == 'One' }\"\n  ></div>\n  <section class=\"registration-section position-relative pt-100 lg-pt-80 pb-150 lg-pb-80\">\n    <div class=\"container mt-40\">\n      <div class=\"user-data-form\">\n        <div class=\"form-wrapper m-auto\">\n          <div class=\"text-secondary small mb-4\">\n            {{\n              trans(\n                'Forgot your password? No problem. Just let us know your email address and we will email you a password reset link that will allow you to choose a new one.'\n              )\n            }}\n          </div>\n\n          <div v-if=\"status\" class=\"small text-success mb-4\">\n            {{ status }}\n          </div>\n\n          <form @submit.prevent=\"submit\">\n            <div class=\"input-group-meta mb-4\">\n              <label for=\"email\">{{ trans('Email') }}</label>\n              <input\n                type=\"email\"\n                v-model=\"form.email\"\n                required\n                autofocus\n                autocomplete=\"email\"\n                :placeholder=\"trans('enter your email here')\"\n              />\n              <InputFieldError :message=\"form.errors.email\" />\n            </div>\n\n            <div class=\"mt-2\" v-if=\"!status\">\n              <SpinnerBtn\n                classes=\"btn-eleven fw-500 d-flex align-items-center justify-content-center\"\n                :processing=\"form.processing\"\n                btn-text=\"Email Password Reset Link\"\n              />\n            </div>\n          </form>\n\n          <p class=\"mt-10 text-center\">\n            {{ trans('Have an account?') }}\n            <Link :href=\"route('login')\" class=\"fw-500\">{{ trans('Sign In') }}</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { useForm } from '@inertiajs/vue3'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport trans from '@/Composables/transComposable'\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport { onMounted } from 'vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport FlashErrors from '@/Components/FlashErrors.vue'\n\ndefineOptions({ layout: DefaultLayout })\nconst props = defineProps(['seo', 'googleClient', 'facebookClient'])\n\nconst form = useForm({\n  email: '',\n  password: '',\n  remember: 0\n})\n\nconst submit = () => {\n  form.post(route('login'), {\n    onFinish: () => form.reset('password')\n  })\n}\n\nonMounted(() => {\n  $('.passVicon').on('click', function () {\n    $('.passVicon').toggleClass('eye-slash')\n    var input = $('.pass_log_id')\n    if (input.attr('type') === 'password') {\n      input.attr('type', 'text')\n    } else {\n      input.attr('type', 'password')\n    }\n  })\n})\n</script>\n\n<template>\n  <Seo />\n  <div\n    class=\"\"\n    :class=\"{ 'inner-banner-one': ($page.props.theme ?? 'Two') == 'One' }\"\n  ></div>\n  <section class=\"registration-section position-relative pt-100 lg-pt-80 pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"user-data-form\">\n        <div class=\"text-center\">\n          <h2>{{ trans('Hi, Welcome Back!') }}</h2>\n          <p>\n            {{ trans(\"Still don't have an account?\") }}\n            <Link href=\"/register\">{{ trans('Sign up') }}</Link>\n          </p>\n        </div>\n\n        <div class=\"m-auto form-wrapper\">\n          <form @submit.prevent=\"submit\">\n            <div class=\"mb-2\">\n              <div class=\"mb-3 input-group-meta position-relative\">\n                <label>{{ trans('Email') }} *</label>\n                <input\n                  v-model=\"form.email\"\n                  type=\"email\"\n                  :placeholder=\"trans('Enter email address')\"\n                />\n                <InputFieldError :message=\"form.errors.email\" />\n              </div>\n            </div>\n            <div class=\"mb-2\">\n              <div class=\"input-group-meta position-relative\">\n                <label>{{ trans('Password') }} *</label>\n                <input\n                  type=\"password\"\n                  v-model=\"form.password\"\n                  :placeholder=\"trans('Enter Password')\"\n                  class=\"pass_log_id\"\n                />\n                <span class=\"placeholder_icon\">\n                  <span class=\"passVicon\">\n                    <img src=\"/assets/images/icon/icon_60.svg\" alt=\"icon\" />\n                  </span>\n                </span>\n              </div>\n              <InputFieldError :message=\"form.errors.password\" />\n            </div>\n            <div class=\"my-4\">\n              <div class=\"agreement-checkbox d-flex justify-content-between align-items-center\">\n                <div>\n                  <input type=\"checkbox\" name=\"remember\" id=\"remember\" />\n                  <label for=\"remember\">{{ trans('Keep me logged in') }}</label>\n                </div>\n                <Link :href=\"route('password.request')\">{{ trans('Forget Password?') }}</Link>\n              </div>\n              <!-- /.agreement-checkbox -->\n            </div>\n            <div class=\"mb-2\">\n              <SpinnerBtn\n                classes=\"btn-eleven fw-500 d-flex align-items-center justify-content-center\"\n                :processing=\"form.processing\"\n                btn-text=\"Login\"\n              />\n            </div>\n            <div class=\"row\">\n              <div class=\"col-sm-6\">\n                <a\n                  v-if=\"googleClient\"\n                  href=\"/auth/google\"\n                  class=\"mt-10 social-use-btn d-flex align-items-center justify-content-center tran3s w-100\"\n                >\n                  <img v-lazy=\"'/assets/images/icon/google.png'\" alt=\"image\" />\n                  <span class=\"ps-2\">{{ trans('Signup with Google') }}</span>\n                </a>\n              </div>\n              <div class=\"col-sm-6\">\n                <a\n                  href=\"/auth/facebook\"\n                  v-if=\"facebookClient\"\n                  class=\"mt-10 social-use-btn d-flex align-items-center justify-content-center tran3s w-100\"\n                >\n                  <img v-lazy=\"'/assets/images/icon/facebook.png'\" alt=\"image\" />\n                  <span class=\"ps-2\">{{ trans('Signup with Facebook') }}</span>\n                </a>\n              </div>\n            </div>\n          </form>\n        </div>\n        <!-- /.form-wrapper -->\n        <p class=\"mt-10 text-center\">\n          {{ trans(\"Don't have an account?\") }}\n          <Link :href=\"route('register')\" class=\"fw-500\">{{ trans('Sign Up') }}</Link>\n        </p>\n      </div>\n      <!-- /.user-data-form -->\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport { onMounted } from 'vue'\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\ndefineProps(['seo', 'googleClient', 'facebookClient'])\n\ndefineOptions({ layout: DefaultLayout })\nconst form = useForm({\n  plan_id: null,\n  role: 'user',\n  name: '',\n  email: '',\n  password: '',\n  terms: false\n})\n\nonMounted(() => {\n  const searchParams = new URLSearchParams(window.location.search)\n  if (searchParams.has('id')) {\n    form.plan_id = searchParams.get('id')\n    form.role = 'employer'\n  }\n\n  $('.passVicon').on('click', function () {\n    $('.passVicon').toggleClass('eye-slash')\n    var input = $('.pass_log_id')\n    if (input.attr('type') === 'password') {\n      input.attr('type', 'text')\n    } else {\n      input.attr('type', 'password')\n    }\n  })\n})\nconst setRole = (role) => {\n  form.role = role\n}\n\nconst submit = () => {\n  form.post(route('register'), {\n    onFinish: () => form.reset('password')\n  })\n}\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <div\n    class=\"\"\n    :class=\"{ 'inner-banner-one': ($page.props.theme ?? 'Two') == 'One' }\"\n  ></div>\n\n  <section class=\"registration-section position-relative pt-100 lg-pt-80 pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"user-data-form\">\n        <div class=\"text-center\">\n          <h2>{{ trans('Create Account') }}</h2>\n        </div>\n        <div class=\"m-auto form-wrapper\">\n          <ul v-if=\"!form.plan_id\" class=\"border-0 nav nav-tabs w-100 mt-30\" role=\"tablist\">\n            <li class=\"nav-item\">\n              <button\n                @click=\"setRole('user')\"\n                :class=\"{ active: form.role == 'user' }\"\n                class=\"nav-link\"\n              >\n                {{ trans('Candidates') }}\n              </button>\n            </li>\n            <li class=\"nav-item\">\n              <button\n                @click=\"setRole('employer')\"\n                :class=\"{ active: form.role == 'employer' }\"\n                class=\"nav-link\"\n              >\n                {{ trans('Employer') }}\n              </button>\n            </li>\n          </ul>\n          <div class=\"mt-40 tab-content\">\n            <form @submit.prevent=\"submit\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <div class=\"input-group-meta position-relative mb-25\">\n                    <label>{{ trans('Full Name') }} *</label>\n                    <input v-model=\"form.name\" type=\"text\" placeholder=\"Enter full name\" />\n                    <InputFieldError :message=\"form.errors.name\" />\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <div class=\"input-group-meta position-relative mb-25\">\n                    <label> {{ trans('Email') }} *</label>\n                    <input v-model=\"form.email\" type=\"email\" placeholder=\"Enter email address\" />\n                    <InputFieldError :message=\"form.errors.email\" />\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <div class=\"mb-20 input-group-meta position-relative\">\n                    <label> {{ trans('Password') }} *</label>\n                    <input\n                      v-model=\"form.password\"\n                      type=\"password\"\n                      placeholder=\"Enter 8-16 digit password\"\n                      class=\"pass_log_id\"\n                    />\n                    <span class=\"placeholder_icon\">\n                      <span class=\"passVicon\">\n                        <img src=\"/assets/images/icon/icon_60.svg\" alt=\"icon\" />\n                      </span>\n                    </span>\n                    <InputFieldError :message=\"form.errors.password\" />\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <div class=\"agreement-checkbox d-flex justify-content-between align-items-center\">\n                    <div>\n                      <input v-model=\"form.terms\" type=\"checkbox\" id=\"remember\" />\n                      <label for=\"remember\">\n                        {{ trans('By hitting the \"Register\" button, you agree to the') }}\n                        <Link href=\"/page/terms-and-conditions\">{{\n                          trans('Terms conditions')\n                        }}</Link>\n                        &amp;\n                        <Link href=\"/page/privacy-policy\">{{ trans('Privacy policy') }}</Link>\n                      </label>\n                    </div>\n                  </div>\n                  <InputFieldError :message=\"form.errors.terms\" />\n                  <!-- /.agreement-checkbox -->\n                </div>\n                <div class=\"mt-3 col-12\">\n                  <SpinnerBtn\n                    classes=\"btn-eleven fw-500 d-flex align-items-center justify-content-center\"\n                    :processing=\"form.processing\"\n                    btn-text=\"Register\"\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div class=\"mb-10 d-flex align-items-center mt-30\">\n            <div class=\"line\"></div>\n            <span class=\"pe-3 ps-3\">{{ trans('OR') }}</span>\n            <div class=\"line\"></div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm-6\">\n              <a\n                v-if=\"googleClient\"\n                :href=\"`/auth/google?r=${form.role}`\"\n                class=\"mt-10 social-use-btn d-flex align-items-center justify-content-center tran3s w-100\"\n              >\n                <img v-lazy=\"'/assets/images/icon/google.png'\" alt=\"icon\" />\n                <span class=\"ps-2\">{{ trans('Signup with Google') }}</span>\n              </a>\n            </div>\n            <div class=\"col-sm-6\">\n              <a\n                :href=\"`/auth/facebook?r=${form.role}`\"\n                v-if=\"facebookClient\"\n                class=\"mt-10 social-use-btn d-flex align-items-center justify-content-center tran3s w-100\"\n              >\n                <img v-lazy=\"'/assets/images/icon/facebook.png'\" alt=\"icon\" />\n                <span class=\"ps-2\">{{ trans('Signup with Facebook') }}</span>\n              </a>\n            </div>\n          </div>\n\n          <p class=\"mt-10 text-center\">\n            {{ trans('have an account?') }}\n            <Link :href=\"route('login')\" class=\"fw-500\">{{ trans('Sign In') }}</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport { Head, useForm } from '@inertiajs/vue3'\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\ndefineOptions({ layout: DefaultLayout })\n\nconst props = defineProps({\n  email: {\n    type: String,\n    required: true\n  },\n  token: {\n    type: String,\n    required: true\n  }\n})\n\nconst form = useForm({\n  token: props.token,\n  email: props.email,\n  password: '',\n  password_confirmation: ''\n})\n\nconst submit = () => {\n  form.post(route('password.store'), {\n    onFinish: () => form.reset('password', 'password_confirmation')\n  })\n}\n</script>\n\n<template>\n  <Head title=\"Reset Password\" />\n\n  <div\n    class=\"\"\n    :class=\"{ 'inner-banner-one': ($page.props.theme ?? 'Two') == 'One' }\"\n  ></div>\n\n  <section class=\"registration-section position-relative pt-100 lg-pt-80 pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"user-data-form\">\n        <div class=\"text-center\">\n          <h2>{{ trans('Reset Password') }}</h2>\n        </div>\n        <div class=\"form-wrapper m-auto\">\n          <form @submit.prevent=\"submit\">\n            <div class=\"mb-2\">\n              <div class=\"input-group-meta position-relative mb-3\">\n                <label>{{ trans('Email') }} *</label>\n                <input\n                  v-model=\"form.email\"\n                  required\n                  autofocus\n                  type=\"email\"\n                  :placeholder=\"trans('Enter email address')\"\n                />\n                <InputFieldError :message=\"form.errors.email\" />\n              </div>\n            </div>\n            <div class=\"mb-2\">\n              <div class=\"input-group-meta position-relative\">\n                <label>{{ trans('Password') }} *</label>\n                <input\n                  type=\"password\"\n                  v-model=\"form.password\"\n                  required\n                  autocomplete=\"new-password\"\n                  :placeholder=\"trans('Enter Password')\"\n                  class=\"pass_log_id\"\n                />\n                <span class=\"placeholder_icon\">\n                  <span class=\"passVicon\">\n                    <img src=\"/assets/images/icon/icon_60.svg\" alt=\"icon\" />\n                  </span>\n                </span>\n              </div>\n              <InputFieldError :message=\"form.errors.password\" />\n            </div>\n            <div class=\"mb-2\">\n              <div class=\"input-group-meta position-relative\">\n                <label>{{ trans('Confirm Password') }} *</label>\n                <input\n                  type=\"password\"\n                  v-model=\"form.password_confirmation\"\n                  required\n                  autocomplete=\"new-password\"\n                  :placeholder=\"trans('Confirm Password')\"\n                  class=\"pass_log_id\"\n                />\n                <span class=\"placeholder_icon\">\n                  <span class=\"passVicon\">\n                    <img src=\"/assets/images/icon/icon_60.svg\" alt=\"icon\" />\n                  </span>\n                </span>\n              </div>\n              <InputFieldError :message=\"form.errors.password_confirmation\" />\n            </div>\n\n            <div class=\"mb-2\">\n              <SpinnerBtn\n                classes=\"btn-eleven fw-500 d-flex align-items-center justify-content-center\"\n                :processing=\"form.processing\"\n                btn-text=\"Reset Password\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nconst props = defineProps({\n    classes: String,\n    size: {\n        type: Number,\n        default: 30\n    }\n})\n</script>\n\n<template>\n    <span :class=\"classes\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"shape-rendering: auto;\"\n            :width=\"props.size + 'px'\" :height=\"props.size + 'px'\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <circle cx=\"50\" cy=\"50\" r=\"32\" stroke-width=\"8\" stroke=\"white\"\n                stroke-dasharray=\"50.26548245743669 50.26548245743669\" fill=\"none\" stroke-linecap=\"round\">\n                <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" dur=\"1s\" keyTimes=\"0;1\"\n                    values=\"0 50 50;360 50 50\"></animateTransform>\n            </circle>\n        </svg>\n    </span>\n</template>","<script setup>\nimport { computed } from 'vue'\nimport { Head, useForm } from '@inertiajs/vue3'\n\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport Loading from '@/Components/Loading.vue'\ndefineOptions({ layout: DefaultLayout })\n\nconst props = defineProps({\n  status: {\n    type: String\n  }\n})\n\nconst form = useForm({})\n\nconst submit = () => {\n  form.post(route('verification.send'))\n}\nconst verificationLinkSent = computed(() => props.status === 'verification-link-sent')\n</script>\n\n<template>\n  <Head title=\"Email Verification\" />\n\n  <div\n    class=\"\"\n    :class=\"{ 'inner-banner-one': ($page.props.theme ?? 'Two') == 'One' }\"\n  ></div>\n\n  <section class=\"registration-section position-relative pt-100 lg-pt-80 pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"user-data-form\">\n        <div class=\"text-center\">\n          <h2>{{ trans('Email verification') }}</h2>\n          <p>\n            {{\n              trans(\n                `Thanks for signing up! Before getting started, could you verify your email address by clicking\n                on the link we just emailed to you? If you didn't receive the email, we will gladly send you\n                another.`\n              )\n            }}\n          </p>\n        </div>\n        <div class=\"text-success mb-4 text-center\" v-if=\"verificationLinkSent\">\n          {{\n            trans(`A new verification link has been sent to the email address you provided during\n                registration.`)\n          }}\n        </div>\n        <div class=\"form-wrapper m-auto\">\n          <form @submit.prevent=\"submit\" v-if=\"!verificationLinkSent\">\n            <div class=\"mb-2\">\n              <button\n                type=\"submit\"\n                class=\"btn-eleven fw-500 tran3s d-flex justify-content-center align-items-center\"\n              >\n                <Loading v-if=\"form.processing\" />\n                <span v-if=\"!form.processing\">{{ trans('Resend Verification Email') }}</span>\n              </button>\n            </div>\n          </form>\n          <div class=\"d-flex justify-content-center mt-4\">\n            <Link class=\"fw-500 text-danger\" :href=\"route('logout')\" method=\"post\" as=\"button\">\n              {{ trans('Logout') }}\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<template>\n  <li>\n    <Link :href=\"href\" class=\"d-flex w-100 align-items-center\" :class=\"{ active: active }\">\n    <img :src=\"`/assets/dashboard/images/icon/${iconLink + iconExt}`\" alt=\"icon\" class=\"lazy-img\" />\n    <span>{{ trans(text) }}</span>\n    </Link>\n  </li>\n</template>\n\n<script setup>\nimport { computed } from \"vue\"\n\nconst props = defineProps({\n  href: String,\n  active: {\n    type: Boolean,\n    default: false\n  },\n  iconName: String,\n  iconExt: {\n    type: String,\n    default: '.svg'\n  },\n  text: String\n})\n\nconst iconLink = computed(() => {\n  return props.active ? `${props.iconName}_active` : `${props.iconName}`\n})\n</script>\n","<script setup>\nimport sharedComposable from '@/Composables/sharedComposable'\nimport RouteLink from './RouteLink.vue'\nimport { computed } from 'vue'\nimport { router } from '@inertiajs/vue3'\nimport notify from '@/Plugins/Admin/notify'\nimport trans from '@/Composables/transComposable'\nconst { authUser, logout, currentRoute, currentRouteGroup } = sharedComposable()\n\nconst deleteUser = () => {\n  router.delete(route('employer.accounts.destroy'), {\n    onSuccess: () => {\n      notify.success(trans('Account has been deleted successfully!'))\n    }\n  })\n}\n\nconst candidateProfileCompleted = computed(() => {\n  let user = authUser.value\n\n  let accountOpening = 10\n  let companyInformation = user.meta?.company?.name ? 30 : 0\n  let emailVerification = user.email_verified_at ? 20 : 0\n  let kycVerification = user.kyc_verified_at ? 30 : 0\n  let avatar = user.avatar?.length ? 10 : 0\n\n  return accountOpening + companyInformation + emailVerification + kycVerification + avatar\n})\n</script>\n\n<template>\n  <aside class=\"dash-aside-navbar\">\n    <div class=\"position-relative\">\n      <div class=\"logo text-md-center d-md-block d-flex align-items-center justify-content-between\">\n        <Link href=\"/\">\n          <img src=\"/assets/dashboard/images/logo_01.png\" alt=\"\" />\n        </Link>\n        <button class=\"close-btn d-block d-md-none\">\n          <i class=\"bi bi-x-lg\"></i>\n        </button>\n      </div>\n      <div class=\"user-data\">\n        <div class=\"user-avatar online position-relative rounded-circle\">\n          <img\n            v-lazy=\"\n              authUser.avatar == null\n                ? `https://ui-avatars.com/api/?name=${authUser.name}`\n                : `${authUser.avatar}`\n            \"\n            alt=\"\"\n            class=\"lazy-img\"\n          />\n        </div>\n\n        <!-- /.user-avatar -->\n        <div class=\"user-name-data\">\n          <button\n            class=\"user-name dropdown-toggle\"\n            type=\"button\"\n            id=\"profile-dropdown\"\n            data-bs-toggle=\"dropdown\"\n            data-bs-auto-close=\"outside\"\n            aria-expanded=\"false\"\n          >\n            {{ authUser.name }}\n          </button>\n          <ul class=\"dropdown-menu\" aria-labelledby=\"profile-dropdown\">\n            <li>\n              <Link\n                class=\"dropdown-item d-flex align-items-center\"\n                :href=\"`/companies/${authUser.username}`\"\n              >\n                <img src=\"/assets/dashboard/images/icon/icon_23.svg\" alt=\"icon\" class=\"lazy-img\" />\n                <span class=\"ms-2 ps-1\">{{ trans('Profile') }}</span>\n              </Link>\n            </li>\n\n            <li>\n              <Link\n                :href=\"route('employer.account-settings')\"\n                class=\"dropdown-item d-flex align-items-center\"\n                ><img\n                  src=\"/assets/dashboard/images/icon/icon_24.svg\"\n                  alt=\"icon\"\n                  class=\"lazy-img\"\n                /><span class=\"ms-2 ps-1\">{{ trans('Account Settings') }}</span>\n              </Link>\n            </li>\n            <li>\n              <Link\n                class=\"dropdown-item d-flex align-items-center\"\n                :href=\"route('employer.support.index')\"\n                ><img\n                  src=\"/assets/dashboard/images/icon/icon_41.svg\"\n                  alt=\"img\"\n                  class=\"lazy-img\"\n                /><span class=\"ms-2 ps-1\">{{ trans('Supports') }}</span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <!-- /.user-data -->\n      <nav class=\"dasboard-main-nav\">\n        <ul class=\"style-none\">\n          <RouteLink\n            :href=\"route('employer.dashboard')\"\n            text=\"Dashboard\"\n            icon-name=\"icon_1\"\n            :active=\"currentRoute('Employer/Dashboard')\"\n          />\n\n          <RouteLink\n            :href=\"route('employer.profile.index')\"\n            text=\"My Profile\"\n            icon-name=\"icon_2\"\n            :active=\"currentRoute('Employer/Profile')\"\n          />\n\n          <RouteLink\n            :href=\"route('employer.jobs.index')\"\n            text=\"My Jobs\"\n            icon-name=\"icon_3\"\n            :active=\"currentRouteGroup('Employer/Job') && !currentRoute('Employer/Job/Create')\"\n          />\n\n          <RouteLink\n            :href=\"route('employer.message.index')\"\n            text=\"Messages\"\n            icon-name=\"icon_4\"\n            :active=\"currentRouteGroup('Employer/Message')\"\n          />\n\n          <RouteLink\n            :href=\"route('employer.jobs.create')\"\n            text=\"Submit Job\"\n            icon-name=\"icon_39\"\n            :active=\"currentRoute('Employer/Job/Create')\"\n          />\n\n          <RouteLink\n            :href=\"route('employer.saved-candidates')\"\n            text=\"Saved Candidate\"\n            icon-name=\"icon_6\"\n            :active=\"currentRoute('Employer/SavedCandidate')\"\n          />\n\n          <RouteLink\n            :href=\"route('employer.job-applicants')\"\n            text=\"Job Applicants\"\n            icon-name=\"icon_5\"\n            :active=\"currentRoute('Employer/Applicants')\"\n          />\n\n          <RouteLink\n            :href=\"route('employer.job-reviews')\"\n            text=\"Reviews\"\n            icon-name=\"icon_3\"\n            :active=\"currentRoute('Employer/Reviews')\"\n          />\n\n          <RouteLink\n            :href=\"route('employer.membership.index')\"\n            text=\"Membership\"\n            icon-name=\"icon_40\"\n            :active=\"currentRouteGroup('Employer/Membership')\"\n          />\n\n          <RouteLink\n            :href=\"route('employer.account-settings')\"\n            text=\"Account Settings\"\n            icon-name=\"icon_7\"\n            :active=\"currentRoute('Employer/Settings')\"\n          />\n          <RouteLink\n            :href=\"route('employer.ai-template.index')\"\n            text=\"Ai Templates\"\n            icon-name=\"icon_43\"\n            :active=\"currentRouteGroup('Employer/AiTemplate')\"\n          />\n          <RouteLink\n            :href=\"route('employer.ai-generated-history.index')\"\n            text=\"Ai History\"\n            icon-name=\"icon_44\"\n            :active=\"currentRoute('Employer/GeneratedHistory/Index')\"\n          />\n          <RouteLink\n            :href=\"route('employer.credits.index')\"\n            text=\"Credits\"\n            icon-name=\"icon_42\"\n            :active=\"currentRoute('Employer/Credit')\"\n          />\n\n          <RouteLink\n            :href=\"route('employer.support.index')\"\n            text=\"Supports\"\n            icon-name=\"icon_41\"\n            :active=\"currentRouteGroup('Employer/Support')\"\n          />\n\n          <RouteLink\n            v-if=\"!authUser.kyc_verified_at\"\n            :href=\"route('employer.kyc.index')\"\n            text=\"KYC Verification\"\n            icon-name=\"kyc\"\n            icon-ext=\".png\"\n            :active=\"currentRouteGroup('Employer/KYC')\"\n          />\n\n          <li>\n            <a\n              href=\"#\"\n              class=\"d-flex w-100 align-items-center\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#deleteModal\"\n            >\n              <img src=\"/assets/dashboard/images/icon/icon_8.svg\" alt=\"\" class=\"lazy-img\" />\n              <span>{{ trans('Delete Account') }}</span>\n            </a>\n          </li>\n        </ul>\n      </nav>\n      <!-- /.dasboard-main-nav -->\n      <div class=\"profile-complete-status\">\n        <div class=\"progress-value fw-500\">{{ candidateProfileCompleted }}%</div>\n        <div class=\"progress-line position-relative\">\n          <div class=\"inner-line\" :style=\"{ width: `${candidateProfileCompleted}%` }\"></div>\n        </div>\n        <p>{{ trans('Profile Complete') }}</p>\n      </div>\n      <!-- /.profile-complete-status -->\n\n      <button @click=\"logout\" class=\"d-flex w-100 align-items-center logout-btn\">\n        <img src=\"/assets/dashboard/images/icon/icon_9.svg\" alt=\"\" class=\"lazy-img\" />\n        <span>{{ trans('Logout') }}</span>\n      </button>\n    </div>\n  </aside>\n\n  <!-- Modal -->\n  <div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-fullscreen modal-dialog-centered\">\n      <div class=\"container\">\n        <div class=\"remove-account-popup modal-content text-center\">\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n          <img src=\"/assets/dashboard/images/icon/icon_22.svg\" alt=\"\" class=\"lazy-img m-auto\" />\n          <h2>{{ trans('Are you sure?') }}</h2>\n          <p>{{ trans('Are you sure to delete your account? All data will be lost.') }}</p>\n          <div class=\"button-group d-inline-flex justify-content-center align-items-center pt-15\">\n            <a href=\"#\" @click=\"deleteUser()\" class=\"confirm-btn fw-500 tran3s me-3\">{{\n              trans('Yes')\n            }}</a>\n            <button\n              type=\"button\"\n              class=\"btn-close fw-500 ms-3\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              {{ trans('Cancel') }}\n            </button>\n          </div>\n        </div>\n        <!-- /.remove-account-popup -->\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport sharedComposable from '@/Composables/sharedComposable'\nimport axios from 'axios'\nimport { onMounted, ref, computed } from 'vue'\nimport { router, usePage } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nconst { currentRouteGroup, currentRoute } = sharedComposable()\nconst modal = ref({})\n\n// notification\nconst notifications = ref(usePage().props.notifications ?? [])\nconst unreadNotifications = computed(() => {\n  return notifications.value?.filter((item) => item.seen == 0).length ?? 0\n})\n\nconst maskAsRead = (item) => {\n  axios.post(route('employer.notifications.read', item.id)).then((res) => {\n    item.seen = 1\n  })\n}\n\nonMounted(() => {\n  var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\n  var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n    return new bootstrap.Tooltip(tooltipTriggerEl)\n  })\n  modal.value = new bootstrap.Modal(document.getElementById('menuSearchModal'))\n})\n\nconst menuSearchKeyword = ref('')\nconst menus = [\n  {\n    icon: '/assets/dashboard/images/icon/icon_1.svg',\n    title: trans('Dashboard'),\n    link: route('employer.dashboard')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_2.svg',\n    title: trans('My Profile'),\n    link: route('employer.profile.index')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_3.svg',\n    title: trans('My Jobs'),\n    link: route('employer.jobs.index')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_4.svg',\n    title: trans('Messages'),\n    link: route('employer.message.index')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_39.svg',\n    title: trans('Submit Job'),\n    link: route('employer.jobs.create')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_6.svg',\n    title: trans('Saved Candidate'),\n    link: route('employer.saved-candidates')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_5.svg',\n    title: trans('Job Applications'),\n    link: '/employer/job-applicants'\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_3.svg',\n    title: trans('Reviews'),\n    link: '/employer/job-reviews'\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_40.svg',\n    title: trans('Membership'),\n    link: route('employer.membership.index')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_7.svg',\n    title: trans('Account Settings'),\n    link: route('employer.account-settings')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_43.svg',\n    title: trans('Ai Templates'),\n    link: route('employer.ai-template.index')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_42.svg',\n    title: trans('Credits'),\n    link: route('employer.credits.index')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_41.svg',\n    title: trans('Supports'),\n    link: route('employer.support.index')\n  }\n]\n\nconst filteredMenus = computed(() => {\n  return menus.filter((item) =>\n    item.title?.toLowerCase().includes(menuSearchKeyword.value.toLowerCase())\n  )\n})\n\nconst goTo = (link) => {\n  menuSearchKeyword.value = ''\n  modal.value.hide()\n  router.get(link)\n}\n</script>\n\n<template>\n  <header class=\"dashboard-header\">\n    <div class=\"d-flex align-items-center justify-content-end\">\n      <button class=\"dash-mobile-nav-toggler d-block d-md-none me-auto\">\n        <span></span>\n      </button>\n      <div class=\"search-form\">\n        <input type=\"text\" placeholder=\"Search here..\" @click=\"modal.show()\" />\n        <button @click=\"modal.show()\">\n          <img src=\"/assets/dashboard/images/icon/icon_10.svg\" alt=\"icon\" class=\"lazy-img m-auto\" />\n        </button>\n      </div>\n      <div class=\"profile-notification ms-md-5 me-4 ms-2\">\n        <button\n          class=\"noti-btn dropdown-toggle\"\n          type=\"button\"\n          id=\"notification-dropdown\"\n          data-bs-toggle=\"dropdown\"\n          data-bs-auto-close=\"outside\"\n          aria-expanded=\"false\"\n        >\n          <img v-lazy=\"'/assets/dashboard/images/icon/icon_11.svg'\" alt=\"\" class=\"lazy-img\" />\n          <div v-if=\"unreadNotifications\" class=\"badge-pill\"></div>\n        </button>\n        <ul class=\"dropdown-menu w-100\" aria-labelledby=\"notification-dropdown\">\n          <li>\n            <h4>{{ trans('Notification') }}</h4>\n            <ul class=\"style-none notify-list\">\n              <li\n                v-for=\"(item, index) in notifications\"\n                :key=\"index\"\n                @click=\"maskAsRead(item)\"\n                class=\"d-flex align-items-center\"\n                :class=\"{ unread: !item.seen }\"\n              >\n                <a target=\"_blank\" :href=\"item.url ? item.url : '#'\" class=\"flex-fill ps-2\">\n                  <h6>{{ item.title }}</h6>\n                  <small data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" :title=\"item.comment\">{{\n                    item.comment_short\n                  }}</small>\n                  <br />\n                  <span class=\"time\">{{ item.created_at_human_date }}</span>\n                </a>\n              </li>\n            </ul>\n            <ul v-if=\"notifications.length < 1\" class=\"style-none notify-list\">\n              <li class=\"d-flex align-items-center\">\n                <h6>{{ trans('0 notifications') }}</h6>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n      <div>\n        <Link\n          v-if=\"currentRouteGroup('Employer/Support')\"\n          :href=\"route('employer.support.create')\"\n          class=\"job-post-btn tran3s\"\n        >\n          {{ trans('Create Ticket') }}\n        </Link>\n        <Link\n          v-else-if=\"currentRouteGroup('Employer/AiTemplate/Index')\"\n          :href=\"route('employer.ai-generated-history.index')\"\n          class=\"job-post-btn tran3s\"\n        >\n          {{ trans('Ai History') }}\n        </Link>\n        <button\n          v-else-if=\"currentRoute('Employer/Credit') || currentRoute('Employer/AiTemplate/Show')\"\n          class=\"job-post-btn tran3s\"\n          type=\"button\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#creditModal\"\n        >\n          {{ trans('Buy Credit') }}\n        </button>\n        <Link v-else :href=\"route('employer.jobs.create')\" class=\"job-post-btn tran3s\">\n          {{ trans('Post a Job') }}\n        </Link>\n      </div>\n    </div>\n  </header>\n\n  <div\n    class=\"modal fade\"\n    id=\"menuSearchModal\"\n    tabindex=\"-1\"\n    data-bs-keyboard=\"false\"\n    role=\"dialog\"\n    aria-labelledby=\"menuSearchModalTitle\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"menuSearchModalTitle\">{{ trans('Search Menu') }}</h5>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            id=\"menuSearchModalClsBtn\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <div class=\"modal-body p-4\">\n          <div class=\"mb-3\">\n            <input\n              v-model=\"menuSearchKeyword\"\n              type=\"text\"\n              class=\"form-control py-3\"\n              id=\"searchInput\"\n              placeholder=\"Search here\"\n              autofocus\n            />\n          </div>\n\n          <ul class=\"list-group\" v-if=\"filteredMenus.length\">\n            <li\n              role=\"button\"\n              class=\"d-flex mb-2 gap-2 rounded border p-3\"\n              v-for=\"(menu, index) in filteredMenus\"\n              :key=\"index\"\n              @click=\"goTo(menu.link)\"\n            >\n              <img :src=\"menu.icon\" alt=\"\" /> {{ menu.title }}\n            </li>\n          </ul>\n          <div class=\"alert alert-info mb-1 text-center\" role=\"alert\" v-else>\n            <strong>{{ trans('No result found') }}</strong>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, router } from '@inertiajs/vue3'\n\nimport sharedComposable from '@/Composables/sharedComposable'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport trans from '@/Composables/transComposable'\nimport notify from '@/Plugins/Admin/notify'\nimport { computed } from 'vue'\n\ndefineOptions({ layout: EmployerLayout })\nconst props = defineProps(['templates', 'credits', 'bookmarked'])\nconst { textExcerpt } = sharedComposable()\nconst stats = computed(() => {\n  return [\n    {\n      value: props.templates.length,\n      title: trans('AI Templates'),\n      iconSrc: '/assets/dashboard/images/icon/icon_43.svg'\n    },\n    {\n      value: props.bookmarked?.length ?? 0,\n      title: trans('Bookmarked'),\n      iconSrc: '/assets/dashboard/images/icon/icon_13.svg'\n    },\n    {\n      value: props.credits,\n      title: trans('Credits'),\n      iconSrc: '/assets/dashboard/images/icon/money.png'\n    }\n  ]\n})\n\nconst bookmark = (id, bookmarked) => {\n  router.post(\n    route('employer.ai-template.bookmark'),\n    {\n      ai_template_id: id\n    },\n    {\n      onSuccess: () => {\n        if (bookmarked == 1) {\n          notify.danger('Bookmarked Removed Successfully')\n        } else {\n          notify.success('Bookmarked Successfully')\n        }\n      }\n    }\n  )\n}\n</script>\n\n<template>\n  <Head title=\"Ai Templates | Employer Panel\" />\n\n  <h2 class=\"main-title\">{{ trans('Ai Templates') }}</h2>\n\n  <div>\n    <div class=\"row\">\n      <div class=\"col-lg-4 col-6\" v-for=\"stat in stats\" :key=\"stat\">\n        <div class=\"dash-card-one border-30 position-relative mb-15 bg-white\">\n          <div class=\"d-sm-flex align-items-center justify-content-between\">\n            <div\n              class=\"icon rounded-circle d-flex align-items-center justify-content-center order-sm-1\"\n            >\n              <img v-lazy=\"stat.iconSrc\" alt=\"lazy\" class=\"lazy-img\" />\n            </div>\n            <div class=\"order-sm-0\">\n              <div class=\"value fw-500\">{{ stat.value }}</div>\n              <span>{{ stat.title }}</span>\n            </div>\n          </div>\n        </div>\n        <!-- /.dash-card-one -->\n      </div>\n    </div>\n\n    <div class=\"row mt-30\">\n      <div class=\"col-lg-4 mb-30\" v-for=\"temp in templates\" :key=\"temp.id\">\n        <div class=\"job-list-three d-flex h-100 w-100\">\n          <div class=\"main-wrapper h-100 w-100\">\n            <button\n              @click=\"bookmark(temp.id, temp.isBookmarked)\"\n              type=\"button\"\n              class=\"save-btn rounded-circle tran3s text-center\"\n              :class=\"{ 'bg-success': temp.isBookmarked == 1 }\"\n              title=\"Save Job\"\n            >\n              <i class=\"bi bi-bookmark-dash\"></i>\n            </button>\n            <div class=\"list-header d-flex align-items-center\">\n              <Link :href=\"route('employer.ai-template.show', temp.uuid)\" class=\"logo\"\n                ><img\n                  v-lazy=\"\n                    temp.icon == null\n                      ? `https://ui-avatars.com/api/?name=${temp.title}`\n                      : `${temp.icon}`\n                  \"\n                  alt=\"avatar rounded-circle\"\n                  class=\"lazy-img m-auto\"\n              /></Link>\n              <div class=\"info-wrapper\">\n                <Link\n                  :href=\"route('employer.ai-template.show', temp.uuid)\"\n                  class=\"title fw-500 tran3s\"\n                >\n                  {{ temp.title }}\n                </Link>\n                <ul class=\"style-none d-flex info-data flex-wrap\">\n                  <li>{{ temp.ai_model }}</li>\n                </ul>\n              </div>\n            </div>\n            <!-- ./.list-header -->\n            <div v-html=\"textExcerpt(temp.description, 100)\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"templates.length < 1\" class=\"fw-bold card-box bg-white text-center\">\n      {{ trans('No Template found') }}\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, router, useForm } from '@inertiajs/vue3'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport Multiselect from '@vueform/multiselect'\nimport ckeEditor from '@/Plugins/ckeEditor'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport axios from 'axios'\nimport notify from '@/Plugins/Admin/notify'\nimport { ref, computed } from 'vue'\n\ndefineOptions({ layout: EmployerLayout })\nconst props = defineProps(['template', 'credits', 'credit_fee', 'gateways', 'languages'])\nconst { cke, ClassicEditor } = ckeEditor()\nconst { textExcerpt, pickBy, formatCurrency, authUser, copyToClipboard } = sharedComposable()\nconst activeGateway = ref(props.gateways[0]?.id || 0)\nconst credits = ref(null)\nconst conversionRate = ref(props.credit_fee)\nconst convertedAmount = computed(() => {\n  return credits.value / conversionRate.value\n})\n\nconst generatedResponse = ref('')\nconst documentName = ref('')\nconst fieldErrors = ref({})\nconst errors = ref({})\nconst hasError = ref(false)\nconst isProcessing = ref(false)\nconst manualPayment = ref({\n  image: null,\n  comment: ''\n})\nconst form = useForm({\n  prompt: '',\n  language: '',\n  tone: '',\n  length: 200,\n  result: 1,\n  creativity: '',\n  template: '',\n  model: props.template.ai_model,\n  template_id: props.template.id,\n  fields: props.template.fields\n})\nconst findGateway = computed(() => {\n  return props.gateways.find((gateway) => gateway.id === activeGateway.value)\n})\nconst tones = ['Professional', 'Funny', 'Casual', 'Excited', 'Bold', 'Dramatic']\nconst creativityLevels = [\n  {\n    label: 'Optimal',\n    value: 0.5\n  },\n  {\n    label: 'Low',\n    value: 0.8\n  },\n  {\n    label: 'Medium',\n    value: 0.9\n  },\n  {\n    label: 'High',\n    value: 1\n  }\n]\nconst transformPrompt = () => {\n  const fields = []\n  form.fields.forEach((element) => {\n    if (element.hasOwnProperty('value')) {\n      fields[element.name] = element.value\n      hasError.value = false\n    } else {\n      hasError.value = true\n      fieldErrors.value[element.name] = `${element.name} is required`\n\n      return\n    }\n  })\n  form.prompt = props.template.prompt.replace(/\\[(.*?)\\]/g, (match, key) => fields[key])\n}\nconst submit = () => {\n  const maxToken = form.length\n  const totalCharge = maxToken * form.result * props.credit_fee\n  if (totalCharge > props.credits) {\n    notify.danger('You dont have enough credits please purchase some credits')\n    return\n  }\n  transformPrompt()\n  if (hasError.value) return\n\n  isProcessing.value = true\n  axios\n    .post(route('api-ai-generate', pickBy(form)))\n    .then(async (res) => {\n      generatedResponse.value = res.data;\n    })\n    .catch((error) => {\n      errors.value = error.response.data.errors\n      if (error.response.status == 400) {\n        notify.danger('You dont have enough credits please purchase some credits')\n      }\n    })\n    .finally(() => {\n      isProcessing.value = false\n      fieldErrors.value = []\n    })\n}\nconst pay = (gateway_id) => {\n  if (findGateway.value.min_amount > convertedAmount.value) {\n    notify.danger(\n      'The minimum transaction amount is ' + formatCurrency(findGateway.value.min_amount)\n    )\n    return\n  }\n  if (findGateway.value.max_amount != -1) {\n    if (findGateway.value.max_amount < convertedAmount.value) {\n      notify.danger(\n        'The maximum transaction amount is ' + formatCurrency(findGateway.value.max_amount)\n      )\n      return\n    }\n  }\n  isProcessing.value = true\n  router.post(\n    route('credit.pay'),\n    {\n      gateway_id: gateway_id,\n      total: convertedAmount.value,\n      credits: credits.value,\n      manualPayment: findGateway.value.is_auto == 0 ? manualPayment.value : null\n    },\n    {\n      onFinish: () => {\n        credits.value = 0\n        isProcessing.value = false\n      }\n    }\n  )\n}\nfunction downloadHTMLFile(textContent, name) {\n  const blob = new Blob([textContent], { type: 'text/html' })\n  const a = document.createElement('a')\n  a.href = URL.createObjectURL(blob)\n  a.download = name ? name.replace(' ', '-') : 'untitled.html'\n\n  a.click()\n  URL.revokeObjectURL(url)\n}\nconst transformedLanguages = Object.keys(props.languages).map((key) => {\n  return {\n    id: props.languages[key].id,\n    name: props.languages[key].name\n  }\n})\n</script>\n\n<template>\n\n  <Head title=\"Ai Template | Employer Panel\" />\n\n  <div class=\"row d-flex justify-contents-start\">\n    <div class=\"col-xl-5 col-lg-6 d-flex\">\n      <div class=\"recent-job-tab w-100 rounded bg-white p-4\">\n        <div class=\"d-flex mt-20\">\n          <img :src=\"template.icon\" width=\"50\" height=\"50\" class=\"rounded-circle\" alt=\"icon\" />\n          <p class=\"fs-5 ms-2\">{{ template.title }}</p>\n        </div>\n        <div class=\"row mt-30\">\n          <div class=\"col-lg-6\">\n            <label class=\"text-capitalize mb-1\">{{ trans('Language') }}*</label>\n            <Multiselect class=\"ai-template-multiselect\" v-model=\"form.language\" :options=\"transformedLanguages\"\n              valueProp=\"name\" label=\"name\" placeholder=\"Language\" />\n            <InputFieldError v-if=\"errors?.language\" :message=\"errors?.language[0]\" />\n          </div>\n          <div class=\"col-lg-6\">\n            <label class=\"text-capitalize mb-1\">{{ trans('Tone') }}*</label>\n            <Multiselect class=\"ai-template-multiselect\" v-model=\"form.tone\" :options=\"tones\" placeholder=\"Tone\" />\n            <InputFieldError v-if=\"errors?.tone\" :message=\"errors?.tone[0]\" />\n          </div>\n        </div>\n        <div class=\"mt-30\">\n          <div class=\"mb-20\" v-for=\"(field, i) in form.fields\" :key=\"i\">\n            <label class=\"text-capitalize mb-1\">{{ field.name }}*</label>\n            <input required v-if=\"field.type === 'input'\" v-model=\"field.value\" type=\"text\"\n              class=\"w-100 rounded border p-2\" :placeholder=\"field.placeholder\" />\n            <textarea required v-model=\"field.value\" v-if=\"field.type === 'textarea'\" class=\"w-100 rounded border p-2\"\n              :placeholder=\"field.placeholder\"></textarea>\n            <InputFieldError v-if=\"hasError\" :message=\"fieldErrors[field.name]\" />\n            <InputFieldError v-if=\"!hasError && errors && errors['fields.' + i + '.value']\"\n              :message=\"errors['fields.' + i + '.value'][0]\" />\n          </div>\n        </div>\n        <div class=\"mt-30\">\n          <div class=\"d-flex justify-content-between mb-1\">\n            <label class=\"text-capitalize\">{{ trans('Maximum Word Limit') }}</label>\n            <label class=\"text-capitalize\"> {{ trans('Credit') }}: {{ authUser.credits }}</label>\n          </div>\n          <input v-model.number=\"form.length\" type=\"text\" class=\"w-100 rounded border p-2\"\n            placeholder=\"Maximum Length\" />\n          <InputFieldError v-if=\"errors?.length\" :message=\"errors?.length[0]\" />\n        </div>\n        <div class=\"row mb-30 mt-30\">\n          <div class=\"col-lg-6\">\n            <label class=\"text-capitalize mb-1\">{{ trans('Number Of Result') }}</label>\n            <input v-model=\"form.result\" type=\"number\" class=\"w-100 rounded border p-2\"\n              placeholder=\"Number Of Result\" />\n            <InputFieldError v-if=\"errors?.result\" :message=\"errors?.result[0]\" />\n          </div>\n          <div class=\"col-lg-6\">\n            <label class=\"text-capitalize mb-1\">{{ trans('Creativity Level') }}</label>\n            <Multiselect class=\"ai-template-multiselect\" v-model=\"form.creativity\" :options=\"creativityLevels\"\n              value-by=\"value\" label=\"label\" placeholder=\"Creativity Level\" />\n            <InputFieldError v-if=\"errors?.creativity\" :message=\"errors.creativity[0]\" />\n          </div>\n        </div>\n        <SpinnerBtn @click.prevent=\"submit\" classes=\"w-100 d-flex justify-content-center btn-one py-3\"\n          :processing=\"isProcessing\" btn-text=\"Generate Content\" />\n      </div>\n    </div>\n    <div class=\"col-xl-7 col-lg-6 d-flex flex-column\">\n      <div class=\"user-activity-chart h-100 rounded bg-white p-4\">\n        <div class=\"d-flex\">\n          <button class=\"me-1\" @click=\"copyToClipboard(generatedResponse)\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 24 24\"\n              style=\"fill: rgba(0, 0, 0, 0.6)\">\n              <path\n                d=\"M19.937 8.68c-.011-.032-.02-.063-.033-.094a.997.997 0 0 0-.196-.293l-6-6a.997.997 0 0 0-.293-.196c-.03-.014-.062-.022-.094-.033a.991.991 0 0 0-.259-.051C13.04 2.011 13.021 2 13 2H6c-1.103 0-2 .897-2 2v16c0 1.103.897 2 2 2h12c1.103 0 2-.897 2-2V9c0-.021-.011-.04-.013-.062a.99.99 0 0 0-.05-.258zM16.586 8H14V5.414L16.586 8zM6 20V4h6v5a1 1 0 0 0 1 1h5l.002 10H6z\">\n              </path>\n            </svg>\n          </button>\n          <button class=\"ms-1\" @click=\"downloadHTMLFile(generatedResponse, documentName)\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 24 24\"\n              style=\"fill: rgba(0, 0, 0, 0.6)\">\n              <path d=\"m12 16 4-5h-3V4h-2v7H8z\"></path>\n              <path d=\"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\"></path>\n            </svg>\n          </button>\n        </div>\n        <div class=\"mb-20 mt-20\">\n          <input v-model=\"documentName\" type=\"text\" class=\"w-100 rounded border-0 p-2\"\n            placeholder=\"Untitled Document...\" />\n        </div>\n        <div class=\"ai-ck-section\">\n          <cke :editor=\"ClassicEditor\" v-model=\"generatedResponse\" />\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- creditModal Modal -->\n  <div class=\"modal fade\" id=\"creditModal\" tabindex=\"-1\" aria-labelledby=\"creditModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n      <div class=\"modal-content p-4\">\n        <div class=\"p-2\">\n          <p class=\"fs-5 text-center\" id=\"creditModalLabel\">{{ trans('Buy Credits') }}</p>\n        </div>\n        <div class=\"modal-body px-5\">\n          <p class=\"text-center\">\n            {{ conversionRate }} {{ trans('Credits') }} =\n            {{ formatCurrency(1) }}\n          </p>\n\n          <input class=\"w-100 rounded border p-3\" step=\"5\" type=\"number\" v-model.number=\"credits\"\n            placeholder=\"Enter Credit amount\" />\n          <p class=\"fw-bold mt-2 text-left\">\n            {{ trans('Total:') }} {{ formatCurrency(convertedAmount || 0) }}\n          </p>\n          <div class=\"row gateways my-4 px-3\">\n            <template v-for=\"gateway in gateways\" :key=\"gateway.id\">\n              <button class=\"col-sm-2 position-relative rounded\" @click=\"activeGateway = gateway.id\"\n                :class=\"{ border: activeGateway == gateway.id }\">\n                <div v-show=\"activeGateway == gateway.id\">\n                  <i\n                    class=\"fas fa-check rounded-circle position-absolute start-100 translate-middle bg-success top-0 p-1 text-white\"></i>\n                </div>\n\n                <img :src=\"gateway.logo\" class=\"rounded p-1\" />\n              </button>\n            </template>\n          </div>\n          <template v-for=\"gateway in gateways\" :key=\"gateway.id\">\n            <div v-show=\"activeGateway === gateway.id\" class=\"col-sm-12 gateway-form\" :id=\"'gateway-form' + gateway.id\">\n              <form method=\"post\" @submit.prevent=\"pay(gateway.id)\" enctype=\"multipart/form-data\">\n                <div class=\"table-responsive\">\n                  <table class=\"table-borderless text-fs-sm table\">\n                    <template v-if=\"gateway.charge != 0\">\n                      <tbody>\n                        <tr class=\"border\">\n                          <td class=\"border p-2\">\n                            {{ trans('Gateway Charge: ') }}\n                          </td>\n                          <td class=\"text-center\">\n                            {{ formatCurrency(gateway.charge) }}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </template>\n                  </table>\n\n                  <template v-if=\"gateway.comment != null\">\n                    <table class=\"table-borderless mt-2 table\">\n                      <tbody>\n                        <tr>\n                          <td class=\"fw-500 text-fs-sm\">\n                            {{ trans('Payment Instruction: ') }}\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <td class=\"text-fs-sm\">\n                            {{ gateway.comment }}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </template>\n\n                  <template v-if=\"gateway.phone_required == 1\">\n                    <div class=\"form-group mt-2\">\n                      <label class=\"fw-500 text-fs-sm my-2\">{{ trans('Your phone number') }}</label>\n                      <input type=\"number\" name=\"phone\" placeholder=\"Your phone number\" class=\"form-control\" required\n                        :value=\"authUser.phone\" />\n                    </div>\n                  </template>\n                  <template v-if=\"gateway.is_auto == 0\">\n                    <div class=\"form-group mt-1\">\n                      <label class=\"fw-500 text-fs-sm my-2\">{{\n                        trans('Submit your payment proof')\n                        }}</label>\n                      <input @input=\"(e) => {\n                          manualPayment.image = e.target.files[0]\n                        }\n                        \" type=\"file\" name=\"image\" class=\"form-control\" required accept=\"image/*\" />\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"fw-500 text-fs-sm my-2\">{{ trans('Comment') }}</label>\n                      <textarea v-model=\"manualPayment.comment\" class=\"form-control\" required name=\"comment\"\n                        placeholder=\"comment\" maxlength=\"500\"></textarea>\n                    </div>\n                  </template>\n                </div>\n                <button :disabled=\"isProcessing\" type=\"submit\" class=\"btn-one w-100 mt-4\">\n                  {{ trans('Pay Now') }}\n                </button>\n              </form>\n            </div>\n          </template>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport InputFieldError from \"@/Components/InputFieldError.vue\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport { Link, router, useForm } from \"@inertiajs/vue3\";\nimport axios from \"axios\";\nimport trans from '@/Composables/transComposable';\nimport moment from \"moment\";\nimport { toRaw } from \"vue\";\nimport { ref, computed } from \"vue\";\n\nconst { uiAvatar, formatNumber, textExcerpt } = sharedComposable()\nconst props = defineProps({\n  applicants: [Object, Array],\n  hasOpening: {\n    type: Boolean,\n    default: false,\n  },\n  job: {\n    type: [Number, String],\n    default: null,\n  },\n  hideApplyInfo: {\n    type: Boolean,\n    default: false,\n  },\n  jobObj: Object,\n})\n\nconst maxTag = ref(2)\n\nconst applicationId = ref(null)\nconst findCandidate = computed(() => {\n  return props.applicants.find((a) => a.id == applicationId.value)\n})\n\nconst toggleBookmark = (id) => {\n  const form = props.job ? useForm({ opening_id: props.job }) : useForm({})\n  form.post(route(\"candidates.bookmark\", id), {\n    preserveScroll: true,\n    onSuccess: () => {},\n  })\n}\n\nconst candidateData = (candidate) => {\n  const isOpening = props.hasOpening\n  const user = isOpening ? candidate.user : candidate\n  const avatar = isOpening ? candidate.user.avatar : candidate.avatar\n  const isBookmarked = isOpening\n    ? user?.candidate_bookmarks.length\n    : candidate.isBookmarked\n  const expectedSalary = user.meta?.expected_salary ?? \"NA\"\n\n  const location = `${user.states?.length ? user.states[0]?.name : \"\"}, ${\n    user.countries?.length ? user.countries[0]?.name : \"\"\n  }`\n\n  const tagItems = user.tags?.slice(0, maxTag.value)\n  const remainingTagsCount = Math.max(user.tags?.length ?? 0 - maxTag.value, 0)\n  const showMoreTags = remainingTagsCount > 0\n  const name = isOpening ? user.name : candidate.name\n  const categoryTitle = user.categories?.[0]?.title\n\n  return {\n    id: user.id,\n    avatar,\n    name,\n    isBookmarked,\n    expectedSalary,\n    location,\n    tagItems,\n    remainingTagsCount,\n    showMoreTags,\n    categoryTitle,\n  }\n}\n\nconst fields = ref([])\n\nconst showApplication = (apply_id) => {\n  applicationId.value = apply_id\n  let meta = findCandidate.value?.meta\n\n  if (meta) {\n    meta = JSON.parse(findCandidate.value?.meta)\n  }\n\n  fields.value = meta?.fields ?? []\n\n  if (!findCandidate.value?.pivot?.seen_at) {\n    seenAt()\n  }\n}\n\nconst seenAt = () => {\n  let data = {\n    apply_id: applicationId.value,\n  }\n  axios.post(route(\"employer.job-application-seen\"), data)\n}\n\nconst hired = () => {\n  useForm({\n    apply_id: applicationId.value,\n  }).post(route(\"employer.hire-candidate\"), {\n    onSuccess() {\n      $(\"#candidateDetails .btn-close\").trigger(\"click\")\n      notify.success(trans(\"Hired successfully\"))\n    },\n  })\n}\n\n// reviews\n\nconst form = useForm({\n  ratting: 5,\n  comment: \"\",\n  job: {},\n  candidate_id: null,\n})\n\nconst setJobAndCandidate = (candidate) => {\n  form.job = candidate.opening\n  form.candidate_id = candidate.user_id\n}\n\nconst submit = () => {\n  form.post(route(\"employer.candidate-reviews.store\"), {\n    onSuccess: () => {\n      notify.success(\"Review has been submitted successfully\")\n      $(\"#reviewModal .btn-close\").trigger(\"click\")\n    },\n  })\n}\n</script>\n\n<template>\n  <div class=\"wrapper\">\n    <template v-for=\"candidate in applicants\" :key=\"candidate.id\">\n      <div class=\"border-0 candidate-profile-card list-layout mb-25\">\n        <div class=\"d-flex\">\n          <div class=\"cadidate-avatar online position-relative d-block me-auto ms-auto\">\n            <Link\n              :href=\"route('candidates.show', candidateData(candidate))\"\n              class=\"rounded-circle\"\n            >\n              <img\n                :src=\"\n                  uiAvatar(candidateData(candidate).name, candidateData(candidate).avatar)\n                \"\n                alt=\"avatar\"\n                class=\"lazy-img rounded-circle\"\n              />\n            </Link>\n          </div>\n          <div class=\"right-side\">\n            <div class=\"row gx-1 align-items-start\">\n              <div class=\"col-xl-3\">\n                <div class=\"position-relative\">\n                  <div class=\"mb-2\" v-if=\"candidate.opening?.title\">\n                    <a\n                      target=\"_blank\"\n                      :href=\"route('jobs.show', candidate.opening?.slug)\"\n                      >{{ candidate.opening?.title }}</a\n                    >\n                  </div>\n\n                  <h4 class=\"mb-0 candidate-name\">\n                    <Link\n                      :href=\"route('candidates.show', candidateData(candidate))\"\n                      class=\"tran3s\"\n                    >\n                      {{ textExcerpt(candidateData(candidate).name, 16) }}\n                    </Link>\n                  </h4>\n\n                  <div class=\"candidate-post\">\n                    {{ candidateData(candidate).categoryTitle }}\n                  </div>\n                  <ul class=\"cadidate-skills style-none d-flex align-items-center\">\n                    <li\n                      v-for=\"(item, index) in candidateData(candidate).tagItems\"\n                      :key=\"index\"\n                    >\n                      {{ item.title }}\n                    </li>\n                    <li class=\"more\" v-if=\"candidateData(candidate).showMoreTags\">\n                      {{ candidateData(candidate).remainingTagsCount }}+\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div class=\"col-xl-2 col-md-4 col-sm-6\">\n                <div class=\"candidate-info\">\n                  <span>{{ trans(\"Salary\") }}</span>\n                  <div>\n                    {{ formatNumber(candidateData(candidate).expectedSalary) }}/\n                    {{\n                      candidate.user\n                        ? candidate.user.meta.currency\n                        : candidate.meta.currency\n                    }}\n                  </div>\n                </div>\n                <div class=\"mt-3\">\n                  <span v-if=\"candidate?.is_hired == 1\" class=\"badge bg-success\">{{\n                    trans(\"Hired\")\n                  }}</span>\n                  <span\n                    v-if=\"candidate?.is_reviewed == 1\"\n                    class=\"ms-2 badge bg-primary\"\n                    >{{ trans(\"Reviewed\") }}</span\n                  >\n                </div>\n              </div>\n              <div class=\"col-xl-2 col-md-4 col-sm-6\">\n                <div class=\"candidate-info\">\n                  <span>{{ trans(\"Location\") }}</span>\n                  <div>\n                    {{ candidateData(candidate).location }}\n                  </div>\n                </div>\n                <div class=\"mt-2 candidate-info\">\n                  <span>{{ trans(\" Avg Ratting\") }}</span>\n                  <div>\n                    {{ candidate.user_avg_ratting ?? \"NA\" }}\n                  </div>\n                </div>\n                <!-- /.candidate-info -->\n              </div>\n              <div class=\"col-xl-2 col-md-4 col-sm-6\">\n                <div class=\"candidate-info\">\n                  <span>{{ trans(\"Submission Date\") }}</span>\n                  <div>\n                    {{ moment(candidate.created_at).format(\"DD MMM, Y\") }}\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-xl-2 col-md-2 d-flex align-item-center\">\n                <Link\n                  :href=\"route('candidates.show', candidateData(candidate))\"\n                  class=\"text-center save-btn rounded-circle tran3s fw-normal\"\n                  ><i class=\"bi bi-eye\"></i>\n                </Link>\n                <button\n                  @click=\"toggleBookmark(candidateData(candidate).id)\"\n                  class=\"save-btn tran3s rounded-circle ms-1\"\n                >\n                  <i\n                    class=\"bi bi-heart\"\n                    :class=\"{\n                      'text-danger': candidateData(candidate).isBookmarked,\n                    }\"\n                  ></i>\n                </button>\n              </div>\n              <div class=\"col-xl-1 col-md-2\">\n                <div class=\"d-flex justify-content-md-end align-items-center\">\n                  <div class=\"mt-10 action-dots float-end ms-2\">\n                    <button\n                      class=\"action-btn dropdown-toggle\"\n                      type=\"button\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                    >\n                      <span></span>\n                    </button>\n                    <ul class=\"dropdown-menu dropdown-menu-end\">\n                      <li>\n                        <button\n                          @click=\"showApplication(candidate.id)\"\n                          class=\"dropdown-item\"\n                          data-bs-toggle=\"modal\"\n                          data-bs-target=\"#candidateDetails\"\n                        >\n                          <img\n                            src=\"/assets/dashboard/images/icon/icon_18.svg\"\n                            alt=\"\"\n                            class=\"lazy-img\"\n                          />\n                          {{ trans(\"Details\") }}\n                        </button>\n                      </li>\n                      <li v-if=\"candidate?.is_hired == 1 && !candidate.is_reviewed\">\n                        <button\n                          data-bs-toggle=\"modal\"\n                          data-bs-target=\"#reviewModal\"\n                          @click=\"setJobAndCandidate(candidate)\"\n                          class=\"dropdown-item\"\n                        >\n                          <img\n                            src=\"/assets/dashboard/images/icon/icon_19.svg\"\n                            alt=\"\"\n                            class=\"lazy-img\"\n                          />\n                          {{ trans(\"Write a review\") }}\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </template>\n  </div>\n  <!-- modal -->\n\n  <div\n    class=\"modal fade\"\n    id=\"candidateDetails\"\n    tabindex=\"-1\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    role=\"dialog\"\n    aria-labelledby=\"candidateDetailsTitle\"\n    aria-hidden=\"true\"\n  >\n    <div\n      class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg\"\n      role=\"document\"\n    >\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <p class=\"modal-title fw-bold\" id=\"candidateDetailsTitle\">\n            {{ trans(\"Candidate Details\") }}\n          </p>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"candidate-card-bg\">\n            <img\n              :src=\"\n                findCandidate &&\n                uiAvatar(\n                  candidateData(findCandidate).name,\n                  candidateData(findCandidate).avatar\n                )\n              \"\n              alt=\"avatar\"\n              class=\"m-auto lazy-img logo\"\n            />\n            <div class=\"mb-10 text-center h3 text-dark mt-15\">\n              {{ findCandidate?.name }}\n            </div>\n\n            <div class=\"pt-20 mt-2 border-top\">\n              <div class=\"py-3 bg-white rounded justify-content-around d-flex\">\n                <div>\n                  <strong>{{ trans(\"Expected Salary\") }}</strong>\n                  <div class=\"mt-2\">\n                    {{\n                      formatNumber(\n                        findCandidate && candidateData(findCandidate).expectedSalary\n                      )\n                    }}\n                    /\n\n                    <template v-if=\"findCandidate && findCandidate.user\">\n                      {{ findCandidate?.user?.meta.currency }}\n                    </template>\n                    <template v-if=\"findCandidate && findCandidate.meta\">\n                      {{ findCandidate?.meta.currency }}\n                    </template>\n                  </div>\n                </div>\n                <div>\n                  <strong>{{ trans(\"Skills / Expertise\") }}</strong>\n                  <div class=\"flex-wrap gap-2 mt-2 d-flex\" v-if=\"findCandidate\">\n                    <span\n                      class=\"p-1 border rounded bg-light\"\n                      v-for=\"(item, index) in candidateData(findCandidate).tagItems\"\n                      :key=\"index\"\n                    >\n                      {{ item.title }}\n                    </span>\n                  </div>\n                </div>\n                <div>\n                  <strong>{{ trans(\"Location\") }}</strong>\n                  <div class=\"mt-2\">\n                    {{ findCandidate && candidateData(findCandidate).location }}\n                  </div>\n                </div>\n                <div>\n                  <strong>{{ trans(\"Ratting\") }}</strong>\n                  <div class=\"mt-2\">\n                    {{ findCandidate?.user_avg_ratting ?? \"NA\" }}\n                  </div>\n                </div>\n              </div>\n\n              <template v-if=\"!hideApplyInfo\">\n                <div class=\"mt-3\">\n                  <div class=\"p-3 bg-white rounded\">\n                    <h5 class=\"pb-2 mb-3 border-bottom\">\n                      {{ trans(\"Application Information\") }}:\n                    </h5>\n                    <table class=\"table table-borderless\">\n                      <tbody>\n                        <tr v-for=\"field in fields\" :key=\"field.label\">\n                          <td>{{ field.label }}</td>\n                          <td>\n                            <a\n                              v-if=\"field.type == 'file'\"\n                              :href=\"field.value\"\n                              class=\"btn-six\"\n                              >{{ trans(\"View\") }}</a\n                            >\n                            <span v-else>{{ field.value }}</span>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n\n                <div class=\"mt-3 d-flex justify-content-end\">\n                  <button\n                    v-if=\"findCandidate?.is_hired != 1\"\n                    class=\"btn-five\"\n                    @click=\"hired\"\n                  >\n                    {{ trans(\"Hire\") }}\n                  </button>\n                </div>\n              </template>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"modal fade\"\n    id=\"reviewModal\"\n    tabindex=\"-1\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    role=\"dialog\"\n    aria-labelledby=\"reviewModalTitleId\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\" id=\"reviewModalTitleId\">\n            {{ trans(\"Add a review\") }}\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <form @submit.prevent=\"submit\">\n          <div class=\"modal-body\">\n            <div class=\"mb-4\">\n              <label class=\"form-label\">{{ trans(\"Ratting Star (out of 5)\") }}</label>\n              <select v-model=\"form.ratting\" class=\"form-control\">\n                <option v-for=\"item in 5\" :key=\"item\" :value=\"item\">\n                  {{ item }}\n                </option>\n              </select>\n              <InputFieldError :message=\"form.errors.ratting\" />\n            </div>\n            <div class=\"mb-2\">\n              <label class=\"form-label\">{{ trans(\"Comment\") }}</label>\n              <textarea\n                v-model=\"form.comment\"\n                class=\"form-control\"\n                rows=\"5\"\n                placeholder=\"enter your review comment here....\"\n              ></textarea>\n              <InputFieldError :message=\"form.errors.comment\" />\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"px-0 py-2 btn-seven\" data-bs-dismiss=\"modal\">\n              {{ trans(\"Close\") }}\n            </button>\n            <SpinnerBtn\n              type=\"submit\"\n              :processing=\"form.processing\"\n              :btn-text=\"trans('Submit')\"\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { ref, onMounted, onUnmounted, watch, computed } from 'vue'\nconst props = defineProps({\n  options: [Array, Object],\n  modelValue: [String, Number],\n  label: String,\n  valueBy: {\n    type: [String, Number]\n  },\n  placeholder: {\n    type: String,\n    default: 'Select Value'\n  }\n})\nconst isOpen = ref(false)\nconst selectedOption = ref(null)\nconst emit = defineEmits(['update:modelValue', 'change'])\n\nconst selectedOptionText = ref(props.placeholder)\nconst selectContainer = ref(null)\nconst toggleDropdown = () => {\n  isOpen.value = !isOpen.value\n}\nconst findSelectOptionText = computed(() => {\n  if (props.valueBy) {\n    return props.options?.find((op) => op[props.valueBy] === props.modelValue)\n  } else {\n    return props.options?.find((op) => op === props.modelValue)\n  }\n})\n\nconst selectOption = (option) => {\n  isOpen.value = false\n  selectedOption.value = props.valueBy ? option[props.valueBy] : option\n  selectedOptionText.value = props.label ? option[props.label] : option\n  emit('update:modelValue', selectedOption.value)\n  emit('change')\n}\nconst displaySelectedOptionText = computed(() => {\n  if (findSelectOptionText.value) {\n    return findSelectOptionText.value[props.label] || findSelectOptionText.value\n  } else {\n    return selectedOptionText.value\n  }\n})\nwatch(\n  () => props.modelValue,\n  (newVal) => {\n    if (newVal == '' || newVal == null) {\n      selectedOptionText.value = props.placeholder\n    }\n  }\n)\nconst outsideClick = (event) => {\n  if (isOpen.value && !selectContainer.value.contains(event.target)) {\n    isOpen.value = false\n  }\n}\nonMounted(() => {\n  document.addEventListener('click', outsideClick)\n})\n\nonUnmounted(() => {\n  document.removeEventListener('click', outsideClick)\n})\n</script>\n\n<template>\n  <div class=\"nice-select\" :class=\"{ open: isOpen }\">\n    <div class=\"current me-2\" @click.stop=\"toggleDropdown\">\n      {{ displaySelectedOptionText }}\n    </div>\n\n    <ul class=\"list\" ref=\"selectContainer\">\n      <li\n        class=\"option\"\n        :class=\"{\n          'selected focus':\n            selectedOption && (option[valueBy] == selectedOption || option === selectedOption)\n        }\"\n        v-for=\"(option, index) in options\"\n        :key=\"index\"\n        @click=\"selectOption(option)\"\n      >\n        {{ label ? option[label] : option }}\n      </li>\n      <li v-if=\"options?.length < 1\" class=\"option\">{{ trans('empty') }}</li>\n    </ul>\n  </div>\n</template>\n","<script setup>\nimport { Head, router } from '@inertiajs/vue3'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport CandidateCard from '@/Layouts/Employer/CandidateCard.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport { ref, watch } from 'vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nconst { pickBy } = sharedComposable()\ndefineOptions({ layout: EmployerLayout })\nconst props = defineProps(['applicants'])\nconst filterForm = ref({\n  order: ''\n})\nconst sorts = [\n  {\n    label: 'Latest',\n    value: 'desc'\n  },\n  {\n    label: 'Oldest',\n    value: 'asc'\n  }\n]\n\nwatch(\n  () => filterForm.value.order,\n  () => {\n    router.get(route('employer.job-applicants'), pickBy(filterForm.value), {\n      preserveState: true\n    })\n  }\n)\n</script>\n\n<template>\n  <Head title=\"Job Applicants\" />\n\n  <div class=\"mb-40 d-flex align-items-center justify-content-between lg-mb-30\">\n    <h4 class=\"main-title m0\">{{ trans('Job Applicants') }}</h4>\n    <div class=\"d-flex\">\n      <div class=\"short-filter d-flex align-items-center\">\n        <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n        <NiceSelect\n          v-model=\"filterForm.order\"\n          :options=\"sorts\"\n          value-by=\"value\"\n          label=\"label\"\n          placeholder=\"Default\"\n        />\n      </div>\n    </div>\n  </div>\n  <template v-if=\"applicants.total\">\n    <CandidateCard :applicants=\"applicants.data\" :has-opening=\"true\" />\n  </template>\n  <div v-else class=\"bg-white card-box border-20\">\n    <div class=\"text-center\">{{ trans('No record found') }}</div>\n  </div>\n\n  <div class=\"dash-pagination d-flex justify-content-end mt-30\">\n    <Paginate :links=\"applicants.links\" />\n  </div>\n  \n</template>\n","<script setup>\nimport { Head, useForm } from '@inertiajs/vue3'\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport Multiselect from '@vueform/multiselect'\nimport { ref, computed } from 'vue'\nimport axios from 'axios'\nimport sharedComposable from '@/Composables/sharedComposable'\ndefineOptions({ layout: DefaultLayout })\n\nconst { authUser } = sharedComposable()\nconst props = defineProps(['services', 'countries', 'shortcodes'])\nconst step = ref(1)\nconst states = ref([])\nconst categories = ref([])\nconst descriptionTemplates = ref([])\nconst companyShortcodes = ref({})\n\nconst form = useForm({\n  // step 1\n  company_name: authUser.value.name,\n  company_size: '',\n  year_of_establishment: '',\n  company_address: '',\n  company_intro: '',\n  company_teams: [],\n  country_id: '',\n  state_id: '',\n  service_id: '',\n  category_id: [],\n\n  // step 2\n  business: {\n    description: '',\n    license_no: '',\n    rl_no: '',\n    site_url: ''\n  },\n  contact: {\n    name: '',\n    designation: '',\n    email: '',\n    mobile: ''\n  },\n  social: {\n    linkedin: '',\n    twitter: '',\n    facebook: '',\n    instagram: ''\n  },\n  terms: false\n})\n\nconst submit = () => {\n  form.company_name = authUser.value.name\n  form.post(route('employer.company-info.store', { step: step.value }), {\n    onSuccess: () => form.reset()\n  })\n}\n\nconst nextStep = () => {\n  form.post(route('employer.company-info.store', { step: step.value }), {\n    preserveState: true,\n    onSuccess: () => {\n      if (step.value < 2) {\n        step.value += 1\n        companyShortcodes.value = props.shortcodes.reduce((acc, key) => {\n          if (key in form) {\n            acc[key] = form[key]\n          }\n          return acc\n        }, {})\n      }\n    }\n  })\n}\n\nconst prevStep = () => {\n  if (step.value > 1) {\n    step.value -= 1\n  }\n}\nconst addOrUpdateCategory = (id) => {\n  const find = form.category_id.indexOf(id)\n\n  if (find !== -1) {\n    form.category_id.splice(find, 1)\n  } else {\n    form.category_id.push(id)\n  }\n}\n\nconst getState = () => {\n  form.state_id = ''\n  axios.get(route('api.locations', { country_id: form.country_id })).then((res) => {\n    states.value = res.data\n  })\n}\nconst getCategories = () => {\n  axios.get(route('api.categories', { service_id: form.service_id })).then((res) => {\n    categories.value = res.data\n  })\n}\nconst stepProgress = computed(() => {\n  return ((step.value * 100) / 2).toFixed(2)\n})\nconst previewFlies = (event) => {\n  const images = []\n  for (const image of event.target.files) {\n    images.push(image)\n  }\n  const maxGallerySize = 3\n  const oldImagesCount = Math.max(form.company_teams.length + images.length - maxGallerySize, 0)\n\n  const newImages = images.slice(0, maxGallerySize - oldImagesCount)\n  const updatedGallery = form.company_teams.slice(oldImagesCount).concat(newImages)\n\n  form.company_teams = updatedGallery\n}\nconst setImageURL = (value) => {\n  return URL.createObjectURL(value)\n}\nconst clearImage = (i) => {\n  const listImages = Array.from(form.company_teams)\n  listImages.splice(i, 1)\n  form.company_teams = listImages\n}\n\nconst getDescriptionTemplates = () => {\n  axios\n    .get(route('api-description-templates', { service: form.service_id, type: 'company' }))\n    .then((res) => {\n      descriptionTemplates.value = res.data\n    })\n}\nconst createdDescription = (template) => {\n  return template.replace(/\\[(.*?)\\]/g, (match, key) => companyShortcodes.value[key])\n}\n</script>\n\n<template>\n  <Head title=\"Employer Information\" />\n\n  <div class=\"inner-banner-one position-relative p-70px\"></div>\n  <div class=\"mt-30 container\">\n    <div class=\"progress h-25px\">\n      <div\n        class=\"progress-bar\"\n        role=\"progressbar\"\n        :aria-label=\"'Step ' + step + ' of 5'\"\n        :style=\"{ width: stepProgress + '%', background: 'rgb(36 64 52)' }\"\n        :aria-valuenow=\"stepProgress\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ trans('Step') }} {{ step }} {{ trans(' of 2') }}\n      </div>\n    </div>\n  </div>\n  <div class=\"dashboard-body company-i-pt-3 container mx-auto mt-4 rounded\">\n    <form @submit.prevent=\"submit\" class=\"card-box\">\n      <h2 class=\"main-title ml-5\">{{ trans('Employer Information') }}</h2>\n      <div v-if=\"step == 1\">\n        <div class=\"row\">\n          <div class=\"col-6 dash-input-wrapper mb-2\">\n            <label for=\"\">{{ trans('Company Name') }}</label>\n            <input\n              type=\"text\"\n              required\n              :value=\"form.company_name\"\n              readonly\n              disabled\n              placeholder=\"Company Name\"\n            />\n            <InputFieldError :message=\"form.errors.company_name\" />\n          </div>\n          <div class=\"col-6 dash-input-wrapper mb-2\">\n            <label for=\"\">{{ trans('Year of Establishment') }}</label>\n            <input\n              required\n              type=\"date\"\n              v-model=\"form.year_of_establishment\"\n              placeholder=\"Year of Establishment\"\n            />\n            <InputFieldError :message=\"form.errors.year_of_establishment\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 dash-input-wrapper mb-2\">\n            <label for=\"\">{{ trans('Company Intro') }}</label>\n            <input type=\"text\" v-model=\"form.company_intro\" placeholder=\"Company Intro\" />\n            <InputFieldError :message=\"form.errors.company_intro\" />\n          </div>\n          <div class=\"col-6 mb-2\">\n            <label for=\"\" class=\"c-input-label\">{{ trans('Company Size') }}*</label>\n            <Multiselect\n              v-model=\"form.company_size\"\n              :options=\"[\n                '1-15',\n                '16-30',\n                '31-50',\n                '51-120',\n                '121-300',\n                '301-500',\n                '501-1000',\n                '1001-5000',\n                '5001-10000',\n                '10000'\n              ]\"\n              placeholder=\"Company Size\"\n              :required=\"true\"\n            >\n              <template v-slot:singlelabel=\"{ value }\">\n                <div class=\"multiselect-single-label\">{{ value.label }}+</div>\n              </template>\n              <template v-slot:option=\"{ option }\"> {{ option.label }}+ </template>\n            </Multiselect>\n\n            <InputFieldError :message=\"form.errors.company_size\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <label for=\"\" class=\"c-input-label\">{{ trans('Company Address') }}*</label>\n          <div class=\"col-6 mb-2\">\n            <Multiselect\n              @deselect=\"states = []\"\n              @clear=\"\n                () => {\n                  states = []\n                  form.state_id = ''\n                }\n              \"\n              @select=\"getState\"\n              v-model=\"form.country_id\"\n              :options=\"countries\"\n              placeholder=\"Select Country\"\n              label=\"name\"\n              valueProp=\"id\"\n              :required=\"true\"\n            />\n            <InputFieldError :message=\"form.errors.country_id\" />\n          </div>\n          <div class=\"col-6 mb-2\">\n            <Multiselect\n              v-model=\"form.state_id\"\n              :options=\"states\"\n              placeholder=\"Select City\"\n              label=\"name\"\n              valueProp=\"id\"\n              :required=\"true\"\n            />\n            <InputFieldError :message=\"form.errors.state_id\" />\n          </div>\n        </div>\n        <div class=\"dash-input-wrapper mb-2\">\n          <textarea\n            required\n            v-model=\"form.company_address\"\n            placeholder=\"Write Company Address\"\n            class=\"size-lg\"\n          ></textarea>\n          <InputFieldError :message=\"form.errors.company_address\" />\n        </div>\n\n        <div class=\"mb-3\">\n          <div class=\"dash-btn-one d-inline-block position-relative me-3\">\n            <i class=\"bi bi-plus\"></i>\n            {{ trans('Upload Team Images (Max: 3)') }}\n            <input multiple type=\"file\" @input=\"previewFlies\" name=\"teams\" accept=\"image/*\" />\n          </div>\n          <InputFieldError :message=\"form.errors.company_teams\" />\n          <small>{{ trans('Upload file .jpg, .png, .webp, .jpeg') }}</small>\n        </div>\n        <template v-if=\"form.company_teams?.length > 0\">\n          <div class=\"d-flex mb-20 flex-wrap\">\n            <section class=\"col-1 mb-5 me-3 w-10\" v-for=\"(image, i) in form.company_teams\" :key=\"i\">\n              <button\n                @click=\"clearImage(i)\"\n                type=\"button\"\n                class=\"position-absolute btn btn-danger btn-sm\"\n              >\n                <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n              </button>\n\n              <img ref=\"previewImages\" :src=\"setImageURL(image)\" class=\"img-thumbnail\" alt=\"img\" />\n            </section>\n          </div>\n        </template>\n        <div class=\"row\">\n          <label for=\"\" class=\"c-input-label\"> {{ trans('Industry Type') }}*</label>\n          <div class=\"col-6 mb-2\">\n            <Multiselect\n              @deselect=\"categories = []\"\n              @clear=\"\n                () => {\n                  categories = []\n                  form.category_id = []\n                }\n              \"\n              @select=\"getCategories\"\n              v-model=\"form.service_id\"\n              :options=\"services\"\n              label=\"title\"\n              valueProp=\"id\"\n              placeholder=\"Select Industry\"\n              :required=\"true\"\n            />\n            <InputFieldError :message=\"form.errors.service_id\" />\n          </div>\n        </div>\n        <div class=\"row m-1 p-2\" v-if=\"categories.length > 0\">\n          <div class=\"form-check col-3\" v-for=\"cat in categories\" :key=\"cat.id\">\n            <input\n              @input=\"addOrUpdateCategory(cat.id)\"\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              :id=\"`cat${cat.id}`\"\n              :checked=\"form.category_id.includes(cat.id)\"\n            />\n            <label class=\"form-check-label\" :for=\"`cat${cat.id}`\">\n              {{ cat.title }}\n            </label>\n          </div>\n        </div>\n        <InputFieldError :message=\"form.errors.category_id\" />\n      </div>\n      <div v-if=\"step == 2\">\n        <div class=\"dash-input-wrapper mb-2\">\n          <div class=\"d-flex justify-content-between align-items-center\">\n            <label for=\"\">{{ trans('Business Description') }}</label>\n            <button\n              v-if=\"descriptionTemplates.length > 0\"\n              @click=\"getDescriptionTemplates\"\n              class=\"btn-one mb-3\"\n              type=\"button\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#suggestionModal\"\n            >\n              {{ trans('Suggestions') }}\n            </button>\n          </div>\n          <textarea\n            required\n            v-model=\"form.business.description\"\n            placeholder=\"Business Description\"\n            class=\"size-lg\"\n          ></textarea>\n          <InputFieldError :message=\"form.errors.business?.description\" />\n        </div>\n        <div class=\"row dash-input-wrapper mb-2\">\n          <div class=\"col-6\">\n            <label for=\"\">{{ trans('Business/ Trade License No') }}</label>\n            <input\n              placeholder=\"Business/ Trade License No\"\n              type=\"text\"\n              v-model=\"form.business.license_no\"\n            />\n            <InputFieldError :message=\"form.errors.business?.license_no\" />\n          </div>\n          <div class=\"col-6 dash-input-wrapper\">\n            <label for=\"\">{{ trans('RL No (Only for Recruiting Agency)') }}</label>\n            <div class=\"input-group\">\n              <input placeholder=\"Enter Number Only\" type=\"number\" v-model=\"form.business.rl_no\" />\n              <InputFieldError :message=\"form.errors.business?.rl_no\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"dash-input-wrapper mb-2\">\n          <label for=\"\">{{ trans('Website URL') }}</label>\n          <input\n            placeholder=\"Website URL\"\n            type=\"url\"\n            v-model=\"form.business.site_url\"\n            class=\"form-control\"\n          />\n          <InputFieldError :message=\"form.errors.business?.site_url\" />\n        </div>\n\n        <div class=\"row mb-2 mt-4\">\n          <h4 class=\"dash-title-three mb-2\">{{ trans('Contact') }}</h4>\n          <div class=\"col-6 dash-input-wrapper\">\n            <label for=\"\">{{ trans(\"Contact Person's Name\") }}*</label>\n            <input\n              required\n              placeholder=\"Contact Person's Name\"\n              type=\"text\"\n              v-model=\"form.contact.name\"\n              class=\"form-control\"\n            />\n            <InputFieldError :message=\"form.errors.contact?.name\" />\n          </div>\n          <div class=\"col-6 dash-input-wrapper\">\n            <label for=\"\">{{ trans(\"Contact Person's Designation\") }}*</label>\n            <input\n              required\n              placeholder=\"Contact Person's Designation\"\n              type=\"text\"\n              v-model=\"form.contact.designation\"\n              class=\"form-control\"\n            />\n            <InputFieldError :message=\"form.errors.contact?.designation\" />\n          </div>\n        </div>\n        <div class=\"row mb-2\">\n          <div class=\"col-6 dash-input-wrapper\">\n            <label for=\"\"> {{ trans(\"Contact Person's Email\") }} *</label>\n            <input\n              required\n              placeholder=\"Contact Person's Email\"\n              type=\"email\"\n              v-model=\"form.contact.email\"\n              class=\"form-control\"\n            />\n            <InputFieldError :message=\"form.errors.contact?.email\" />\n          </div>\n          <div class=\"col-6 dash-input-wrapper\">\n            <label for=\"\">{{ trans(\"Contact Person's Mobile\") }}</label>\n            <input\n              placeholder=\"Contact Person's Mobile\"\n              type=\"text\"\n              v-model=\"form.contact.mobile\"\n              class=\"form-control\"\n            />\n            <InputFieldError :message=\"form.errors.contact?.mobile\" />\n          </div>\n        </div>\n\n        <div class=\"row mb-2 mt-4\">\n          <h4 class=\"dash-title-three mb-2\">{{ trans('Socials Media Account Links') }}</h4>\n          <div class=\"col-6 dash-input-wrapper\">\n            <label for=\"\">{{ trans('Linkedin') }}</label>\n            <input\n              placeholder=\"linkedin\"\n              type=\"url\"\n              v-model=\"form.social.linkedin\"\n              class=\"form-control\"\n            />\n            <InputFieldError :message=\"form.errors.social?.linkedin\" />\n          </div>\n          <div class=\"col-6 dash-input-wrapper\">\n            <label for=\"\">{{ trans('Twitter') }}</label>\n            <input\n              placeholder=\"Twitter\"\n              type=\"url\"\n              v-model=\"form.social.twitter\"\n              class=\"form-control\"\n            />\n            <InputFieldError :message=\"form.errors.social?.twitter\" />\n          </div>\n        </div>\n        <div class=\"row dash-input-wrapper mb-2\">\n          <div class=\"col-6\">\n            <label for=\"\">{{ trans('Facebook') }}</label>\n            <input\n              placeholder=\"facebook\"\n              type=\"url\"\n              v-model=\"form.social.facebook\"\n              class=\"form-control\"\n            />\n            <InputFieldError :message=\"form.errors.social?.facebook\" />\n          </div>\n          <div class=\"col-6 dash-input-wrapper\">\n            <label for=\"\">{{ trans('Instagram') }}</label>\n            <input\n              placeholder=\"facebook\"\n              type=\"url\"\n              v-model=\"form.social.instagram\"\n              class=\"form-control\"\n            />\n            <InputFieldError :message=\"form.errors.social?.instagram\" />\n          </div>\n        </div>\n        <div class=\"form-check\">\n          <input\n            required\n            class=\"form-check-input\"\n            v-model=\"form.terms\"\n            type=\"checkbox\"\n            id=\"Policy\"\n          />\n          <label class=\"form-check-label\" for=\"Policy\">\n            {{ trans('I Have Read') }}\n            <a class=\"underline\" href=\"/page/privacy-policy\">\n              <u>{{ trans('Privacy Policy') }}</u>\n            </a>\n            {{ trans(' And Accepted It.') }}\n          </label>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between mt-40 gap-3\">\n        <button @click=\"prevStep\" v-if=\"step == 2\" class=\"btn-one btn btn-success\">\n          {{ trans('Prev') }}\n        </button>\n        <SpinnerBtn\n          v-if=\"step == 2\"\n          classes=\"btn-one d-flex align-items-center\"\n          :processing=\"form.processing\"\n          btn-text=\"Submit\"\n        />\n        <SpinnerBtn\n          classes=\"btn-one d-flex align-items-center\"\n          v-else\n          @click=\"nextStep\"\n          :processing=\"form.processing\"\n          btn-text=\"Next\"\n        />\n      </div>\n    </form>\n  </div>\n\n  <!-- Modal -->\n  <div\n    class=\"modal fade\"\n    id=\"suggestionModal\"\n    tabindex=\"-1\"\n    aria-labelledby=\"suggestionModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable\">\n      <div class=\"modal-content\">\n        <div class=\"d-flex align-items-center justify-content-between p-3\">\n          <p class=\"fs-5\" id=\"suggestionModalLabel\">{{ trans('Suggestions') }}</p>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <div class=\"modal-body\">\n          <ul class=\"list-group\" v-if=\"descriptionTemplates.length > 0\">\n            <li\n              class=\"d-flex align-items-center justify-content-between fs-7 mb-4 rounded p-2 shadow-sm\"\n              v-for=\"templates in descriptionTemplates\"\n              :key=\"templates.id\"\n            >\n              {{ createdDescription(templates.body) }}\n              <button\n                type=\"button\"\n                @click=\"() => (form.business.description = createdDescription(templates.body))\"\n                class=\"btn-four ms-3 p-2\"\n                data-bs-dismiss=\"modal\"\n              >\n                {{ trans('Select') }}\n              </button>\n            </li>\n          </ul>\n          <p v-else class=\"text-danger text-center\">\n            {{ trans(\"Opp's! Nothing Found\") }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { router, Head } from '@inertiajs/vue3'\nimport moment from 'moment'\nimport { ref, computed } from 'vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport notify from '@/Plugins/Admin/notify'\ndefineOptions({ layout: EmployerLayout })\n\nconst sorts = [\n  {\n    label: 'Complete',\n    value: 'complete'\n  },\n  {\n    label: 'Inactive',\n    value: 'inactive'\n  }\n]\nconst props = defineProps(['creditLogs', 'credit_fee', 'gateways'])\nconst { pickBy, formatCurrency, authUser } = sharedComposable()\nconst filterForm = ref({\n  order: '',\n  status: ''\n})\nconst activeGateway = ref(props.gateways[0]?.id || 0)\nconst credits = ref(null)\nconst conversionRate = ref(props.credit_fee)\nconst convertedAmount = computed(() => {\n  return credits.value / conversionRate.value\n})\nconst isProcessing = ref(false)\nconst filter = () => {\n  router.get(route('employer.credits.index'), pickBy(filterForm.value), {\n    preserveState: true\n  })\n}\nconst setOrder = (val) => {\n  filterForm.value.order = val\n  filter()\n}\nconst manualPayment = ref({\n  image: null,\n  comment: ''\n})\nconst findGateway = computed(() => {\n  return props.gateways.find((gateway) => gateway.id === activeGateway.value)\n})\nconst submit = (gateway_id) => {\n  if (findGateway.value.min_amount > convertedAmount.value) {\n    notify.danger(\n      'The minimum transaction amount is ' + formatCurrency(findGateway.value.min_amount)\n    )\n    return\n  }\n  if (findGateway.value.max_amount != -1) {\n    if (findGateway.value.max_amount < convertedAmount.value) {\n      notify.danger(\n        'The maximum transaction amount is ' + formatCurrency(findGateway.value.max_amount)\n      )\n      return\n    }\n  }\n  isProcessing.value = true\n  router.post(\n    route('credit.pay'),\n    {\n      gateway_id: gateway_id,\n      total: convertedAmount.value,\n      credits: credits.value,\n      manualPayment: findGateway.value.is_auto == 0 ? manualPayment.value : null\n    },\n    {\n      onFinish: () => {\n        credits.value = 0\n        isProcessing.value = false\n      }\n    }\n  )\n}\n</script>\n\n<template>\n\n  <Head title=\"Credit Logs\" />\n\n  <div class=\"d-sm-flex align-items-center justify-content-between lg-mb-30 mb-40\">\n    <h2 class=\"main-title m0\">{{ trans('Credit Logs') }}</h2>\n    <div class=\"d-flex xs-mt-30 ms-auto\">\n      <div class=\"nav nav-tabs tab-filter-btn me-4\">\n        <button @click=\"setOrder('')\" :class=\"{ active: filterForm.order === '' }\" class=\"nav-link\" type=\"button\">\n          {{ trans('All') }}\n        </button>\n        <button @click=\"setOrder('desc')\" class=\"nav-link\" :class=\"{ active: filterForm.order === 'desc' }\"\n          type=\"button\">\n          {{ trans('New') }}\n        </button>\n        <button @click=\"setOrder('asc')\" class=\"nav-link\" :class=\"{ active: filterForm.order === 'asc' }\" type=\"button\">\n          {{ trans('Old') }}\n        </button>\n      </div>\n      <div class=\"short-filter d-flex align-items-center ms-auto\">\n        <div class=\"text-dark fw-500 me-2\">{{ trans('Sort by') }}:</div>\n        <NiceSelect v-model=\"filterForm.status\" :options=\"sorts\" value-by=\"value\" label=\"label\" placeholder=\"Default\"\n          @change=\"filter\" />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card-box border-20 bg-white\">\n    <div class=\"tab-content\" id=\"nav-tabContent\">\n      <div class=\"tab-pane fade show active\" id=\"a1\" role=\"tabpanel\">\n        <div v-if=\"creditLogs.total\" class=\"table-responsive\">\n          <table class=\"job-alert-table table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">{{ trans('Transaction No') }}</th>\n                <th scope=\"col\">{{ trans('Credits') }}</th>\n                <th scope=\"col\">{{ trans('Price') }}</th>\n                <th scope=\"col\">{{ trans('Status') }}</th>\n                <th scope=\"col\">{{ trans('Gateway') }}</th>\n                <th scope=\"col\">{{ trans('Date') }}</th>\n              </tr>\n            </thead>\n            <tbody class=\"border-0\">\n              <tr :class=\"{\n                active: creditLog.status == 1,\n                pending: creditLog.status != 1\n              }\" v-for=\"creditLog in creditLogs.data\" :key=\"creditLog.id\">\n                <td>\n                  {{ creditLog.invoice_no }}\n                </td>\n                <td>\n                  {{ creditLog.credits }}\n                </td>\n                <td>\n                  {{ formatCurrency(creditLog.price) }}\n                </td>\n                <td>\n                  <div class=\"job-status\">\n                    {{ creditLog.status == 1 ? trans('Complete') : trans('Pending') }}\n                  </div>\n                </td>\n                <td>\n                  {{ creditLog.gateway.name }}\n                </td>\n                <td>\n                  <p class=\"text-end\">{{ moment(creditLog.updated_at).format('DD MMM Y') }}</p>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <!-- /.table job-alert-table -->\n        </div>\n        <div class=\"text-center\" v-else>{{ trans('No record found') }}</div>\n      </div>\n    </div>\n  </div>\n  <!-- /.card-box -->\n\n  <div class=\"d-flex justify-content-end mt-30\">\n    <Paginate :links=\"creditLogs.links\" />\n  </div>\n  <!-- creditModal Modal -->\n  <div class=\"modal fade\" id=\"creditModal\" tabindex=\"-1\" aria-labelledby=\"creditModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n      <div class=\"modal-content p-4\">\n        <div class=\"p-2\">\n          <p class=\"fs-5 text-center\" id=\"creditModalLabel\">{{ trans('Buy Credits') }}</p>\n        </div>\n        <div class=\"modal-body px-5\">\n          <p class=\"text-center\">\n            {{ conversionRate }} {{ trans('Credits') }} =\n            {{ formatCurrency(1) }}\n          </p>\n\n          <input class=\"w-100 rounded border p-3\" step=\"5\" type=\"number\" v-model.number=\"credits\"\n            placeholder=\"Enter Credit amount\" />\n          <p class=\"fw-bold mt-2 text-left\">\n            {{ trans('Total:') }} {{ formatCurrency(convertedAmount || 0) }}\n          </p>\n          <div class=\"row gateways my-4 px-3\">\n            <template v-for=\"gateway in gateways\" :key=\"gateway.id\">\n              <button class=\"col-sm-2 position-relative rounded\" @click=\"activeGateway = gateway.id\"\n                :class=\"{ border: activeGateway == gateway.id }\">\n                <div v-show=\"activeGateway == gateway.id\">\n                  <i\n                    class=\"fas fa-check rounded-circle position-absolute start-100 translate-middle bg-success top-0 p-1 text-white\"></i>\n                </div>\n\n                <img :src=\"gateway.logo\" class=\"rounded p-1\" />\n              </button>\n            </template>\n          </div>\n          <template v-for=\"gateway in gateways\" :key=\"gateway.id\">\n            <div v-show=\"activeGateway === gateway.id\" class=\"col-sm-12 gateway-form\" :id=\"'gateway-form' + gateway.id\">\n              <form method=\"post\" @submit.prevent=\"submit(gateway.id)\" enctype=\"multipart/form-data\">\n                <div class=\"table-responsive\">\n                  <table class=\"table-borderless text-fs-sm table\">\n                    <template v-if=\"gateway.charge != 0\">\n                      <tbody>\n                        <tr class=\"border\">\n                          <td class=\"border p-2\">\n                            {{ trans('Gateway Charge: ') }}\n                          </td>\n                          <td class=\"text-center\">\n                            {{ formatCurrency(gateway.charge) }}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </template>\n                  </table>\n\n                  <template v-if=\"gateway.comment != null\">\n                    <table class=\"table-borderless mt-2 table\">\n                      <tbody>\n                        <tr>\n                          <td class=\"fw-500 text-fs-sm\">\n                            {{ trans('Payment Instruction: ') }}\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <td class=\"text-fs-sm\">\n                            {{ gateway.comment }}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </template>\n\n                  <template v-if=\"gateway.phone_required == 1\">\n                    <div class=\"form-group mt-2\">\n                      <label class=\"fw-500 text-fs-sm my-2\">{{ trans('Your phone number') }}</label>\n                      <input type=\"number\" name=\"phone\" placeholder=\"Your phone number\" class=\"form-control\" required\n                        :value=\"authUser.phone\" />\n                    </div>\n                  </template>\n                  <template v-if=\"gateway.is_auto == 0\">\n                    <div class=\"form-group mt-1\">\n                      <label class=\"fw-500 text-fs-sm my-2\">{{\n                        trans('Submit your payment proof')\n                        }}</label>\n                      <input @input=\"(e) => {\n                          manualPayment.image = e.target.files[0]\n                        }\n                        \" type=\"file\" name=\"image\" class=\"form-control\" required accept=\"image/*\" />\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"fw-500 text-fs-sm my-2\">{{ trans('Comment') }}</label>\n                      <textarea v-model=\"manualPayment.comment\" class=\"form-control\" required name=\"comment\"\n                        placeholder=\"comment\" maxlength=\"500\"></textarea>\n                    </div>\n                  </template>\n                </div>\n                <button :disabled=\"isProcessing\" type=\"submit\" class=\"btn-one w-100 mt-4\">\n                  {{ trans('Pay Now') }}\n                </button>\n              </form>\n            </div>\n          </template>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, router } from '@inertiajs/vue3'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport trans from '@/Composables/transComposable'\nimport notify from '@/Plugins/Admin/notify'\nimport VueApexCharts from 'vue3-apexcharts'\nimport { reactive, computed } from 'vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport { ref } from 'vue'\nimport moment from 'moment'\n\ndefineOptions({ layout: EmployerLayout })\nconst props = defineProps([\n  'job_posted',\n  'shortlisted',\n  'applications',\n  'saved_candidate',\n  'posted_jobs',\n  'KYC_MUST_VERIFIED',\n  'activeChartFilterBtn',\n  'visits',\n  'selected_job',\n  'user'\n])\n\nconst { authUser, pickBy } = sharedComposable()\nconst authUserIdVerified = props.KYC_MUST_VERIFIED ? authUser.value.kyc_verified_at != null : true\nconst selectedJob = ref(props.selected_job ?? '')\n\nconst jobJobVisits = () => {\n  if (selectedJob.value) {\n    router.get(location.href, pickBy({ selected_job: selectedJob.value }), {\n      preserveScroll: true,\n      preserveState: true\n    })\n  }\n}\n\nconst deleteJob = (id) => {\n  form.delete(route('employer.jobs.destroy', id), {\n    onSuccess: () => {\n      notify.success(trans('Job has been deleted successfully'))\n    },\n    onError: () => {\n      notify.danger(trans(\"You can' delete this job\"))\n    }\n  })\n}\n\nconst chartFilterBtns = ['day', 'week', 'month', 'year']\n\nconst chart = computed(() => {\n  return {\n    series: [\n      {\n        name: 'views',\n        data: props.visits.map((item) => item.views)\n      }\n    ],\n    chartOptions: {\n      colors: ['#69ae84', '#69ae84', '#69ae84'],\n      chart: {\n        height: 350,\n        type: 'area',\n        toolbar: {\n          show: false\n        }\n      },\n      yaxis: {\n        show: false,\n        opposite: true,\n        labels: {\n          formatter: function (val) {\n            return val.toFixed(0)\n          }\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'smooth'\n      },\n      xaxis: {\n        type: 'string',\n        categories: props.visits.map((item) => item.date)\n      }\n    }\n  }\n})\n\nconst isNearExpiry = computed(() => {\n  if (props.user.will_expire) {\n    const userWillExpireDate = moment(props.user.will_expire)\n    const daysDifference = userWillExpireDate.diff(moment(), 'days')\n    return daysDifference < 7\n  }\n  return false\n})\nconst hasExpired = computed(() => {\n  if (props.user.will_expire) {\n    const userWillExpireDate = moment(props.user.will_expire)\n    return userWillExpireDate.isBefore(moment())\n  }\n  return false\n})\n</script>\n\n<template>\n  <Head title=\"Dashboard | Employer Panel\" />\n\n  <h2 class=\"main-title\">{{ trans('Dashboard') }}</h2>\n\n  <div v-if=\"authUserIdVerified\">\n    <div class=\"row\">\n      <div class=\"col-lg-3 col-6\">\n        <div class=\"dash-card-one border-30 position-relative mb-15 bg-white\">\n          <div class=\"d-sm-flex align-items-center justify-content-between\">\n            <div\n              class=\"icon rounded-circle d-flex align-items-center justify-content-center order-sm-1\"\n            >\n              <img src=\"/assets/dashboard/images/icon/icon_12.svg\" alt=\"\" class=\"lazy-img\" />\n            </div>\n            <div class=\"order-sm-0\">\n              <div class=\"value fw-500\">{{ props.job_posted }}</div>\n              <span>{{ trans('Posted Job') }}</span>\n            </div>\n          </div>\n        </div>\n        <!-- /.dash-card-one -->\n      </div>\n      <div class=\"col-lg-3 col-6\">\n        <div class=\"dash-card-one border-30 position-relative mb-15 bg-white\">\n          <div class=\"d-sm-flex align-items-center justify-content-between\">\n            <div\n              class=\"icon rounded-circle d-flex align-items-center justify-content-center order-sm-1\"\n            >\n              <img src=\"/assets/dashboard/images/icon/icon_13.svg\" alt=\"\" class=\"lazy-img\" />\n            </div>\n            <div class=\"order-sm-0\">\n              <div class=\"value fw-500\">{{ props.shortlisted }}</div>\n              <span>{{ trans('Shortlisted') }}</span>\n            </div>\n          </div>\n        </div>\n        <!-- /.dash-card-one -->\n      </div>\n      <div class=\"col-lg-3 col-6\">\n        <div class=\"dash-card-one border-30 position-relative mb-15 bg-white\">\n          <div class=\"d-sm-flex align-items-center justify-content-between\">\n            <div\n              class=\"icon rounded-circle d-flex align-items-center justify-content-center order-sm-1\"\n            >\n              <img src=\"/assets/dashboard/images/icon/icon_14.svg\" class=\"lazy-img\" />\n            </div>\n            <div class=\"order-sm-0\">\n              <div class=\"value fw-500\">{{ props.applications }}</div>\n              <span>{{ trans('Application') }}</span>\n            </div>\n          </div>\n        </div>\n        <!-- /.dash-card-one -->\n      </div>\n      <div class=\"col-lg-3 col-6\">\n        <div class=\"dash-card-one border-30 position-relative mb-15 bg-white\">\n          <div class=\"d-sm-flex align-items-center justify-content-between\">\n            <div\n              class=\"icon rounded-circle d-flex align-items-center justify-content-center order-sm-1\"\n            >\n              <img src=\"/assets/dashboard/images/icon/icon_15.svg\" alt=\"img\" class=\"lazy-img\" />\n            </div>\n            <div class=\"order-sm-0\">\n              <div class=\"value fw-500\">{{ props.saved_candidate }}</div>\n              <span>{{ trans('Save Candidate') }}</span>\n            </div>\n          </div>\n        </div>\n        <!-- /.dash-card-one -->\n      </div>\n    </div>\n\n    <div class=\"mt-20\">\n      <!-- alert messages -->\n      <Link\n        :href=\"route('employer.membership.index')\"\n        class=\"alert alert-danger border-20 d-block pb-0\"\n        v-if=\"!user.will_expire || !user.plan || !user.plan_id\"\n      >\n        <p>{{ trans(\"You haven't purchased any subscription plans yet.\") }}</p>\n      </Link>\n      <a\n        :href=\"route('employer.membership.payment', user.plan_id)\"\n        class=\"alert alert-danger border-20 d-block pb-0\"\n        v-if=\"hasExpired\"\n      >\n        <p>{{ trans('Your subscription has already expired') }}</p>\n      </a>\n      <Link\n        :href=\"route('employer.membership.index')\"\n        class=\"alert alert-warning border-20 d-block pb-0\"\n        v-else-if=\"isNearExpiry\"\n      >\n        <p>\n          {{ trans('Your current subscription plan is about to expire in less than 7 days') }}\n        </p>\n      </Link>\n      <!-- end alert messages -->\n    </div>\n\n    <div class=\"row d-flex lg-pt-10 pt-5\">\n      <div class=\"col-xl-7 col-lg-6 d-flex flex-column\">\n        <div class=\"user-activity-chart border-20 mt-30 h-100 bg-white\">\n          <h4 class=\"dash-title-two\">{{ trans('Job Views') }}</h4>\n          <div v-if=\"posted_jobs.length\" class=\"d-sm-flex align-items-center job-list\">\n            <div class=\"fw-500 pe-3\">{{ trans('Jobs') }}:</div>\n            <div class=\"flex-fill xs-mt-10\">\n              <NiceSelect\n                v-model=\"selectedJob\"\n                :options=\"posted_jobs\"\n                label=\"title\"\n                value-by=\"slug\"\n                placeholder=\"Select Job\"\n                @change=\"jobJobVisits\"\n              />\n            </div>\n          </div>\n          <div class=\"mt-20 pe-5 ps-5\">\n            <div class=\"d-flex justify-content-around chart-filter-area mb-4\">\n              <Link\n                v-for=\"btn in chartFilterBtns\"\n                :key=\"btn\"\n                :href=\"\n                  route(\n                    'employer.dashboard',\n                    pickBy({\n                      chart_filter_by: btn,\n                      selected_job: selectedJob\n                    })\n                  )\n                \"\n                :class=\"{ active: btn == activeChartFilterBtn }\"\n                class=\"text-capitalize\"\n                preserve-scroll\n                preserve-state\n              >\n                {{ btn }}\n              </Link>\n            </div>\n            <div id=\"chart\">\n              <VueApexCharts\n                type=\"area\"\n                height=\"350\"\n                :options=\"chart.chartOptions\"\n                :series=\"chart.series\"\n              >\n              </VueApexCharts>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xl-5 col-lg-6 d-flex\">\n        <div class=\"recent-job-tab border-20 mt-30 w-100 bg-white\">\n          <h4 class=\"dash-title-two\">{{ trans('Posted Job') }}</h4>\n          <div class=\"wrapper\">\n            <template v-if=\"props.posted_jobs\">\n              <div\n                v-for=\"(item, index) in props.posted_jobs\"\n                :key=\"index\"\n                class=\"job-item-list d-flex align-items-center\"\n              >\n                <div>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    version=\"1.1\"\n                    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                    width=\"45\"\n                    height=\"45\"\n                    x=\"0\"\n                    y=\"0\"\n                    viewBox=\"0 0 134 134\"\n                    style=\"enable-background: new 0 0 512 512\"\n                    xml:space=\"preserve\"\n                    class=\"\"\n                  >\n                    <g>\n                      <path\n                        fill=\"#e5e8ec\"\n                        d=\"m130.11 35.32-37.84 74.87c-.91 1.8-3.1 2.52-4.89 1.61L32.65 84.15c-1.8-.91-2.52-3.1-1.61-4.89l31.32-61.98 24.31-7.99 41.83 21.14c1.79.9 2.51 3.1 1.61 4.89z\"\n                        opacity=\"1\"\n                        data-original=\"#e5e8ec\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        fill=\"#ced2d6\"\n                        d=\"m86.67 9.29-6.52 12.9c-.91 1.8-3.1 2.52-4.89 1.61l-12.9-6.52z\"\n                        opacity=\"1\"\n                        data-original=\"#ced2d6\"\n                      ></path>\n                      <path\n                        d=\"M89.02 112.7c-.64 0-1.28-.15-1.86-.45L32.43 84.59a4.151 4.151 0 0 1-1.83-5.57l31.32-61.98a.48.48 0 0 1 .29-.25L86.52 8.8a.5.5 0 0 1 .38.03l41.83 21.14c.99.5 1.72 1.35 2.07 2.4s.26 2.17-.24 3.16L92.73 110.4c-.5.99-1.35 1.72-2.4 2.07-.44.15-.88.23-1.31.23zm-26.3-95.01L31.49 79.48a3.142 3.142 0 0 0 1.39 4.22l54.73 27.65c.75.38 1.6.44 2.4.18s1.45-.82 1.82-1.57l37.83-74.87c.38-.75.44-1.6.18-2.4s-.82-1.45-1.57-1.82L86.63 9.83z\"\n                        fill=\"#000000\"\n                        opacity=\"1\"\n                        data-original=\"#000000\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        d=\"M76.9 24.69c-.64 0-1.28-.15-1.86-.45l-12.9-6.52c-.18-.09-.29-.28-.27-.48s.15-.37.34-.44l24.31-7.99c.19-.06.4 0 .54.15.13.15.16.37.07.55l-6.52 12.9c-.5.99-1.35 1.72-2.4 2.07-.44.14-.88.21-1.31.21zm-13.24-7.32 11.82 5.97c.75.38 1.6.44 2.4.18s1.45-.82 1.82-1.57l5.97-11.82zM110.73 56.26c-.08 0-.15-.02-.23-.05L63.69 32.55a.49.49 0 0 1-.22-.67c.13-.25.43-.34.67-.22l46.82 23.66c.25.12.35.43.22.67-.09.17-.27.27-.45.27zM106.47 64.69c-.08 0-.15-.02-.23-.05L59.43 40.97a.49.49 0 0 1-.22-.67.5.5 0 0 1 .67-.22l46.82 23.66c.25.12.35.43.22.67-.09.18-.26.28-.45.28zM102.22 73.11c-.08 0-.15-.02-.23-.05L55.18 49.4a.49.49 0 0 1-.22-.67.5.5 0 0 1 .67-.22l46.82 23.66c.25.12.35.43.22.67-.09.17-.27.27-.45.27zM97.96 81.53c-.08 0-.15-.02-.23-.05L50.92 57.82a.49.49 0 0 1-.22-.67c.13-.25.43-.34.67-.22l46.82 23.66c.25.12.35.43.22.67-.09.17-.26.27-.45.27zM93.71 89.95c-.08 0-.15-.02-.23-.05L46.66 66.24a.49.49 0 0 1-.22-.67.49.49 0 0 1 .67-.22l46.82 23.66c.25.12.35.43.22.67-.08.17-.26.27-.44.27zM89.45 98.38c-.08 0-.15-.02-.23-.05L42.41 74.66a.49.49 0 0 1-.22-.67.49.49 0 0 1 .67-.22l46.82 23.66c.25.12.35.43.22.67-.09.18-.27.28-.45.28z\"\n                        fill=\"#000000\"\n                        opacity=\"1\"\n                        data-original=\"#000000\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        fill=\"#297d59\"\n                        d=\"M94.27 69.82v47.61c0 4.02-3.26 7.29-7.29 7.29H12.56c-4.02 0-7.29-3.26-7.29-7.29V69.82z\"\n                        opacity=\"1\"\n                        data-original=\"#46cead\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        fill=\"#3dbf9d\"\n                        d=\"M94.27 69.82v17.2a15.78 15.78 0 0 1-11.64 5.1H16.91c-4.55 0-8.73-1.94-11.64-5.11V69.82z\"\n                        opacity=\"1\"\n                        data-original=\"#3dbf9d\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        fill=\"#fecd57\"\n                        d=\"M80.58 83.2v21.87a8.52 8.52 0 0 1-8.52 8.52H27.49a8.52 8.52 0 0 1-8.52-8.52V83.2z\"\n                        opacity=\"1\"\n                        data-original=\"#fecd57\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        fill=\"#edbb4a\"\n                        d=\"M18.97 83.2h61.61v8.92H18.97z\"\n                        opacity=\"1\"\n                        data-original=\"#edbb4a\"\n                      ></path>\n                      <path\n                        d=\"M72.05 114.09H27.49c-4.97 0-9.02-4.05-9.02-9.02V83.2c0-.28.22-.5.5-.5h61.61c.28 0 .5.22.5.5v21.87c-.01 4.97-4.05 9.02-9.03 9.02zM19.47 83.7v21.37c0 4.42 3.6 8.02 8.02 8.02h44.56c4.42 0 8.02-3.6 8.02-8.02V83.7z\"\n                        fill=\"#000000\"\n                        opacity=\"1\"\n                        data-original=\"#000000\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        d=\"M86.99 125.21H12.56c-4.29 0-7.79-3.49-7.79-7.79v-47.6c0-.28.22-.5.5-.5h89c.28 0 .5.22.5.5v47.61c0 4.29-3.49 7.78-7.78 7.78zM5.77 70.32v47.11c0 3.74 3.04 6.79 6.79 6.79h74.43c3.74 0 6.79-3.04 6.79-6.79V70.32z\"\n                        fill=\"#000000\"\n                        opacity=\"1\"\n                        data-original=\"#000000\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        fill=\"#297d59\"\n                        d=\"m95.97 64.61-2.42 11.87A14.328 14.328 0 0 1 79.5 87.95H20.04c-6.81 0-12.69-4.79-14.05-11.47L3.57 64.61a3.64 3.64 0 0 1 3.57-4.37H92.4c2.3 0 4.03 2.11 3.57 4.37z\"\n                        opacity=\"1\"\n                        data-original=\"#46cead\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        d=\"M79.5 88.45H20.04c-7.02 0-13.13-4.99-14.54-11.87L3.08 64.71c-.25-1.22.06-2.48.85-3.45s1.96-1.52 3.21-1.52H92.4c1.25 0 2.42.56 3.21 1.52s1.1 2.22.85 3.45l-2.42 11.87c-1.41 6.87-7.52 11.87-14.54 11.87zM7.14 60.74c-.95 0-1.83.42-2.43 1.16-.6.73-.83 1.69-.65 2.62l2.42 11.87c1.31 6.42 7.01 11.07 13.56 11.07H79.5c6.55 0 12.25-4.66 13.56-11.07l2.42-11.87a3.142 3.142 0 0 0-3.08-3.77H7.14z\"\n                        fill=\"#000000\"\n                        opacity=\"1\"\n                        data-original=\"#000000\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        fill=\"#434a54\"\n                        d=\"M59.26 82.75v10.84c0 1.34-1.09 2.43-2.43 2.43H45.65c-1.34 0-2.43-1.09-2.43-2.43V82.75c0-1.34 1.09-2.43 2.43-2.43h11.18c1.35 0 2.43 1.09 2.43 2.43z\"\n                        opacity=\"1\"\n                        data-original=\"#434a54\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        d=\"M56.84 96.52H45.65c-1.61 0-2.93-1.31-2.93-2.93V82.75c0-1.61 1.31-2.93 2.93-2.93h11.18c1.61 0 2.93 1.31 2.93 2.93v10.84c0 1.61-1.31 2.93-2.92 2.93zm-11.19-15.7c-1.06 0-1.93.87-1.93 1.93v10.84c0 1.06.87 1.93 1.93 1.93h11.18c1.06 0 1.93-.87 1.93-1.93V82.75c0-1.06-.87-1.93-1.93-1.93z\"\n                        fill=\"#000000\"\n                        opacity=\"1\"\n                        data-original=\"#000000\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        fill=\"#778493\"\n                        d=\"M65.82 56.67h-5.2v-2.78c0-.72-.58-1.3-1.3-1.3H40.23c-.72 0-1.3.58-1.3 1.3v2.78h-5.2v-2.78c0-3.59 2.92-6.51 6.51-6.51h19.09c3.59 0 6.51 2.92 6.51 6.51v2.78z\"\n                        opacity=\"1\"\n                        data-original=\"#778493\"\n                      ></path>\n                      <path\n                        d=\"M65.82 57.17h-5.2c-.28 0-.5-.22-.5-.5v-2.78c0-.44-.36-.8-.8-.8H40.23c-.44 0-.8.36-.8.8v2.78c0 .28-.22.5-.5.5h-5.2c-.28 0-.5-.22-.5-.5v-2.78c0-3.86 3.14-7.01 7.01-7.01h19.09c3.86 0 7.01 3.14 7.01 7.01v2.78c-.02.27-.24.5-.52.5zm-4.7-1h4.2v-2.28c0-3.31-2.69-6.01-6.01-6.01H40.23c-3.31 0-6.01 2.69-6.01 6.01v2.28h4.2v-2.28c0-.99.81-1.8 1.8-1.8h19.09c.99 0 1.8.81 1.8 1.8v2.28z\"\n                        fill=\"#000000\"\n                        opacity=\"1\"\n                        data-original=\"#000000\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        fill=\"#434a54\"\n                        d=\"M31.61 56.67h9.43v3.57h-9.43z\"\n                        opacity=\"1\"\n                        data-original=\"#434a54\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        d=\"M41.04 60.74h-9.43c-.28 0-.5-.22-.5-.5v-3.57c0-.28.22-.5.5-.5h9.43c.28 0 .5.22.5.5v3.57c0 .28-.22.5-.5.5zm-8.93-1h8.43v-2.57h-8.43z\"\n                        fill=\"#000000\"\n                        opacity=\"1\"\n                        data-original=\"#000000\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        fill=\"#434a54\"\n                        d=\"M58.5 56.67h9.43v3.57H58.5z\"\n                        opacity=\"1\"\n                        data-original=\"#434a54\"\n                        class=\"\"\n                      ></path>\n                      <path\n                        d=\"M67.93 60.74H58.5c-.28 0-.5-.22-.5-.5v-3.57c0-.28.22-.5.5-.5h9.43c.28 0 .5.22.5.5v3.57c0 .28-.23.5-.5.5zm-8.93-1h8.43v-2.57H59z\"\n                        fill=\"#000000\"\n                        opacity=\"1\"\n                        data-original=\"#000000\"\n                        class=\"\"\n                      ></path>\n                    </g>\n                  </svg>\n                </div>\n                <div class=\"job-title\">\n                  <h6 class=\"mb-5\">\n                    <Link :href=\"route('jobs.show', item.slug)\">{{ item.title }}</Link>\n                  </h6>\n                  <div class=\"meta\">\n                    <span>{{ item.type }}</span> . <span>{{ item.country?.name }}</span>\n                  </div>\n                </div>\n                <div class=\"job-action\">\n                  <button\n                    class=\"action-btn dropdown-toggle\"\n                    type=\"button\"\n                    data-bs-toggle=\"dropdown\"\n                    aria-expanded=\"false\"\n                  >\n                    <span></span>\n                  </button>\n                  <ul class=\"dropdown-menu\">\n                    <li>\n                      <Link class=\"dropdown-item\" :href=\"route('jobs.show', item.slug)\">{{\n                        trans('View Job')\n                      }}</Link>\n                    </li>\n                    <li>\n                      <a class=\"dropdown-item\" href=\"#\" @click=\"deleteJob(item.id)\">{{\n                        trans('Delete')\n                      }}</a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </template>\n\n            <p v-else class=\"text-muted mt-20 text-center\">\n              {{ trans('No item found') }}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card-box border-20 bg-white\" v-else>\n    <div class=\"alert alert-warning\">\n      <p>{{ trans('You need to submit you KYC info') }}</p>\n      <Link class=\"btn-two\" :href=\"route('employer.kyc.create')\">{{ trans('Verify KYC') }}</Link>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, useForm } from '@inertiajs/vue3'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport ckeEditor from '@/Plugins/ckeEditor'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport { ref } from 'vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\ndefineOptions({ layout: EmployerLayout })\nconst { cke, ClassicEditor } = ckeEditor()\nconst { textExcerpt, pickBy, copyToClipboard } = sharedComposable()\nconst props = defineProps(['aiGenerated'])\n\nconst form = useForm({\n  ...props.aiGenerated\n})\nconst documentName = ref('')\nconst submit = () => {\n  form.patch(route('employer.ai-generated-history.update', props.aiGenerated.uuid), {\n    onSuccess: () => {\n      form.reset()\n      notify.success('Submitted Successfully')\n    }\n  })\n}\nfunction downloadHTMLFile(textContent, name) {\n  const blob = new Blob([textContent], { type: 'text/html' })\n  const a = document.createElement('a')\n  a.href = URL.createObjectURL(blob)\n  a.download = name ? name.replace(' ', '-') : 'untitled.html'\n\n  a.click()\n  URL.revokeObjectURL(url)\n}\n</script>\n\n<template>\n  <Head :title=\"trans('History')\" />\n  <div class=\"row justify-content-center message-wrapper mb-10\">\n    <form @submit.prevent=\"submit\" class=\"col-lg-8 rounded bg-white p-4\">\n      <p class=\"fs-4 pt-3\">{{ trans('Template') }} : {{ aiGenerated.ai_template.title }}</p>\n      <div class=\"user-activity-chart h-100 rounded\">\n        <div class=\"d-flex\">\n          <button class=\"me-1\" type=\"button\" @click=\"copyToClipboard(form.content)\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"22\"\n              height=\"22\"\n              viewBox=\"0 0 24 24\"\n              style=\"fill: rgba(0, 0, 0, 0.6)\"\n            >\n              <path\n                d=\"M19.937 8.68c-.011-.032-.02-.063-.033-.094a.997.997 0 0 0-.196-.293l-6-6a.997.997 0 0 0-.293-.196c-.03-.014-.062-.022-.094-.033a.991.991 0 0 0-.259-.051C13.04 2.011 13.021 2 13 2H6c-1.103 0-2 .897-2 2v16c0 1.103.897 2 2 2h12c1.103 0 2-.897 2-2V9c0-.021-.011-.04-.013-.062a.99.99 0 0 0-.05-.258zM16.586 8H14V5.414L16.586 8zM6 20V4h6v5a1 1 0 0 0 1 1h5l.002 10H6z\"\n              ></path>\n            </svg>\n          </button>\n          <button class=\"ms-1\" type=\"button\" @click=\"downloadHTMLFile(form.content, documentName)\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"22\"\n              height=\"22\"\n              viewBox=\"0 0 24 24\"\n              style=\"fill: rgba(0, 0, 0, 0.6)\"\n            >\n              <path d=\"m12 16 4-5h-3V4h-2v7H8z\"></path>\n              <path d=\"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\"></path>\n            </svg>\n          </button>\n        </div>\n        <div class=\"mb-20 mt-20\">\n          <input\n            v-model=\"documentName\"\n            type=\"text\"\n            class=\"w-100 rounded border-0 p-2\"\n            placeholder=\"Untitled Document...\"\n          />\n        </div>\n        <div class=\"ai-ck-section\">\n          <cke :editor=\"ClassicEditor\" v-model=\"form.content\" />\n          <InputFieldError class=\"mb-5\" :message=\"form.errors.content\" />\n        </div>\n        <div>\n          <SpinnerBtn :processing=\"form.processing\" btn-text=\"Update\" />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n","<script setup>\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { router, Head } from '@inertiajs/vue3'\nimport moment from 'moment'\nimport { ref, computed } from 'vue'\nimport trans from '@/Composables/transComposable'\ndefineOptions({ layout: EmployerLayout })\n\nconst props = defineProps(['aiGenerated', 'total', 'totalCharges', 'totalResults', 'request'])\nconst stats = computed(() => {\n  return [\n    {\n      value: props.total,\n      title: trans('Total'),\n      iconSrc: '/assets/dashboard/images/icon/icon_43.svg'\n    },\n    {\n      value: props.totalCharges,\n      title: trans('Total Charges'),\n      iconSrc: '/assets/dashboard/images/icon/money.png'\n    },\n    {\n      value: props.totalResults,\n      title: trans('Total Results'),\n      iconSrc: '/assets/dashboard/images/icon/icon_14.svg'\n    }\n  ]\n})\nconst { pickBy, textExcerpt, formatCurrency } = sharedComposable()\nconst filterForm = ref({\n  order: props.request?.order ?? ''\n})\nconst filter = () => {\n  router.get(route('employer.ai-generated-history.index'), pickBy(filterForm.value), {\n    preserveState: true\n  })\n}\nconst setOrder = (val) => {\n  filterForm.value.order = val\n  filter()\n}\n</script>\n\n<template>\n  <Head title=\"Ai History\" />\n\n  <div class=\"d-sm-flex align-items-center justify-content-between lg-mb-30 mb-40\">\n    <h2 class=\"main-title m0\">{{ trans('Ai Generated History') }}</h2>\n    <div class=\"d-flex xs-mt-30 ms-auto\">\n      <div class=\"nav nav-tabs tab-filter-btn me-4\">\n        <button\n          @click=\"setOrder('')\"\n          :class=\"{ active: filterForm.order === '' }\"\n          class=\"nav-link\"\n          type=\"button\"\n        >\n          {{ trans('All') }}\n        </button>\n        <button\n          @click=\"setOrder('desc')\"\n          class=\"nav-link\"\n          :class=\"{ active: filterForm.order === 'desc' }\"\n          type=\"button\"\n        >\n          {{ trans('New') }}\n        </button>\n        <button\n          @click=\"setOrder('asc')\"\n          class=\"nav-link\"\n          :class=\"{ active: filterForm.order === 'asc' }\"\n          type=\"button\"\n        >\n          {{ trans('Old') }}\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"row my-3\">\n    <div class=\"col-lg-4 col-6\" v-for=\"stat in stats\" :key=\"stat\">\n      <div class=\"dash-card-one border-30 position-relative mb-15 bg-white\">\n        <div class=\"d-sm-flex align-items-center justify-content-between\">\n          <div\n            class=\"icon rounded-circle d-flex align-items-center justify-content-center order-sm-1\"\n          >\n            <img v-lazy=\"stat.iconSrc\" alt=\"lazy\" class=\"lazy-img\" />\n          </div>\n          <div class=\"order-sm-0\">\n            <div class=\"value fw-500\">{{ stat.value }}</div>\n            <span>{{ stat.title }}</span>\n          </div>\n        </div>\n      </div>\n      <!-- /.dash-card-one -->\n    </div>\n  </div>\n  <div class=\"card-box border-20 bg-white\">\n    <div class=\"tab-content\" id=\"nav-tabContent\">\n      <div class=\"tab-pane fade show active\" id=\"a1\" role=\"tabpanel\">\n        <div v-if=\"aiGenerated.total\" class=\"table-responsive\">\n          <table class=\"job-alert-table table\">\n            <thead>\n              <tr>\n                <th>{{ trans('Template') }}</th>\n\n                <th>{{ trans('Charge') }}</th>\n\n                <th class=\"text-center\">\n                  {{ trans('Total Words') }}\n                </th>\n\n                <th>\n                  <p class=\"text-end\">{{ trans('Date') }}</p>\n                </th>\n              </tr>\n            </thead>\n            <tbody class=\"border-0\">\n              <tr v-for=\"generated in aiGenerated.data\" :key=\"generated.id\">\n                <td>\n                  <Link :href=\"route('employer.ai-generated-history.edit', generated.uuid)\">\n                    {{ textExcerpt(generated.ai_template.title, 30) }}\n                  </Link>\n                </td>\n\n                <td>\n                  {{ formatCurrency(generated.charge) }}\n                </td>\n\n                <td class=\"text-center\">\n                  {{ generated.length }}\n                </td>\n\n                <td class=\"text-left\">\n                  <p class=\"text-end\">{{ moment(generated.updated_at).format('DD MMM, YYYY') }}</p>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <!-- /.table job-alert-table -->\n        </div>\n        <div class=\"text-center\" v-else>{{ trans('No record found') }}</div>\n      </div>\n    </div>\n  </div>\n  <!-- /.card-box -->\n\n  <div class=\"d-flex justify-content-end mt-30\">\n    <Paginate :links=\"aiGenerated.links\" />\n  </div>\n</template>\n","<script setup>\nimport { Head, useForm } from '@inertiajs/vue3'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport ckeEditor from '@/Plugins/ckeEditor'\nimport Multiselect from '@vueform/multiselect'\nimport notify from '@/Plugins/Admin/notify'\nimport axios from 'axios'\nimport { ref, computed } from 'vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport moment from 'moment'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\ndefineOptions({ layout: EmployerLayout })\nconst { cke, ClassicEditor } = ckeEditor()\nconst { authUser, pickBy, textExcerpt } = sharedComposable()\nconst props = defineProps([\n  'services',\n  'countries',\n  'plan',\n  'job_count',\n  'currencies',\n  'shortcodes',\n  'user'\n])\nconst form = useForm({\n  title: '',\n  description: '',\n  short_description: '',\n  type: '',\n  service_id: '',\n  category_id: '',\n  salary_type: '',\n  currency: 'USD',\n  min_salary: 0,\n  max_salary: 0,\n  experience: '',\n  expertise: '',\n  featured_expire_at: '',\n  attachment: '',\n  address: '',\n  apply_type: 0,\n  country_id: '',\n  state_id: '',\n  skills: [],\n  fields: [],\n  meta: {\n    apply_type: {\n      value: null\n    },\n    map: {\n      latitude: '',\n      longitude: ''\n    },\n    is_remote: false\n  },\n  expired_at: ''\n})\nconst shortCodesForm = computed(() => {\n  return {\n    company_name: props.user.meta?.company?.name,\n    company_size: props.user.meta?.company?.size,\n    year_of_establishment: props.user?.meta.company?.year_of_establishment,\n    company_address: props.user.meta?.company?.address,\n    company_intro: props.user.meta?.company?.intro,\n    job_name: form.title || 'Job Title'\n  }\n})\nconst descriptionTemplates = ref([])\nconst companyShortcodes = ref({})\nconst categories = ref([])\nconst tags = ref([])\nconst states = ref([])\nconst fields = ref([\n  {\n    label: '',\n    type: ''\n  }\n])\nconst applyTypes = ref([\n  { label: 'Default', value: 0 },\n  { label: 'Email', value: 1 },\n  { label: 'External', value: 2 }\n])\nconst hasExpired = computed(() => {\n  if (authUser.value.will_expire) {\n    const userWillExpireDate = moment(authUser.value.will_expire)\n    return userWillExpireDate.isBefore(moment())\n  }\n  return false\n})\nconst today = () => {\n  let currentDate = new Date()\n  let year = currentDate.getFullYear()\n  let month = (currentDate.getMonth() + 1).toString().padStart(2, '0')\n  let day = currentDate.getDate().toString().padStart(2, '0')\n\n  return year + '-' + month + '-' + day\n}\nconst maxExpiredDate = computed(() => {\n  if (form.expired_at) {\n    return moment(form.expired_at)\n      .clone()\n      .add(props.plan.live_job_for_days, 'days')\n      .format('YYYY-MM-DD')\n  }\n  return moment(authUser.value.will_expire).format('YYYY-MM-DD')\n})\nconst submit = () => {\n  if (!props.plan || !authUser.value.will_expire) {\n    notify.danger('You have not purchased a plan.')\n    return\n  }\n  if (hasExpired.value) {\n    notify.danger('Your subscription has expired. Please renew it.')\n    return\n  }\n  if (props.plan.job_limit !== -1 && props.job_count >= props.plan.job_limit) {\n    notify.danger('You have reached your Job post limit. Please upgrade your plan!')\n    return\n  }\n\n  if (\n    form.apply_type === 2 ||\n    (fields.value.length < 2 && !fields.value[0]?.label && !fields.value[0]?.type)\n  ) {\n    form.fields = null\n  } else {\n    form.fields = fields.value\n  }\n\n  form.post(route('employer.jobs.store'), {\n    onSuccess: () => {\n      notify.success('Submitted Successfully')\n      form.reset()\n    }\n  })\n}\nconst getCategories = () => {\n  axios.get(route('api.categories', { service_id: form.service_id })).then((res) => {\n    categories.value = res.data\n  })\n}\nconst getTags = () => {\n  axios.get(route('api.categories', { category_id: form.category_id })).then((res) => {\n    tags.value = res.data\n  })\n}\nconst getState = () => {\n  axios.get(route('api.locations', { country_id: form.country_id })).then((res) => {\n    states.value = res.data\n  })\n}\nconst newFields = () => {\n  const newFields = {\n    label: '',\n    type: ''\n  }\n  fields.value.push(newFields)\n}\n\nconst deleteFields = (targetIndex) => {\n  fields.value = fields.value.filter((_, index) => index !== targetIndex)\n}\nconst getDescriptionTemplates = () => {\n  companyShortcodes.value = props.shortcodes.reduce((acc, key) => {\n    if (key in shortCodesForm.value) {\n      acc[key] = shortCodesForm.value[key]\n    }\n    return acc\n  }, {})\n  axios\n    .get(route('api-description-templates', { service: form.service_id, type: 'job' }))\n    .then((res) => {\n      descriptionTemplates.value = res.data\n    })\n}\nconst createdDescription = (template) => {\n  return template.replace(/\\[(.*?)\\]/g, (match, key) => companyShortcodes.value[key])\n}\n</script>\n\n<template>\n  <Head title=\"Create Job\" />\n\n  <h2 class=\"main-title\">{{ trans('Post a New Job') }}</h2>\n\n  <form @submit.prevent=\"submit\" enctype=\"multipart/form-data\" class=\"card-box border-20 bg-white\">\n    <h4 class=\"dash-title-three\">{{ trans('Job Details') }}</h4>\n    <label class=\"mb-1\" for=\"\">{{ trans('Job Title') }}*</label>\n    <div class=\"dash-input-wrapper mb-30\">\n      <input type=\"text\" v-model=\"form.title\" required placeholder=\"Ex: Product Designer\" />\n      <InputFieldError :message=\"form.errors.title\" />\n    </div>\n    <div class=\"row mb-30\">\n      <div class=\"col-md-4\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Service') }}*</label>\n        <Multiselect\n          @deselect=\"form.category_id = ''\"\n          @clear=\"\n            () => {\n              categories = []\n              form.category_id = ''\n            }\n          \"\n          @change=\"form.category_id = ''\"\n          @select=\"\n            () => {\n              getCategories()\n              getDescriptionTemplates()\n            }\n          \"\n          v-model=\"form.service_id\"\n          :options=\"services\"\n          label=\"title\"\n          valueProp=\"id\"\n          placeholder=\"Select Service\"\n          :required=\"true\"\n        />\n        <InputFieldError :message=\"form.errors.service_id\" />\n      </div>\n      <div class=\"col-md-4\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Job Category') }}*</label>\n        <Multiselect\n          @deselect=\"form.skills = []\"\n          @clear=\"\n            () => {\n              tags = []\n              form.skills = []\n            }\n          \"\n          @change=\"form.skills = []\"\n          @select=\"getTags\"\n          v-model=\"form.category_id\"\n          :options=\"categories\"\n          label=\"title\"\n          valueProp=\"id\"\n          placeholder=\"Select Category\"\n          :required=\"true\"\n        />\n\n        <InputFieldError :message=\"form.errors.category_id\" />\n      </div>\n      <div class=\"col-md-4\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Job Type') }}*</label>\n        <Multiselect\n          v-model=\"form.type\"\n          :options=\"['Full time', 'Part time', 'Hourly-Contract', 'Fixed-Price']\"\n          placeholder=\"Select Type\"\n          :required=\"true\"\n        />\n        <InputFieldError :message=\"form.errors.type\" />\n      </div>\n    </div>\n    <!-- /.dash-input-wrapper -->\n    <div class=\"d-flex justify-content-between align-items-center\">\n      <label class=\"mb-1\" for=\"\">{{ trans('Job Description') }}*</label>\n      <button\n        v-if=\"form.service_id && descriptionTemplates?.length > 0\"\n        class=\"btn-one mb-3\"\n        type=\"button\"\n        data-bs-toggle=\"modal\"\n        data-bs-target=\"#suggestionModal\"\n      >\n        {{ trans('Suggestions') }}\n      </button>\n    </div>\n\n    <div class=\"dash-input-wrapper mb-30\">\n      <cke :editor=\"ClassicEditor\" v-model=\"form.description\" />\n\n      <InputFieldError :message=\"form.errors.description\" />\n    </div>\n    <div class=\"dash-input-wrapper\">\n      <label for=\"\">{{ trans('Overview') }}*</label>\n      <textarea\n        v-model=\"form.short_description\"\n        class=\"size-lg\"\n        placeholder=\"Brief description for your Job....\"\n      ></textarea>\n\n      <InputFieldError :message=\"form.errors.short_description\" />\n    </div>\n    <!-- /.dash-input-wrapper -->\n\n    <div class=\"row align-items-md-end mb-30\">\n      <div class=\"col-md-5\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Salary') }}*</label>\n        <Multiselect\n          v-model=\"form.salary_type\"\n          :options=\"['Monthly', 'Weekly', 'Hourly']\"\n          placeholder=\"Select Salary\"\n          :required=\"true\"\n        />\n\n        <InputFieldError :message=\"form.errors.salary_type\" />\n      </div>\n      <div class=\"col-md-3\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Currency') }}*</label>\n        <Multiselect\n          v-model=\"form.currency\"\n          :options=\"currencies\"\n          label=\"code\"\n          valueProp=\"code\"\n          placeholder=\"Select Currency\"\n          :required=\"true\"\n        />\n\n        <InputFieldError :message=\"form.errors.currency\" />\n      </div>\n      <div class=\"col-md-2\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Min') }}</label>\n        <div class=\"dash-input-wrapper\">\n          <input v-model=\"form.min_salary\" type=\"number\" placeholder=\"Min\" />\n          <InputFieldError :message=\"form.errors.min_salary\" />\n        </div>\n        <!-- /.dash-input-wrapper -->\n      </div>\n      <div class=\"col-md-2\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Max') }}</label>\n        <div class=\"dash-input-wrapper\">\n          <input v-model=\"form.max_salary\" type=\"number\" placeholder=\"Max\" />\n          <InputFieldError :message=\"form.errors.max_salary\" />\n        </div>\n        <!-- /.dash-input-wrapper -->\n      </div>\n    </div>\n    <h4 class=\"dash-title-three pt-50 lg-pt-30\">\n      {{ trans('Skills & Experience') }}\n    </h4>\n\n    <!-- /.dash-input-wrapper -->\n    <div class=\"row align-items-end\">\n      <div class=\"col-md-4\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Skills') }}*</label>\n        <Multiselect\n          mode=\"tags\"\n          v-model=\"form.skills\"\n          :options=\"tags\"\n          placeholder=\"Select Skills\"\n          label=\"title\"\n          valueProp=\"id\"\n          :required=\"true\"\n        />\n      </div>\n      <div class=\"col-md-4\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Expertise') }}*</label>\n        <Multiselect\n          v-model=\"form.expertise\"\n          :options=\"['Intermediate', 'No-Experience', 'Expert']\"\n          placeholder=\"Expertise\"\n          :required=\"true\"\n        />\n        <InputFieldError :message=\"form.errors.expertise\" />\n      </div>\n      <div class=\"col-md-4\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Experience') }}*</label>\n        <Multiselect\n          v-model=\"form.experience\"\n          :options=\"['Fresher', '1+ Year', '2+ Year', '4+ Year', '5+ Year', '10+ Year']\"\n          placeholder=\"Select Experience\"\n          :required=\"true\"\n        />\n        <InputFieldError :message=\"form.errors.experience\" />\n      </div>\n    </div>\n    <h4 class=\"dash-title-three pt-50 lg-pt-30\">\n      {{ trans('File Attachment') }}\n    </h4>\n    <label class=\"mb-1\" for=\"\">{{ trans('File Attachment') }}*</label>\n    <div class=\"dash-input-wrapper mb-20\">\n      <div class=\"attached-file d-flex align-items-center justify-content-between mb-15\">\n        <span>{{ form.attachment ? form.attachment.name : 'No File Uploaded' }}</span>\n      </div>\n    </div>\n    <!-- /.dash-input-wrapper -->\n    <div class=\"dash-btn-one d-inline-block position-relative me-3\">\n      <i class=\"bi bi-plus\"></i>\n      {{ trans('Upload File') }}\n      <input\n        type=\"file\"\n        @input=\"(e) => (form.attachment = e.target.files[0])\"\n        id=\"uploadCV\"\n        name=\"uploadCV\"\n        accept=\".csv,.docx,.pdf,.xlsx,.xls,.jpg,.png\"\n      />\n    </div>\n    <InputFieldError :message=\"form.errors.attachment\" />\n    <small>{{ trans('Upload file .pdf, .doc, .docx') }}</small>\n    <h4 class=\"dash-title-three pt-50 lg-pt-30\">\n      {{ trans('Address & Location') }}\n    </h4>\n    <div class=\"form-check mb-20\">\n      <input class=\"form-check-input\" type=\"checkbox\" id=\"remote\" v-model=\"form.meta.is_remote\" />\n      <label class=\"form-check-label\" for=\"remote\">\n        {{ trans('Is Remote?') }}\n      </label>\n    </div>\n    <div class=\"row\" v-if=\"!form.meta.is_remote\">\n      <div class=\"col-12\">\n        <label for=\"\">{{ trans('Address') }}*</label>\n        <div class=\"dash-input-wrapper mb-25\">\n          <input v-model=\"form.address\" required type=\"text\" placeholder=\"New work, Dhaka, Delhi\" />\n          <InputFieldError :message=\"form.errors.address\" />\n        </div>\n        <!-- /.dash-input-wrapper -->\n      </div>\n      <div class=\"col-lg-6 mb-30\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Country') }}*</label>\n        <Multiselect\n          @deselect=\"states = []\"\n          @clear=\"\n            () => {\n              states = []\n              form.state_id = ''\n            }\n          \"\n          @change=\"form.state_id = ''\"\n          @select=\"getState\"\n          v-model=\"form.country_id\"\n          :options=\"countries\"\n          placeholder=\"Select Country\"\n          label=\"name\"\n          valueProp=\"id\"\n          :required=\"true\"\n        />\n\n        <InputFieldError :message=\"form.errors.country_id\" />\n        <!-- /.dash-input-wrapper -->\n      </div>\n      <div class=\"col-lg-6 mb-30\">\n        <label class=\"mb-1\" for=\"\">{{ trans('City') }}*</label>\n        <Multiselect\n          v-model=\"form.state_id\"\n          :options=\"states\"\n          placeholder=\"Select City\"\n          label=\"name\"\n          valueProp=\"id\"\n          :required=\"true\"\n        />\n\n        <InputFieldError :message=\"form.errors.state_id\" />\n      </div>\n      <div class=\"col-6\">\n        <label for=\"\">{{ trans('Latitude') }}*</label>\n        <div class=\"dash-input-wrapper mb-25\">\n          <div class=\"position-relative\">\n            <input v-model=\"form.meta.map.latitude\" type=\"text\" placeholder=\"Latitude\" />\n            <InputFieldError :message=\"form.errors.meta?.map?.latitude\" />\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <label for=\"\">{{ trans('Longitude') }}*</label>\n        <div class=\"dash-input-wrapper mb-25\">\n          <div class=\"position-relative\">\n            <input v-model=\"form.meta.map.longitude\" type=\"text\" placeholder=\"Longitude\" />\n            <InputFieldError :message=\"form.errors.meta?.map?.longitude\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <template v-if=\"form.apply_type !== 2\">\n      <div>\n        <label class=\"fw-bold\">{{ trans('Custom Fields') }}</label>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <label for=\"\">{{ trans('Label') }}</label>\n          </div>\n          <div class=\"col-md-5\">\n            <label for=\"\">{{ trans('Type') }}</label>\n          </div>\n          <div class=\"col-md-1 d-flex justify-content-end\">\n            <button type=\"button\" @click=\"newFields\" class=\"btn btn-success\">\n              <i class=\"fas fa-plus-circle\"></i>\n            </button>\n          </div>\n        </div>\n        <template v-for=\"(field, i) in fields\" :key=\"i\">\n          <div class=\"row d-flex align-items-center mb-30 mt-10\">\n            <div class=\"col-md-6\">\n              <div class=\"dash-input-wrapper\">\n                <input v-model=\"field.label\" type=\"text\" placeholder=\"Label\" />\n                <InputFieldError :message=\"form.errors['fields.' + i + '.label']\" />\n              </div>\n            </div>\n            <div class=\"col-md-5 mb-1\">\n              <Multiselect\n                v-model=\"field.type\"\n                :options=\"['email', 'text', 'number', 'file']\"\n                placeholder=\"Select Input Type\"\n              />\n              <InputFieldError :message=\"form.errors['fields.' + i + '.type']\" />\n            </div>\n\n            <div class=\"col-md-1 d-flex justify-content-end\">\n              <button type=\"button\" @click=\"deleteFields(i)\" class=\"fs-4 ps-2\">\n                <i class=\"bi bi-x-circle text-danger\"></i>\n              </button>\n            </div>\n          </div>\n        </template>\n      </div>\n    </template>\n    <div class=\"row align-items-end\">\n      <div class=\"col-md-6\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Apply Type') }}*</label>\n        <Multiselect\n          @deselect=\"form.apply_type = 0\"\n          @clear=\"form.apply_type = 0\"\n          v-model=\"form.apply_type\"\n          :options=\"applyTypes\"\n          placeholder=\"Select Apply Type\"\n          :required=\"true\"\n        />\n        <InputFieldError :message=\"form.errors.apply_type\" />\n      </div>\n      <div class=\"col-md-6\" v-if=\"form.apply_type === 1 || form.apply_type === 2\">\n        <label class=\"mb-1\" for=\"\">\n          {{ form.apply_type == 1 ? trans('Email') : trans('External Link') }}\n        </label>\n        <div class=\"dash-input-wrapper\">\n          <input\n            v-model=\"form.meta.apply_type.value\"\n            type=\"text\"\n            :placeholder=\"form.apply_type == 1 ? 'Email' : 'External Link'\"\n          />\n          <InputFieldError :message=\"form.errors['meta.apply_type.value']\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-6 mt-30\">\n      <label class=\"mb-1\" for=\"\">{{ trans('Job Deadline') }}</label>\n      <div class=\"dash-input-wrapper mb-30\">\n        <input\n          :min=\"today()\"\n          :max=\"maxExpiredDate\"\n          v-model=\"form.expired_at\"\n          required\n          type=\"date\"\n          placeholder=\"Label\"\n        />\n        <InputFieldError :message=\"form.errors.expired_at\" />\n      </div>\n    </div>\n    <div class=\"button-group d-inline-flex align-items-center mt-30\">\n      <SpinnerBtn :processing=\"form.processing\" btn-text=\"Save\" />\n    </div>\n  </form>\n\n  <!-- suggestion Modal -->\n  <div\n    class=\"modal fade\"\n    id=\"suggestionModal\"\n    tabindex=\"-1\"\n    aria-labelledby=\"suggestionModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable\">\n      <div class=\"modal-content\">\n        <div class=\"d-flex align-items-center justify-content-between p-3\">\n          <p class=\"fs-5\" id=\"suggestionModalLabel\">{{ trans('Suggestions') }}</p>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <div class=\"modal-body\">\n          <ul class=\"list-group\" v-if=\"descriptionTemplates.length > 0\">\n            <li\n              class=\"d-flex align-items-center justify-content-between fs-7 mb-4 rounded p-2 shadow-sm\"\n              v-for=\"templates in descriptionTemplates\"\n              :key=\"templates.id\"\n            >\n              {{ textExcerpt(createdDescription(templates.body), 660) }}\n              <button\n                type=\"button\"\n                @click=\"\n                  () => {\n                    form.description = createdDescription(templates.body)\n                  }\n                \"\n                class=\"btn-four ms-3 p-2\"\n                data-bs-dismiss=\"modal\"\n              >\n                {{ trans('Select') }}\n              </button>\n            </li>\n          </ul>\n          <p v-else class=\"text-danger text-center\">\n            {{ trans(\"Opp's! Nothing Found\") }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, useForm } from '@inertiajs/vue3'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport ckeEditor from '@/Plugins/ckeEditor'\nimport Multiselect from '@vueform/multiselect'\nimport notify from '@/Plugins/Admin/notify'\nimport axios from 'axios'\nimport { ref, computed } from 'vue'\nimport moment from 'moment'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\ndefineOptions({ layout: EmployerLayout })\nconst props = defineProps([\n  'job',\n  'services',\n  'countries',\n  'categories',\n  'states',\n  'tags',\n  'plan',\n  'currencies',\n  'shortcodes',\n  'user'\n])\nconst { cke, ClassicEditor } = ckeEditor()\nconst { authUser } = sharedComposable()\nconst categories = ref(props.categories || [])\nconst tags = ref(props.tags || [])\nconst states = ref(props.states)\nconst descriptionTemplates = ref([])\nconst companyShortcodes = ref({})\nconst fields = ref(props.job.fields ? JSON.parse(props.job.fields) : [])\nconst shortCodesForm = computed(() => {\n  return {\n    company_name: props.user.meta?.company?.name,\n    company_size: props.user.meta?.company?.size,\n    year_of_establishment: props.user?.meta.company?.year_of_establishment,\n    company_address: props.user.meta?.company?.address,\n    company_intro: props.user.meta?.company?.intro,\n    job_name: props.job.title || 'Job Title'\n  }\n})\n\nconst form = useForm({\n  title: props.job.title,\n  description: props.job.description,\n  short_description: props.job.short_description,\n  type: props.job.type,\n  service_id: props.job.category_id,\n  category_id: props.job.categories?.[0]?.id,\n  salary_type: props.job.salary_type,\n  currency: props.job.currency,\n  min_salary: props.job.salary_range ? props.job.salary_range.split('-')[0] : null,\n  max_salary: props.job.salary_range ? props.job.salary_range.split('-')[1] : null,\n  experience: props.job.experience,\n  expertise: props.job.expertise,\n  attachment: '',\n  address: props.job.address,\n  apply_type: props.job.apply_type,\n  country_id: props.job.country?.[0]?.id,\n  state_id: props.job.state[0]?.id,\n  skills: props.job.tags.map((t) => t.id),\n  fields: props.job.fields,\n  meta: props.job.meta\n    ? JSON.parse(props.job.meta)\n    : {\n        apply_type: {\n          value: null\n        },\n        map: {\n          latitude: '',\n          longitude: ''\n        },\n        is_remote: false\n      },\n  expired_at: props.job.expired_at\n})\n\nconst applyTypes = ref([\n  { label: 'Default', value: 0 },\n  { label: 'Email', value: 1 },\n  { label: 'External', value: 2 }\n])\nconst submit = () => {\n  if (form.apply_type === 2) {\n    fields.value = null\n  }\n  if (fields.value?.length < 2 && !fields.value?.[0]?.label && !fields.value?.[0]?.type) {\n    form.fields = null\n  } else {\n    form.fields = fields.value\n  }\n\n  form\n    .transform((data) => {\n      return { _method: 'PATCH', job: data }\n    })\n    .post(route('employer.jobs.update', props.job.id), {\n      preserveScroll: true,\n      onSuccess: () => {\n        notify.success('Updated Successfully')\n      }\n    })\n}\n\nconst getCategories = () => {\n  axios.get(route('api.categories', { service_id: form.service_id })).then((res) => {\n    categories.value = res.data\n  })\n}\nconst getTags = () => {\n  axios.get(route('api.categories', { category_id: form.category_id })).then((res) => {\n    tags.value = res.data\n  })\n}\nconst getState = () => {\n  axios.get(route('api.locations', { country_id: form.country_id })).then((res) => {\n    states.value = res.data\n  })\n}\nconst newFields = () => {\n  const newFields = {\n    label: '',\n    type: ''\n  }\n  fields.value.push(newFields)\n}\n\nconst deleteFields = (targetIndex) => {\n  fields.value = fields.value.filter((_, index) => index !== targetIndex)\n}\nconst today = () => {\n  let currentDate = new Date()\n  let year = currentDate.getFullYear()\n  let month = (currentDate.getMonth() + 1).toString().padStart(2, '0')\n  let day = currentDate.getDate().toString().padStart(2, '0')\n\n  return year + '-' + month + '-' + day\n}\nconst maxExpiredDate = computed(() => {\n  if (form.expired_at) {\n    return moment(form.expired_at)\n      .clone()\n      .add(props.plan.live_job_for_days, 'days')\n      .format('YYYY-MM-DD')\n  }\n  return moment(authUser.value.will_expire).format('YYYY-MM-DD')\n})\nconst getDescriptionTemplates = () => {\n  companyShortcodes.value = props.shortcodes.reduce((acc, key) => {\n    if (key in shortCodesForm.value) {\n      acc[key] = shortCodesForm.value[key]\n    }\n    return acc\n  }, {})\n  axios\n    .get(route('api-description-templates', { service: form.service_id, type: 'job' }))\n    .then((res) => {\n      descriptionTemplates.value = res.data\n    })\n}\nconst createdDescription = (template) => {\n  return template.replace(/\\[(.*?)\\]/g, (match, key) => companyShortcodes.value[key])\n}\n</script>\n\n<template>\n  <Head title=\"Edit Job\" />\n\n  <h2 class=\"main-title\">{{ trans('Edit Job') }}</h2>\n\n  <form @submit.prevent=\"submit\" enctype=\"multipart/form-data\" class=\"card-box border-20 bg-white\">\n    <h4 class=\"dash-title-three\">{{ trans('Job Details') }}</h4>\n    <label class=\"mb-1\" for=\"\">{{ trans('Job Title') }}*</label>\n    <div class=\"dash-input-wrapper mb-30\">\n      <input type=\"text\" v-model=\"form.title\" required placeholder=\"Ex: Product Designer\" />\n      <InputFieldError :message=\"form.errors.title\" />\n    </div>\n    <!-- /.dash-input-wrapper -->\n    <div class=\"row mb-30\">\n      <div class=\"col-md-4\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Service') }}*</label>\n        <Multiselect\n          @deselect=\"form.category_id = ''\"\n          @clear=\"\n            () => {\n              categories = []\n              form.category_id = ''\n            }\n          \"\n          @change=\"form.category_id = ''\"\n          @select=\"\n            () => {\n              getCategories()\n              getDescriptionTemplates()\n            }\n          \"\n          v-model=\"form.service_id\"\n          :options=\"services\"\n          label=\"title\"\n          valueProp=\"id\"\n          placeholder=\"Select Service\"\n          :required=\"true\"\n        />\n        <InputFieldError :message=\"form.errors.service_id\" />\n      </div>\n      <div class=\"col-md-4\" v-if=\"categories.length > 0\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Job Category') }}*</label>\n        <Multiselect\n          @deselect=\"form.skills = []\"\n          @clear=\"\n            () => {\n              tags = []\n              form.skills = []\n            }\n          \"\n          @change=\"form.skills = []\"\n          @select=\"getTags\"\n          v-model=\"form.category_id\"\n          :options=\"categories\"\n          label=\"title\"\n          valueProp=\"id\"\n          placeholder=\"Select Category\"\n          :required=\"true\"\n        />\n\n        <InputFieldError :message=\"form.errors.category_id\" />\n      </div>\n      <div class=\"col-md-4\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Job Type') }}*</label>\n        <Multiselect\n          v-model=\"form.type\"\n          :options=\"['Full time', 'Part time', 'Hourly-Contract', 'Fixed-Price']\"\n          placeholder=\"Select Type\"\n          :required=\"true\"\n        />\n        <InputFieldError :message=\"form.errors.type\" />\n      </div>\n    </div>\n    <div class=\"d-flex justify-content-between align-items-center\">\n      <label class=\"mb-1\" for=\"\">{{ trans('Job Description') }}*</label>\n      <button\n        v-if=\"form.service_id && descriptionTemplates?.length > 0\"\n        class=\"btn-one mb-3\"\n        type=\"button\"\n        data-bs-toggle=\"modal\"\n        data-bs-target=\"#suggestionModal\"\n      >\n        {{ trans('Suggestions') }}\n      </button>\n    </div>\n    <div class=\"dash-input-wrapper mb-30\">\n      <cke :editor=\"ClassicEditor\" v-model=\"form.description\" />\n\n      <InputFieldError :message=\"form.errors.description\" />\n    </div>\n    <div class=\"dash-input-wrapper\">\n      <label for=\"\">{{ trans('Overview') }}*</label>\n      <textarea\n        v-model=\"form.short_description\"\n        class=\"size-lg\"\n        placeholder=\"Brief description for your Job....\"\n      ></textarea>\n\n      <InputFieldError :message=\"form.errors.short_description\" />\n    </div>\n    <!-- /.dash-input-wrapper -->\n\n    <div class=\"row align-items-md-end mb-30\">\n      <div class=\"col-md-5\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Salary') }}*</label>\n        <Multiselect\n          v-model=\"form.salary_type\"\n          :options=\"['Monthly', 'Weekly', 'Hourly']\"\n          placeholder=\"Select Salary\"\n          :required=\"true\"\n        />\n\n        <InputFieldError :message=\"form.errors.salary_type\" />\n      </div>\n      <div class=\"col-md-2\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Currency') }}*</label>\n        <Multiselect\n          v-model=\"form.currency\"\n          :options=\"currencies\"\n          label=\"code\"\n          valueProp=\"code\"\n          placeholder=\"Select Currency\"\n          :required=\"true\"\n        />\n\n        <InputFieldError :message=\"form.errors.currency\" />\n      </div>\n      <div class=\"col-md-2\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Min') }}*</label>\n        <div class=\"dash-input-wrapper\">\n          <input v-model=\"form.min_salary\" type=\"number\" placeholder=\"Min\" />\n          <InputFieldError :message=\"form.errors.min_salary\" />\n        </div>\n        <!-- /.dash-input-wrapper -->\n      </div>\n      <div class=\"col-md-3\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Max') }}*</label>\n        <div class=\"dash-input-wrapper\">\n          <input v-model=\"form.max_salary\" type=\"number\" placeholder=\"Max\" />\n          <InputFieldError :message=\"form.errors.max_salary\" />\n        </div>\n        <!-- /.dash-input-wrapper -->\n      </div>\n    </div>\n    <h4 class=\"dash-title-three pt-50 lg-pt-30\">\n      {{ trans('Skills & Experience') }}\n    </h4>\n\n    <!-- /.dash-input-wrapper -->\n    <div class=\"row align-items-end\">\n      <div class=\"col-md-4\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Skills') }}*</label>\n        <Multiselect\n          mode=\"tags\"\n          v-model=\"form.skills\"\n          :options=\"tags\"\n          placeholder=\"Select Skills\"\n          label=\"title\"\n          valueProp=\"id\"\n          :required=\"true\"\n        />\n      </div>\n      <div class=\"col-md-4\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Expertise') }} *</label>\n        <Multiselect\n          v-model=\"form.expertise\"\n          :options=\"['Intermediate', 'No-Experience', 'Expert']\"\n          placeholder=\"Select Expertise\"\n          :required=\"true\"\n        />\n        <InputFieldError :message=\"form.errors.experience\" />\n      </div>\n      <div class=\"col-md-4\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Experience') }} *</label>\n        <Multiselect\n          v-model=\"form.experience\"\n          :options=\"['Fresher', '1+ Year', '2+ Year', '4+ Year', '5+ Year', '10+ Year']\"\n          placeholder=\"Select Experience\"\n          :required=\"true\"\n        />\n        <InputFieldError :message=\"form.errors.experience\" />\n      </div>\n    </div>\n    <h4 class=\"dash-title-three pt-50 lg-pt-30\">\n      {{ trans('File Attachment') }}\n    </h4>\n    <label class=\"mb-1\" for=\"\">{{ trans('File Attachment') }}</label>\n    <div class=\"dash-input-wrapper mb-20\">\n      <div class=\"attached-file d-flex align-items-center justify-content-between mb-15\">\n        <span>{{ form.attachment ? form.attachment.name : 'No File Uploaded' }}</span>\n      </div>\n    </div>\n    <!-- /.dash-input-wrapper -->\n    <div class=\"dash-btn-one d-inline-block position-relative me-3\">\n      <i class=\"bi bi-plus\"></i>\n      {{ trans('Upload File') }}\n      <input\n        type=\"file\"\n        @input=\"(e) => (form.attachment = e.target.files[0])\"\n        id=\"uploadCV\"\n        name=\"uploadCV\"\n        placeholder=\"\"\n      />\n      <InputFieldError :message=\"form.errors.service_id\" />\n    </div>\n    <small>{{ trans('Upload file .pdf, .doc, .docx') }}</small>\n    <h4 class=\"dash-title-three pt-50 lg-pt-30\">\n      {{ trans('Address & Location') }}\n    </h4>\n    <div class=\"form-check mb-20\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"remote\"\n        v-model=\"form.meta.is_remote\"\n        :checked=\"form.meta.is_remote == 1\"\n      />\n      <label class=\"form-check-label\" for=\"remote\">\n        {{ trans('Is Remote?') }}\n      </label>\n    </div>\n    <div class=\"row\" v-if=\"form.meta.is_remote == 0\">\n      <div class=\"col-12\">\n        <label for=\"\">{{ trans('Address') }}*</label>\n        <div class=\"dash-input-wrapper mb-25\">\n          <input v-model=\"form.address\" required type=\"text\" placeholder=\"New work, Dhaka, Delhi\" />\n          <InputFieldError :message=\"form.errors.address\" />\n        </div>\n        <!-- /.dash-input-wrapper -->\n      </div>\n      <div class=\"col-lg-6 mb-30\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Country') }}*</label>\n        <Multiselect\n          @deselect=\"states = []\"\n          @clear=\"\n            () => {\n              states = []\n              form.state_id = ''\n            }\n          \"\n          @change=\"form.state_id = ''\"\n          @select=\"getState\"\n          v-model=\"form.country_id\"\n          :options=\"countries\"\n          placeholder=\"Select Country\"\n          label=\"name\"\n          valueProp=\"id\"\n          :required=\"true\"\n        />\n\n        <InputFieldError :message=\"form.errors.country_id\" />\n        <!-- /.dash-input-wrapper -->\n      </div>\n      <div class=\"col-lg-6 mb-30\">\n        <label class=\"mb-1\" for=\"\">{{ trans('City') }}*</label>\n        <Multiselect\n          v-model=\"form.state_id\"\n          :options=\"states\"\n          placeholder=\"Select City\"\n          label=\"name\"\n          valueProp=\"id\"\n          :required=\"true\"\n        />\n\n        <InputFieldError :message=\"form.errors.state_id\" />\n      </div>\n      <div class=\"col-6\">\n        <label for=\"\">{{ trans('Latitude') }}*</label>\n        <div class=\"dash-input-wrapper mb-25\">\n          <div class=\"position-relative\">\n            <input v-model=\"form.meta.map.latitude\" type=\"text\" placeholder=\"Latitude\" />\n            <InputFieldError :message=\"form.errors.meta?.map?.latitude\" />\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <label for=\"\">{{ trans('Longitude') }}*</label>\n        <div class=\"dash-input-wrapper mb-25\">\n          <div class=\"position-relative\">\n            <input v-model=\"form.meta.map.longitude\" type=\"text\" placeholder=\"Longitude\" />\n            <InputFieldError :message=\"form.errors.meta?.map?.longitude\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <template v-if=\"form.apply_type !== 2\">\n      <div>\n        <label class=\"fw-bold\">{{ trans('Custom Fields') }}</label>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <label for=\"\">{{ trans('Label') }}</label>\n          </div>\n          <div class=\"col-md-5\">\n            <label for=\"\">{{ trans('Type') }}</label>\n          </div>\n          <div class=\"col-md-1 d-flex justify-content-end\">\n            <button type=\"button\" @click=\"newFields\" class=\"btn btn-success\">\n              <i class=\"fas fa-plus-circle\"></i>\n            </button>\n          </div>\n        </div>\n        <template v-for=\"(field, i) in fields\" :key=\"i\">\n          <div class=\"row d-flex align-items-center mb-30 mt-10\">\n            <div class=\"col-md-6\">\n              <div class=\"dash-input-wrapper\">\n                <input v-model=\"field.label\" type=\"text\" placeholder=\"Label\" />\n                <InputFieldError :message=\"form.errors['fields.' + i + '.label']\" />\n              </div>\n            </div>\n            <div class=\"col-md-5 mb-1\">\n              <Multiselect\n                v-model=\"field.type\"\n                :options=\"['email', 'text', 'number', 'file']\"\n                placeholder=\"Select Input Type\"\n              />\n              <InputFieldError :message=\"form.errors['fields.' + i + '.type']\" />\n            </div>\n\n            <div class=\"col-md-1 d-flex justify-content-end\">\n              <button type=\"button\" @click=\"deleteFields(i)\" class=\"fs-4 ps-2\">\n                <i class=\"bi bi-x-circle text-danger\"></i>\n              </button>\n            </div>\n          </div>\n        </template>\n      </div>\n    </template>\n    <div class=\"row align-items-end\">\n      <div class=\"col-md-6\">\n        <label class=\"mb-1\" for=\"\"> {{ trans('Apply Type') }} *</label>\n        <Multiselect\n          @deselect=\"form.apply_type = 0\"\n          @clear=\"form.apply_type = 0\"\n          v-model=\"form.apply_type\"\n          :options=\"applyTypes\"\n          placeholder=\"Select Apply Type\"\n          :required=\"true\"\n        />\n        <InputFieldError :message=\"form.errors.apply_type\" />\n      </div>\n      <div class=\"col-md-6\" v-if=\"form.apply_type === 1 || form.apply_type === 2\">\n        <label class=\"mb-1\" for=\"\">\n          {{ form.apply_type == 1 ? trans('Email') : trans('External Link') }}\n        </label>\n        <div class=\"dash-input-wrapper\">\n          <input\n            v-model=\"form.meta.apply_type.value\"\n            type=\"text\"\n            :placeholder=\"form.apply_type == 1 ? 'Email' : 'External Link'\"\n          />\n          <InputFieldError :message=\"form.errors.meta?.apply_type?.value\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-6 mt-30\">\n      <label class=\"mb-1\" for=\"\">{{ trans('Job Deadline') }}</label>\n      <div class=\"dash-input-wrapper mb-30\">\n        <input\n          :min=\"today()\"\n          :max=\"maxExpiredDate\"\n          v-model=\"form.expired_at\"\n          required\n          type=\"date\"\n          placeholder=\"Label\"\n        />\n        <InputFieldError :message=\"form.errors.expired_at\" />\n      </div>\n    </div>\n    <div class=\"button-group d-inline-flex align-items-center mt-30\">\n      <SpinnerBtn :processing=\"form.processing\" btn-text=\"Update\" />\n    </div>\n  </form>\n\n  <!-- suggestion Modal -->\n  <div\n    class=\"modal fade\"\n    id=\"suggestionModal\"\n    tabindex=\"-1\"\n    aria-labelledby=\"suggestionModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable\">\n      <div class=\"modal-content\">\n        <div class=\"d-flex align-items-center justify-content-between p-3\">\n          <p class=\"fs-5\" id=\"suggestionModalLabel\">{{ trans('Suggestions') }}</p>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <div class=\"modal-body\">\n          <ul class=\"list-group\" v-if=\"descriptionTemplates.length > 0\">\n            <li\n              class=\"d-flex align-items-center justify-content-between fs-7 mb-4 rounded p-2 shadow-sm\"\n              v-for=\"templates in descriptionTemplates\"\n              :key=\"templates.id\"\n            >\n              {{ createdDescription(templates.body) }}\n              <button\n                type=\"button\"\n                @click=\"\n                  () => {\n                    form.description = createdDescription(templates.body)\n                  }\n                \"\n                class=\"btn-four ms-3 p-2\"\n                data-bs-dismiss=\"modal\"\n              >\n                {{ trans('Select') }}\n              </button>\n            </li>\n          </ul>\n          <p v-else class=\"text-danger text-center\">\n            {{ trans(\"Opp's! Nothing Found\") }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { router, Head } from '@inertiajs/vue3'\nimport moment from 'moment'\nimport { ref } from 'vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\ndefineOptions({ layout: EmployerLayout })\n\nconst sorts = [\n  {\n    label: 'Active',\n    value: 'active'\n  },\n  {\n    label: 'Pending',\n    value: 'pending'\n  },\n  {\n    label: 'Inactive',\n    value: 'inactive'\n  }\n]\nconst props = defineProps(['jobs', 'request'])\nconst { pickBy, copyToClipboard, deleteRow } = sharedComposable()\nconst filterForm = ref({\n  order: props.request?.order ?? '',\n  status: props.request?.status ?? ''\n})\nconst filter = () => {\n  router.get(route('employer.jobs.index'), pickBy(filterForm.value), {\n    preserveState: true\n  })\n}\nconst setOrder = (val) => {\n  filterForm.value.order = val\n  filter()\n}\nconst origin = window.location.origin + '/jobs/'\n</script>\n\n<template>\n  <Head title=\"My Jobs\" />\n\n  <div class=\"d-sm-flex align-items-center justify-content-between lg-mb-30 mb-40\">\n    <h2 class=\"main-title m0\">{{ trans('My Jobs') }}</h2>\n    <div class=\"d-flex xs-mt-30 ms-auto\">\n      <div class=\"nav nav-tabs tab-filter-btn me-4\">\n        <button\n          @click=\"setOrder('')\"\n          :class=\"{ active: filterForm.order === '' }\"\n          class=\"nav-link\"\n          type=\"button\"\n        >\n          {{ trans('All') }}\n        </button>\n        <button\n          @click=\"setOrder('desc')\"\n          class=\"nav-link\"\n          :class=\"{ active: filterForm.order === 'desc' }\"\n          type=\"button\"\n        >\n          {{ trans('New') }}\n        </button>\n        <button\n          @click=\"setOrder('asc')\"\n          class=\"nav-link\"\n          :class=\"{ active: filterForm.order === 'asc' }\"\n          type=\"button\"\n        >\n          {{ trans('Old') }}\n        </button>\n      </div>\n      <div class=\"short-filter d-flex align-items-center ms-auto\">\n        <div class=\"text-dark fw-500 me-2\">{{ trans('Sort by') }}:</div>\n        <NiceSelect\n          v-model=\"filterForm.status\"\n          :options=\"sorts\"\n          value-by=\"value\"\n          label=\"label\"\n          placeholder=\"Default\"\n          @change=\"filter\"\n        />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card-box border-20 bg-white\">\n    <div class=\"tab-content\" id=\"nav-tabContent\">\n      <div class=\"tab-pane fade show active\" id=\"a1\" role=\"tabpanel\">\n        <div v-if=\"jobs.total\" class=\"table-responsive\">\n          <table class=\"job-alert-table table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">{{ trans('Title') }}</th>\n                <th scope=\"col\">{{ trans('Job Created') }}</th>\n                <th scope=\"col\">{{ trans('Applicants') }}</th>\n                <th scope=\"col\">{{ trans('Views') }}</th>\n                <th scope=\"col\">{{ trans('Status') }}</th>\n                <th scope=\"col\">{{ trans('Action') }}</th>\n              </tr>\n            </thead>\n            <tbody class=\"border-0\">\n              <tr\n                :class=\"{\n                  active: job.status == 1,\n                  expired: job.status == 0,\n                  pending: job.status == 2\n                }\"\n                v-for=\"job in jobs.data\"\n                :key=\"job.id\"\n              >\n                <td>\n                  <a target=\"_blank\" :href=\"route('jobs.show', job.slug)\" class=\"job-name fw-500\">\n                    {{ job.title }}\n                  </a>\n                  <div class=\"info1\">\n                    {{ job.type.replace('_', ' ') }} .\n                    {{ job.country?.[0]?.name }}\n                  </div>\n                </td>\n                <td>{{ moment(job.created_at).format('D-MMM-Y') }}</td>\n                <td>{{ job.applied_applicants_count }} {{ trans('Applications') }}</td>\n                <td>{{ job.total_visits }} {{ trans('Views') }}</td>\n                <td>\n                  <div class=\"job-status\">\n                    {{\n                      job.status == 0\n                        ? trans('Inactive')\n                        : job.status == 1\n                        ? trans('Active')\n                        : trans('Pending')\n                    }}\n                  </div>\n                </td>\n                <td>\n                  <div class=\"action-dots float-end\">\n                    <button\n                      class=\"action-btn dropdown-toggle\"\n                      type=\"button\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                    >\n                      <span></span>\n                    </button>\n                    <ul class=\"dropdown-menu dropdown-menu-end\">\n                      <li v-if=\"job.status == 1\">\n                        <Link class=\"dropdown-item\" :href=\"route('employer.jobs.show', job.slug)\">\n                          <img\n                            src=\"/assets/dashboard/images/icon/icon_18.svg\"\n                            alt=\"\"\n                            class=\"lazy-img\"\n                          />\n                          {{ trans('Applicants') }}</Link\n                        >\n                      </li>\n                      <li v-if=\"job.status == 1\">\n                        <a\n                          class=\"dropdown-item\"\n                          target=\"_blank\"\n                          :href=\"route('jobs.show', job.slug)\"\n                        >\n                          <img\n                            src=\"/assets/dashboard/images/icon/icon_17.svg\"\n                            alt=\"img\"\n                            class=\"lazy-img\"\n                          />\n                          {{ trans('Visit') }}</a\n                        >\n                      </li>\n                      <li v-if=\"job.status == 1\">\n                        <button\n                          @click=\"copyToClipboard(origin + job.slug)\"\n                          class=\"dropdown-item\"\n                          data-bs-toggle=\"modal\"\n                          data-bs-target=\"#shareJob\"\n                        >\n                          <img\n                            src=\"/assets/dashboard/images/icon/icon_19.svg\"\n                            alt=\"img\"\n                            class=\"lazy-img\"\n                          />\n                          {{ trans('Copy Link') }}\n                        </button>\n                      </li>\n                      <li>\n                        <Link class=\"dropdown-item\" :href=\"route('employer.jobs.edit', job.slug)\">\n                          <img\n                            src=\"/assets/dashboard/images/icon/icon_20.svg\"\n                            alt=\"img\"\n                            class=\"lazy-img\"\n                          />\n                          {{ trans('Edit') }}\n                        </Link>\n                      </li>\n                      <li>\n                        <button\n                          class=\"dropdown-item\"\n                          @click=\"deleteRow(route('employer.jobs.destroy', job.id))\"\n                        >\n                          <img\n                            src=\"/assets/dashboard/images/icon/icon_21.svg\"\n                            alt=\"img\"\n                            class=\"lazy-img\"\n                          />\n                          {{ trans('Delete') }}\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <!-- /.table job-alert-table -->\n        </div>\n        <div class=\"text-center\" v-else>{{ trans('No record found') }}</div>\n      </div>\n    </div>\n  </div>\n  <!-- /.card-box -->\n\n  <div class=\"d-flex justify-content-end mt-30\">\n    <Paginate :links=\"jobs.links\" />\n  </div>\n</template>\n","<script setup>\nimport sharedComposable from '@/Composables/sharedComposable'\nimport notify from '@/Plugins/Admin/notify'\nimport { Link, useForm } from '@inertiajs/vue3'\nimport axios from 'axios'\nimport trans from '@/Composables/transComposable'\nimport moment from 'moment'\nimport { ref, computed } from 'vue'\nconst { formatNumber, uiAvatar, textExcerpt } = sharedComposable()\n\nconst props = defineProps({\n  applicants: [Object, Array],\n  hasOpening: {\n    type: Boolean,\n    default: false\n  },\n  job: {\n    type: [Number, String],\n    default: null\n  },\n  jobObj: Object\n})\n\nconst candidateId = ref(null)\nconst maxTag = ref(2)\n\nconst findCandidate = computed(() => {\n  return props.applicants.find((a) => a.id == candidateId.value)\n})\n\nconst toggleBookmark = (id) => {\n  const form = props.job ? useForm({ opening_id: props.job }) : useForm({})\n  form.post(route('candidates.bookmark', id), {\n    preserveScroll: true,\n    onSuccess: () => {}\n  })\n}\n\nconst candidateData = (candidate) => {\n  const user = candidate\n  const username = user.username\n  const avatar = candidate.avatar\n  const isBookmarked = candidate.isBookmarked\n  const expectedSalary = user.meta?.expected_salary ?? 'NA'\n  const location = `${user.states?.length ? user.states[0]?.name : ''}, ${\n    user.countries?.length ? user.countries[0]?.name : ''\n  }`\n\n  const tagItems = user.tags?.slice(0, maxTag.value)\n  const remainingTagsCount = Math.max(user.tags?.length ?? 0 - maxTag.value, 0)\n  const showMoreTags = remainingTagsCount > 0\n  const name = candidate.name\n  const categoryTitle = user.categories?.[0]?.title\n  return {\n    id: user.id,\n    avatar,\n    username,\n    name,\n    isBookmarked,\n    expectedSalary,\n    location,\n    tagItems,\n    remainingTagsCount,\n    showMoreTags,\n    categoryTitle\n  }\n}\n\nconst fields = ref([])\n\nconst showApplication = (candidate) => {\n  candidateId.value = candidate.id\n\n  let meta = candidate.pivot?.meta ?? ''\n\n  if (meta) {\n    meta = JSON.parse(meta) ?? {}\n  }\n\n  fields.value = meta?.fields ?? []\n\n  if (!meta.pivot?.seen_at) {\n    seenAt()\n  }\n}\n\nconst seenAt = () => {\n  let data = {\n    candidate_id: candidateId.value,\n    job_id: props.job\n  }\n  axios.post(route('employer.job-application-seen'), data)\n}\n\nconst hired = () => {\n  useForm({\n    job_id: props.job,\n    candidate_id: candidateId.value\n  }).post(route('employer.hire-candidate'), {\n    onSuccess() {\n      $('#candidateDetails .btn-close').trigger('click')\n      notify.success(trans('Hired successfully'))\n    }\n  })\n}\n</script>\n\n<template>\n  <div class=\"wrapper\">\n    <template v-for=\"candidate in applicants\" :key=\"candidate.id\">\n      <div class=\"candidate-profile-card list-layout mb-25 border-0\">\n        <div class=\"d-flex\">\n          <div class=\"cadidate-avatar online position-relative d-block me-auto ms-auto\">\n            <Link :href=\"route('candidates.show', candidate.username)\" class=\"rounded-circle\">\n              <img\n                :src=\"uiAvatar(candidate.name, candidate.avatar)\"\n                alt=\"avatar\"\n                class=\"lazy-img rounded-circle\"\n              />\n            </Link>\n          </div>\n          <div class=\"right-side\">\n            <div class=\"row gx-1 align-items-start\">\n              <div class=\"col-xl-3\">\n                <div class=\"position-relative\">\n                  <h4 class=\"candidate-name mb-0\">\n                    <Link :href=\"route('candidates.show', candidate.username)\" class=\"tran3s\">\n                      {{ textExcerpt(candidate.name, 16) }}\n                    </Link>\n                    <span v-if=\"candidate?.pivot?.is_hired\" class=\"badge bg-success ms-2\">{{\n                      trans('Hired')\n                    }}</span>\n                  </h4>\n                  <div class=\"candidate-post\">\n                    {{ candidate.categories?.[0]?.title }}\n                  </div>\n                  <ul class=\"cadidate-skills style-none d-flex align-items-center\">\n                    <li v-for=\"(item, index) in candidateData(candidate).tagItems\" :key=\"index\">\n                      {{ item.title }}\n                    </li>\n                    <li class=\"more\" v-if=\"candidateData(candidate).showMoreTags\">\n                      {{ candidateData(candidate).remainingTagsCount }}+\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div class=\"col-xl-2 col-md-4 col-sm-6\">\n                <div class=\"candidate-info\">\n                  <span>{{ trans('Salary') }}</span>\n                  <div>\n                    {{ formatNumber(candidateData(candidate).expectedSalary) }}/\n                    {{ candidate.meta?.currency }}\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-xl-2 col-md-4 col-sm-6\">\n                <div class=\"candidate-info\">\n                  <span>{{ trans('Location') }}</span>\n                  <div>\n                    {{ candidateData(candidate).location }}\n                  </div>\n                </div>\n                <!-- /.candidate-info -->\n              </div>\n              <div class=\"col-xl-2 col-md-4 col-sm-6\">\n                <div class=\"candidate-info\">\n                  <span>{{ trans('Submission Date') }}</span>\n                  <div>\n                    {{ moment(candidate.created_at).format('DD MMM, Y') }}\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-xl-2 col-md-2 d-flex align-item-center\">\n                <Link\n                  :href=\"route('candidates.show', candidateData(candidate).username)\"\n                  class=\"save-btn rounded-circle tran3s fw-normal text-center\"\n                  ><i class=\"bi bi-eye\"></i>\n                </Link>\n                <button\n                  @click=\"toggleBookmark(candidateData(candidate).id)\"\n                  class=\"save-btn tran3s rounded-circle ms-1\"\n                >\n                  <i\n                    class=\"bi bi-heart\"\n                    :class=\"{\n                      'text-danger': candidateData(candidate).isBookmarked\n                    }\"\n                  ></i>\n                </button>\n              </div>\n              <div class=\"col-xl-1 col-md-2\">\n                <div class=\"d-flex justify-content-md-end align-items-center\">\n                  <div class=\"action-dots float-end ms-2 mt-10\">\n                    <button\n                      class=\"action-btn dropdown-toggle\"\n                      type=\"button\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                    >\n                      <span></span>\n                    </button>\n                    <ul class=\"dropdown-menu dropdown-menu-end\">\n                      <li>\n                        <button\n                          @click=\"showApplication(candidate)\"\n                          class=\"dropdown-item\"\n                          data-bs-toggle=\"modal\"\n                          data-bs-target=\"#candidateDetails\"\n                        >\n                          <img\n                            src=\"/assets/dashboard/images/icon/icon_18.svg\"\n                            alt=\"\"\n                            class=\"lazy-img\"\n                          />\n                          {{ trans('Details') }}\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </template>\n  </div>\n  <!-- modal -->\n\n  <div\n    class=\"modal fade\"\n    id=\"candidateDetails\"\n    tabindex=\"-1\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    role=\"dialog\"\n    aria-labelledby=\"candidateDetailsTitle\"\n    aria-hidden=\"true\"\n  >\n    <div\n      class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg\"\n      role=\"document\"\n    >\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <p class=\"modal-title fw-bold\" id=\"candidateDetailsTitle\">\n            {{ trans('Candidate Details') }}\n          </p>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"candidate-card-bg\">\n            <img\n              :src=\"\n                findCandidate &&\n                uiAvatar(candidateData(findCandidate).name, candidateData(findCandidate).avatar)\n              \"\n              alt=\"avatar\"\n              class=\"lazy-img logo m-auto\"\n            />\n            <div class=\"h3 text-dark mt-15 mb-10 text-center\">\n              {{ findCandidate?.name }}\n            </div>\n\n            <div class=\"border-top mt-2 pt-20\">\n              <div class=\"justify-content-around d-flex rounded bg-white py-3\">\n                <div>\n                  <strong>{{ trans('Expected Salary') }}</strong>\n                  <div class=\"mt-2\">\n                    {{ formatNumber(findCandidate && candidateData(findCandidate).expectedSalary) }}\n                    /\n\n                    <template v-if=\"findCandidate?.meta\">\n                      {{ findCandidate?.meta.currency }}\n                    </template>\n                  </div>\n                </div>\n                <div>\n                  <strong>{{ trans('Skills / Expertise') }}</strong>\n                  <div class=\"d-flex mt-2 flex-wrap gap-2\" v-if=\"findCandidate\">\n                    <span\n                      class=\"bg-light rounded border p-1\"\n                      v-for=\"(item, index) in candidateData(findCandidate).tagItems\"\n                      :key=\"index\"\n                    >\n                      {{ item.title }}\n                    </span>\n                  </div>\n                </div>\n                <div>\n                  <strong>{{ trans('Location') }}</strong>\n                  <div class=\"mt-2\">\n                    {{ findCandidate && candidateData(findCandidate).location }}\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"mt-3\">\n                <div class=\"rounded bg-white p-3\">\n                  <h5 class=\"border-bottom mb-3 pb-2\">{{ trans('Application Information') }}:</h5>\n                  <table class=\"table-borderless table\">\n                    <tbody>\n                      <tr v-for=\"field in fields\" :key=\"field.label\">\n                        <td>{{ field.label }}</td>\n                        <td>\n                          <a v-if=\"field.type == 'file'\" :href=\"field.value\" class=\"btn-six\">{{\n                            trans('View')\n                          }}</a>\n                          <span v-else>{{ field.value }}</span>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n\n              <div class=\"d-flex justify-content-end mt-3\">\n                <button v-if=\"findCandidate?.pivot?.is_hired != 1\" class=\"btn-five\" @click=\"hired\">\n                  {{ trans('Hire') }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, router } from '@inertiajs/vue3'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport CandidateCardJobShow from '@/Layouts/Employer/CandidateCardJobShow.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport { ref, watch } from 'vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nconst { pickBy } = sharedComposable()\ndefineOptions({ layout: EmployerLayout })\nconst props = defineProps(['applicants', 'job'])\nconst filterForm = ref({\n  order: ''\n})\nconst sorts = [\n  {\n    label: 'Latest',\n    value: 'desc'\n  },\n  {\n    label: 'Oldest',\n    value: 'asc'\n  }\n]\n\nwatch(\n  () => filterForm.value.order,\n  () => {\n    router.get(route('employer.jobs.show', props.job.slug), pickBy(filterForm.value), {\n      preserveState: true\n    })\n  }\n)\n</script>\n\n<template>\n  <Head :title=\"job.title\" />\n\n  <div class=\"mb-40 d-flex align-items-center justify-content-between lg-mb-30\">\n    <h4 class=\"main-title m0\">{{ job.title }}</h4>\n    <div class=\"d-flex\">\n      <a :href=\"route('employer.jobs.show', job.slug) + '?export=1'\" class=\"btn-one btn-sm me-5\">{{\n        trans('Export in Excel')\n      }}</a>\n      <div class=\"short-filter d-flex align-items-center\">\n        <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n        <NiceSelect\n          v-model=\"filterForm.order\"\n          :options=\"sorts\"\n          value-by=\"value\"\n          label=\"label\"\n          placeholder=\"Default\"\n        />\n      </div>\n    </div>\n  </div>\n  <CandidateCardJobShow\n    v-if=\"applicants.total\"\n    :applicants=\"applicants.data\"\n    :job=\"job.id\"\n    :jobObj=\"job\"\n  />\n  <div class=\"bg-white card-box border-20\" v-else>\n    <div class=\"text-center\">{{ trans('No record found') }}</div>\n  </div>\n\n  <div class=\"dash-pagination d-flex justify-content-end mt-30\">\n    <Paginate :links=\"applicants.links\" />\n  </div>\n</template>\n","<script setup>\nimport { Head, useForm } from \"@inertiajs/vue3\";\nimport EmployerLayout from \"@/Layouts/Employer.vue\";\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport { ref } from \"vue\";\n\ndefineOptions({ layout: EmployerLayout });\n\nconst { kyc_methods } = defineProps([\"kyc_methods\"]);\n\nconst selectedMethod = ref(kyc_methods[0] ? kyc_methods[0] : {});\n\nconst flattenObject = (obj, parentKey) => {\n  let result = {};\n\n  Object.keys(obj).forEach((key) => {\n    const value = obj[key];\n    const _key = parentKey ? key : key;\n\n    if (typeof value === \"object\" && !(value instanceof File)) {\n      result = { ...result, ...flattenObject(value, _key) };\n    } else {\n      result[_key] = value;\n    }\n  });\n\n  return result;\n};\n\nconst form = useForm({\n  method: selectedMethod.value?.id,\n  fields: selectedMethod.value?.fields ?? [],\n  note: \"\",\n});\n\nconst submit = (method) => {\n  form.post(route(\"employer.kyc.store\"), {\n    preserveScroll: true,\n    preserveState: true,\n    onSuccess: () => {\n      notify.success(trans(\"KYC Document Submitted Successfully\"));\n    },\n    onError(e) {\n      Object.values(e).forEach((item) => notify.danger(item));\n    },\n  });\n};\n</script>\n\n<template>\n  <Head title=\"KYC verification | Employer Panel\" />\n\n  <div class=\"d-flex justify-content-between align-items-center\">\n    <h6 class=\"main-title\">{{ trans(\"KYC verification\") }}</h6>\n    <Link :href=\"route('employer.kyc.index')\" class=\"btn-one\">\n      {{ trans(\"View my requests\") }}\n    </Link>\n  </div>\n\n  <div class=\"bg-white card-box border-20\">\n    <div v-if=\"kyc_methods.length\" class=\"p-2\">\n      <!-- Nav tabs -->\n      <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n        <li\n          class=\"nav-item\"\n          role=\"presentation\"\n          v-for=\"(method, index) in kyc_methods\"\n          :key=\"index\"\n        >\n          <button\n            @click=\"selectedMethod = method\"\n            class=\"nav-link\"\n            :class=\"{ active: selectedMethod?.id == method.id }\"\n            :id=\"`tab-nav-${index}`\"\n            data-bs-toggle=\"tab\"\n            :data-bs-target=\"`#tab-pane-${index}`\"\n            type=\"button\"\n            role=\"tab\"\n            :aria-controls=\"method.id\"\n            :aria-selected=\"selectedMethod?.id == method.id ? 'true' : 'false'\"\n          >\n            {{ method.title }}\n          </button>\n        </li>\n      </ul>\n\n      <!-- Tab panes -->\n      <div class=\"tab-content\">\n        <div\n          class=\"tab-pane\"\n          v-for=\"(method, index) in kyc_methods\"\n          :key=\"index\"\n          :id=\"`tab-pane-${index}`\"\n          :class=\"{ active: selectedMethod?.id == method.id }\"\n          role=\"tabpanel\"\n          :aria-labelledby=\"`tab-${index}`\"\n        >\n          <form class=\"p-3\" @submit.prevent=\"submit()\">\n            <template v-for=\"(field, index) in form.fields\" :key=\"field.id\">\n              <div v-if=\"field.type == 'textarea'\" class=\"mb-2 dash-input-wrapper\">\n                <label> {{ field.label }} </label>\n                <textarea v-model=\"field.value\" class=\"form-control\"></textarea>\n              </div>\n\n              <div v-else-if=\"field.type == 'file'\" class=\"mb-2\">\n                <label> {{ field.label }} </label>\n                <input\n                  type=\"file\"\n                  @change=\"(e) => (field.value = e.target.files[0])\"\n                  class=\"form-control\"\n                />\n              </div>\n\n              <div v-else class=\"mb-2 dash-input-wrapper\">\n                <label :for=\"`fields_${index}`\">{{ field.label }}</label>\n                <input\n                  :type=\"field.type\"\n                  v-model=\"field.value\"\n                  :id=\"`fields_${index}`\"\n                  class=\"form-control\"\n                />\n              </div>\n            </template>\n\n            <div class=\"mb-2\">\n              <label>{{ trans(\"Note\") }}</label>\n              <textarea v-model=\"form.note\" rows=\"4\" class=\"form-control\"></textarea>\n            </div>\n\n            <SpinnerBtn :processing=\"form.processing\" :btn-text=\"trans('Submit')\" />\n          </form>\n        </div>\n      </div>\n    </div>\n    <div v-else class=\"text-center fw-bold mb-30\">\n      {{ trans(\"No remaining items to submit\") }}\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, Link } from \"@inertiajs/vue3\";\n\nimport EmployerLayout from \"@/Layouts/Employer.vue\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\n\nconst { KYCDocuments } = defineProps([\"KYCDocuments\"]);\n\nconst { authUser } = sharedComposable();\ndefineOptions({ layout: EmployerLayout });\n</script>\n\n<template>\n  <Head title=\"KYC Requests | Employer Panel\" />\n\n  <h2 class=\"main-title\">{{ trans(\"KYC Requests\") }}</h2>\n\n  <h4 class=\"fs-2 text-center\" v-if=\"authUser.kyc_verified_at\">\n    <span class=\"badge bg-success\">\n      {{ trans(\"Congratulations, You are verified now\") }}\n    </span>\n  </h4>\n\n  <div v-else class=\"alert alert-warning\">\n    <p>{{ trans(\"Profile verification is not completed\") }}</p>\n    <Link class=\"btn-two\" :href=\"route('employer.kyc.create')\">{{\n      trans(\"Verify KYC\")\n    }}</Link>\n  </div>\n  <br />\n  <div class=\"card-box border-20 bg-white\">\n    <div v-if=\"KYCDocuments.total\" class=\"table-responsive mt-40\">\n      <table class=\"job-alert-table table\">\n        <thead class=\"border-0\">\n          <tr>\n            <th>{{ trans(\"Method\") }}</th>\n            <th>{{ trans(\"Status\") }}</th>\n            <th>{{ trans(\"Note\") }}</th>\n            <th>{{ trans(\"Documents\") }}</th>\n            <th>{{ trans(\"Action\") }}</th>\n          </tr>\n        </thead>\n        <tbody class=\"border-top-0\">\n          <tr v-for=\"(document, index) in KYCDocuments.data\" :key=\"index\">\n            <td>{{ document.method.title ?? null }}</td>\n            <td>\n              <span v-if=\"document.status == 0\" class=\"badge bg-warning\">\n                {{ trans(\"Pending\") }}</span\n              >\n              <span v-else-if=\"document.status == 1\" class=\"badge bg-primary\">\n                {{ trans(\"Approved\") }}</span\n              >\n              <span v-else-if=\"document.status == 2\" class=\"badge bg-danger\">\n                {{ trans(\"Rejected\") }}</span\n              >\n              <span v-else-if=\"document.status == 3\" class=\"badge bg-dark\">\n                {{ trans(\"Re-Submitted\") }}</span\n              >\n            </td>\n            <td>{{ document.note }}</td>\n            <td>{{ document.data?.length ?? 0 }}</td>\n            <td class=\"text-end\">\n              <Link\n                v-if=\"document.status == 2\"\n                class=\"btn-seven me-4 py-2\"\n                :href=\"route('employer.kyc.resubmit', document.id)\"\n              >\n                {{ trans(\"Re Submit\") }}\n              </Link>\n\n              <Link class=\"btn-one\" :href=\"route('employer.kyc.show', document.id)\">\n                <i class=\"fas fa-eye\"></i>\n              </Link>\n            </td>\n          </tr>\n          <tr></tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div class=\"border-top pt-30 fw-bold border-2 text-center\" v-else>\n      {{ trans(\"No records found\") }}\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, Link, useForm } from \"@inertiajs/vue3\";\nimport EmployerLayout from \"@/Layouts/Employer.vue\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\ndefineOptions({ layout: EmployerLayout });\n\nconst { authUser } = sharedComposable();\nconst { kyc } = defineProps([\"kyc\"]);\n\nlet form = useForm({\n  fields: kyc.fields,\n  note: kyc.note,\n});\n\nconst submit = () => {\n  form.post(route(\"employer.kyc.resubmit\", kyc), {\n    onSuccess: (visit) => {\n      notify.success(\"KYC Document Submitted Successfully\");\n    },\n    onError(e) {\n      notify.danger(Object.values(e)[0] ?? \"\");\n    },\n  });\n};\n</script>\n\n<template>\n  <Head title=\"Re-Submit KYC verification | Employer Panel\" />\n\n  <h2 class=\"main-title\">{{ trans(\"Re-Submit KYC verification\") }}</h2>\n  <div class=\"card-box border-20 bg-white\">\n    <div class=\"fs-4 text-center\">{{ trans(\"Re-Submit KYC\") }}</div>\n    <form class=\"p-3\" @submit.prevent=\"submit()\">\n      <template v-for=\"(field, index) in form.fields\" :key=\"field.id\">\n        <div v-if=\"field.type == 'textarea'\" class=\"dash-input-wrapper mb-2\">\n          <label> {{ field.label }} </label>\n          <textarea v-model=\"field.value\" class=\"form-control\"></textarea>\n        </div>\n\n        <div v-else-if=\"field.type == 'file'\" class=\"mb-2\">\n          <label> {{ field.label }} </label>\n          <input\n            type=\"file\"\n            @change=\"(e) => (field.value = e.target.files[0])\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <div v-else class=\"dash-input-wrapper mb-2\">\n          <label :for=\"`fields_${index}`\">{{ field.label }}</label>\n          <input\n            :type=\"field.type\"\n            v-model=\"field.value\"\n            :id=\"`fields_${index}`\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n      </template>\n\n      <div class=\"mb-2\">\n        <label>{{ trans(\"Note\") }}</label>\n        <textarea v-model=\"form.note\" rows=\"4\" class=\"form-control\"></textarea>\n      </div>\n\n      <SpinnerBtn\n        type=\"submit\"\n        classes=\"btn-one mt-5\"\n        :processing=\"form.processing\"\n        :btn-text=\"trans('Submit')\"\n      />\n    </form>\n  </div>\n</template>\n","<script setup>\nimport { Head, Link } from \"@inertiajs/vue3\";\nimport EmployerLayout from \"@/Layouts/Employer.vue\";\nimport moment from \"moment\";\ndefineOptions({ layout: EmployerLayout });\n\nconst { kyc } = defineProps([\"kyc\"]);\n</script>\n\n<template>\n  <Head title=\"KYC verification | Employer Panel\" />\n\n  <h2 class=\"main-title\">{{ trans(\"KYC verification\") }}</h2>\n  <div class=\"card-box border-20 bg-white\">\n    <div>\n      <div class=\"d-flex justify-content-between\">\n        <p>\n          <strong>{{ trans(\"Status\") }} : </strong>\n          <span v-if=\"kyc.status == 0\" class=\"badge bg-warning\">\n            {{ trans(\"Pending\") }}</span\n          >\n          <span v-if=\"kyc.status == 1\" class=\"badge bg-primary\">\n            {{ trans(\"Approved\") }}</span\n          >\n          <span v-if=\"kyc.status == 2\" class=\"badge bg-danger\">\n            {{ trans(\"Rejected\") }}</span\n          >\n          <span v-if=\"kyc.status == 3\" class=\"badge bg-dark\">\n            {{ trans(\"Re-Submitted\") }}</span\n          >\n        </p>\n\n        <p>\n          <strong> {{ trans(\"Submitted At\") }}:</strong>\n          {{ moment(kyc.created_at).format(\"DD MMM, YYYY\") }}\n        </p>\n        <p v-if=\"kyc.status == 2\">\n          <strong> {{ trans(\"Rejected At\") }}:</strong>\n          {{ moment(kyc.rejected_at).format(\"DD MMM, YYYY\") }}\n        </p>\n      </div>\n\n      <table class=\"table table-hover border\">\n        <thead>\n          <tr class=\"bg-light\">\n            <th>{{ trans(\"Requirements\") }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody class=\"border-top\">\n          <tr v-for=\"item in kyc.data\" :key=\"item\">\n            <th>{{ item.label }}</th>\n            <td>\n              <p v-if=\"item.type != 'file'\">{{ item.value }}</p>\n              <a v-else target=\"_blank\" :href=\"item.value\" class=\"btn-six\">{{\n                trans(\"View\")\n              }}</a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div class=\"text-center\">\n        <Link :href=\"route('employer.kyc.index', kyc.id)\" class=\"btn-seven py-2 me-3\">\n          {{ trans(\"Back\") }}\n        </Link>\n\n        <Link\n          v-if=\"kyc.status == 2\"\n          :href=\"route('employer.kyc.resubmit', kyc.id)\"\n          class=\"btn-one\"\n        >\n          <i class=\"fas fa-redo\"></i>\n          {{ trans(\"Resubmit\") }}\n        </Link>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head } from \"@inertiajs/vue3\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\nimport moment from \"moment\";\nimport EmployerLayout from \"@/Layouts/Employer.vue\";\nimport { computed } from \"vue\";\ndefineOptions({ layout: EmployerLayout });\n\nconst props = defineProps([\"user\", \"plans\", \"orders\"]);\nconst { formatCurrency } = sharedComposable();\n\nconst isNearExpiry = computed(() => {\n  if (props.user.will_expire) {\n    const userWillExpireDate = moment(props.user.will_expire);\n    const daysDifference = userWillExpireDate.diff(moment(), \"days\");\n    return daysDifference < 7;\n  }\n  return false;\n});\nconst hasExpired = computed(() => {\n  if (props.user.will_expire) {\n    const userWillExpireDate = moment(props.user.will_expire);\n    return userWillExpireDate.isBefore(moment());\n  }\n  return false;\n});\n</script>\n\n<template>\n  <Head :title=\"trans('Memberships')\" />\n  <h2 class=\"main-title\">{{ trans(\"Membership\") }}</h2>\n  <div\n    class=\"pb-0 alert alert-danger border-20\"\n    v-if=\"!user.will_expire || !user.plan || !user.plan_id\"\n  >\n    <p>{{ trans(\"You haven't purchased any subscription plans yet.\") }}</p>\n  </div>\n  <div class=\"pb-0 alert alert-danger border-20\" v-if=\"hasExpired\">\n    <p>{{ trans(\"Your subscription has already expired\") }}</p>\n  </div>\n  <div class=\"pb-0 alert alert-warning border-20\" v-else-if=\"isNearExpiry\">\n    <p>\n      {{ trans(\"Your current subscription plan is about to expire in less than 7 days\") }}\n    </p>\n  </div>\n\n  <div class=\"mb-20 membership-plan-wrapper\" v-if=\"user.plan\">\n    <div class=\"row gx-0\">\n      <div class=\"col-xxl-7 col-lg-6 d-flex flex-column\">\n        <div class=\"column w-100 h-100\">\n          <h4>{{ trans(\"Current Plan\") }} ({{ user.plan.title }})</h4>\n          <p>\n            {{\n              trans(`Unlimited access to our legal document library and online rental application tool,\n            billed monthly or yearly.`)\n            }}\n          </p>\n        </div>\n      </div>\n      <div class=\"col-xxl-5 col-lg-6 d-flex flex-column\">\n        <div class=\"column border-left w-100 h-100\">\n          <div class=\"d-flex\">\n            <h3 class=\"price m0 text-nowrap\">{{ formatCurrency(user.plan.price) }}</h3>\n            <div class=\"flex-fill ps-2\">\n              <h6>\n                {{ user.plan.days === 30 ? \"Monthly\" : \"Yearly\" }} {{ trans(\"Plan\") }}\n              </h6>\n              <span class=\"text1 d-block\">\n                {{ trans(\"Your subscription will expire\") }}\n\n                <span class=\"fw-500\">\n                  {{ moment(user.will_expire).format(\"MMM DD, YYYY\") }}\n                </span>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <section class=\"pricing-section\">\n    <div class=\"row justify-content-center\">\n      <template v-for=\"plan in plans\" :key=\"plan.id\">\n        <div class=\"col-lg-4 col-md-6\">\n          <div\n            class=\"mt-2 pricing-card-one 5\"\n            :class=\"{\n              'popular-two': plan.is_recommended,\n              'border-0': plan.is_recommended === 0,\n            }\"\n          >\n            <div class=\"popular-badge\" v-if=\"plan.is_recommended\">\n              {{ trans(\"popular\") }}\n            </div>\n            <div class=\"pack-name\">{{ plan.title }}</div>\n            <div class=\"price fw-500\">\n              <sub>{{ formatCurrency(plan.price)[0] }}</sub>\n              {{ plan.price }}\n              <sup>{{ plan.days === 30 ? \"Monthly\" : \"Yearly\" }}</sup>\n            </div>\n            <ul class=\"style-none\">\n              <li\n                class=\"text-capitalize\"\n                v-for=\"(data, key) in plan.data\"\n                :key=\"data.key\"\n              >\n                {{ key.replace(/_/g, \" \") }} {{ data }}\n              </li>\n            </ul>\n            <a\n              :href=\"route('employer.membership.payment', plan.id)\"\n              class=\"get-plan-btn tran3s w-100 mt-30\"\n            >\n              {{ trans(\"Choose Plan\") }}\n            </a>\n          </div>\n        </div>\n      </template>\n    </div>\n  </section>\n\n  <div class=\"card mt-30 border-20\">\n    <div class=\"card-body\">\n      <h3 class=\"\">{{ trans(\"Order History\") }}</h3>\n\n      <div v-if=\"orders.total\" class=\"table-responsive\">\n        <table class=\"table job-alert-table\">\n          <thead>\n            <tr>\n              <th>{{ trans(\"Invoice No\") }}</th>\n              <th>{{ trans(\"Payment ID\") }}</th>\n              <th>{{ trans(\"Plan\") }}</th>\n              <th>{{ trans(\"Amount\") }}</th>\n              <th>{{ trans(\"Tax\") }}</th>\n              <th>{{ trans(\"Expire Date\") }}</th>\n              <th class=\"text-center\">{{ trans(\"Created Date\") }}</th>\n            </tr>\n          </thead>\n          <tbody class=\"border-0\">\n            <tr v-for=\"order in orders.data\" :key=\"order.id\">\n              <td>{{ order.invoice_no }}</td>\n              <td>{{ order.payment_id }}</td>\n              <td>{{ order.plan?.title }}</td>\n              <td>{{ formatCurrency(order.amount) }}</td>\n              <td>{{ formatCurrency(order.tax) }}</td>\n              <td>{{ moment(order.will_expire).format(\"DD MMM, YYYY\") }}</td>\n              <td class=\"text-center\">\n                {{ moment(order.created_at).format(\"DD MMM, YYYY\") }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <h3 v-else class=\"text-center text-muted\">{{ trans(\"No record found\") }}</h3>\n    </div>\n  </div>\n</template>\n","import { router } from '@inertiajs/vue3'\nimport { defineStore } from 'pinia'\n\nexport const useMessageStore = defineStore({\n  id: 'message',\n\n  state: () => ({\n    isFetched: false,\n    link: route('api-message.index'),\n    conversations: [],\n    data: null,\n    conversationsLoadMore: false,\n    conversationPage: 1,\n    activeUuid: null,\n    activeIndex: 0\n  }),\n\n  actions: {\n    async fetchConversations(link = this.link) {\n      const res = await axios.get(link)\n      this.conversations = res.data.data\n      this.data = res.data\n      this.conversationsLoadMore = true\n      this.isFetched = false\n      this.conversationPage = res.data.current_page\n      console.log(this.isFetched)\n      if (res.data.last_page === this.conversationPage) {\n        this.conversationsLoadMore = false\n      }\n      this.isFetched = true\n      console.log(this.isFetched)\n    },\n\n    async fetchMoreConversations() {\n      this.conversationPage++\n      const res = await axios.get(route('api-message.index', { page: this.conversationPage }))\n      this.conversations.push(...res.data.data)\n      this.data = res.data\n      if (res.data.last_page === this.conversationPage) {\n        this.conversationsLoadMore = false\n      }\n    },\n    async next() {\n      const conversationIndex = this.conversations.findIndex(\n        (conversation) => conversation.uuid === this.activeUuid\n      )\n      if (this.conversations?.length === conversationIndex + 1) {\n        return\n      }\n      router.get(route('employer.message.show', this.conversations[conversationIndex + 1].uuid))\n      this.activeIndex = conversationIndex + 1\n    },\n    async prev() {\n      const conversationIndex = this.conversations.findIndex(\n        (conversation) => conversation.uuid === this.activeUuid\n      )\n      if (conversationIndex === 0) {\n        return\n      }\n      router.get(\n        route('employer.message.show', this.conversations[conversationIndex - 1].uuid),\n        {},\n        {\n          onFinish: () => {\n            this.activeIndex = conversationIndex - 1\n          }\n        }\n      )\n    }\n  }\n})\n","<script setup>\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { useMessageStore } from '@/Store/messageStore'\nimport moment from 'moment'\nimport { ref, onMounted, onBeforeUnmount } from 'vue'\nconst props = defineProps(['activeUuid'])\n\nconst intersectionTarget = ref(null)\nlet observer = null\n\nconst { textExcerpt, authUser } = sharedComposable()\nconst message = useMessageStore()\nonMounted(async () => {\n  if (!message.isFetched) {\n    message.fetchConversations()\n  }\n  observer = new IntersectionObserver(onIntersection, {\n    root: null,\n    rootMargin: '0px',\n    threshold: 0.5\n  })\n\n  observer.observe(intersectionTarget.value)\n})\nconst onIntersection = (entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting && message.conversationsLoadMore && message.isFetched) {\n      message.fetchMoreConversations()\n    }\n  })\n}\nonBeforeUnmount(() => {\n  if (observer) observer.disconnect()\n})\nconst isMessageRead = (conversation) => {\n  if (conversation.last_reply[0]?.user_id === authUser.id) {\n    return 'unread'\n  }\n  if (conversation.last_reply[0]?.user_id === authUser.id && !conversation.last_reply[0]?.read_at) {\n    return 'read'\n  }\n}\n</script>\n<template>\n  <div class=\"email-read-panel max-h-26-r\">\n    <template v-if=\"message.isFetched\">\n      <template v-for=\"conversation in message.conversations\" :key=\"conversation.uuid\">\n        <Link\n          :href=\"route('employer.message.show', conversation.uuid)\"\n          class=\"email-list-item ps-xxl-4 pe-xxl-4 w-100 pe-3 ps-3\"\n          :class=\"[\n            isMessageRead(conversation),\n            {\n              selected: message.activeUuid === conversation.uuid\n            }\n          ]\"\n        >\n          <div class=\"email-short-preview position-relative\">\n            <div class=\"d-flex align-items-center justify-content-between\">\n              <div class=\"sender-name\">{{ conversation.receiver[0]?.name }}</div>\n              <div class=\"date\">\n                {{ moment(conversation.last_reply[0]?.created_at).format('MMM DD') }}\n              </div>\n            </div>\n            <div class=\"mail-sub\">\n              {{ conversation.receiver[0]?.service?.title }}\n            </div>\n            <div class=\"mail-text\" v-if=\"conversation.deleted_by !== authUser.id\">\n              {{ textExcerpt(conversation.last_reply[0]?.body, 100) }}\n            </div>\n            <div class=\"mail-text text-muted\" v-else>\n              {{ trans('Conversation has been Deleted') }}\n            </div>\n            <div\n              v-if=\"\n                conversation.last_reply[0]?.attachments && conversation.deleted_by !== authUser.id\n              \"\n              class=\"attached-file-preview d-flex align-items-center mt-15\"\n            >\n              <div class=\"d-flex align-items-center flex-wrap\">\n                <template\n                  v-for=\"(att, i) in JSON.parse(conversation.last_reply[0].attachments)\"\n                  :key=\"i\"\n                >\n                  <div class=\"file d-flex align-items-center mb-2 me-2\">\n                    <img\n                      src=\"/assets/dashboard/images/icon/icon_28.svg\"\n                      alt=\"icon\"\n                      class=\"lazy-img me-2\"\n                    />\n                    <span>{{ textExcerpt(att, 25) }}</span>\n                  </div>\n                </template>\n              </div>\n            </div>\n          </div>\n        </Link>\n      </template>\n    </template>\n    <div\n      v-if=\"message.conversations?.length < 1 && message.isFetched\"\n      class=\"ps-xxl-4 pe-xxl-4 w-100 mt-5 pe-3 ps-3\"\n    >\n      <p class=\"text-center\">\n        {{ trans('!Opps no conversation records found') }}\n      </p>\n    </div>\n    <div ref=\"intersectionTarget\" />\n  </div>\n</template>\n","<script setup>\nimport MessageSidebar from '@/Layouts/Employer/MessageSidebar.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { useMessageStore } from '@/Store/messageStore'\nimport EmojiPicker from 'vue3-emoji-picker'\nimport 'vue3-emoji-picker/css'\nimport { router } from '@inertiajs/vue3'\nimport { ref, onUnmounted } from 'vue'\nconst message = useMessageStore()\nconst filterForm = ref({\n  name: null,\n  read: null\n})\nconst messageForm = ref({\n  body: '',\n  attachments: [],\n  email: ''\n})\nconst messageTextarea = ref(null)\nconst closeButton = ref(null)\nconst emojiState = ref(false)\nconst { pickBy, currentRoute, textExcerpt } = sharedComposable()\nconst filter = () => {\n  message.fetchConversations(route('api-message.index', pickBy(filterForm.value)))\n}\nconst setRead = (val) => {\n  filterForm.value.read = val\n  filter()\n}\nconst submit = () => {\n  router.post(route('employer.message.store'), messageForm.value, {\n    onSuccess: () => {\n      messageForm.value.body = ''\n      messageForm.value.attachments = []\n      message.fetchConversations()\n      closeButton.value.click()\n    }\n  })\n}\nconst onSelectEmoji = (emoji) => {\n  const textarea = messageTextarea.value\n  const textBeforeCursor = messageForm.body.slice(0, textarea.selectionStart)\n  const textAfterCursor = messageForm.body.slice(textarea.selectionStart)\n  messageForm.body = textBeforeCursor + emoji.i + textAfterCursor\n}\nconst previewFlies = (event) => {\n  const files = []\n  for (const file of event.target.files) {\n    files.push(file)\n  }\n  const maxGallerySize = 5\n  const oldFilesCount = Math.max(\n    messageForm.value.attachments.length + files.length - maxGallerySize,\n    0\n  )\n\n  const newFiles = files.slice(0, maxGallerySize - oldFilesCount)\n  const updatedGallery = messageForm.value.attachments.slice(oldFilesCount).concat(newFiles)\n\n  messageForm.value.attachments = updatedGallery\n}\nonUnmounted(() => message.$reset())\n</script>\n\n<template>\n  <div class=\"row gx-0 align-items-center\">\n    <div\n      class=\"offcanvas compose-mail-offcanvas\"\n      data-bs-scroll=\"true\"\n      data-bs-backdrop=\"false\"\n      tabindex=\"-1\"\n      id=\"offcanvasScrolling\"\n      aria-labelledby=\"offcanvasScrollingLabel\"\n    >\n      <div class=\"compose-new-email-container\">\n        <div class=\"new-email-header position-relative\">\n          <div class=\"input-group d-flex align-items-center\">\n            <div class=\"w-60px text-center\">To</div>\n            <input\n              required\n              v-model=\"messageForm.email\"\n              type=\"email\"\n              class=\"flex-fill\"\n              placeholder=\"payoneer@inquiry.com\"\n            />\n          </div>\n        </div>\n        <!-- /.new-email-header -->\n        <div class=\"compose-body\">\n          <textarea ref=\"messageTextarea\" v-model=\"messageForm.body\"> </textarea>\n        </div>\n        <!-- /.compose-body -->\n        <div class=\"row mt-10 ps-3\" v-if=\"messageForm?.attachments.length > 0\">\n          <div\n            class=\"attachments col-3 mb-2 me-2 rounded border p-3\"\n            v-for=\"att in messageForm.attachments\"\n            :key=\"att\"\n          >\n            <a class=\"file tran3s d-flex align-items-center\" download>\n              <div class=\"icon rounded-circle d-flex align-items-center justify-content-center\">\n                <img src=\"/assets/dashboard/images/icon/icon_31.svg\" alt=\"icon\" class=\"lazy-img\" />\n              </div>\n              <div class=\"ps-1\">\n                <div class=\"file-name fs-7\">{{ textExcerpt(att.name, 15) }}</div>\n              </div>\n            </a>\n          </div>\n        </div>\n        <div class=\"compose-email-footer d-flex justify-content-between position-relative\">\n          <div class=\"d-flex align-items-center\">\n            <div class=\"insert-file position-relative me-3\">\n              <img src=\"/assets/dashboard/images/icon/icon_32.svg\" alt=\"\" class=\"lazy-img\" />\n              <input\n                multiple\n                type=\"file\"\n                @change=\"previewFlies\"\n                name=\"uploadImg\"\n                title=\"Insert File\"\n                accept=\".csv,.docx,.pdf,.xlsx,.xls\"\n              />\n            </div>\n            <div class=\"insert-file position-relative me-3\">\n              <img src=\"/assets/dashboard/images/icon/icon_34.svg\" alt=\"\" class=\"lazy-img\" />\n              <input\n                multiple\n                type=\"file\"\n                @change=\"previewFlies\"\n                name=\"uploadImg\"\n                accept=\"image/*\"\n                title=\"Insert Image\"\n              />\n            </div>\n            <!-- emoji-backdrop -->\n            <div @click=\"emojiState = false\" class=\"emoji-backdrop\" v-show=\"emojiState\" />\n            <div class=\"m-emoji-container\">\n              <EmojiPicker v-show=\"emojiState\" :native=\"true\" @select=\"onSelectEmoji\" />\n            </div>\n            <button class=\"insert-emoji me-3\" type=\"button\" @click=\"emojiState = !emojiState\">\n              <img src=\"/assets/dashboard/images/icon/icon_33.svg\" alt=\"\" class=\"lazy-img\" />\n            </button>\n          </div>\n\n          <div class=\"d-flex align-items-center\">\n            <button @click.prevent=\"submit\" class=\"reply-btn tran3s\">{{ trans('Send') }}</button>\n          </div>\n        </div>\n        <!-- /.compose-email-footer -->\n      </div>\n      <button\n        ref=\"closeButton\"\n        type=\"button\"\n        class=\"btn-close text-reset\"\n        data-bs-dismiss=\"offcanvas\"\n        aria-label=\"Close\"\n      ></button>\n    </div>\n    <div class=\"col-lg-4\">\n      <div class=\"d-flex align-items-center justify-content-between\">\n        <h2 class=\"main-title m0\">{{ trans('Messages') }}</h2>\n        <a\n          class=\"new-message-compose rounded-circle\"\n          data-bs-toggle=\"offcanvas\"\n          href=\"#offcanvasScrolling\"\n          role=\"button\"\n          aria-controls=\"offcanvasScrolling\"\n          >+</a\n        >\n      </div>\n    </div>\n    <div\n      class=\"col-lg-8\"\n      v-if=\"message.conversations?.length > 1 && currentRoute('Employer/Message/Show')\"\n    >\n      <div\n        class=\"message-pagination ps-lg-4 ps-xxl-5 d-flex align-items-center justify-content-between md-mt-40\"\n      >\n        <button type=\"button\" @click=\"message.prev\" class=\"prev-msg\">\n          <img src=\"/assets/dashboard/images/icon/icon_26.svg\" alt=\"\" class=\"lazy-img\" />\n        </button>\n        <div class=\"d-flex align-items-center\">\n          <i class=\"bi bi-chevron-left\"></i>\n          <span v-if=\"message.data\">\n            {{ message.data.from }}-{{ message.activeIndex }} {{ trans('of') }}\n            {{ message.data.total }}\n          </span>\n          <i class=\"bi bi-chevron-right\"></i>\n        </div>\n        <button type=\"button\" @click=\"message.next\" class=\"next-msg\">\n          <img src=\"/assets/dashboard/images/icon/icon_27.svg\" alt=\"\" class=\"lazy-img\" />\n        </button>\n      </div>\n      <!-- /.message-pagination -->\n    </div>\n  </div>\n\n  <div class=\"card-box border-20 p0 mt-30 bg-white\">\n    <div class=\"message-wrapper\">\n      <div class=\"row gx-0\">\n        <div class=\"col-lg-4 max-h-10-r\">\n          <div class=\"message-sidebar pt-20\">\n            <div class=\"ps-xxl-4 pe-xxl-4 pe-3 ps-3\">\n              <div class=\"d-flex align-items-center justify-content-between\">\n                <div class=\"page-title fw-500\">{{ trans('Inbox') }}</div>\n              </div>\n              <form @submit.prevent=\"filter\" class=\"search-form mb-20 mt-20\">\n                <input type=\"text\" placeholder=\"Search contacts\" v-model=\"filterForm.name\" />\n                <button type=\"submit\">\n                  <img\n                    v-lazy=\"'/assets/dashboard/images/icon/icon_10.svg'\"\n                    alt=\"img\"\n                    class=\"lazy-img m-auto\"\n                  />\n                </button>\n              </form>\n\n              <div\n                class=\"message_filter d-flex align-items-center justify-content-evenly mb-20\"\n                id=\"module_btns\"\n              >\n                <button\n                  class=\"filter_btn\"\n                  @click=\"setRead(null)\"\n                  :class=\"{ active: filterForm.read === null }\"\n                >\n                  {{ trans('All') }}\n                </button>\n                <button\n                  class=\"filter_btn\"\n                  @click=\"setRead('read')\"\n                  :class=\"{ active: filterForm.read === 'read' }\"\n                >\n                  <span class=\"bg-success\"></span> {{ trans('Read') }}\n                </button>\n                <button\n                  class=\"filter_btn\"\n                  :class=\"{ active: filterForm.read === 'unread' }\"\n                  @click=\"setRead('unread')\"\n                >\n                  <span class=\"bg-danger\"></span> {{ trans('Unread') }}\n                </button>\n              </div>\n            </div>\n            <MessageSidebar />\n          </div>\n        </div>\n        <slot />\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport EmployerMessage from '@/Layouts/EmployerMessage.vue'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport { Head } from '@inertiajs/vue3'\ndefineOptions({ layout: [EmployerLayout, EmployerMessage] })\n</script>\n\n<template>\n  <Head :title=\"trans('Messages')\" />\n  <div class=\"col-lg-8 d-flex align-items-center justify-content-center\">\n    <p>{{ trans('!Opps no conversation records found') }}</p>\n  </div>\n</template>\n","<script setup>\nimport EmojiPicker from 'vue3-emoji-picker'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { modal } from '@/Composables/modalComposable'\nimport EmployerMessage from '@/Layouts/EmployerMessage.vue'\nimport { useMessageStore } from '@/Store/messageStore'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport { Head, useForm } from '@inertiajs/vue3'\nimport { ref, onMounted, computed, onBeforeUnmount } from 'vue'\nimport 'vue3-emoji-picker/css'\nimport axios from 'axios'\ndefineOptions({ layout: [EmployerLayout, EmployerMessage] })\n\nconst intersectionTargetView = ref(null)\nlet observer = null\nconst message = useMessageStore()\nconst props = defineProps(['replies', 'conversation'])\nconst { authUser, pickBy, textExcerpt, currentRoute, uiAvatar } = sharedComposable()\nconst messageForm = useForm({\n  body: '',\n  attachments: [],\n  uuid: props.conversation.uuid\n})\nconst webSocketConnection = ref(false)\nconst messageContainer = ref(null)\nconst messageTextarea = ref(null)\nconst allReplies = ref(props.replies.data)\nconst loadMore = ref(false)\nconst replyPage = ref(1)\nconst emojiState = ref(false)\nconst uniqueReplies = computed(() => {\n  const repliesCopy = [...allReplies.value]\n\n  const uniqueReplies = repliesCopy.reduce((acc, current) => {\n    if (!acc.some((r) => r.id === current.id)) {\n      acc.push(current)\n    }\n    return acc\n  }, [])\n\n  // Sort by 'id'\n  uniqueReplies.sort((a, b) => a.id - b.id)\n\n  return uniqueReplies\n})\nconst messageContainerScroll = () => {\n  messageContainer.value.scrollTop = messageContainer.value.scrollHeight\n}\nonMounted(() => {\n  if (props.replies.last_page !== 1) {\n    loadMore.value = true\n  }\n  message.$patch({\n    activeUuid: props.conversation.uuid,\n    activeIndex: message.conversations.findIndex((con) => con.uuid == props.conversation.uuid) + 1\n  })\n  Echo.connector.pusher.connection.bind('connected', () => {\n    webSocketConnection.value = true\n  })\n\n  Echo.connector.pusher.connection.bind('disconnected', () => {\n    webSocketConnection.value = false\n  })\n  messageContainerScroll()\n  setTimeout(() => {\n    if (props.replies?.total > 10) {\n      observer = new IntersectionObserver(onIntersection, {\n        root: null,\n        rootMargin: '10px',\n        threshold: 0.5\n      })\n\n      observer.observe(intersectionTargetView.value)\n    }\n  }, 1000)\n})\nonBeforeUnmount(() => {\n  message.$patch({ activeUuid: null })\n  if (observer) observer.disconnect()\n})\nconst fetchMoreConversations = async () => {\n  replyPage.value++\n  loadMore.value = true\n  const res = await axios.get(\n    route(\n      'api-message.show',\n      pickBy({\n        message: props.conversation.uuid,\n        page: replyPage.value\n      })\n    )\n  )\n  allReplies.value.unshift(...res.data.data)\n  if (res.data.last_page === replyPage.value) {\n    loadMore.value = false\n  }\n}\nconst onIntersection = (entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting && message.conversationsLoadMore && loadMore.value) {\n      fetchMoreConversations()\n    }\n  })\n}\nconst submit = () => {\n  messageForm.post(route('employer.message.store'), {\n    onSuccess: () => {\n      messageForm.body = ''\n      messageForm.attachments = []\n    },\n    onFinish: () => {\n      if (!webSocketConnection.value) {\n        axios.get(route('api-message.show', props.conversation.uuid)).then((res) => {\n          allReplies.value = res.data.data\n          if (res.data.last_page === replyPage.value) {\n            loadMore.value = false\n          }\n          setTimeout(() => messageContainerScroll(), 500)\n        })\n        message.fetchConversations()\n      }\n    }\n  })\n}\nconst block = () => {\n  modal.init(route('employer.message.update', props.conversation.uuid), {\n    method: 'patch',\n    data: {\n      blocked: true\n    }\n  })\n}\nconst deleteConversation = () => {\n  modal.init(route('employer.message.update', props.conversation.uuid), {\n    method: 'patch',\n    data: {\n      delete: true\n    }\n  })\n}\nif (currentRoute('Employer/Message/Show')) {\n  Echo.channel('reply.' + props.conversation.uuid).listen('Reply', (e) => {\n    allReplies.value.push(e)\n    message.fetchConversations()\n    setTimeout(() => messageContainerScroll(), 200)\n  })\n}\nconst previewFlies = (event) => {\n  const files = []\n  for (const file of event.target.files) {\n    files.push(file)\n  }\n  const maxGallerySize = 5\n  const oldFilesCount = Math.max(messageForm.attachments.length + files.length - maxGallerySize, 0)\n\n  const newFiles = files.slice(0, maxGallerySize - oldFilesCount)\n  const updatedGallery = messageForm.attachments.slice(oldFilesCount).concat(newFiles)\n\n  messageForm.attachments = updatedGallery\n}\n\nconst onSelectEmoji = (emoji) => {\n  const textarea = messageTextarea.value\n  const textBeforeCursor = messageForm.body.slice(0, textarea.selectionStart)\n  const textAfterCursor = messageForm.body.slice(textarea.selectionStart)\n  messageForm.body = textBeforeCursor + emoji.i + textAfterCursor\n}\n</script>\n\n<template>\n  <Head :title=\"trans('Messages')\" />\n\n  <div\n    v-if=\"conversation.deleted_by && conversation.deleted_by === authUser.id\"\n    class=\"col-lg-8 d-flex align-items-center justify-content-center\"\n  >\n    <p>{{ trans('You Have deleted this conversation') }}</p>\n  </div>\n  <div class=\"col-lg-8\" v-else>\n    <div class=\"open-email-container pb-40\">\n      <div class=\"email-header divider d-flex justify-content-between ps-xxl-5 pe-xxl-5\">\n        <div class=\"sender-info d-flex align-items-center\">\n          <img :src=\"conversation?.receiver[0]?.avatar\" alt=\"avatar\" class=\"lazy-img logo\" />\n          <div class=\"ps-3\">\n            <div class=\"sender-name\">\n              {{ conversation?.receiver[0]?.name }}\n            </div>\n            <div class=\"sender-email\">\n              {{ conversation?.receiver[0]?.email }}\n            </div>\n          </div>\n        </div>\n        <div class=\"email-info\">\n          <div class=\"d-flex align-items-center justify-content-end\">\n            <div class=\"action-dots float-end\">\n              <button\n                class=\"action-btn dropdown-toggle\"\n                type=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n              >\n                <span></span>\n              </button>\n              <ul class=\"dropdown-menu dropdown-menu-end\">\n                <li>\n                  <Link\n                    class=\"dropdown-item\"\n                    :href=\"route('candidates.show', conversation?.receiver[0]?.username)\"\n                  >\n                    {{ trans('Profile') }}\n                  </Link>\n                </li>\n                <li v-if=\"conversation.blocked_by && conversation.blocked_by === authUser.id\">\n                  <button class=\"dropdown-item\" type=\"button\" @click=\"block\">\n                    {{ trans('Unblock') }}\n                  </button>\n                </li>\n                <li v-if=\"!conversation.blocked_by\">\n                  <button class=\"dropdown-item\" type=\"button\" @click=\"block\">\n                    {{ trans('Block') }}\n                  </button>\n                </li>\n                <li>\n                  <button class=\"dropdown-item\" type=\"button\" @click=\"deleteConversation\">\n                    {{ trans('Delete') }}\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- /.email-header -->\n      <div class=\"max-h-22-r\" ref=\"messageContainer\">\n        <div ref=\"intersectionTargetView\" />\n        <template v-for=\"reply in uniqueReplies\" :key=\"reply.id\">\n          <div class=\"email-body divider\">\n            <div class=\"ps-xxl-5 pe-xxl-5 d-flex align-items-center pe-4 ps-4\">\n              <img\n                v-if=\"authUser.id !== reply.user_id\"\n                width=\"30\"\n                height=\"30\"\n                class=\"rounded-circle\"\n                :src=\"uiAvatar(reply.user.name, reply.user.avatar)\"\n                alt=\"avatar\"\n              />\n              <p\n                class=\"w-100 mt-1 ps-2\"\n                :class=\"authUser.id === reply.user_id ? 'text-success text-end' : 'text-start'\"\n              >\n                {{ reply.body }}\n              </p>\n            </div>\n          </div>\n          <template v-if=\"reply.attachments\">\n            <div class=\"email-footer ps-xxl-5 pe-xxl-5 pe-4 ps-4\">\n              <div class=\"attachments mb-30\">\n                <h6 class=\"mb-5\">\n                  {{ JSON.parse(reply.attachments).length }}\n                  {{ trans('Attachment') }}\n                </h6>\n\n                <div\n                  class=\"d-flex flex-wrap\"\n                  :class=\"{\n                    ' justify-content-end': authUser.id === reply.user_id\n                  }\"\n                >\n                  <a\n                    v-for=\"(att, i) in JSON.parse(reply.attachments)\"\n                    :key=\"i\"\n                    :href=\"att\"\n                    class=\"file tran3s d-flex align-items-center mt-10\"\n                    download\n                  >\n                    <div\n                      class=\"icon rounded-circle d-flex align-items-center justify-content-center\"\n                    >\n                      <img\n                        src=\"/assets/dashboard/images/icon/icon_31.svg\"\n                        alt=\"\"\n                        class=\"lazy-img\"\n                      />\n                    </div>\n                    <div class=\"ps-2\">\n                      <div class=\"file-name\">{{ textExcerpt(att, 25) }}</div>\n                    </div>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </template>\n        </template>\n      </div>\n\n      <!-- /.email-body -->\n\n      <div class=\"email-footer\">\n        <div class=\"ps-xxl-5 pe-xxl-5 pe-4 ps-4\">\n          <!-- new message -->\n          <div v-if=\"conversation.blocked_by\">\n            {{ trans(\"You can't not send message\") }}\n          </div>\n          <div v-else class=\"compose-new-email-container\">\n            <div class=\"compose-body\">\n              <textarea\n                ref=\"messageTextarea\"\n                v-model=\"messageForm.body\"\n                placeholder=\"Write message...\"\n              >\n              </textarea>\n              <InputFieldError :message=\"messageForm.errors.body\" />\n            </div>\n\n            <div class=\"row mt-10 ps-2\" v-if=\"messageForm?.attachments.length > 0\">\n              <div class=\"attachments col-3 mb-2\" v-for=\"att in messageForm.attachments\" :key=\"att\">\n                <a class=\"file tran3s d-flex align-items-center\" download>\n                  <div class=\"icon rounded-circle d-flex align-items-center justify-content-center\">\n                    <img\n                      src=\"/assets/dashboard/images/icon/icon_31.svg\"\n                      alt=\"icon\"\n                      class=\"lazy-img\"\n                    />\n                  </div>\n                  <div class=\"ps-1\">\n                    <div class=\"fs-7\">{{ textExcerpt(att.name, 15) }}</div>\n                  </div>\n                </a>\n              </div>\n            </div>\n            <div class=\"compose-email-footer d-flex justify-content-between position-relative\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"d-flex align-items-center\">\n                  <div class=\"insert-file position-relative me-3\">\n                    <img src=\"/assets/dashboard/images/icon/icon_32.svg\" alt=\"\" class=\"lazy-img\" />\n                    <input\n                      multiple\n                      @change=\"previewFlies\"\n                      type=\"file\"\n                      name=\"uploadImg\"\n                      accept=\".csv,.docx,.pdf,.xlsx,.xls\"\n                      title=\"Insert File\"\n                    />\n                  </div>\n                  <div class=\"insert-file position-relative me-3\">\n                    <img src=\"/assets/dashboard/images/icon/icon_34.svg\" alt=\"\" class=\"lazy-img\" />\n                    <input\n                      multiple\n                      @change=\"previewFlies\"\n                      type=\"file\"\n                      name=\"uploadImg\"\n                      accept=\"image/*\"\n                      title=\"Insert Image\"\n                    />\n                  </div>\n                </div>\n                <!-- emoji-backdrop -->\n                <div @click=\"emojiState = false\" class=\"emoji-backdrop\" v-show=\"emojiState\" />\n\n                <div class=\"m-emoji-container\">\n                  <EmojiPicker v-show=\"emojiState\" :native=\"true\" @select=\"onSelectEmoji\" />\n                </div>\n                <button class=\"insert-emoji me-3\" type=\"button\" @click=\"emojiState = !emojiState\">\n                  <img src=\"/assets/dashboard/images/icon/icon_33.svg\" alt=\"\" class=\"lazy-img\" />\n                </button>\n              </div>\n              <div class=\"d-flex align-items-center\">\n                <button type=\"button\" @click=\"messageForm.body = ''\" class=\"delete-mail me-3\">\n                  <img src=\"/assets/dashboard/images/icon/icon_35.svg\" alt=\"\" class=\"lazy-img\" />\n                </button>\n                <button @click.prevent=\"submit\" class=\"reply-btn tran3s\">\n                  {{ trans('Reply') }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\n\n</script>\n\n<template>\n  <slot></slot>\n</template>\n\n\n","<script setup>\nimport { router, Head } from '@inertiajs/vue3'\nimport { ref } from 'vue'\n\nimport BlankLayout from '@/Layouts/Blank.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\ndefineOptions({ layout: BlankLayout })\nconst { formatCurrency } = sharedComposable()\nconst props = defineProps([\n  'plan',\n  'gateways',\n  'tax',\n  'total',\n  'invoice_data',\n  'error',\n  'minMax',\n  'user',\n  'logo',\n  'minMaxMessage'\n])\nconst activeGateway = ref(props.gateways[0]?.id || 0)\n\nconst manualPayment = ref({\n  image: null,\n  comment: ''\n})\nconst isProcessing = ref(false)\nconst submit = (gateway_id) => {\n  isProcessing.value = true\n  const findGateway = props.gateways.find((gateway) => gateway.id === gateway_id)\n  router.post(\n    route('employer.membership.subscribe'),\n    {\n      gateway_id: gateway_id,\n      plan_id: props.plan.id,\n      manualPayment: findGateway.is_auto == 0 ? manualPayment.value : null\n    },\n    {\n      onFinish: () => {\n        isProcessing.value = false\n      }\n    }\n  )\n}\nconst setActiveGateway = (id) => {\n  activeGateway.value = id\n}\n</script>\n\n<template>\n\n  <Head :title=\"trans('Payment')\" />\n  <div class=\"payment-container\">\n    <div class=\"container py-5\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-sm-12 col-lg-6\">\n          <div class=\"rounded-lg bg-white p-5 shadow-lg\">\n            <div class=\"d-flex justify-content-between align-items-center mb-3\">\n              <img src=\"/assets/dashboard/images/logo_01.png\" alt=\"\" />\n              <span class=\"unpaid text-danger h3 fw-bold\">\n                {{ trans('Unpaid') }}\n              </span>\n            </div>\n\n            <template v-if=\"error\">\n              <div class=\"col-sm-12 my-4\">\n                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n                  <span class=\"alert-icon\"><i class=\"fas fa-sad-tear\"></i></span>\n                  <strong>{{ trans('!Oops ') }}</strong>\n                  {{\n                    trans('Transaction failed! If you make payment successfully, please contact us.')\n                  }}\n                  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n                </div>\n              </div>\n            </template>\n\n            <template v-if=\"minMax\">\n              <div class=\"col-sm-12 my-4\">\n                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n                  <span class=\"alert-icon\"><i class=\"fas fa-sad-tear\"></i></span>\n                  <strong>{{ trans('!Opps ') }}</strong>\n                  {{ minMaxMessage }}\n                  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n                </div>\n              </div>\n            </template>\n\n            <div class=\"row gateways my-2\">\n              <template v-for=\"gateway in gateways\" :key=\"gateway.id\">\n                <button class=\"col-sm-3 position-relative\" @click=\"setActiveGateway(gateway.id)\"\n                  :class=\"{ border: activeGateway == gateway.id }\">\n                  <div v-show=\"activeGateway == gateway.id\">\n                    <i\n                      class=\"fas fa-check rounded-circle position-absolute start-100 translate-middle bg-success top-0 p-1 text-white\"></i>\n                  </div>\n\n                  <img :src=\"gateway.logo\" class=\"rounded p-1\" />\n                </button>\n              </template>\n            </div>\n\n            <div class=\"clear\"></div>\n            <template v-for=\"gateway in gateways\" :key=\"gateway.id\">\n              <div v-show=\"activeGateway === gateway.id\" class=\"col-sm-12 gateway-form\"\n                :id=\"'gateway-form' + gateway.id\">\n                <form method=\"post\" @submit.prevent=\"submit(gateway.id)\" enctype=\"multipart/form-data\">\n                  <div class=\"table-responsive\">\n                    <table class=\"table-borderless text-fs-sm table\">\n                      <tbody>\n                        <tr class=\"border\">\n                          <td class=\"border p-2\">\n                            {{ trans('Method Name: ') }}\n                          </td>\n                          <td class=\"text-center\">\n                            {{ gateway.name }}\n                          </td>\n                        </tr>\n                        <template v-if=\"gateway.currency != null\">\n                          <tr class=\"border\">\n                            <td class=\"border p-2\">\n                              {{ trans('Gateway Currency: ') }}\n                            </td>\n                            <td class=\"text-center\">\n                              {{ gateway.currency }}\n                            </td>\n                          </tr>\n                        </template>\n                        <template v-if=\"gateway.charge != 0\">\n                          <tr class=\"border\">\n                            <td class=\"border p-2\">\n                              {{ trans('Gateway Charge: ') }}\n                            </td>\n                            <td class=\"text-center\">\n                              {{ formatCurrency(gateway.charge) }}\n                            </td>\n                          </tr>\n                        </template>\n                        <tr class=\"border\">\n                          <td class=\"border p-2\">\n                            {{ trans('Payable Amount: ') }}\n                          </td>\n                          <td class=\"text-center\">\n                            {{ formatCurrency(total * gateway.multiply + gateway.charge) }}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n\n                    <template v-if=\"gateway.comment != null\">\n                      <table class=\"table-borderless mt-2 table\">\n                        <tbody>\n                          <tr>\n                            <td class=\"fw-600 text-fs-sm\">\n                              {{ trans('Payment Instruction: ') }}\n                            </td>\n                          </tr>\n\n                          <tr>\n                            <td class=\"text-fs-sm\">\n                              {{ gateway.comment }}\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </template>\n                    <template v-if=\"gateway.phone_required == 1\">\n                      <div class=\"form-group mt-2\">\n                        <label class=\"fw-600 text-fs-sm my-2\">{{\n                          trans('Your phone number')\n                        }}</label>\n                        <input type=\"number\" name=\"phone\" placeholder=\"Your phone number\" class=\"form-control\" required\n                          :value=\"user.phone\" />\n                      </div>\n                    </template>\n                    <template v-if=\"gateway.is_auto == 0\">\n                      <div class=\"form-group mt-2\">\n                        <label class=\"fw-600 text-fs-sm my-2\">{{\n                          trans('Submit your payment proof')\n                        }}</label>\n                        <input @input=\"(e) => {\n                          manualPayment.image = e.target.files[0]\n                        }\n                          \" type=\"file\" name=\"image\" class=\"form-control\" required accept=\"image/*\" />\n                      </div>\n                      <div class=\"form-group\">\n                        <label class=\"fw-600 text-fs-sm my-2\">{{ trans('Comment') }}</label>\n                        <textarea v-model=\"manualPayment.comment\" class=\"form-control\" required name=\"comment\"\n                          placeholder=\"comment\" maxlength=\"500\"></textarea>\n                      </div>\n                    </template>\n                  </div>\n                  <button :disabled=\"isProcessing\" type=\"submit\"\n                    class=\"btn-one w-100 d-flex align-items-center justify-content-center mb-1 mt-1 py-2\">\n                    <img v-show=\"isProcessing\" src=\"/assets/images/ajax_loading_white.svg\" class=\"spinner_btn_img\" />\n                    <span>{{ trans('Pay Now') }}</span>\n                  </button>\n                </form>\n              </div>\n            </template>\n\n            <br />\n            <div class=\"col-sm-12\">\n              <table class=\"table\" cellspacing=\"8\">\n                <tbody>\n                  <tr>\n                    <td class=\"col-6 rounded border\">\n                      <div class=\"text-fs-sm\">\n                        <strong>{{ trans('Invoiced To') }}</strong><br />\n                        {{ user.name }}<br />\n                        {{ user.address }}\n                      </div>\n                    </td>\n                    <td class=\"col-6 rounded border\">\n                      <div class=\"text-fs-sm\">\n                        <strong>{{ trans('Pay To') }}</strong><br />\n                        {{ invoice_data.company_name }} <br />\n                        {{ invoice_data.address }}, {{ invoice_data.city }} <br />\n                        {{ invoice_data.post_code }},\n                        {{ invoice_data.country }}\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <table class=\"table-borderless text-fs-sm mt-2 table\">\n                <tbody>\n                  <tr class=\"title text-center\">\n                    <td class=\"col-9 fw-500 border p-2\">\n                      {{ trans('Description') }}\n                    </td>\n                    <td class=\"col-3 fw-500 border p-2\">{{ trans('Amount') }}</td>\n                  </tr>\n\n                  <tr>\n                    <td class=\"border p-2\">{{ plan.title }}</td>\n                    <td class=\"border p-2 text-center\">\n                      {{ plan.price_format }}\n                    </td>\n                  </tr>\n\n                  <tr class=\"title\">\n                    <td class=\"border p-2\">{{ trans('Sub Total') }}:</td>\n                    <td class=\"border p-2 text-center\">\n                      {{ plan.price_format }}\n                    </td>\n                  </tr>\n\n                  <tr class=\"title\">\n                    <td class=\"border p-2\">{{ trans('Tax') }}:</td>\n                    <td class=\"border p-2 text-center\">\n                      {{ formatCurrency(tax) }}\n                    </td>\n                  </tr>\n\n                  <tr class=\"title\">\n                    <td class=\"border p-2\">{{ trans('Total') }} :</td>\n                    <td class=\"border p-2 text-center\">\n                      {{ formatCurrency(total) }}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <div class=\"text-center\">\n                <Link href=\"/employer/memberships\" class=\"btn btn-outline-danger rounded-pill w-100 mb-2 mt-2 py-2\">\n                {{ trans('Cancel Payment') }}\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport { Head, router, useForm } from '@inertiajs/vue3'\nimport Multiselect from '@vueform/multiselect'\nimport axios from 'axios'\nimport { ref, computed } from 'vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport trans from '@/Composables/transComposable'\nimport { modal } from '@/Composables/modalComposable'\nimport sharedComposable from '@/Composables/sharedComposable'\ndefineOptions({ layout: EmployerLayout })\n\nconst { authUser } = sharedComposable()\nconst props = defineProps(['user', 'service', 'countries', 'states', 'categories', 'shortcodes'])\nconst categories = ref(props.categories)\nconst states = ref(props.states)\nconst descriptionTemplates = ref([])\nconst companyShortcodes = ref({})\nconst form = useForm({\n  ...props.user,\n  country_id: props.user?.countries[0]?.id,\n  state_id: props.user?.states[0]?.id,\n  tag_id: props.user.categories.map((c) => c.id) // category id\n})\nconst shortCodesForm = computed(() => {\n  return {\n    company_name: form.meta?.company?.name,\n    company_size: form.meta?.company?.size,\n    year_of_establishment: form?.meta.company?.year_of_establishment,\n    company_address: form.meta?.company?.address,\n    company_intro: form.meta?.company?.intro\n  }\n})\nconst getState = () => {\n  axios.get(route('api.locations', { country_id: form.country_id })).then((res) => {\n    states.value = res.data\n  })\n}\nconst getCategories = () => {\n  axios.get(route('api.categories', { service_id: form.category_id })).then((res) => {\n    categories.value = res.data\n  })\n  getDescriptionTemplates()\n}\n\nconst submit = () => {\n  form.meta.company.name = authUser.value.name\n  form.patch(route('employer.profile.update', props.user.id), {\n    onSuccess: () => {\n      notify.success('Updated Successfully')\n    }\n  })\n}\nconst updateAvatar = (e) => {\n  form.avatar = e.target.files[0]\n  form\n    .transform((data) => {\n      return { _method: 'PATCH', avatar: data.avatar }\n    })\n    .post(route('employer.profile.update', props.user.id), {\n      onSuccess: () => {\n        notify.success('Updated Successfully')\n      }\n    })\n}\n\n// video intro\nlet videoIntroForm = useForm({\n  submit_type: 'video_intro',\n  video_intro: ''\n})\n\nconst uploadVideoIntro = () => {\n  videoIntroForm.post(route('employer.video_intro.store'), {\n    onSuccess: () => {\n      videoIntroForm.reset()\n      $('#addVideoIntro .btn-close').trigger('click')\n    },\n    onError: (err) => {\n      notify.danger(trans('Something went wrong'))\n    }\n  })\n}\n\nconst removeVideoIntro = () => {\n  let actionUrl = route('employer.video_intro.destroy')\n\n  modal.init(actionUrl, {\n    callback: () => {\n      router.delete(actionUrl, {\n        data: {\n          submit_type: 'video_intro'\n        },\n        onSuccess: () => {\n          notify.danger(trans('Video Intro Removed'))\n        }\n      })\n    }\n  })\n}\nconst getDescriptionTemplates = () => {\n  companyShortcodes.value = props.shortcodes.reduce((acc, key) => {\n    if (key in shortCodesForm.value) {\n      acc[key] = shortCodesForm.value[key]\n    }\n    return acc\n  }, {})\n  axios\n    .get(route('api-description-templates', { service: form.category_id, type: 'company' }))\n    .then((res) => {\n      descriptionTemplates.value = res.data\n    })\n}\nconst createdDescription = (template) => {\n  return template.replace(/\\[(.*?)\\]/g, (match, key) => companyShortcodes.value[key])\n}\n</script>\n\n<template>\n  <Head :title=\"trans('Profile')\" />\n\n  <h2 class=\"main-title\">{{ trans('Profile') }}</h2>\n\n  <div class=\"bg-white card-box border-20\">\n    <div class=\"user-avatar-setting mb-30\">\n      <div class=\"d-flex justify-content-between\">\n        <div class=\"d-flex align-items-center\">\n          <img\n            v-lazy=\"\n              user.avatar == null\n                ? `https://ui-avatars.com/api/?name=${user.name}`\n                : `${user.avatar}`\n            \"\n            alt=\"\"\n            class=\"lazy-img user-img\"\n          />\n          <div class=\"upload-btn position-relative tran3s me-3 ms-4\">\n            {{ trans('Upload new photo') }}\n            <input\n              type=\"file\"\n              @input=\"updateAvatar\"\n              id=\"uploadImg\"\n              name=\"uploadImg\"\n              placeholder=\"\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- /.user-avatar-setting -->\n    <div class=\"dash-input-wrapper mb-30\">\n      <label for=\"\">{{ trans('Company Name') }}*</label>\n      <input type=\"text\" placeholder=\"John Smith\" readonly disabled :value=\"authUser.name\" />\n      <InputFieldError :message=\"form.errors.meta?.company?.name\" />\n    </div>\n\n    <!-- /.dash-input-wrapper -->\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <div class=\"dash-input-wrapper mb-30\">\n          <label for=\"\">{{ trans('License No') }}</label>\n          <input type=\"text\" placeholder=\"License No\" v-model=\"form.meta.business.license_no\" />\n          <InputFieldError :message=\"form.errors.meta?.business?.license_no\" />\n        </div>\n        <!-- /.dash-input-wrapper -->\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"dash-input-wrapper mb-30\">\n          <label for=\"\">{{ trans('RL No (Only for Recruiting Agency)') }}</label>\n          <input type=\"number\" placeholder=\"License No\" v-model=\"form.meta.business.rl_no\" />\n          <InputFieldError :message=\"form.errors.meta?.business?.rl_no\" />\n        </div>\n        <!-- /.dash-input-wrapper -->\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"dash-input-wrapper mb-30\">\n          <label for=\"\">{{ trans('Website') }}</label>\n          <input\n            type=\"text\"\n            placeholder=\"http://somename.come\"\n            v-model=\"form.meta.business.site_url\"\n          />\n          <InputFieldError :message=\"form.errors.meta?.business?.site_url\" />\n        </div>\n        <!-- /.dash-input-wrapper -->\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"dash-input-wrapper mb-30\">\n          <label for=\"\">{{ trans('Founded Date') }}*</label>\n          <input type=\"date\" v-model=\"form.meta.company.year_of_establishment\" />\n          <InputFieldError :message=\"form.errors.meta?.company?.year_of_establishment\" />\n        </div>\n        <!-- /.dash-input-wrapper -->\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"dash-input-wrapper mb-30\">\n          <label for=\"\">{{ trans('Intro') }}</label>\n          <input type=\"text\" placeholder=\"Intro\" v-model=\"form.meta.company.intro\" />\n          <InputFieldError :message=\"form.errors.meta?.company?.intro\" />\n        </div>\n        <!-- /.dash-input-wrapper -->\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"mb-30\">\n          <label for=\"\" class=\"c-input-label\">{{ trans('Company Size') }}*</label>\n          <Multiselect\n            v-model=\"form.meta.company.size\"\n            :options=\"[\n              '1-15',\n              '16-30',\n              '31-50',\n              '51-120',\n              '121-300',\n              '301-500',\n              '501-1000',\n              '1001-5000',\n              '5001-10000',\n              '10000'\n            ]\"\n            placeholder=\"Company Size\"\n            :required=\"true\"\n          />\n          <InputFieldError :message=\"form.errors.meta?.company?.size\" />\n        </div>\n        <!-- /.dash-input-wrapper -->\n      </div>\n\n      <div class=\"col-md-6\">\n        <label for=\"\" class=\"c-input-label\">{{ trans('Service') }}*</label>\n        <div class=\"mb-30\">\n          <Multiselect\n            @deselect=\"categories = []\"\n            @clear=\"\n              () => {\n                form.tag_id = []\n                categories = []\n              }\n            \"\n            @change=\"form.tag_id = []\"\n            @select=\"getCategories\"\n            v-model=\"form.category_id\"\n            :options=\"service\"\n            label=\"title\"\n            valueProp=\"id\"\n            placeholder=\"Select Service\"\n            :required=\"true\"\n          />\n          <InputFieldError :message=\"form.errors.category_id\" />\n        </div>\n        <!-- /.dash-input-wrapper -->\n      </div>\n      <div class=\"col-md-6\">\n        <label for=\"\" class=\"c-input-label\">{{ trans('Category') }}*</label>\n        <div class=\"mb-30\">\n          <Multiselect\n            mode=\"tags\"\n            v-model=\"form.tag_id\"\n            :options=\"categories\"\n            label=\"title\"\n            valueProp=\"id\"\n            placeholder=\"Select Category\"\n            :required=\"true\"\n          />\n          <InputFieldError :message=\"form.errors.category_id\" />\n        </div>\n        <!-- /.dash-input-wrapper -->\n      </div>\n    </div>\n\n    <div class=\"dash-input-wrapper\">\n      <div class=\"d-flex justify-content-between align-items-center\">\n        <label for=\"\">{{ trans('About Company') }}*</label>\n        <button\n          v-if=\"descriptionTemplates.length\"\n          class=\"mb-3 btn-one\"\n          type=\"button\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#suggestionModal\"\n        >\n          {{ trans('Suggestions') }}\n        </button>\n      </div>\n      <textarea\n        v-model=\"form.meta.business.description\"\n        class=\"size-lg\"\n        placeholder=\"Write something interesting about you....\"\n      ></textarea>\n      <div class=\"alert-text\">\n        {{ trans('Brief description for your company. URLs are hyperlinked') }}.\n      </div>\n      <InputFieldError :message=\"form.errors.meta?.business?.description\" />\n    </div>\n\n    <div class=\"row\">\n      <div\n        class=\"col-sm-12 d-flex\"\n        :class=\"[user.meta?.company?.video_id ? 'col-lg-6' : 'col-lg-12']\"\n      >\n        <div\n          v-if=\"user.meta?.company?.video_id\"\n          class=\"mt-20 intro-video-post position-relative\"\n          :style=\"{\n            backgroundImage: `url(https://img.youtube.com/vi/${user.meta?.company?.video_id}/sddefault.jpg)`\n          }\"\n        >\n          <a\n            class=\"text-center fancybox rounded-circle video-icon tran3s\"\n            data-fancybox=\"\"\n            :href=\"`https://www.youtube.com/embed/${user.meta?.company?.video_id}`\"\n          >\n            <i class=\"bi bi-play\"></i>\n          </a>\n          <button type=\"button\" @click=\"removeVideoIntro\" class=\"close\">\n            <i class=\"bi bi-x\"></i>\n          </button>\n        </div>\n        <!-- /.intro-video-post -->\n      </div>\n      <div\n        class=\"col-sm-6 d-flex\"\n        :class=\"[user.meta?.company?.video_id ? 'col-lg-6' : 'col-lg-12']\"\n      >\n        <div class=\"mt-20 intro-video-post position-relative empty\">\n          <button class=\"w-100 h-100\" data-bs-toggle=\"modal\" data-bs-target=\"#addVideoIntro\">\n            <span>{{\n              trans(`${user.meta?.company?.video_id ? 'Replace' : '+ Add'} Intro Video`)\n            }}</span>\n          </button>\n        </div>\n        <!-- /.intro-video-post -->\n      </div>\n    </div>\n\n    <!-- /.dash-input-wrapper -->\n  </div>\n  <form @submit.prevent=\"submit\" enctype=\"multipart/form-data\">\n    <!-- contact -->\n    <div class=\"mt-40 bg-white card-box border-20\">\n      <h4 class=\"dash-title-three\">{{ trans('Contacts') }}</h4>\n      <div class=\"row\">\n        <div class=\"dash-input-wrapper mb-30 col-md-6\">\n          <label for=\"\">{{ trans('Name') }}*</label>\n          <input\n            required\n            type=\"text\"\n            placeholder=\"companyinc@gmail.com\"\n            v-model=\"form.meta.contact.name\"\n          />\n          <InputFieldError :message=\"form.errors.meta?.contact?.name\" />\n        </div>\n        <div class=\"dash-input-wrapper mb-30 col-md-6\">\n          <label for=\"\">{{ trans('Mobile') }}</label>\n          <input\n            type=\"text\"\n            placeholder=\"companyinc@gmail.com\"\n            v-model=\"form.meta.contact.mobile\"\n          />\n          <InputFieldError :message=\"form.errors.meta?.contact?.mobile\" />\n        </div>\n        <div class=\"dash-input-wrapper mb-30 col-md-6\">\n          <label for=\"\">{{ trans('Email') }}*</label>\n          <input\n            required\n            type=\"email\"\n            placeholder=\"companyinc@gmail.com\"\n            v-model=\"form.meta.contact.email\"\n          />\n          <InputFieldError :message=\"form.errors.meta?.contact?.email\" />\n        </div>\n        <div class=\"dash-input-wrapper mb-30 col-md-6\">\n          <label for=\"\">{{ trans('Designation') }}*</label>\n          <input\n            type=\"text\"\n            placeholder=\"companyinc@gmail.com\"\n            v-model=\"form.meta.contact.designation\"\n          />\n          <InputFieldError :message=\"form.errors.meta?.contact?.designation\" />\n        </div>\n      </div>\n    </div>\n    <!-- /.card-box -->\n    <div class=\"mt-40 bg-white card-box border-20\">\n      <h4 class=\"dash-title-three\">{{ trans('Social Media') }}</h4>\n      <div class=\"row\">\n        <template v-for=\"(social, key) in form.meta.social\" :key=\"key\">\n          <div class=\"mb-20 dash-input-wrapper col-md-6\">\n            <label for=\"\">{{ key }}</label>\n            <input\n              type=\"text\"\n              :placeholder=\"`https://www.${key}.com/123`\"\n              v-model=\"form.meta.social[key]\"\n            />\n\n            <InputFieldError :message=\"form.errors.meta?.social[key]\" />\n          </div>\n        </template>\n      </div>\n    </div>\n\n    <!-- /.card-box -->\n\n    <div class=\"mt-40 bg-white card-box border-20\">\n      <h4 class=\"dash-title-three\">{{ trans('Address & Location') }}</h4>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"dash-input-wrapper mb-25\">\n            <label for=\"\">{{ trans('Address') }}*</label>\n            <input\n              type=\"text\"\n              placeholder=\"Cowrasta, Chandana, Gazipur Sadar\"\n              v-model=\"form.meta.company.address\"\n            />\n            <InputFieldError :message=\"form.errors.meta?.company?.address\" />\n          </div>\n          <!-- /.dash-input-wrapper -->\n        </div>\n        <div class=\"col-lg-6\">\n          <label class=\"mb-1 c-input-label\" for=\"\">{{ trans('Country') }}*</label>\n          <Multiselect\n            @deselect=\"states = []\"\n            @clear=\"\n              () => {\n                form.state_id = ''\n                states = []\n              }\n            \"\n            @change=\"form.state_id = ''\"\n            @select=\"getState\"\n            v-model=\"form.country_id\"\n            :options=\"countries\"\n            placeholder=\"Select Country\"\n            label=\"name\"\n            valueProp=\"id\"\n            :required=\"true\"\n          />\n          <InputFieldError :message=\"form.errors.country_id\" />\n          <!-- /.dash-input-wrapper -->\n        </div>\n        <div class=\"col-lg-6\">\n          <label class=\"mb-1 c-input-label\" for=\"\">{{ trans('City') }}*</label>\n\n          <Multiselect\n            v-model=\"form.state_id\"\n            :options=\"states\"\n            placeholder=\"Select City\"\n            label=\"name\"\n            valueProp=\"id\"\n            :required=\"true\"\n          />\n          <InputFieldError :message=\"form.errors.state_id\" />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"button-group d-inline-flex align-items-center mt-30\">\n      <SpinnerBtn :processing=\"form.processing\" btn-text=\"Update\" />\n    </div>\n  </form>\n\n  <!-- Modal Body -->\n  <!-- if you want to close by clicking outside the modal, delete the last endpoint:data-bs-backdrop and data-bs-keyboard -->\n  <div\n    class=\"modal fade\"\n    id=\"addVideoIntro\"\n    tabindex=\"-1\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    role=\"dialog\"\n    aria-labelledby=\"addVideoIntroModal\"\n    aria-hidden=\"true\"\n  >\n    <div\n      class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg\"\n      role=\"document\"\n    >\n      <div class=\"modal-content\">\n        <form @submit.prevent=\"uploadVideoIntro\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"addVideoIntroModal\">\n              {{ trans('Video intro') }}\n            </h5>\n            <button\n              type=\"button\"\n              class=\"btn-close\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n            ></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"mb-1 dash-input-wrapper\">\n              <label for=\"\">{{ trans('Youtube video link') }}</label>\n              <input\n                type=\"text\"\n                v-model=\"videoIntroForm.video_intro\"\n                placeholder=\"enter youtube video link\"\n              />\n              <InputFieldError :message=\"videoIntroForm.errors.video_intro\" />\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"py-2 btn btn-eight\" data-bs-dismiss=\"modal\">\n              {{ trans('Close') }}\n            </button>\n            <SpinnerBtn\n              type=\"submit\"\n              classes=\"btn-one d-flex align-items-center\"\n              :processing=\"videoIntroForm.processing\"\n              :btn-text=\"trans('Save')\"\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  <!-- suggestion Modal -->\n  <div\n    class=\"modal fade\"\n    id=\"suggestionModal\"\n    tabindex=\"-1\"\n    aria-labelledby=\"suggestionModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable\">\n      <div class=\"modal-content\">\n        <div class=\"p-3 d-flex align-items-center justify-content-between\">\n          <p class=\"fs-5\" id=\"suggestionModalLabel\">{{ trans('Suggestions') }}</p>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <div class=\"modal-body\">\n          <ul class=\"list-group\" v-if=\"descriptionTemplates.length > 0\">\n            <li\n              class=\"p-2 mb-4 rounded shadow-sm d-flex align-items-center justify-content-between fs-7\"\n              v-for=\"templates in descriptionTemplates\"\n              :key=\"templates.id\"\n            >\n              {{ createdDescription(templates.body) }}\n              <button\n                type=\"button\"\n                @click=\"\n                  () => {\n                    form.meta.business.description = createdDescription(templates.body)\n                  }\n                \"\n                class=\"p-2 btn-four ms-3\"\n                data-bs-dismiss=\"modal\"\n              >\n                {{ trans('Select') }}\n              </button>\n            </li>\n          </ul>\n          <p v-else class=\"text-center text-danger\">\n            {{ trans(\"Opp's! Nothing Found\") }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, router } from \"@inertiajs/vue3\";\nimport EmployerLayout from \"@/Layouts/Employer.vue\";\nimport Paginate from \"@/Components/WebPaginate.vue\";\nimport NiceSelect from \"@/Components/NiceSelect.vue\";\nimport { ref, watch } from \"vue\";\nimport moment from \"moment\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\nconst { textExcerpt } = sharedComposable();\ndefineOptions({ layout: EmployerLayout });\nconst props = defineProps([\"reviews\"]);\nconst sorts = [\n  {\n    label: \"Latest\",\n    value: \"asc\",\n  },\n  {\n    label: \"Oldest\",\n    value: \"desc\",\n  },\n];\nconst filterForm = ref({\n  sort: \"\",\n});\nwatch(\n  () => filterForm.value.sort,\n  () => {\n    router.get(route(\"employer.job-reviews\"), filterForm.value, {\n      preserveState: true,\n    });\n  }\n);\n</script>\n\n<template>\n  <Head :title=\"trans('Job Reviews')\" />\n\n  <div class=\"mb-40 d-flex align-items-center justify-content-between lg-mb-30\">\n    <h2 class=\"main-title m0\">{{ trans(\"Job Reviews\") }}</h2>\n    <div class=\"short-filter d-flex align-items-center\">\n      <div class=\"text-dark fw-500 text-nowrap me-2\">{{ trans(\"Sort by\") }}:</div>\n      <NiceSelect\n        v-model=\"filterForm.sort\"\n        :options=\"sorts\"\n        value-by=\"value\"\n        label=\"label\"\n        placeholder=\"Default\"\n      />\n    </div>\n  </div>\n\n  <div class=\"bg-white card-box border-20\">\n    <div class=\"table-responsive\" v-if=\"reviews.total\">\n      <table class=\"table job-alert-table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">{{ trans(\"Candidate\") }}</th>\n            <th scope=\"col\">{{ trans(\"Job\") }}</th>\n            <th scope=\"col\">{{ trans(\"Ratting\") }}</th>\n            <th scope=\"col\">{{ trans(\"Comment\") }}</th>\n            <th scope=\"col\">{{ trans(\"Created At\") }}</th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody class=\"border-0\">\n          <tr v-for=\"review in reviews.data\">\n            <td>\n              <div class=\"gap-3 d-flex align-items-center\">\n                <img\n                  class=\"review-avatar-img\"\n                  v-lazy=\"\n                    review.author.avatar == null\n                      ? `https://ui-avatars.com/api/?name=${review.author.name}`\n                      : `${review.author.avatar}`\n                  \"\n                />\n                <a\n                  target=\"_blank\"\n                  class=\"fw-bold\"\n                  :href=\"route('candidates.show', review.author?.username)\"\n                  >{{ review.author?.name }}</a\n                >\n              </div>\n            </td>\n\n            <td>\n              <div v-if=\"review.job?.id\">\n                <a target=\"_blank\" :href=\"route('jobs.show', review.job.slug)\">\n                  {{ review.job.title }}\n                </a>\n              </div>\n            </td>\n\n            <td>{{ review.ratting }} {{ trans(\"Star\") }}</td>\n            <td>{{ textExcerpt(review.comment, 30) }}</td>\n            <td>\n              {{ moment(review.created_at).format(\"DD-MMM-YYYY\") }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <!-- /.table job-alert-table -->\n    </div>\n    <div v-else class=\"bg-white card-box border-20\">\n      <div class=\"text-center\">{{ trans(\"No record found\") }}</div>\n    </div>\n  </div>\n\n  <div class=\"d-flex justify-content-end mt-30\">\n    <Paginate :links=\"reviews.links\" />\n  </div>\n</template>\n","<script setup>\nimport { Head, router } from '@inertiajs/vue3'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport CandidateCard from '@/Layouts/Employer/CandidateCard.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport { ref, watch } from 'vue'\ndefineOptions({ layout: EmployerLayout })\nconst props = defineProps(['candidates'])\nconst sorts = [\n  {\n    label: 'Latest',\n    value: 'asc'\n  },\n  {\n    label: 'Oldest',\n    value: 'desc'\n  }\n]\nconst filterForm = ref({\n  sort: ''\n})\nwatch(\n  () => filterForm.value.sort,\n  () => {\n    router.get(route('employer.saved-candidates'), filterForm.value, {\n      preserveState: true\n    })\n  }\n)\n</script>\n\n<template>\n  <Head :title=\"trans('Saved Candidates')\" />\n\n  <div class=\"mb-40 d-flex align-items-center justify-content-between lg-mb-30\">\n    <h2 class=\"main-title m0\">{{ trans('Saved Candidate') }}</h2>\n    <div class=\"short-filter d-flex align-items-center\">\n      <div class=\"text-dark fw-500 text-nowrap me-2\">{{ trans('Sort by') }}:</div>\n      <NiceSelect\n        v-model=\"filterForm.sort\"\n        :options=\"sorts\"\n        value-by=\"value\"\n        label=\"label\"\n        placeholder=\"Default\"\n      />\n    </div>\n  </div>\n\n  <CandidateCard v-if=\"candidates.total\" :applicants=\"candidates.data\" :hideApplyInfo=\"true\" />\n  <div class=\"bg-white card-box border-20\" v-else>\n    <div class=\"text-center\">{{ trans('No record found') }}</div>\n  </div>\n  <!-- /.card-box -->\n\n  <div class=\"d-flex justify-content-end mt-30\">\n    <Paginate :links=\"candidates.links\" />\n  </div>\n</template>\n","<script setup>\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport { Head, useForm } from '@inertiajs/vue3'\n\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport trans from '@/Composables/transComposable'\ndefineOptions({ layout: EmployerLayout })\n\nconst form = useForm({\n  current_password: '',\n  new_password: '',\n  new_password_confirmation: ''\n})\n\nconst submit = () => {\n  form.put(route('employer.update-password'), {\n    onSuccess: () => {\n      notify.success(trans('password has been updated successfully'))\n      form.reset()\n    }\n  })\n}\n</script>\n\n<template>\n  <Head :title=\"trans('Change Password')\" />\n\n  <h2 class=\"main-title\">{{ trans('Change Password') }}</h2>\n\n  <div class=\"card-box border-20 bg-white\">\n    <form @submit.prevent=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"dash-input-wrapper mb-20\">\n            <label for=\"\"> {{ trans('Old Password') }} *</label>\n            <input type=\"password\" v-model=\"form.current_password\" />\n            <InputFieldError :message=\"form.errors.current_password\" />\n          </div>\n          <!-- /.dash-input-wrapper -->\n        </div>\n        <div class=\"col-12\">\n          <div class=\"dash-input-wrapper mb-20\">\n            <label for=\"\"> {{ trans('New Password') }} *</label>\n            <input type=\"password\" v-model=\"form.new_password\" />\n            <InputFieldError :message=\"form.errors.new_password\" />\n          </div>\n          <!-- /.dash-input-wrapper -->\n        </div>\n        <div class=\"col-12\">\n          <div class=\"dash-input-wrapper mb-20\">\n            <label for=\"\">{{ trans('Confirm Password') }} *</label>\n            <input type=\"password\" v-model=\"form.new_password_confirmation\" />\n            <InputFieldError :message=\"form.errors.new_password_confirmation\" />\n          </div>\n          <!-- /.dash-input-wrapper -->\n        </div>\n      </div>\n\n      <div class=\"d-flex align-items-center gap-3\">\n        <SpinnerBtn :processing=\"form.processing\" :btn-text=\"trans('Change Password')\" />\n        <Link :href=\"route('employer.dashboard')\" class=\"dash-cancel-btn tran3s ms-2\">\n          {{ trans('Cancel') }}\n        </Link>\n      </div>\n    </form>\n  </div>\n</template>\n","<script setup>\nimport { Head, useForm } from '@inertiajs/vue3'\nimport notify from '@/Plugins/Admin/notify'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\ndefineOptions({ layout: EmployerLayout })\n\nconst props = defineProps(['user'])\n\nconst form = useForm({\n  name: props.user.name,\n  phone: props.user.phone,\n  email: props.user.email,\n  current_password: ''\n})\n\nconst submit = () => {\n  form.put(route('employer.account-settings.update'), {\n    onSuccess: () => {\n      notify.success('Account settings has been updated successfully')\n      form.reset('current_password')\n    }\n  })\n}\n</script>\n\n<template>\n  <Head :title=\"trans('Account Settings')\" />\n\n  <h2 class=\"main-title\">{{ trans('Account Settings') }}</h2>\n\n  <div class=\"bg-white card-box border-20\">\n    <h4 class=\"dash-title-three\">{{ trans('Edit & Update') }}</h4>\n    <form @submit.prevent=\"submit\" method=\"post\">\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"mb-20 dash-input-wrapper\">\n            <label for=\"\">{{ trans('Full Name') }}</label>\n            <input type=\"text\" v-model=\"form.name\" placeholder=\"John\" />\n            <InputFieldError :message=\"form.errors.name\" />\n          </div>\n        </div>\n        <div class=\"col-lg-12\" v-if=\"!user.provider_id\">\n          <div class=\"mb-20 dash-input-wrapper\">\n            <label for=\"\">{{ trans('Email') }}</label>\n            <input type=\"email\" v-model=\"form.email\" placeholder=\"zubayerhasan@gmal.com\" />\n            <InputFieldError :message=\"form.errors.email\" />\n          </div>\n          <!-- /.dash-input-wrapper -->\n        </div>\n        <div class=\"col-lg-12\">\n          <div class=\"mb-20 dash-input-wrapper\">\n            <label for=\"\">{{ trans('Phone Number') }}</label>\n            <input type=\"tel\" v-model=\"form.phone\" placeholder=\"+810 989 989 989\" />\n            <InputFieldError :message=\"form.errors.phone\" />\n          </div>\n        </div>\n        <div class=\"col-lg-12\" v-if=\"!user.provider_id\">\n          <div class=\"mb-20 dash-input-wrapper\">\n            <label for=\"\">{{ trans('Current Password') }}</label>\n            <input type=\"password\" v-model=\"form.current_password\" />\n\n            <InputFieldError :message=\"form.errors.current_password\" />\n\n              <p class=\"m0\">\n                {{ trans('Want to change the password?') }}\n                <Link :href=\"route('employer.change-password')\" class=\"fw-500\">\n                  {{ trans('Click here') }}</Link\n                >\n              </p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"gap-4 button-group d-inline-flex align-items-center mt-30\">\n        <SpinnerBtn :processing=\"form.processing\" :btn-text=\"trans('Save Changes')\" />\n        <Link :href=\"route('employer.dashboard')\" class=\"dash-cancel-btn tran3s ms-2\">\n          {{ trans('Cancel') }}\n        </Link>\n      </div>\n    </form>\n  </div>\n</template>\n","<script setup>\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport { Head, useForm } from '@inertiajs/vue3'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\ndefineOptions({ layout: EmployerLayout })\n\nconst form = useForm({\n  subject: '',\n  message: ''\n})\n\nconst submit = () => {\n  form.post(route('employer.support.store'), {\n    onSuccess: () => {\n      notify.success('Updated Successfully')\n    }\n  })\n}\n</script>\n\n<template>\n  <Head :title=\"trans('Create Ticket')\" />\n\n  <h2 class=\"main-title\">{{ trans('Create Ticket') }}</h2>\n\n  <form @submit.prevent=\"submit\">\n    <div class=\"card-box border-20 bg-white\">\n      <div class=\"dash-input-wrapper mb-30\">\n        <label for=\"\">{{ trans('Subject') }}*</label>\n        <input type=\"text\" placeholder=\"Subject\" v-model=\"form.subject\" />\n        <InputFieldError :message=\"form.errors.subject\" />\n      </div>\n\n      <div class=\"dash-input-wrapper\">\n        <label for=\"\">{{ trans('Message') }}*</label>\n        <textarea\n          required\n          v-model=\"form.message\"\n          class=\"size-lg\"\n          placeholder=\"Write message....\"\n        ></textarea>\n        <InputFieldError :message=\"form.errors.message\" />\n      </div>\n    </div>\n    <div class=\"button-group d-inline-flex align-items-center mt-30\">\n      <SpinnerBtn :processing=\"form.processing\" btn-text=\"Submit\" />\n    </div>\n  </form>\n</template>\n","<script setup>\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { router, Head } from '@inertiajs/vue3'\nimport moment from 'moment'\nimport { ref } from 'vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\ndefineOptions({ layout: EmployerLayout })\n\nconst sorts = [\n  {\n    label: 'Open',\n    value: 'open'\n  },\n  {\n    label: 'Pending',\n    value: 'pending'\n  },\n  {\n    label: 'Close',\n    value: 'close'\n  }\n]\ndefineProps(['supports'])\nconst { pickBy } = sharedComposable()\nconst filterForm = ref({\n  order: '',\n  status: ''\n})\nconst filter = () => {\n  router.get(route('employer.support.index'), pickBy(filterForm.value), {\n    preserveState: true\n  })\n}\nconst setOrder = (val) => {\n  filterForm.value.order = val\n  filter()\n}\n</script>\n\n<template>\n  <Head title=\"Supports\" />\n\n  <div class=\"d-sm-flex align-items-center justify-content-between lg-mb-30 mb-40\">\n    <h2 class=\"main-title m0\">{{ trans('Supports') }}</h2>\n    <div class=\"d-flex xs-mt-30 ms-auto\">\n      <div class=\"nav nav-tabs tab-filter-btn me-4\">\n        <button\n          @click=\"setOrder('')\"\n          :class=\"{ active: filterForm.order === '' }\"\n          class=\"nav-link\"\n          type=\"button\"\n        >\n          {{ trans('All') }}\n        </button>\n        <button\n          @click=\"setOrder('desc')\"\n          class=\"nav-link\"\n          :class=\"{ active: filterForm.order === 'desc' }\"\n          type=\"button\"\n        >\n          {{ trans('New') }}\n        </button>\n        <button\n          @click=\"setOrder('asc')\"\n          class=\"nav-link\"\n          :class=\"{ active: filterForm.order === 'asc' }\"\n          type=\"button\"\n        >\n          {{ trans('Old') }}\n        </button>\n      </div>\n      <div class=\"short-filter d-flex align-items-center ms-auto\">\n        <div class=\"text-dark fw-500 me-2\">{{ trans('Sort by') }}:</div>\n        <NiceSelect\n          v-model=\"filterForm.status\"\n          :options=\"sorts\"\n          value-by=\"value\"\n          label=\"label\"\n          placeholder=\"Default\"\n          @change=\"filter\"\n        />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card-box border-20 bg-white\">\n    <div class=\"tab-content\" id=\"nav-tabContent\">\n      <div class=\"tab-pane fade show active\" id=\"a1\" role=\"tabpanel\">\n        <div v-if=\"supports.total\" class=\"table-responsive\">\n          <table class=\"job-alert-table table\">\n            <thead>\n              <tr>\n                <th>{{ trans('Subject') }}</th>\n                <th>{{ trans('Total Replies') }}</th>\n                <th>{{ trans('Status') }}</th>\n                <th>\n                  {{ trans('Created At') }}\n                </th>\n                <th>{{ trans('Ticket') }}</th>\n              </tr>\n            </thead>\n            <tbody class=\"border-0\">\n              <tr\n                v-for=\"support in supports.data\"\n                :key=\"support.id\"\n                :class=\"{\n                  active: support.status == 1,\n                  expired: support.status == 0,\n                  pending: support.status == 2\n                }\"\n              >\n                <td>\n                  <Link :href=\"route('employer.support.show', support.id)\">\n                    {{ support.subject }}\n                  </Link>\n                </td>\n                <td class=\"text-center\">\n                  {{ support.conversations_count }}\n                </td>\n                <td>\n                  <div class=\"job-status\">\n                    {{\n                      support.status == 2\n                        ? trans('Pending')\n                        : support.status == 1\n                        ? trans('Active')\n                        : trans('Closed')\n                    }}\n                  </div>\n                </td>\n                <td>\n                  {{ moment(support.created_at).format('D MMM y') }}\n                </td>\n                <td class=\"text-end\">\n                  <Link\n                    :href=\"route('employer.support.show', support.id)\"\n                    class=\"save-btn rounded-circle tran3s fw-normal text-center\"\n                    ><i class=\"bi bi-eye\"></i>\n                  </Link>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <!-- /.table job-alert-table -->\n        </div>\n        <div class=\"text-center\" v-else>{{ trans('No record found') }}</div>\n      </div>\n    </div>\n  </div>\n  <!-- /.card-box -->\n\n  <div class=\"d-flex justify-content-end mt-30\">\n    <Paginate :links=\"supports.links\" />\n  </div>\n</template>\n","<script setup>\nimport { Head, useForm } from '@inertiajs/vue3'\nimport EmployerLayout from '@/Layouts/Employer.vue'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport notify from '@/Plugins/Admin/notify'\ndefineOptions({ layout: EmployerLayout })\n\nconst props = defineProps(['support'])\n\nconst form = useForm({\n  message: ''\n})\n\nconst submit = () => {\n  form.patch(route('employer.support.update', props.support.id), {\n    onSuccess: () => {\n      form.reset()\n      notify.success('Submitted Successfully')\n    }\n  })\n}\n</script>\n\n<template>\n  <Head :title=\"trans('Messages')\" />\n  <div class=\"row justify-content-center message-wrapper\">\n    <div class=\"col-lg-8 rounded bg-white p-4\">\n      <p class=\"fs-4 pb-20\">{{ trans('Subject') }} : {{ support.subject }}</p>\n      <div class=\"open-email-container\">\n        <!-- /.email-header -->\n        <div class=\"max-h-22-r pt-5\">\n          <template v-for=\"reply in support.conversations\" :key=\"reply.id\">\n            <div class=\"email-body divider\">\n              <div class=\"ps-xxl-5 pe-xxl-5 d-flex align-items-center pe-4 ps-4\">\n                <img\n                  v-if=\"reply.is_admin == 1\"\n                  width=\"20\"\n                  height=\"20\"\n                  src=\"/assets/dashboard/images/icon/icon_41.svg\"\n                  alt=\"avatar\"\n                />\n                <p\n                  class=\"w-100 mt-3 pe-2 ps-2\"\n                  :class=\"reply.is_admin == 0 ? 'text-success text-end' : 'text-start'\"\n                >\n                  {{ reply.comment }}\n                </p>\n                <img\n                  v-if=\"reply.is_admin == 0\"\n                  width=\"20\"\n                  height=\"20\"\n                  src=\"/assets/dashboard/images/icon/icon_2.svg\"\n                  alt=\"avatar\"\n                />\n              </div>\n            </div>\n          </template>\n        </div>\n\n        <!-- /.email-body -->\n\n        <div class=\"email-footer\">\n          <div class=\"ps-xxl-5 pe-xxl-5 pe-4 ps-4\">\n            <div v-if=\"support.status !== 1\">{{ trans(\"You can't not send reply\") }}</div>\n            <div v-else class=\"compose-new-email-container\">\n              <div class=\"compose-body\">\n                <textarea v-model=\"form.message\" placeholder=\"Write message...\"> </textarea>\n                <InputFieldError :message=\"form.errors.message\" />\n              </div>\n\n              <div class=\"compose-email-footer d-flex justify-content-between position-relative\">\n                <div class=\"d-flex align-items-center\">\n                  <button type=\"button\" @click=\"form.message = ''\" class=\"delete-mail me-3\">\n                    <img src=\"/assets/dashboard/images/icon/icon_35.svg\" alt=\"\" class=\"lazy-img\" />\n                  </button>\n                  <button @click.prevent=\"submit\" class=\"reply-btn tran3s\">\n                    {{ trans('Reply') }}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<template>\n  <li>\n    <Link :href=\"href\" class=\"d-flex w-100 align-items-center\" :class=\"{ active: active }\">\n    <img :src=\"`/assets/dashboard/images/icon/${iconLink + iconExt}`\" alt=\"icon\" class=\"lazy-img\" />\n    <span>{{ trans(text) }}</span>\n    </Link>\n  </li>\n</template>\n\n<script setup>\nimport { computed } from \"vue\"\n\nconst props = defineProps({\n  href: String,\n  active: {\n    type: Boolean,\n    default: false\n  },\n  iconName: String,\n  iconExt: {\n    type: String,\n    default: '.svg'\n  },\n  text: String\n})\n\nconst iconLink = computed(() => {\n  return props.active ? `${props.iconName}_active` : `${props.iconName}`\n})\n</script>\n","<script setup>\nimport trans from '@/Composables/transComposable'\nimport sharedComposable from \"@/Composables/sharedComposable\"\nimport { router } from \"@inertiajs/vue3\"\nimport { computed } from \"vue\"\nimport RouteLink from './RouteLink.vue'\nconst {\n  authUser,\n  currentRoute,\n  logout,\n  currentRouteGroup,\n  currentRouteIn,\n} = sharedComposable()\n\nconst deleteAccount = () => {\n  router.delete(route(\"user.accounts.destroy\"), {\n    onSuccess: () => {\n      notify.success(trans(\"Account has been deleted successfully!\"))\n    },\n  })\n}\n\nconst getDynamicIcon = (activeRoute, img_no) => {\n  return `/assets/dashboard/images/icon/icon_${img_no}${activeRoute ? \"_active\" : \"\"}.svg`\n}\n\nconst candidateProfileCompleted = computed(() => {\n  let user = authUser.value\n  let accountOpening = 10\n  let emailVerification = user.email_verified_at ? 20 : 0\n  let profileSetup = user.category_id ? 40 : 0\n  let avatar = user.avatar ? 10 : 0\n  let cv = user.meta?.custom_cv ? 20 : 0\n\n  return accountOpening + profileSetup + emailVerification + avatar + cv\n})\n</script>\n\n<template>\n  <aside class=\"dash-aside-navbar\">\n    <div class=\"position-relative\">\n      <div\n        class=\"logo text-md-center d-md-block d-flex align-items-center justify-content-between\"\n      >\n        <Link href=\"/\">\n          <img src=\"/assets/dashboard/images/logo_01.png\" />\n        </Link>\n        <button class=\"close-btn d-block d-md-none\">\n          <i class=\"bi bi-x-lg\"></i>\n        </button>\n      </div>\n      <div class=\"user-data\">\n        <div class=\"user-avatar online position-relative rounded-circle\">\n          <div class=\"user-avatar online position-relative rounded-circle\">\n            <img\n              :src=\"\n                authUser.avatar ?? `https://ui-avatars.com/api/?name=${authUser.name}`\n              \"\n            />\n          </div>\n        </div>\n        <!-- /.user-avatar -->\n        <div class=\"user-name-data\">\n          <button\n            class=\"user-name dropdown-toggle\"\n            type=\"button\"\n            id=\"profile-dropdown\"\n            data-bs-toggle=\"dropdown\"\n            data-bs-auto-close=\"outside\"\n            aria-expanded=\"false\"\n          >\n            {{ authUser.name }}\n          </button>\n          <ul class=\"dropdown-menu\" aria-labelledby=\"profile-dropdown\">\n            <li>\n              <Link\n                class=\"dropdown-item d-flex align-items-center\"\n                :href=\"route('user.profile.edit')\"\n                ><img src=\"/assets/dashboard/images/icon/icon_23.svg\" alt=\"\" /><span\n                  class=\"ms-2 ps-1\"\n                >\n                  {{ trans(\"Profile\") }}</span\n                >\n              </Link>\n            </li>\n            <li>\n              <Link\n                :href=\"route('user.account-settings')\"\n                class=\"dropdown-item d-flex align-items-center\"\n                ><img src=\"/assets/dashboard/images/icon/icon_24.svg\" alt=\"\" /><span\n                  class=\"ms-2 ps-1\"\n                >\n                  {{ trans(\"Account Settings\") }}</span\n                >\n              </Link>\n            </li>\n            <li>\n              <Link\n                class=\"dropdown-item d-flex align-items-center\"\n                :href=\"route('user.support.index')\"\n                ><img\n                  src=\"/assets/dashboard/images/icon/icon_41.svg\"\n                  alt=\"img\"\n                  class=\"lazy-img\"\n                /><span class=\"ms-2 ps-1\">{{ trans(\"Supports\") }}</span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <!-- /.user-data -->\n      <nav class=\"dasboard-main-nav\">\n        <ul class=\"style-none\">\n          <li>\n            <Link\n              :href=\"route('user.dashboard')\"\n              :class=\"{ active: currentRoute('User/Dashboard') }\"\n              class=\"d-flex w-100 align-items-center\"\n            >\n              <img :src=\"getDynamicIcon(currentRoute('User/Dashboard'), 1)\" />\n              <span>{{ trans(\"Dashboard\") }}</span>\n            </Link>\n          </li>\n\n          <li>\n            <Link\n              :href=\"route('user.resume.index')\"\n              class=\"d-flex w-100 align-items-center\"\n              :class=\"{ active: currentRoute('User/Resume') }\"\n            >\n              <img :src=\"getDynamicIcon(currentRoute('User/Resume'), 3)\" />\n              <span>{{ trans(\"Resume\") }}</span>\n            </Link>\n          </li>\n          <li>\n            <Link\n              :href=\"route('user.message.index')\"\n              :class=\"{ active: currentRouteGroup('User/Message') }\"\n              class=\"d-flex w-100 align-items-center\"\n            >\n              <img :src=\"getDynamicIcon(currentRouteGroup('User/Message'), 4)\" />\n              <span>{{ trans(\"Messages\") }}</span>\n            </Link>\n          </li>\n          <li>\n            <Link\n              :href=\"route('user.saved-job')\"\n              :class=\"{ active: currentRoute('User/SavedJob') }\"\n              class=\"d-flex w-100 align-items-center\"\n            >\n              <img :src=\"getDynamicIcon(currentRoute('User/SavedJob'), 6)\" />\n              <span>{{ trans(\"Saved Job\") }}</span>\n            </Link>\n          </li>\n\n          <li>\n            <Link\n              :href=\"route('user.job-alert')\"\n              :class=\"{ active: currentRoute('User/JobAlert') }\"\n              class=\"d-flex w-100 align-items-center\"\n            >\n              <img :src=\"getDynamicIcon(currentRoute('User/JobAlert'), 5)\" />\n              <span>{{ trans(\"Job Alert\") }}</span>\n            </Link>\n          </li>\n\n          <li>\n            <Link\n              :href=\"route('user.applied-job')\"\n              :class=\"{ active: currentRoute('User/AppliedJob') }\"\n              class=\"d-flex w-100 align-items-center\"\n            >\n              <img :src=\"getDynamicIcon(currentRoute('User/AppliedJob'), 6)\" />\n              <span>{{ trans(\"Applied Job\") }}</span>\n            </Link>\n          </li>\n\n          <li>\n            <RouteLink\n              :href=\"route('user.reviews')\"\n              text=\"Reviews\"\n              icon-name=\"icon_3\"\n              :active=\"currentRoute('User/Reviews')\"\n            />\n          </li>\n\n          <li>\n            <Link\n              :href=\"route('user.account-settings')\"\n              class=\"d-flex w-100 align-items-center\"\n              :class=\"{\n                active: currentRouteIn(['User/Settings', 'User/SettingPassChange']),\n              }\"\n            >\n              <img\n                :src=\"\n                  getDynamicIcon(\n                    currentRouteIn(['User/Settings', 'User/SettingPassChange']),\n                    7\n                  )\n                \"\n              />\n              <span>{{ trans(\"Account Settings\") }}</span>\n            </Link>\n          </li>\n\n          <li>\n            <Link\n              :href=\"route('user.ai-template.index')\"\n              class=\"d-flex w-100 align-items-center\"\n              :class=\"{ active: currentRouteGroup('User/AiTemplate') }\"\n            >\n              <img :src=\"getDynamicIcon(currentRouteGroup('User/AiTemplate'), 43)\" />\n              <span>{{ trans(\"Ai Templates\") }}</span>\n            </Link>\n          </li>\n          <li>\n            <Link\n              :href=\"route('user.ai-generated-history.index')\"\n              class=\"d-flex w-100 align-items-center\"\n              :class=\"{ active: currentRouteGroup('User/GeneratedHistory/Index') }\"\n            >\n              <img\n                :src=\"\n                  getDynamicIcon(currentRouteGroup('User/GeneratedHistory/Index'), 44)\n                \"\n              />\n              <span>{{ trans(\"Ai History\") }}</span>\n            </Link>\n          </li>\n          <li>\n            <Link\n              :href=\"route('user.credits.index')\"\n              class=\"d-flex w-100 align-items-center\"\n              :class=\"{ active: currentRouteGroup('User/Credit') }\"\n            >\n              <img :src=\"getDynamicIcon(currentRoute('User/Credit'), 42)\" />\n              <span>{{ trans(\"Credits\") }}</span>\n            </Link>\n          </li>\n          <li>\n            <Link\n              :href=\"route('user.support.index')\"\n              class=\"d-flex w-100 align-items-center\"\n              :class=\"{ active: currentRouteGroup('User/Support') }\"\n            >\n              <img :src=\"getDynamicIcon(currentRouteGroup('User/Support'), 41)\" />\n              <span>{{ trans(\"Supports\") }}</span>\n            </Link>\n          </li>\n          <li>\n            <Link\n              :href=\"route('candidates.show', authUser.username)\"\n              class=\"d-flex w-100 align-items-center\"\n            >\n              <img src=\"/assets/dashboard/images/icon/icon_2.svg\" />\n              <span>{{ trans(\"My Profile\") }}</span>\n            </Link>\n          </li>\n          <li>\n            <a\n              href=\"#\"\n              class=\"d-flex w-100 align-items-center\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#deleteModal\"\n            >\n              <img src=\"/assets/dashboard/images/icon/icon_8.svg\" />\n              <span>{{ trans(\"Delete Account\") }}</span>\n            </a>\n          </li>\n        </ul>\n      </nav>\n      <!-- /.dasboard-main-nav -->\n\n      <div class=\"profile-complete-status\">\n        <div class=\"progress-value fw-500\">{{ candidateProfileCompleted }}%</div>\n        <div class=\"progress-line position-relative\">\n          <div\n            class=\"inner-line\"\n            :style=\"{ width: `${candidateProfileCompleted}%` }\"\n          ></div>\n        </div>\n        <p>{{ trans(\"Profile Complete\") }}</p>\n      </div>\n      <!-- /.profile-complete-status -->\n\n      <a\n        href=\"#logout\"\n        @click=\"logout\"\n        class=\"d-flex w-100 align-items-center logout-btn\"\n      >\n        <img src=\"/assets/dashboard/images/icon/icon_9.svg\" />\n        <span>{{ trans(\"Logout\") }}</span>\n      </a>\n    </div>\n  </aside>\n\n  <!-- Modal -->\n  <div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-fullscreen modal-dialog-centered\">\n      <div class=\"container\">\n        <div class=\"text-center remove-account-popup modal-content\">\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n          <img\n            src=\"/assets/dashboard/images/icon/icon_22.svg\"\n            alt=\"\"\n            class=\"m-auto lazy-img\"\n          />\n          <h2>{{ trans(\"Are you sure?\") }}</h2>\n          <p>\n            {{ trans(\"Are you sure to delete your account? All data will be lost.\") }}\n          </p>\n          <div\n            class=\"button-group d-inline-flex justify-content-center align-items-center pt-15\"\n          >\n            <a @click=\"deleteAccount\" class=\"confirm-btn fw-500 tran3s me-3\">{{\n              trans(\"Yes\")\n            }}</a>\n            <button\n              type=\"button\"\n              class=\"btn-close fw-500 ms-3\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              {{ trans(\"Cancel\") }}\n            </button>\n          </div>\n        </div>\n        <!-- /.remove-account-popup -->\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport sharedComposable from '@/Composables/sharedComposable'\nimport axios from 'axios'\nimport { onMounted, ref, computed } from 'vue'\nimport { router, usePage } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nconst { currentRouteGroup, currentRoute } = sharedComposable()\nconst modal = ref({})\n\n// notification\nconst notifications = ref(usePage().props.notifications ?? [])\nconst unreadNotifications = computed(() => {\n  return notifications.value?.filter((item) => item.seen == 0).length ?? 0\n})\n\nconst maskAsRead = (item) => {\n  axios.post(route('admin.notifications.read', item.id)).then((res) => {\n    item.seen = 1\n  })\n}\n\nonMounted(() => {\n  var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\n  var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n    return new bootstrap.Tooltip(tooltipTriggerEl)\n  })\n  modal.value = new bootstrap.Modal(document.getElementById('menuSearchModal'))\n})\n\n// menu search\nconst menuSearchKeyword = ref('')\nconst menus = [\n  {\n    icon: '/assets/dashboard/images/icon/icon_1.svg',\n    title: trans('Dashboard'),\n    link: route('user.dashboard')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_3.svg',\n    title: trans('Resume'),\n    link: route('user.resume.index')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_4.svg',\n    title: trans('Messages'),\n    link: route('user.message.index')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_6.svg',\n    title: trans('Saved Job'),\n    link: route('user.saved-job')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_5.svg',\n    title: trans('Job Alert'),\n    link: route('user.job-alert')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_14.svg',\n    title: trans('Applied Job'),\n    link: route('user.applied-job')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_7.svg',\n    title: trans('Account Setting'),\n    link: route('user.account-settings')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_43.svg',\n    title: trans('Ai Templates'),\n    link: route('user.ai-template.index')\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_42.svg',\n    title: trans('Credits'),\n    link: '/user/credit-logs'\n  },\n  {\n    icon: '/assets/dashboard/images/icon/icon_23.svg',\n    title: trans('Profile'),\n    link: route('user.profile.edit')\n  }\n]\n\nconst filteredMenus = computed(() => {\n  return menus.filter((item) =>\n    item.title?.toLowerCase().includes(menuSearchKeyword.value.toLowerCase())\n  )\n})\n\nconst goTo = (link) => {\n  menuSearchKeyword.value = ''\n  modal.value.hide()\n  router.get(link)\n}\n</script>\n<template>\n  <header class=\"dashboard-header\">\n    <div class=\"d-flex align-items-center justify-content-end\">\n      <button class=\"dash-mobile-nav-toggler d-block d-md-none me-auto\">\n        <span></span>\n      </button>\n      <div class=\"search-form\">\n        <input type=\"text\" placeholder=\"Search here..\" @click=\"modal.show()\" />\n        <button @click=\"modal.show()\">\n          <img src=\"/assets/dashboard/images/icon/icon_10.svg\" alt=\"\" class=\"lazy-img m-auto\" />\n        </button>\n      </div>\n      <div class=\"profile-notification ms-md-5 me-4 ms-2\">\n        <button\n          class=\"noti-btn dropdown-toggle\"\n          type=\"button\"\n          id=\"notification-dropdown\"\n          data-bs-toggle=\"dropdown\"\n          data-bs-auto-close=\"outside\"\n          aria-expanded=\"false\"\n        >\n          <img src=\"/assets/dashboard/images/icon/icon_11.svg\" alt=\"\" class=\"lazy-img\" />\n          <div v-if=\"unreadNotifications\" class=\"badge-pill\"></div>\n        </button>\n        <ul class=\"dropdown-menu w-100\" aria-labelledby=\"notification-dropdown\">\n          <li>\n            <h4>{{ trans('Notification') }}</h4>\n            <ul class=\"style-none\" :class=\"{ 'notify-list': notifications.length }\">\n              <template v-if=\"notifications.length\">\n                <li\n                  v-for=\"(item, index) in notifications\"\n                  :key=\"index\"\n                  @click=\"maskAsRead(item)\"\n                  class=\"d-flex align-items-center\"\n                  :class=\"{ unread: !item.seen }\"\n                >\n                  <a target=\"_blank\" :href=\"item.url ? item.url : '#'\" class=\"flex-fill ps-2\">\n                    <h6>{{ item.title }}</h6>\n                    <small data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" :title=\"item.comment\">{{\n                      item.comment_short\n                    }}</small>\n                    <br />\n                    <span class=\"time\">{{ item.created_at_human_date }}</span>\n                  </a>\n                </li>\n              </template>\n              <li v-else class=\"text-center\">{{ trans('no notifications') }}</li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n      <div>\n        <Link\n          v-if=\"currentRouteGroup('User/Support')\"\n          :href=\"route('user.support.create')\"\n          class=\"job-post-btn tran3s\"\n        >\n          {{ trans('Create Ticket') }}\n        </Link>\n        <Link\n          v-if=\"currentRouteGroup('User/AiTemplate/Index')\"\n          :href=\"route('user.ai-generated-history.index')\"\n          class=\"job-post-btn tran3s\"\n        >\n          {{ trans('Ai History') }}\n        </Link>\n        <button\n          v-if=\"currentRoute('User/Credit') || currentRoute('User/AiTemplate/Show')\"\n          class=\"job-post-btn tran3s\"\n          type=\"button\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#creditModal\"\n        >\n          {{ trans('Buy Credit') }}\n        </button>\n      </div>\n    </div>\n  </header>\n\n  <div\n    class=\"modal fade\"\n    id=\"menuSearchModal\"\n    tabindex=\"-1\"\n    data-bs-keyboard=\"false\"\n    role=\"dialog\"\n    aria-labelledby=\"menuSearchModalTitle\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"menuSearchModalTitle\">{{ trans('Search Menu') }}</h5>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            id=\"menuSearchModalClsBtn\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <div class=\"modal-body p-4\">\n          <div class=\"mb-3\">\n            <input\n              v-model=\"menuSearchKeyword\"\n              type=\"text\"\n              class=\"form-control py-3\"\n              id=\"searchInput\"\n              placeholder=\"Search here\"\n              autofocus\n            />\n          </div>\n\n          <ul class=\"list-group\" v-if=\"filteredMenus.length\">\n            <li\n              role=\"button\"\n              class=\"d-flex mb-2 gap-2 rounded border p-3\"\n              v-for=\"(menu, index) in filteredMenus\"\n              :key=\"index\"\n              @click=\"goTo(menu.link)\"\n            >\n              <img :src=\"menu.icon\" alt=\"\" /> {{ menu.title }}\n            </li>\n          </ul>\n          <div class=\"alert alert-info mb-1 text-center\" role=\"alert\" v-else>\n            <strong>{{ trans('No result found') }}</strong>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, router } from '@inertiajs/vue3'\n\nimport sharedComposable from '@/Composables/sharedComposable'\nimport UserLayout from '@/Layouts/User.vue'\nimport trans from '@/Composables/transComposable'\nimport notify from '@/Plugins/Admin/notify'\nimport { computed } from 'vue'\n\ndefineOptions({ layout: UserLayout })\nconst props = defineProps(['templates', 'credits', 'bookmarked'])\nconst { textExcerpt } = sharedComposable()\nconst stats = computed(() => {\n  return [\n    {\n      value: props.templates.length,\n      title: trans('Total'),\n      iconSrc: '/assets/dashboard/images/icon/icon_12.svg'\n    },\n    {\n      value: props.bookmarked?.length ?? 0,\n      title: trans('Bookmarked'),\n      iconSrc: '/assets/dashboard/images/icon/icon_13.svg'\n    },\n    {\n      value: props.credits,\n      title: trans('Credits'),\n      iconSrc: '/assets/dashboard/images/icon/icon_43.svg'\n    }\n  ]\n})\n\nconst bookmark = (id, bookmarked) => {\n  router.post(\n    route('user.ai-template.bookmark'),\n    {\n      ai_template_id: id\n    },\n    {\n      onSuccess: () => {\n        if (bookmarked == 1) {\n          notify.danger('Bookmarked Removed Successfully')\n        } else {\n          notify.success('Bookmarked Successfully')\n        }\n      }\n    }\n  )\n}\n</script>\n\n<template>\n  <Head title=\"Ai Templates | User Panel\" />\n\n  <h2 class=\"main-title\">{{ trans('Ai Templates') }}</h2>\n\n  <div>\n    <div class=\"row\">\n      <div class=\"col-lg-4 col-6\" v-for=\"stat in stats\" :key=\"stat\">\n        <div class=\"dash-card-one border-30 position-relative mb-15 bg-white\">\n          <div class=\"d-sm-flex align-items-center justify-content-between\">\n            <div\n              class=\"icon rounded-circle d-flex align-items-center justify-content-center order-sm-1\"\n            >\n              <img v-lazy=\"stat.iconSrc\" alt=\"lazy\" class=\"lazy-img\" />\n            </div>\n            <div class=\"order-sm-0\">\n              <div class=\"value fw-500\">{{ stat.value }}</div>\n              <span>{{ stat.title }}</span>\n            </div>\n          </div>\n        </div>\n        <!-- /.dash-card-one -->\n      </div>\n    </div>\n\n    <div class=\"row mt-30\">\n      <div class=\"col-lg-4 mb-30\" v-for=\"temp in templates\" :key=\"temp.id\">\n        <div class=\"job-list-three d-flex h-100 w-100\">\n          <div class=\"main-wrapper h-100 w-100\">\n            <button\n              @click=\"bookmark(temp.id, temp.isBookmarked)\"\n              type=\"button\"\n              class=\"save-btn rounded-circle tran3s text-center\"\n              :class=\"{ 'bg-success': temp.isBookmarked == 1 }\"\n              title=\"Save Job\"\n            >\n              <i class=\"bi bi-bookmark-dash\"></i>\n            </button>\n            <div class=\"list-header d-flex align-items-center\">\n              <Link :href=\"route('user.ai-template.show', temp.uuid)\" class=\"logo\"\n                ><img\n                  v-lazy=\"\n                    temp.icon == null\n                      ? `https://ui-avatars.com/api/?name=${temp.title}`\n                      : `${temp.icon}`\n                  \"\n                  alt=\"avatar rounded-circle\"\n                  class=\"lazy-img m-auto\"\n              /></Link>\n              <div class=\"info-wrapper\">\n                <Link :href=\"route('user.ai-template.show', temp.uuid)\" class=\"title fw-500 tran3s\">\n                  {{ temp.title }}\n                </Link>\n                <ul class=\"style-none d-flex info-data flex-wrap\">\n                  <li>{{ temp.ai_model }}</li>\n                </ul>\n              </div>\n            </div>\n            <!-- ./.list-header -->\n            <div v-html=\"textExcerpt(temp.description, 100)\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div v-if=\"templates.length < 1\" class=\"fw-bold card-box bg-white text-center\">\n      {{ trans('No Template found') }}\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, router, useForm } from '@inertiajs/vue3'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport UserLayout from '@/Layouts/User.vue'\nimport Multiselect from '@vueform/multiselect'\nimport ckeEditor from '@/Plugins/ckeEditor'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport axios from 'axios'\nimport notify from '@/Plugins/Admin/notify'\nimport { ref, computed } from 'vue'\n\ndefineOptions({ layout: UserLayout })\nconst props = defineProps(['template', 'credits', 'credit_fee', 'gateways', 'languages'])\nconst { cke, ClassicEditor } = ckeEditor()\nconst { textExcerpt, pickBy, formatCurrency, authUser, copyToClipboard } = sharedComposable()\nconst activeGateway = ref(props.gateways[0]?.id || 0)\nconst credits = ref(null)\nconst conversionRate = ref(props.credit_fee)\nconst convertedAmount = computed(() => {\n  return credits.value / conversionRate.value\n})\n\nconst generatedResponse = ref('')\nconst documentName = ref('')\nconst fieldErrors = ref({})\nconst errors = ref({})\nconst hasError = ref(false)\nconst isProcessing = ref(false)\nconst manualPayment = ref({\n  image: null,\n  comment: ''\n})\nconst form = useForm({\n  prompt: '',\n  language: '',\n  tone: '',\n  length: 200,\n  result: 1,\n  creativity: '',\n  template: '',\n  model: props.template.ai_model,\n  template_id: props.template.id,\n  fields: props.template.fields\n})\nconst findGateway = computed(() => {\n  return props.gateways.find((gateway) => gateway.id === activeGateway.value)\n})\nconst tones = ['Professional', 'Funny', 'Casual', 'Excited', 'Bold', 'Dramatic']\nconst creativityLevels = [\n  {\n    label: 'Optimal',\n    value: 0.5\n  },\n  {\n    label: 'Low',\n    value: 0.8\n  },\n  {\n    label: 'Medium',\n    value: 0.9\n  },\n  {\n    label: 'High',\n    value: 1\n  }\n]\nconst transformPrompt = () => {\n  const fields = []\n  form.fields.forEach((element) => {\n    if (element.hasOwnProperty('value')) {\n      fields[element.name] = element.value\n      hasError.value = false\n    } else {\n      hasError.value = true\n      fieldErrors.value[element.name] = `${element.name} is required`\n\n      return\n    }\n  })\n  form.prompt = props.template.prompt.replace(/\\[(.*?)\\]/g, (match, key) => fields[key])\n}\nconst submit = () => {\n  const maxToken = form.length\n  const totalCharge = maxToken * form.result * props.credit_fee\n  if (totalCharge > props.credits) {\n    notify.danger('You dont have enough credits please purchase some credits')\n    return\n  }\n  transformPrompt()\n  if (hasError.value) return\n\n  isProcessing.value = true\n  axios\n    .post(route('api-ai-generate', pickBy(form)))\n    .then(async (res) => {\n      generatedResponse.value = res.data;\n\n    })\n    .catch((error) => {\n      errors.value = error.response.data.errors\n      if (error.response.status == 400) {\n        notify.danger('You dont have enough credits please purchase some credits')\n      }\n    })\n    .finally(() => {\n      isProcessing.value = false\n      fieldErrors.value = []\n    })\n}\nconst pay = (gateway_id) => {\n  if (findGateway.value.min_amount > convertedAmount.value) {\n    notify.danger(\n      'The minimum transaction amount is ' + formatCurrency(findGateway.value.min_amount)\n    )\n    return\n  }\n  if (findGateway.value.max_amount != -1) {\n    if (findGateway.value.max_amount < convertedAmount.value) {\n      notify.danger(\n        'The maximum transaction amount is ' + formatCurrency(findGateway.value.max_amount)\n      )\n      return\n    }\n  }\n  isProcessing.value = true\n  router.post(\n    route('credit.pay'),\n    {\n      gateway_id: gateway_id,\n      total: convertedAmount.value,\n      credits: credits.value,\n      manualPayment: findGateway.value.is_auto == 0 ? manualPayment.value : null\n    },\n    {\n      onFinish: () => {\n        credits.value = 0\n        isProcessing.value = false\n      }\n    }\n  )\n}\nfunction downloadHTMLFile(textContent, name) {\n  const blob = new Blob([textContent], { type: 'text/html' })\n  const a = document.createElement('a')\n  a.href = URL.createObjectURL(blob)\n  a.download = name ? name.replace(' ', '-') : 'untitled.html'\n\n  a.click()\n  URL.revokeObjectURL(url)\n}\nconst transformedLanguages = Object.keys(props.languages).map((key) => {\n  return {\n    id: props.languages[key].id,\n    name: props.languages[key].name\n  }\n})\n</script>\n\n<template>\n\n  <Head title=\"Ai Template | User Panel\" />\n\n  <div class=\"row d-flex justify-contents-start\">\n    <div class=\"col-xl-5 col-lg-6 d-flex\">\n      <div class=\"recent-job-tab w-100 rounded bg-white p-4\">\n        <div class=\"d-flex mt-20\">\n          <img :src=\"template.icon\" width=\"50\" height=\"50\" class=\"rounded-circle\" alt=\"icon\" />\n          <p class=\"fs-5 ms-2\">{{ template.title }}</p>\n        </div>\n        <div class=\"row mt-30\">\n          <div class=\"col-lg-6\">\n            <label class=\"text-capitalize mb-1\">{{ trans('Language') }}*</label>\n            <Multiselect class=\"ai-template-multiselect\" v-model=\"form.language\" :options=\"transformedLanguages\"\n              valueProp=\"name\" label=\"name\" placeholder=\"Language\" />\n            <InputFieldError v-if=\"errors?.language\" :message=\"errors?.language[0]\" />\n          </div>\n          <div class=\"col-lg-6\">\n            <label class=\"text-capitalize mb-1\">{{ trans('Tone') }}*</label>\n            <Multiselect class=\"ai-template-multiselect\" v-model=\"form.tone\" :options=\"tones\" placeholder=\"Tone\" />\n            <InputFieldError v-if=\"errors?.tone\" :message=\"errors?.tone[0]\" />\n          </div>\n        </div>\n        <div class=\"mt-30\">\n          <div class=\"mb-20\" v-for=\"(field, i) in form.fields\" :key=\"i\">\n            <label class=\"text-capitalize mb-1\">{{ field.name }}*</label>\n            <input required v-if=\"field.type === 'input'\" v-model=\"field.value\" type=\"text\"\n              class=\"w-100 rounded border p-2\" :placeholder=\"field.placeholder\" />\n            <textarea required v-model=\"field.value\" v-if=\"field.type === 'textarea'\" class=\"w-100 rounded border p-2\"\n              :placeholder=\"field.placeholder\"></textarea>\n            <InputFieldError v-if=\"hasError\" :message=\"fieldErrors[field.name]\" />\n            <InputFieldError v-if=\"!hasError && errors && errors['fields.' + i + '.value']\"\n              :message=\"errors['fields.' + i + '.value'][0]\" />\n          </div>\n        </div>\n        <div class=\"mt-30\">\n          <div class=\"d-flex justify-content-between mb-1\">\n            <label class=\"text-capitalize\">{{ trans('Maximum Word Limit') }}</label>\n            <label class=\"text-capitalize\"> {{ trans('Credit') }}: {{ authUser.credits }}</label>\n          </div>\n          <input v-model.number=\"form.length\" type=\"text\" class=\"w-100 rounded border p-2\"\n            placeholder=\"Maximum Length\" />\n          <InputFieldError v-if=\"errors?.length\" :message=\"errors?.length[0]\" />\n        </div>\n        <div class=\"row mb-30 mt-30\">\n          <div class=\"col-lg-6\">\n            <label class=\"text-capitalize mb-1\">{{ trans('Number Of Result') }}</label>\n            <input v-model=\"form.result\" type=\"number\" class=\"w-100 rounded border p-2\"\n              placeholder=\"Number Of Result\" />\n            <InputFieldError v-if=\"errors?.result\" :message=\"errors?.result[0]\" />\n          </div>\n          <div class=\"col-lg-6\">\n            <label class=\"text-capitalize mb-1\">{{ trans('Creativity Level') }}</label>\n            <Multiselect class=\"ai-template-multiselect\" v-model=\"form.creativity\" :options=\"creativityLevels\"\n              value-by=\"value\" label=\"label\" placeholder=\"Creativity Level\" />\n            <InputFieldError v-if=\"errors?.creativity\" :message=\"errors.creativity[0]\" />\n          </div>\n        </div>\n        <SpinnerBtn @click.prevent=\"submit\" classes=\"w-100 d-flex justify-content-center btn-one py-3\"\n          :processing=\"isProcessing\" btn-text=\"Generate Content\" />\n      </div>\n    </div>\n    <div class=\"col-xl-7 col-lg-6 d-flex flex-column\">\n      <div class=\"user-activity-chart h-100 rounded bg-white p-4\">\n        <div class=\"d-flex\">\n          <button class=\"me-1\" @click=\"copyToClipboard(generatedResponse)\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 24 24\"\n              style=\"fill: rgba(0, 0, 0, 0.6)\">\n              <path\n                d=\"M19.937 8.68c-.011-.032-.02-.063-.033-.094a.997.997 0 0 0-.196-.293l-6-6a.997.997 0 0 0-.293-.196c-.03-.014-.062-.022-.094-.033a.991.991 0 0 0-.259-.051C13.04 2.011 13.021 2 13 2H6c-1.103 0-2 .897-2 2v16c0 1.103.897 2 2 2h12c1.103 0 2-.897 2-2V9c0-.021-.011-.04-.013-.062a.99.99 0 0 0-.05-.258zM16.586 8H14V5.414L16.586 8zM6 20V4h6v5a1 1 0 0 0 1 1h5l.002 10H6z\">\n              </path>\n            </svg>\n          </button>\n          <button class=\"ms-1\" @click=\"downloadHTMLFile(generatedResponse, documentName)\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 24 24\"\n              style=\"fill: rgba(0, 0, 0, 0.6)\">\n              <path d=\"m12 16 4-5h-3V4h-2v7H8z\"></path>\n              <path d=\"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\"></path>\n            </svg>\n          </button>\n        </div>\n        <div class=\"mb-20 mt-20\">\n          <input v-model=\"documentName\" type=\"text\" class=\"w-100 rounded border-0 p-2\"\n            placeholder=\"Untitled Document...\" />\n        </div>\n        <div class=\"ai-ck-section\">\n          <cke :editor=\"ClassicEditor\" v-model=\"generatedResponse\" />\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- creditModal Modal -->\n  <div class=\"modal fade\" id=\"creditModal\" tabindex=\"-1\" aria-labelledby=\"creditModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n      <div class=\"modal-content p-4\">\n        <div class=\"p-2\">\n          <p class=\"fs-5 text-center\" id=\"creditModalLabel\">{{ trans('Buy Credits') }}</p>\n        </div>\n        <div class=\"modal-body px-5\">\n          <p class=\"text-center\">\n            {{ conversionRate }} {{ trans('Credits') }} =\n            {{ formatCurrency(1) }}\n          </p>\n\n          <input class=\"w-100 rounded border p-3\" step=\"5\" type=\"number\" v-model.number=\"credits\"\n            placeholder=\"Enter Credit amount\" />\n          <p class=\"fw-bold mt-2 text-left\">\n            {{ trans('Total:') }} {{ formatCurrency(convertedAmount || 0) }}\n          </p>\n          <div class=\"row gateways my-4 px-3\">\n            <template v-for=\"gateway in gateways\" :key=\"gateway.id\">\n              <button class=\"col-sm-2 position-relative rounded\" @click=\"activeGateway = gateway.id\"\n                :class=\"{ border: activeGateway == gateway.id }\">\n                <div v-show=\"activeGateway == gateway.id\">\n                  <i\n                    class=\"fas fa-check rounded-circle position-absolute start-100 translate-middle bg-success top-0 p-1 text-white\"></i>\n                </div>\n\n                <img :src=\"gateway.logo\" class=\"rounded p-1\" />\n              </button>\n            </template>\n          </div>\n          <template v-for=\"gateway in gateways\" :key=\"gateway.id\">\n            <div v-show=\"activeGateway === gateway.id\" class=\"col-sm-12 gateway-form\" :id=\"'gateway-form' + gateway.id\">\n              <form method=\"post\" @submit.prevent=\"submit(gateway.id)\" enctype=\"multipart/form-data\">\n                <div class=\"table-responsive\">\n                  <table class=\"table-borderless text-fs-sm table\">\n                    <template v-if=\"gateway.charge != 0\">\n                      <tbody>\n                        <tr class=\"border\">\n                          <td class=\"border p-2\">\n                            {{ trans('Gateway Charge: ') }}\n                          </td>\n                          <td class=\"text-center\">\n                            {{ formatCurrency(gateway.charge) }}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </template>\n                  </table>\n\n                  <template v-if=\"gateway.comment != null\">\n                    <table class=\"table-borderless mt-2 table\">\n                      <tbody>\n                        <tr>\n                          <td class=\"fw-500 text-fs-sm\">\n                            {{ trans('Payment Instruction: ') }}\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <td class=\"text-fs-sm\">\n                            {{ gateway.comment }}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </template>\n\n                  <template v-if=\"gateway.phone_required == 1\">\n                    <div class=\"form-group mt-2\">\n                      <label class=\"fw-500 text-fs-sm my-2\">{{ trans('Your phone number') }}</label>\n                      <input type=\"number\" name=\"phone\" placeholder=\"Your phone number\" class=\"form-control\" required\n                        :value=\"authUser.phone\" />\n                    </div>\n                  </template>\n                  <template v-if=\"gateway.is_auto == 0\">\n                    <div class=\"form-group mt-1\">\n                      <label class=\"fw-500 text-fs-sm my-2\">{{\n                        trans('Submit your payment proof')\n                        }}</label>\n                      <input @input=\"(e) => {\n                          manualPayment.image = e.target.files[0]\n                        }\n                        \" type=\"file\" name=\"image\" class=\"form-control\" required accept=\"image/*\" />\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"fw-500 text-fs-sm my-2\">{{ trans('Comment') }}</label>\n                      <textarea v-model=\"manualPayment.comment\" class=\"form-control\" required name=\"comment\"\n                        placeholder=\"comment\" maxlength=\"500\"></textarea>\n                    </div>\n                  </template>\n                </div>\n                <button :disabled=\"isProcessing\" type=\"submit\" class=\"btn-one w-100 mt-4\">\n                  {{ trans('Pay Now') }}\n                </button>\n              </form>\n            </div>\n          </template>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, Link, useForm } from \"@inertiajs/vue3\"\nimport UserLayout from \"@/Layouts/User.vue\"\nimport Paginate from \"@/Components/Paginate.vue\"\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\"\nimport notify from \"@/Plugins/Admin/notify\"\nimport InputFieldError from \"@/Components/InputFieldError.vue\"\nimport sharedComposable from \"@/Composables/sharedComposable\"\nimport NiceSelect from \"@/Components/NiceSelect.vue\"\n\nconst { formatNumber } = sharedComposable()\n\ndefineOptions({ layout: UserLayout })\ndefineProps([\"jobs\"])\n\nconst form = useForm({\n  ratting: 5,\n  comment: \"\",\n  job: {},\n})\n\nconst submit = () => {\n  form.post(route(\"user.company-reviews.store\"), {\n    onSuccess: () => {\n      notify.success(\"Review has been submitted successfully\")\n      $(\"#reviewModal .btn-close\").trigger(\"click\")\n      form.reset()\n    },\n  })\n}\n\nconst sorts = [\n  {\n    value: \"asc\",\n    label: \"Newest\",\n  },\n  {\n    value: \"desc\",\n    label: \"Oldest\",\n  },\n]\n\nconst sortForm = useForm({\n  order_by: \"\",\n})\n\nconst sortSubmit = () => {\n  sortForm.get(window.location.href, {\n    preserveState: true,\n  })\n}\n</script>\n\n<template>\n  <Head title=\"Applied Jobs\" />\n\n  <div class=\"mb-40 d-flex align-items-center justify-content-between lg-mb-30\">\n    <h2 class=\"main-title m0\">{{ trans(\"Applied Jobs\") }}</h2>\n    <div class=\"short-filter d-flex align-items-center\">\n      <div class=\"text-dark fw-500 me-2\">{{ trans(\"Sort by\") }}:</div>\n      <NiceSelect\n        v-model=\"sortForm.order_by\"\n        :options=\"sorts\"\n        label=\"label\"\n        value-by=\"value\"\n        placeholder=\"Default\"\n        @change=\"sortSubmit\"\n      />\n    </div>\n  </div>\n\n  <div v-if=\"jobs.total\" class=\"wrapper\">\n    <div\n      class=\"mb-20 overflow-visible job-list-one style-two position-relative\"\n      v-for=\"(job, index) in jobs.data\"\n      :key=\"index\"\n    >\n      <div class=\"row justify-content-between align-items-center\">\n        <div class=\"col-xxl-3 col-lg-4\">\n          <div class=\"job-title d-flex align-items-center\">\n            <a :href=\"route('jobs.show', job.slug)\" class=\"logo\"\n              ><img\n                v-lazy=\"\n                  job.user?.avatar == null\n                    ? `https://ui-avatars.com/api/?name=${job.user?.name}`\n                    : `${job.user?.avatar}`\n                \"\n                alt=\"\"\n                class=\"m-auto lazy-img\"\n            /></a>\n            <a :href=\"route('jobs.show', job.slug)\" class=\"title fw-500 tran3s\">{{\n              job.title\n            }}</a>\n          </div>\n        </div>\n        <div class=\"col-lg-3 col-md-4 col-sm-6 ms-auto\">\n          <a href=\"#\" class=\"job-duration fw-500\">{{ job.type }}</a>\n          \n          <span v-if=\"job?.pivot?.is_hired\" class=\"ms-3 badge bg-success\">\n            {{ trans(\"Hired\") }}\n          </span>\n          \n          <span v-if=\"job?.is_reviewed\" class=\"badge bg-primary\">\n            {{ trans(\"Reviewed\") }}\n          </span>\n\n          <div class=\"job-salary\">\n            <span\n              class=\"fw-500 text-dark\"\n              v-if=\"\n                job.salary_range &&\n                job.salary_range.split('-')[0] > 0 &&\n                job.salary_range.split('-')[1] > 0\n              \"\n            >\n              {{ formatNumber(job.salary_range.split(\"-\")[0] ?? 0, 0) }}-{{\n                formatNumber(job.salary_range.split(\"-\")[1] ?? 0, 0)\n              }}\n            </span>\n            <span class=\"fw-500 text-dark\" v-else>\n              {{ trans(\"Negotiable \") }}\n            </span>\n            / {{ job.salary_type }} .\n            {{ job.expertise }}\n          </div>\n        </div>\n        <div class=\"col-xxl-2 col-lg-3 col-md-4 col-sm-6 xs-mt-10 ms-auto\">\n          <div class=\"job-location\">\n            <a href=\"#\"> {{ job.address }}</a>\n          </div>\n          <div class=\"job-category\">\n            {{ job.categories.map((item) => item.title).join(\", \") }}\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-md-4\">\n          <div class=\"action-dots float-end\">\n            <button\n              class=\"action-btn dropdown-toggle\"\n              type=\"button\"\n              data-bs-toggle=\"dropdown\"\n              aria-expanded=\"false\"\n            >\n              <span></span>\n            </button>\n            <ul class=\"dropdown-menu dropdown-menu-end\">\n              <li>\n                <a\n                  target=\"_blank\"\n                  class=\"dropdown-item\"\n                  :href=\"route('jobs.show', job.slug)\"\n                  ><img\n                    src=\"/assets/dashboard/images/icon/icon_18.svg\"\n                    alt=\"\"\n                    class=\"lazy-img\"\n                  />\n                  {{ trans(\"View Job\") }}</a\n                >\n              </li>\n              <li v-if=\"job.pivot?.is_hired && !job.is_reviewed\">\n                <button\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#reviewModal\"\n                  @click=\"form.job = job\"\n                  class=\"dropdown-item\"\n                >\n                  <img\n                    src=\"/assets/dashboard/images/icon/icon_19.svg\"\n                    alt=\"\"\n                    class=\"lazy-img\"\n                  />\n                  {{ trans(\"Write a review\") }}\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div v-else class=\"bg-white card-box border-20\">\n    <div class=\"text-center fw-bold\">{{ trans(\"No job found\") }}</div>\n  </div>\n\n  <div class=\"d-flex justify-content-end mt-30\">\n    <Paginate :links=\"jobs.links\" />\n  </div>\n\n  <div\n    class=\"modal fade\"\n    id=\"reviewModal\"\n    tabindex=\"-1\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    role=\"dialog\"\n    aria-labelledby=\"reviewModalTitleId\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\" id=\"reviewModalTitleId\">\n            {{ trans(\"Add a review\") }}\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <form @submit.prevent=\"submit\">\n          <div class=\"modal-body\">\n            <div class=\"mb-4\">\n              <label class=\"form-label\">{{ trans(\"Ratting Star (out of 5)\") }}</label>\n              <select v-model=\"form.ratting\" class=\"form-control\">\n                <option v-for=\"item in 5\" :key=\"item\" :value=\"item\">\n                  {{ item }}\n                </option>\n              </select>\n              <InputFieldError :message=\"form.errors.ratting\" />\n            </div>\n            <div class=\"mb-2\">\n              <label class=\"form-label\">{{ trans(\"Comment\") }}</label>\n              <textarea\n                v-model=\"form.comment\"\n                class=\"form-control\"\n                rows=\"5\"\n                placeholder=\"enter your review comment here....\"\n              ></textarea>\n              <InputFieldError :message=\"form.errors.comment\" />\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"px-0 py-2 btn-seven\" data-bs-dismiss=\"modal\">\n              {{ trans(\"Close\") }}\n            </button>\n            <SpinnerBtn\n              type=\"submit\"\n              :processing=\"form.processing\"\n              :btn-text=\"trans('Submit')\"\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport UserLayout from '@/Layouts/User.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { router, Head } from '@inertiajs/vue3'\nimport moment from 'moment'\nimport { ref, computed } from 'vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport notify from '@/Plugins/Admin/notify'\ndefineOptions({ layout: UserLayout })\n\nconst sorts = [\n  {\n    label: 'Complete',\n    value: 'complete'\n  },\n  {\n    label: 'Inactive',\n    value: 'inactive'\n  }\n]\nconst props = defineProps(['creditLogs', 'credit_fee', 'gateways'])\nconst { pickBy, formatCurrency, authUser } = sharedComposable()\nconst filterForm = ref({\n  order: '',\n  status: ''\n})\nconst activeGateway = ref(props.gateways[0]?.id || 0)\nconst credits = ref(null)\nconst conversionRate = ref(props.credit_fee)\nconst convertedAmount = computed(() => {\n  return credits.value / conversionRate.value\n})\nconst isProcessing = ref(false)\nconst filter = () => {\n  router.get(route('user.credits.index'), pickBy(filterForm.value), {\n    preserveState: true\n  })\n}\nconst setOrder = (val) => {\n  filterForm.value.order = val\n  filter()\n}\nconst manualPayment = ref({\n  image: null,\n  comment: ''\n})\nconst findGateway = computed(() => {\n  return props.gateways.find((gateway) => gateway.id === activeGateway.value)\n})\nconst submit = (gateway_id) => {\n  if (findGateway.value.min_amount > convertedAmount.value) {\n    notify.danger(\n      'The minimum transaction amount is ' + formatCurrency(findGateway.value.min_amount)\n    )\n    return\n  }\n  if (findGateway.value.max_amount != -1) {\n    if (findGateway.value.max_amount < convertedAmount.value) {\n      notify.danger(\n        'The maximum transaction amount is ' + formatCurrency(findGateway.value.max_amount)\n      )\n      return\n    }\n  }\n  isProcessing.value = true\n  router.post(\n    route('credit.pay'),\n    {\n      gateway_id: gateway_id,\n      total: convertedAmount.value,\n      credits: credits.value,\n      manualPayment: findGateway.value.is_auto == 0 ? manualPayment.value : null\n    },\n    {\n      onFinish: () => {\n        credits.value = 0\n        isProcessing.value = false\n      }\n    }\n  )\n}\n</script>\n\n<template>\n\n  <Head title=\"Credit Logs\" />\n\n  <div class=\"d-sm-flex align-items-center justify-content-between lg-mb-30 mb-40\">\n    <h2 class=\"main-title m0\">{{ trans('Credit Logs') }}</h2>\n    <div class=\"d-flex xs-mt-30 ms-auto\">\n      <div class=\"nav nav-tabs tab-filter-btn me-4\">\n        <button @click=\"setOrder('')\" :class=\"{ active: filterForm.order === '' }\" class=\"nav-link\" type=\"button\">\n          {{ trans('All') }}\n        </button>\n        <button @click=\"setOrder('desc')\" class=\"nav-link\" :class=\"{ active: filterForm.order === 'desc' }\"\n          type=\"button\">\n          {{ trans('New') }}\n        </button>\n        <button @click=\"setOrder('asc')\" class=\"nav-link\" :class=\"{ active: filterForm.order === 'asc' }\" type=\"button\">\n          {{ trans('Old') }}\n        </button>\n      </div>\n      <div class=\"short-filter d-flex align-items-center ms-auto\">\n        <div class=\"text-dark fw-500 me-2\">{{ trans('Sort by') }}:</div>\n        <NiceSelect v-model=\"filterForm.status\" :options=\"sorts\" value-by=\"value\" label=\"label\" placeholder=\"Default\"\n          @change=\"filter\" />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card-box border-20 bg-white\">\n    <div class=\"tab-content\" id=\"nav-tabContent\">\n      <div class=\"tab-pane fade show active\" id=\"a1\" role=\"tabpanel\">\n        <div v-if=\"creditLogs.total\" class=\"table-responsive\">\n          <table class=\"job-alert-table table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">{{ trans('Invoice No') }}</th>\n                <th scope=\"col\">{{ trans('Credits') }}</th>\n                <th scope=\"col\">{{ trans('Price') }}</th>\n                <th scope=\"col\">{{ trans('Status') }}</th>\n                <th scope=\"col\">{{ trans('Gateway') }}</th>\n                <th scope=\"col\">{{ trans('Date') }}</th>\n              </tr>\n            </thead>\n            <tbody class=\"border-0\">\n              <tr :class=\"{\n                active: creditLog.status == 1,\n                pending: creditLog.status != 1\n              }\" v-for=\"creditLog in creditLogs.data\" :key=\"creditLog.id\">\n                <td>\n                  {{ creditLog.invoice_no }}\n                </td>\n                <td>\n                  {{ creditLog.credits }}\n                </td>\n                <td>\n                  {{ formatCurrency(creditLog.price) }}\n                </td>\n                <td>\n                  <div class=\"job-status\">\n                    {{ creditLog.status == 1 ? trans('Complete') : trans('Pending') }}\n                  </div>\n                </td>\n                <td>\n                  {{ creditLog.gateway.name }}\n                </td>\n                <td>\n                  <p class=\"text-end\">{{ moment(creditLog.updated_at).format('DD MMM Y') }}</p>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <!-- /.table job-alert-table -->\n        </div>\n        <div class=\"text-center\" v-else>{{ trans('No record found') }}</div>\n      </div>\n    </div>\n  </div>\n  <!-- /.card-box -->\n\n  <div class=\"d-flex justify-content-end mt-30\">\n    <Paginate :links=\"creditLogs.links\" />\n  </div>\n  <!-- suggestion Modal -->\n  <div class=\"modal fade\" id=\"creditModal\" tabindex=\"-1\" aria-labelledby=\"creditModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n      <div class=\"modal-content p-4\">\n        <div class=\"p-2\">\n          <p class=\"fs-5 text-center\" id=\"creditModalLabel\">{{ trans('Buy Credits') }}</p>\n        </div>\n        <div class=\"modal-body px-5\">\n          <p class=\"text-center\">\n            {{ conversionRate }} {{ trans('Credits') }} =\n            {{ formatCurrency(1) }}\n          </p>\n\n          <input class=\"w-100 rounded border p-3\" step=\"5\" type=\"number\" v-model.number=\"credits\"\n            placeholder=\"Enter Credit amount\" />\n          <p class=\"fw-bold mt-2 text-left\">\n            {{ trans('Total:') }} {{ formatCurrency(convertedAmount || 0) }}\n          </p>\n          <div class=\"row gateways my-4 px-3\">\n            <template v-for=\"gateway in gateways\" :key=\"gateway.id\">\n              <button class=\"col-sm-2 position-relative rounded\" @click=\"activeGateway = gateway.id\"\n                :class=\"{ border: activeGateway == gateway.id }\">\n                <div v-show=\"activeGateway == gateway.id\">\n                  <i\n                    class=\"fas fa-check rounded-circle position-absolute start-100 translate-middle bg-success top-0 p-1 text-white\"></i>\n                </div>\n\n                <img :src=\"gateway.logo\" class=\"rounded p-1\" />\n              </button>\n            </template>\n          </div>\n          <template v-for=\"gateway in gateways\" :key=\"gateway.id\">\n            <div v-show=\"activeGateway === gateway.id\" class=\"col-sm-12 gateway-form\" :id=\"'gateway-form' + gateway.id\">\n              <form method=\"post\" @submit.prevent=\"submit(gateway.id)\" enctype=\"multipart/form-data\">\n                <div class=\"table-responsive\">\n                  <table class=\"table-borderless text-fs-sm table\">\n                    <tbody>\n                      <template v-if=\"gateway.charge != 0\">\n                        <tr class=\"border\">\n                          <td class=\"border p-2\">\n                            {{ trans('Gateway Charge: ') }}\n                          </td>\n                          <td class=\"text-center\">\n                            {{ formatCurrency(gateway.charge) }}\n                          </td>\n                        </tr>\n                      </template>\n                    </tbody>\n                  </table>\n\n                  <template v-if=\"gateway.comment != null\">\n                    <table class=\"table-borderless mt-2 table\">\n                      <tbody>\n                        <tr>\n                          <td class=\"fw-500 text-fs-sm\">\n                            {{ trans('Payment Instruction: ') }}\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <td class=\"text-fs-sm\">\n                            {{ gateway.comment }}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </template>\n                  <template v-if=\"gateway.phone_required == 1\">\n                    <div class=\"form-group mt-2\">\n                      <label class=\"fw-500 text-fs-sm my-2\">{{ trans('Your phone number') }}</label>\n                      <input type=\"number\" name=\"phone\" placeholder=\"Your phone number\" class=\"form-control\" required\n                        :value=\"authUser.phone\" />\n                    </div>\n                  </template>\n                  <template v-if=\"gateway.is_auto == 0\">\n                    <div class=\"form-group mt-1\">\n                      <label class=\"fw-500 text-fs-sm my-2\">{{\n                        trans('Submit your payment proof')\n                        }}</label>\n                      <input @input=\"(e) => {\n                          manualPayment.image = e.target.files[0]\n                        }\n                        \" type=\"file\" name=\"image\" class=\"form-control\" required accept=\"image/*\" />\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"fw-500 text-fs-sm my-2\">{{ trans('Comment') }}</label>\n                      <textarea v-model=\"manualPayment.comment\" class=\"form-control\" required name=\"comment\"\n                        placeholder=\"comment\" maxlength=\"500\"></textarea>\n                    </div>\n                  </template>\n                </div>\n                <button :disabled=\"isProcessing\" type=\"submit\" class=\"btn-one w-100 mt-4\">\n                  {{ trans('Pay Now') }}\n                </button>\n              </form>\n            </div>\n          </template>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, Link, useForm } from '@inertiajs/vue3'\nimport UserLayout from '@/Layouts/User.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport VueApexCharts from 'vue3-apexcharts'\nimport { computed, reactive } from 'vue'\nimport trans from '@/Composables/transComposable'\nimport sharedComposable from '@/Composables/sharedComposable'\nconst { deleteRow } = sharedComposable()\n\ndefineOptions({ layout: UserLayout })\n\nconst props = defineProps([\n  'sassError',\n  'buttons',\n  'segments',\n  'user',\n  'success',\n  'total_visitors',\n  'total_shortlisted',\n  'total_bookmarks',\n  'total_applied_jobs',\n  'appliedJobs',\n  'activeChartFilterBtn',\n  'visits'\n])\n\nconst deleteAppliedJob = (id) => {\n  deleteRow(route('user.applied-jobs.destroy', id))\n}\n\nconst chartFilterBtns = ['day', 'week', 'month', 'year']\n\nconst areaChart = computed(() => {\n  return {\n    series: [\n      {\n        name: 'views',\n        data: props.visits.map((item) => item.views)\n      }\n    ],\n\n    xaxis: {\n      type: 'string',\n      categories: props.visits.map((item) => item.date)\n    }\n  }\n})\n\nconst chart = reactive({\n  series: areaChart.value.series,\n  chartOptions: {\n    colors: ['#69ae84', '#69ae84', '#69ae84'],\n    chart: {\n      height: 350,\n      type: 'area',\n      toolbar: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false,\n      opposite: true,\n      labels: {\n        formatter: function (val) {\n          return val.toFixed(0)\n        }\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth'\n    },\n    xaxis: areaChart.value.xaxis\n  }\n})\n</script>\n\n<template>\n  <Head title=\"Dashboard | Candidate Panel\" />\n  <h2 class=\"main-title\">{{ trans('Dashboard') }}</h2>\n\n  <div class=\"row\">\n    <div class=\"col-lg-3 col-6\">\n      <div class=\"dash-card-one border-30 position-relative mb-15 bg-white\">\n        <div class=\"d-sm-flex align-items-center justify-content-between\">\n          <div\n            class=\"icon rounded-circle d-flex align-items-center justify-content-center order-sm-1\"\n          >\n            <img src=\"/assets/images/icon/icon_60.svg\" alt=\"\" class=\"lazy-img\" />\n          </div>\n          <div class=\"order-sm-0\">\n            <div class=\"value fw-500\">{{ total_visitors }}</div>\n            <span>{{ trans('Total Visitor') }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-3 col-6\">\n      <div class=\"dash-card-one border-30 position-relative mb-15 bg-white\">\n        <div class=\"d-sm-flex align-items-center justify-content-between\">\n          <div\n            class=\"icon rounded-circle d-flex align-items-center justify-content-center order-sm-1\"\n          >\n            <img src=\"/assets/images/icon/icon_18.svg\" alt=\"\" class=\"lazy-img\" />\n          </div>\n          <div class=\"order-sm-0\">\n            <div class=\"value fw-500\">{{ total_shortlisted }}</div>\n            <span>{{ trans('Shortlisted') }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-3 col-6\">\n      <div class=\"dash-card-one border-30 position-relative mb-15 bg-white\">\n        <div class=\"d-sm-flex align-items-center justify-content-between\">\n          <div\n            class=\"icon rounded-circle d-flex align-items-center justify-content-center order-sm-1\"\n          >\n            <img src=\"/assets/images/icon/icon_09.svg\" alt=\"\" class=\"lazy-img\" />\n          </div>\n          <div class=\"order-sm-0\">\n            <div class=\"value fw-500\">{{ total_bookmarks }}</div>\n            <span>{{ trans('Bookmarked') }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-3 col-6\">\n      <div class=\"dash-card-one border-30 position-relative mb-15 bg-white\">\n        <div class=\"d-sm-flex align-items-center justify-content-between\">\n          <div\n            class=\"icon rounded-circle d-flex align-items-center justify-content-center order-sm-1\"\n          >\n            <img src=\"/assets/images/icon/icon_53.svg\" alt=\"\" class=\"lazy-img\" />\n          </div>\n          <div class=\"order-sm-0\">\n            <div class=\"value fw-500\">{{ total_applied_jobs }}</div>\n            <span>{{ trans('Applied Job') }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row d-flex pt-50 lg-pt-10\">\n    <div class=\"col-xl-7 col-lg-6 d-flex flex-column\">\n      <div class=\"user-activity-chart border-20 mt-30 h-100 bg-white\">\n        <h4 class=\"dash-title-two\">{{ trans('Profile Views') }}</h4>\n        <div class=\"mt-20 pe-5 ps-5\">\n          <div class=\"d-flex justify-content-around chart-filter-area mb-4\">\n            <Link\n              v-for=\"btn in chartFilterBtns\"\n              :key=\"btn\"\n              :href=\"route('user.dashboard', { chart_filter_by: btn })\"\n              :class=\"{ active: btn == activeChartFilterBtn }\"\n              class=\"text-capitalize\"\n              preserve-scroll\n            >\n              {{ btn }}\n            </Link>\n          </div>\n          <div id=\"chart\">\n            <VueApexCharts\n              type=\"area\"\n              height=\"350\"\n              :options=\"chart.chartOptions\"\n              :series=\"chart.series\"\n            >\n            </VueApexCharts>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xl-5 col-lg-6 d-flex\">\n      <div class=\"recent-job-tab border-20 mt-30 w-100 bg-white\">\n        <h4 class=\"dash-title-two\">{{ trans('Recent Applied Job') }}</h4>\n        <div class=\"wrapper\">\n          <template v-if=\"total_applied_jobs\">\n            <div\n              v-for=\"item in appliedJobs\"\n              :key=\"item\"\n              class=\"job-item-list d-flex align-items-center\"\n            >\n              <div>\n                <img\n                  v-lazy=\"\n                    item.user?.avatar == null\n                      ? `https://ui-avatars.com/api/?name=${item.user?.name}`\n                      : `${item.user?.avatar}`\n                  \"\n                  alt=\"\"\n                  height=\"50\"\n                  class=\"lazy-img m-auto\"\n                />\n              </div>\n              <div class=\"job-title\">\n                <h6 class=\"mb-5\">\n                  <a :href=\"route('jobs.show', item.slug)\">{{ item.title }}</a>\n                </h6>\n                <div class=\"meta\">\n                  <span>{{ item.type }}</span> . <span>{{ item.address }}</span>\n                </div>\n              </div>\n              <div class=\"job-action\">\n                <button\n                  class=\"action-btn dropdown-toggle\"\n                  type=\"button\"\n                  data-bs-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  <span></span>\n                </button>\n                <ul class=\"dropdown-menu\">\n                  <li>\n                    <a class=\"dropdown-item\" :href=\"route('jobs.show', item.slug)\">{{\n                      trans('View Job')\n                    }}</a>\n                  </li>\n                  <li>\n                    <a class=\"dropdown-item\" href=\"#\" @click=\"deleteAppliedJob(item.id)\">{{\n                      trans('Delete')\n                    }}</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </template>\n\n          <div v-else class=\"fw-bold mt-20 text-center\">\n            {{ trans('No applied job') }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, useForm } from '@inertiajs/vue3'\nimport UserLayout from '@/Layouts/User.vue'\nimport ckeEditor from '@/Plugins/ckeEditor'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport { ref } from 'vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\ndefineOptions({ layout: UserLayout })\nconst { cke, ClassicEditor } = ckeEditor()\nconst { textExcerpt, pickBy, copyToClipboard } = sharedComposable()\nconst props = defineProps(['aiGenerated'])\n\nconst form = useForm({\n  ...props.aiGenerated\n})\nconst documentName = ref('')\nconst submit = () => {\n  form.patch(route('user.ai-generated-history.update', props.aiGenerated.uuid), {\n    onSuccess: () => {\n      form.reset()\n      notify.success('Submitted Successfully')\n    }\n  })\n}\nfunction downloadHTMLFile(textContent, name) {\n  const blob = new Blob([textContent], { type: 'text/html' })\n  const a = document.createElement('a')\n  a.href = URL.createObjectURL(blob)\n  a.download = name ? name.replace(' ', '-') : 'untitled.html'\n\n  a.click()\n  URL.revokeObjectURL(url)\n}\n</script>\n\n<template>\n  <Head :title=\"trans('History')\" />\n  <div class=\"row justify-content-center message-wrapper mb-10\">\n    <form @submit.prevent=\"submit\" class=\"col-lg-8 rounded bg-white p-4\">\n      <p class=\"fs-4\">{{ trans('Template') }} : {{ aiGenerated.ai_template.title }}</p>\n      <div class=\"user-activity-chart h-100 rounded\">\n        <div class=\"d-flex\">\n          <button class=\"me-1\" type=\"button\" @click=\"copyToClipboard(form.content)\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"22\"\n              height=\"22\"\n              viewBox=\"0 0 24 24\"\n              style=\"fill: rgba(0, 0, 0, 0.6)\"\n            >\n              <path\n                d=\"M19.937 8.68c-.011-.032-.02-.063-.033-.094a.997.997 0 0 0-.196-.293l-6-6a.997.997 0 0 0-.293-.196c-.03-.014-.062-.022-.094-.033a.991.991 0 0 0-.259-.051C13.04 2.011 13.021 2 13 2H6c-1.103 0-2 .897-2 2v16c0 1.103.897 2 2 2h12c1.103 0 2-.897 2-2V9c0-.021-.011-.04-.013-.062a.99.99 0 0 0-.05-.258zM16.586 8H14V5.414L16.586 8zM6 20V4h6v5a1 1 0 0 0 1 1h5l.002 10H6z\"\n              ></path>\n            </svg>\n          </button>\n          <button class=\"ms-1\" type=\"button\" @click=\"downloadHTMLFile(form.content, documentName)\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"22\"\n              height=\"22\"\n              viewBox=\"0 0 24 24\"\n              style=\"fill: rgba(0, 0, 0, 0.6)\"\n            >\n              <path d=\"m12 16 4-5h-3V4h-2v7H8z\"></path>\n              <path d=\"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\"></path>\n            </svg>\n          </button>\n        </div>\n        <div class=\"mb-20 mt-20\">\n          <input\n            v-model=\"documentName\"\n            type=\"text\"\n            class=\"w-100 rounded border-0 p-2\"\n            placeholder=\"Untitled Document...\"\n          />\n        </div>\n        <div class=\"ai-ck-section\">\n          <cke :editor=\"ClassicEditor\" v-model=\"form.content\" />\n          <InputFieldError class=\"mb-5\" :message=\"form.errors.content\" />\n        </div>\n        <div>\n          <SpinnerBtn :processing=\"form.processing\" btn-text=\"Update\" />\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n","<script setup>\nimport UserLayout from '@/Layouts/User.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { router, Head } from '@inertiajs/vue3'\nimport moment from 'moment'\nimport { ref, computed } from 'vue'\nimport trans from '@/Composables/transComposable'\ndefineOptions({ layout: UserLayout })\n\nconst props = defineProps(['aiGenerated', 'total', 'totalCharges', 'totalResults', 'request'])\nconst stats = computed(() => {\n  return [\n    {\n      value: props.total,\n      title: trans('Total'),\n      iconSrc: '/assets/dashboard/images/icon/icon_43.svg'\n    },\n    {\n      value: props.totalCharges,\n      title: trans('Total Charges'),\n      iconSrc: '/assets/dashboard/images/icon/money.png'\n    },\n    {\n      value: props.totalResults,\n      title: trans('Total Results'),\n      iconSrc: '/assets/dashboard/images/icon/icon_14.svg'\n    }\n  ]\n})\nconst { pickBy, textExcerpt, formatCurrency } = sharedComposable()\nconst filterForm = ref({\n  order: props.request?.order ?? ''\n})\nconst filter = () => {\n  router.get(route('employer.ai-generated-history'), pickBy(filterForm.value), {\n    preserveState: true\n  })\n}\nconst setOrder = (val) => {\n  filterForm.value.order = val\n  filter()\n}\n</script>\n\n<template>\n  <Head title=\"Ai History\" />\n\n  <div class=\"d-sm-flex align-items-center justify-content-between lg-mb-30 mb-40\">\n    <h2 class=\"main-title m0\">{{ trans('Ai Generated History') }}</h2>\n    <div class=\"d-flex xs-mt-30 ms-auto\">\n      <div class=\"nav nav-tabs tab-filter-btn me-4\">\n        <button\n          @click=\"setOrder('')\"\n          :class=\"{ active: filterForm.order === '' }\"\n          class=\"nav-link\"\n          type=\"button\"\n        >\n          {{ trans('All') }}\n        </button>\n        <button\n          @click=\"setOrder('desc')\"\n          class=\"nav-link\"\n          :class=\"{ active: filterForm.order === 'desc' }\"\n          type=\"button\"\n        >\n          {{ trans('New') }}\n        </button>\n        <button\n          @click=\"setOrder('asc')\"\n          class=\"nav-link\"\n          :class=\"{ active: filterForm.order === 'asc' }\"\n          type=\"button\"\n        >\n          {{ trans('Old') }}\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"row my-3\">\n    <div class=\"col-lg-4 col-6\" v-for=\"stat in stats\" :key=\"stat\">\n      <div class=\"dash-card-one border-30 position-relative mb-15 bg-white\">\n        <div class=\"d-sm-flex align-items-center justify-content-between\">\n          <div\n            class=\"icon rounded-circle d-flex align-items-center justify-content-center order-sm-1\"\n          >\n            <img v-lazy=\"stat.iconSrc\" alt=\"lazy\" class=\"lazy-img\" />\n          </div>\n          <div class=\"order-sm-0\">\n            <div class=\"value fw-500\">{{ stat.value }}</div>\n            <span>{{ stat.title }}</span>\n          </div>\n        </div>\n      </div>\n      <!-- /.dash-card-one -->\n    </div>\n  </div>\n  <div class=\"card-box border-20 bg-white\">\n    <div class=\"tab-content\" id=\"nav-tabContent\">\n      <div class=\"tab-pane fade show active\" id=\"a1\" role=\"tabpanel\">\n        <div v-if=\"aiGenerated.total\" class=\"table-responsive\">\n          <table class=\"job-alert-table table\">\n            <thead>\n              <tr>\n                <th>{{ trans('Template') }}</th>\n\n                <th>{{ trans('Charge') }}</th>\n\n               \n                <th>\n                  {{ trans('Total Words') }}\n                </th>\n               \n\n                <th>\n                  <p class=\"text-end\">{{ trans('Date') }}</p>\n                </th>\n              </tr>\n            </thead>\n            <tbody class=\"border-0\">\n              <tr v-for=\"generated in aiGenerated.data\" :key=\"generated.id\">\n                <td>\n                  <Link :href=\"route('user.ai-generated-history.edit', generated.uuid)\">\n                    {{ textExcerpt(generated.ai_template.title, 30) }}\n                  </Link>\n                </td>\n\n                <td>\n                  {{ formatCurrency(generated.charge) }}\n                </td>\n                \n\n                <td>\n                  {{ generated.length }}\n                </td>\n               \n\n                <td class=\"text-left\">\n                  <p class=\"text-end\">{{ moment(generated.updated_at).format('DD MMM, YYYY') }}</p>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <!-- /.table job-alert-table -->\n        </div>\n        <div class=\"text-center\" v-else>{{ trans('No record found') }}</div>\n      </div>\n    </div>\n  </div>\n  <!-- /.card-box -->\n\n  <div class=\"d-flex justify-content-end mt-30\">\n    <Paginate :links=\"aiGenerated.links\" />\n  </div>\n</template>\n","<script setup>\nimport { Head, useForm } from \"@inertiajs/vue3\";\nimport UserLayout from \"@/Layouts/User.vue\";\nimport Paginate from \"@/Components/Paginate.vue\";\nimport trans from '@/Composables/transComposable';\nimport NiceSelect from \"@/Components/NiceSelect.vue\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\n\nconst { copyToClipboard } = sharedComposable();\n\ndefineOptions({ layout: UserLayout });\ndefineProps([\"jobs\"]);\n\nconst sorts = [\n  {\n    value: \"asc\",\n    label: \"Newest\",\n  },\n  {\n    value: \"desc\",\n    label: \"Oldest\",\n  },\n];\n\nconst sortForm = useForm({\n  order_by: \"\",\n});\n\nconst sortSubmit = () => {\n  sortForm.get(window.location.href, {\n    preserveState: true,\n  });\n};\n</script>\n\n<template>\n  <Head title=\"Job Alert\" />\n\n  <div class=\"mb-40 d-flex align-items-center justify-content-between lg-mb-30\">\n    <h2 class=\"main-title m0\">{{ trans(\"Job Alerts\") }}</h2>\n    <div class=\"short-filter d-flex align-items-center\">\n      <div class=\"text-dark fw-500 me-2\">{{ trans(\"Sort by\") }}:</div>\n      <NiceSelect\n        v-model=\"sortForm.order_by\"\n        :options=\"sorts\"\n        label=\"label\"\n        value-by=\"value\"\n        placeholder=\"Default\"\n        @change=\"sortSubmit\"\n      />\n    </div>\n  </div>\n\n  <div class=\"bg-white card-box border-20\">\n    <div v-if=\"jobs.total\" class=\"table-responsive\">\n      <table class=\"table job-alert-table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">{{ trans(\"Title\") }}</th>\n            <th scope=\"col\">{{ trans(\"Categories\") }}</th>\n           \n            <th scope=\"col\">{{ trans(\"Salary Period\") }}</th>\n            <th scope=\"col\">{{ trans(\"Actions\") }}</th>\n          </tr>\n        </thead>\n        <tbody class=\"border-0\">\n          <tr v-for=\"(job, index) in jobs.data\" :key=\"job.id\">\n            <td>\n              <a :href=\"route('jobs.show', job.slug)\"> {{ job.title }}</a>\n            </td>\n            <td>\n              \n              <div>\n                <span v-for=\"cat in job.categories\" :key=\"cat.id\"\n                  >{{ cat.title }}, &nbsp;</span\n                >\n              </div>\n            </td>\n           \n            <td><div class=\"job-type fw-500\">{{ job.type }}</div>\n              <div>{{ job.salary_type }}{{ trans(\" Salary\") }} . {{ job.location }}</div></td>\n            <td>\n              <div class=\"action-dots float-end\">\n                <button\n                  class=\"action-btn dropdown-toggle\"\n                  type=\"button\"\n                  data-bs-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  <span></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-end\">\n                  <li>\n                    <a class=\"dropdown-item\" :href=\"route('jobs.show', job.slug)\"\n                      ><img\n                        src=\"/assets/dashboard/images/icon/icon_18.svg\"\n                        alt=\"\"\n                        class=\"lazy-img\"\n                      />\n                      {{ trans(\"View in website\") }}</a\n                    >\n                  </li>\n                  <li>\n                    <a\n                      class=\"dropdown-item\"\n                      @click=\"copyToClipboard(route('jobs.show', job.slug))\"\n                      href=\"#\"\n                    >\n                      <img\n                        src=\"/assets/dashboard/images/icon/icon_19.svg\"\n                        alt=\"\"\n                        class=\"lazy-img\"\n                      />\n                      {{ trans(\"Copy Link\") }}\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <!-- /.table job-alert-table -->\n    </div>\n    <div v-else class=\"text-center fw-bold\">{{ trans(\"No job found\") }}</div>\n  </div>\n  <!-- /.card-box -->\n\n  <div class=\"d-flex justify-content-end mt-30\">\n    <Paginate :links=\"jobs.links\" />\n  </div>\n\n  <!-- Modal Body -->\n  <!-- if you want to close by clicking outside the modal, delete the last endpoint:data-bs-backdrop and data-bs-keyboard -->\n  <div\n    class=\"modal fade\"\n    id=\"shareModal\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n    aria-labelledby=\"shareModalTitle\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"shareModalTitle\">{{ trans(\"Share\") }}</h5>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"alert alert-info\" role=\"alert\">\n            <strong>{{ trans(\"Info\") }}:</strong>\n            {{ trans(\"Copy and share this link anywhere\") }}\n          </div>\n\n          <input type=\"text\" :value=\"shareableLink\" class=\"px-2 form-control\" readonly />\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n            {{ trans(\"Close\") }}\n          </button>\n         \n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { useMessageStore } from '@/Store/messageStore'\nimport moment from 'moment'\nimport { ref, onMounted, onBeforeUnmount } from 'vue'\nconst props = defineProps(['activeUuid'])\n\nconst intersectionTarget = ref(null)\nlet observer = null\n\nconst { textExcerpt, authUser } = sharedComposable()\nconst message = useMessageStore()\nonMounted(() => {\n  if (!message.isFetched) {\n    message.fetchConversations()\n  }\n  observer = new IntersectionObserver(onIntersection, {\n    root: null,\n    rootMargin: '0px',\n    threshold: 0.5\n  })\n\n  observer.observe(intersectionTarget.value)\n})\nconst onIntersection = (entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting && message.conversationsLoadMore && message.isFetched) {\n      message.fetchMoreConversations()\n    }\n  })\n}\nonBeforeUnmount(() => {\n  if (observer) observer.disconnect()\n})\nconst isMessageRead = (conversation) => {\n  if (conversation.last_reply[0]?.user_id === authUser.id) {\n    return 'unread'\n  }\n  if (conversation.last_reply[0]?.user_id === authUser.id && !conversation.last_reply[0]?.read_at) {\n    return 'read'\n  }\n}\n</script>\n<template>\n  <div class=\"email-read-panel max-h-26-r\">\n    <template v-if=\"message.isFetched\">\n      <template v-for=\"conversation in message.conversations\" :key=\"conversation.uuid\">\n        <Link\n          :href=\"route('user.message.show', conversation.uuid)\"\n          class=\"email-list-item ps-xxl-4 pe-xxl-4 w-100 pe-3 ps-3\"\n          :class=\"[\n            isMessageRead(conversation),\n            { selected: message.activeUuid === conversation.uuid }\n          ]\"\n        >\n          <div class=\"email-short-preview position-relative\">\n            <div class=\"d-flex align-items-center justify-content-between\">\n              <div class=\"sender-name\">\n                {{ conversation.receiver[0]?.name }}\n              </div>\n              <div class=\"date\">\n                {{ moment(conversation.last_reply[0]?.created_at).format('MMM DD') }}\n              </div>\n            </div>\n            <div class=\"mail-sub\">\n              {{ conversation.receiver[0]?.service?.title }}\n            </div>\n            <div class=\"mail-text\" v-if=\"conversation.deleted_by !== authUser.id\">\n              {{ textExcerpt(conversation.last_reply[0]?.body, 100) }}\n            </div>\n            <div class=\"mail-text text-muted\" v-else>\n              {{ trans('Conversation has been Deleted') }}\n            </div>\n            <div\n              v-if=\"\n                conversation.last_reply[0]?.attachments && conversation.deleted_by !== authUser.id\n              \"\n              class=\"attached-file-preview d-flex align-items-center mt-15\"\n            >\n              <div class=\"d-flex align-items-center flex-wrap\">\n                <template\n                  v-for=\"(att, i) in JSON.parse(conversation.last_reply[0].attachments)\"\n                  :key=\"i\"\n                >\n                  <div class=\"file d-flex align-items-center mb-2 me-2\">\n                    <img\n                      src=\"/assets/dashboard/images/icon/icon_28.svg\"\n                      alt=\"icon\"\n                      class=\"lazy-img me-2\"\n                    />\n                    <span>{{ textExcerpt(att, 25) }}</span>\n                  </div>\n                </template>\n              </div>\n            </div>\n          </div>\n        </Link>\n      </template>\n    </template>\n    <div\n      v-if=\"message.conversations?.length < 1 && message.isFetched\"\n      class=\"ps-xxl-4 pe-xxl-4 w-100 mt-5 pe-3 ps-3\"\n    >\n      <p class=\"text-center\">\n        {{ trans('Opps no conversation records found') }}\n      </p>\n    </div>\n    <div ref=\"intersectionTarget\" />\n  </div>\n</template>\n","<script setup>\nimport MessageSidebar from '@/Layouts/User/MessageSidebar.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { useMessageStore } from '@/Store/messageStore'\nimport { ref, onUnmounted } from 'vue'\nconst message = useMessageStore()\nconst filterForm = ref({\n  name: null,\n  read: null\n})\n\nconst { pickBy, currentRoute } = sharedComposable()\nconst filter = () => {\n  message.fetchConversations(route('api-message.index', pickBy(filterForm.value)))\n}\nconst setRead = (val) => {\n  filterForm.value.read = val\n  filter()\n}\nonUnmounted(() => message.$reset())\n</script>\n\n<template>\n  <div class=\"row gx-0 align-items-center\">\n    <div class=\"col-lg-4\">\n      <div class=\"d-flex align-items-center justify-content-between\">\n        <h2 class=\"main-title m0\">{{ trans('Messages') }}</h2>\n      </div>\n    </div>\n    <div\n      class=\"col-lg-8\"\n      v-if=\"message.conversations?.length > 1 && currentRoute('User/Message/Show')\"\n    >\n      <div\n        class=\"message-pagination ps-lg-4 ps-xxl-5 d-flex align-items-center justify-content-between md-mt-40\"\n      >\n        <button type=\"button\" @click=\"message.prev\" class=\"prev-msg\">\n          <img src=\"/assets/dashboard/images/icon/icon_26.svg\" alt=\"\" class=\"lazy-img\" />\n        </button>\n        <div class=\"d-flex align-items-center\">\n          <i class=\"bi bi-chevron-left\"></i>\n          <span v-if=\"message.data\">\n            {{ message.data.from }}-{{ message.activeIndex }} {{ trans('of') }}\n            {{ message.data.total }}\n          </span>\n          <i class=\"bi bi-chevron-right\"></i>\n        </div>\n        <button type=\"button\" @click=\"message.next\" class=\"next-msg\">\n          <img src=\"/assets/dashboard/images/icon/icon_27.svg\" alt=\"\" class=\"lazy-img\" />\n        </button>\n      </div>\n      <!-- /.message-pagination -->\n    </div>\n  </div>\n\n  <div class=\"card-box border-20 p0 mt-30 bg-white\">\n    <div class=\"message-wrapper\">\n      <div class=\"row gx-0\">\n        <div class=\"col-lg-4 max-h-10-r\">\n          <div class=\"message-sidebar pt-20\">\n            <div class=\"ps-xxl-4 pe-xxl-4 pe-3 ps-3\">\n              <div class=\"d-flex align-items-center justify-content-between\">\n                <div class=\"page-title fw-500\">{{ trans('Inbox') }}</div>\n              </div>\n              <form @submit.prevent=\"filter\" class=\"search-form mb-20 mt-20\">\n                <input type=\"text\" placeholder=\"Search contacts\" v-model=\"filterForm.name\" />\n                <button type=\"submit\">\n                  <img\n                    v-lazy=\"'/assets/dashboard/images/icon/icon_10.svg'\"\n                    alt=\"img\"\n                    class=\"lazy-img m-auto\"\n                  />\n                </button>\n              </form>\n\n              <div\n                class=\"message_filter d-flex align-items-center justify-content-evenly mb-20\"\n                id=\"module_btns\"\n              >\n                <button\n                  class=\"filter_btn\"\n                  @click=\"setRead(null)\"\n                  :class=\"{ active: filterForm.read === null }\"\n                >\n                  {{ trans('All') }}\n                </button>\n                <button\n                  class=\"filter_btn\"\n                  @click=\"setRead('read')\"\n                  :class=\"{ active: filterForm.read === 'read' }\"\n                >\n                  <span class=\"bg-success\"></span> {{ trans('Read') }}\n                </button>\n                <button\n                  class=\"filter_btn\"\n                  :class=\"{ active: filterForm.read === 'unread' }\"\n                  @click=\"setRead('unread')\"\n                >\n                  <span class=\"bg-danger\"></span> {{ trans('Unread') }}\n                </button>\n              </div>\n            </div>\n            <MessageSidebar />\n          </div>\n        </div>\n        <slot />\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport UserMessage from '@/Layouts/UserMessage.vue'\nimport UserLayout from '@/Layouts/User.vue'\nimport MessageSidebar from '@/Layouts/User/MessageSidebar.vue'\nimport { Head } from '@inertiajs/vue3'\ndefineOptions({ layout: [UserLayout, UserMessage] })\n</script>\n\n<template>\n  <Head :title=\"trans('Messages')\" />\n\n  <div class=\"col-lg-8 d-flex align-items-center justify-content-center\">\n    <p>{{ trans('!Opps no conversation records found') }}</p>\n  </div>\n</template>\n","<script setup>\nimport EmojiPicker from 'vue3-emoji-picker'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport UserMessage from '@/Layouts/UserMessage.vue'\nimport { useMessageStore } from '@/Store/messageStore'\nimport UserLayout from '@/Layouts/User.vue'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport { Head, useForm } from '@inertiajs/vue3'\nimport { ref, onMounted, computed, onBeforeUnmount } from 'vue'\nimport 'vue3-emoji-picker/css'\nimport { modal } from '@/Composables/modalComposable'\n\ndefineOptions({ layout: [UserLayout, UserMessage] })\nconst intersectionTargetView = ref(null)\nlet observer = null\nconst message = useMessageStore()\nconst props = defineProps(['replies', 'conversation'])\nconst { authUser, pickBy, textExcerpt, currentRoute, uiAvatar } = sharedComposable()\nconst messageForm = useForm({\n  body: '',\n  attachments: [],\n  uuid: props.conversation.uuid\n})\nconst messageTextarea = ref(null)\nconst webSocketConnection = ref(false)\nconst messageContainer = ref(null)\nconst allReplies = ref(props.replies.data)\nconst loadMore = ref(false)\nconst replyPage = ref(1)\nconst emojiState = ref(false)\nconst uniqueReplies = computed(() => {\n  const repliesCopy = [...allReplies.value]\n\n  const uniqueReplies = repliesCopy.reduce((acc, current) => {\n    if (!acc.some((r) => r.id === current.id)) {\n      acc.push(current)\n    }\n    return acc\n  }, [])\n\n  // Sort by 'id'\n  uniqueReplies.sort((a, b) => a.id - b.id)\n\n  return uniqueReplies\n})\nconst messageContainerScroll = () => {\n  messageContainer.value.scrollTop = messageContainer.value.scrollHeight\n}\nonMounted(() => {\n  if (props.replies.last_page !== 1) {\n    loadMore.value = true\n  }\n  message.$patch({\n    activeUuid: props.conversation.uuid,\n    activeIndex: message.conversations.findIndex((con) => con.uuid == props.conversation.uuid) + 1\n  })\n  Echo.connector.pusher.connection.bind('connected', () => {\n    webSocketConnection.value = true\n  })\n\n  Echo.connector.pusher.connection.bind('disconnected', () => {\n    webSocketConnection.value = false\n  })\n  messageContainerScroll()\n  setTimeout(() => {\n    if (props.replies?.total > 10) {\n      observer = new IntersectionObserver(onIntersection, {\n        root: null,\n        rootMargin: '10px',\n        threshold: 0.5\n      })\n\n      observer.observe(intersectionTargetView.value)\n    }\n  }, 1000)\n})\nonBeforeUnmount(() => {\n  message.$patch({ activeUuid: null })\n  if (observer) observer.disconnect()\n})\nconst fetchMoreConversations = async () => {\n  replyPage.value++\n  loadMore.value = true\n  const res = await axios.get(\n    route(\n      'api-message.show',\n      pickBy({\n        message: props.conversation.uuid,\n        page: replyPage.value\n      })\n    )\n  )\n  allReplies.value.unshift(...res.data.data)\n  if (res.data.last_page === replyPage.value) {\n    loadMore.value = false\n  }\n}\nconst onIntersection = (entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting && message.conversationsLoadMore && loadMore.value) {\n      fetchMoreConversations()\n    }\n  })\n}\nconst submit = () => {\n  messageForm.post(route('user.message.store'), {\n    onSuccess: () => {\n      messageForm.body = ''\n      messageForm.attachments = []\n    },\n    onFinish: () => {\n      if (!webSocketConnection.value) {\n        axios.get(route('api-message.show', props.conversation.uuid)).then((res) => {\n          allReplies.value = res.data.data\n          if (res.data.last_page === replyPage.value) {\n            loadMore.value = false\n          }\n          setTimeout(() => messageContainerScroll(), 500)\n        })\n        message.fetchConversations()\n      }\n    }\n  })\n}\nconst block = () => {\n  modal.init(route('user.message.update', props.conversation.uuid), {\n    method: 'patch',\n    data: {\n      blocked: true\n    }\n  })\n}\nconst deleteConversation = () => {\n  modal.init(route('user.message.update', props.conversation.uuid), {\n    method: 'patch',\n    data: {\n      delete: true\n    }\n  })\n}\nif (currentRoute('User/Message/Show')) {\n  Echo.channel('reply.' + props.conversation.uuid).listen('Reply', (e) => {\n    allReplies.value.push(e)\n    message.fetchConversations()\n    setTimeout(() => messageContainerScroll(), 200)\n  })\n}\nconst previewFlies = (event) => {\n  const files = []\n  for (const file of event.target.files) {\n    files.push(file)\n  }\n  const maxGallerySize = 5\n  const oldFilesCount = Math.max(messageForm.attachments.length + files.length - maxGallerySize, 0)\n\n  const newFiles = files.slice(0, maxGallerySize - oldFilesCount)\n  const updatedGallery = messageForm.attachments.slice(oldFilesCount).concat(newFiles)\n\n  messageForm.attachments = updatedGallery\n}\n\nconst onSelectEmoji = (emoji) => {\n  const textarea = messageTextarea.value\n  const textBeforeCursor = messageForm.body.slice(0, textarea.selectionStart)\n  const textAfterCursor = messageForm.body.slice(textarea.selectionStart)\n  messageForm.body = textBeforeCursor + emoji.i + textAfterCursor\n}\n</script>\n\n<template>\n  <Head :title=\"trans('Messages')\" />\n\n  <div\n    v-if=\"conversation.deleted_by && conversation.deleted_by === authUser.id\"\n    class=\"col-lg-8 d-flex align-items-center justify-content-center\"\n  >\n    <p>{{ trans('You Have deleted this conversation') }}</p>\n  </div>\n  <div class=\"col-lg-8\" v-else>\n    <div class=\"open-email-container pb-40\">\n      <div class=\"email-header divider d-flex justify-content-between ps-xxl-5 pe-xxl-5\">\n        <div class=\"sender-info d-flex align-items-center\">\n          <img v-lazy=\"conversation?.receiver[0]?.avatar\" alt=\"avatar\" class=\"lazy-img logo\" />\n          <div class=\"ps-3\">\n            <div class=\"sender-name\">\n              {{ conversation?.receiver[0]?.name }}\n            </div>\n            <div class=\"sender-email\">\n              {{ conversation?.receiver[0]?.email }}\n            </div>\n          </div>\n        </div>\n        <div class=\"email-info\">\n          <div class=\"d-flex align-items-center justify-content-end\">\n            <div class=\"action-dots float-end\">\n              <button\n                class=\"action-btn dropdown-toggle\"\n                type=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n              >\n                <span></span>\n              </button>\n              <ul class=\"dropdown-menu dropdown-menu-end\">\n                <li>\n                  <Link\n                    class=\"dropdown-item\"\n                    :href=\"route('companies.show', conversation?.receiver[0]?.username)\"\n                  >\n                    {{ trans('Profile') }}\n                  </Link>\n                </li>\n                <li v-if=\"conversation.blocked_by && conversation.blocked_by === authUser.id\">\n                  <button class=\"dropdown-item\" type=\"button\" @click=\"block\">\n                    {{ trans('Unblock') }}\n                  </button>\n                </li>\n                <li v-if=\"!conversation.blocked_by\">\n                  <button class=\"dropdown-item\" type=\"button\" @click=\"block\">\n                    {{ trans('Block') }}\n                  </button>\n                </li>\n                <li>\n                  <button class=\"dropdown-item\" type=\"button\" @click=\"deleteConversation\">\n                    {{ trans('Delete') }}\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- /.email-header -->\n      <div class=\"max-h-22-r\" ref=\"messageContainer\">\n        <div ref=\"intersectionTargetView\" />\n        <template v-for=\"reply in uniqueReplies\" :key=\"reply.id\">\n          <div class=\"email-body divider\">\n            <div class=\"ps-xxl-5 pe-xxl-5 d-flex align-items-center pe-4 ps-4\">\n              <img\n                v-if=\"authUser.id !== reply.user_id\"\n                width=\"30\"\n                height=\"30\"\n                class=\"rounded-circle\"\n                :src=\"uiAvatar(reply.user.name, reply.user.avatar)\"\n                alt=\"avatar\"\n              />\n              <p\n                class=\"w-100 mt-1 ps-2\"\n                :class=\"authUser.id === reply.user_id ? 'text-success text-end' : 'text-start'\"\n              >\n                {{ reply.body }}\n              </p>\n            </div>\n          </div>\n          <template v-if=\"reply.attachments\">\n            <div class=\"email-footer ps-xxl-5 pe-xxl-5 pe-4 ps-4\">\n              <div class=\"attachments mb-30\">\n                <h6 class=\"mb-5\">\n                  {{ JSON.parse(reply.attachments).length }} {{ trans('Attachment') }}\n                </h6>\n\n                <div\n                  class=\"d-flex flex-wrap\"\n                  :class=\"{\n                    ' justify-content-end': authUser.id === reply.user_id\n                  }\"\n                >\n                  <a\n                    v-for=\"(att, i) in JSON.parse(reply.attachments)\"\n                    :key=\"i\"\n                    :href=\"att\"\n                    class=\"file tran3s d-flex align-items-center mt-10\"\n                    download\n                  >\n                    <div\n                      class=\"icon rounded-circle d-flex align-items-center justify-content-center\"\n                    >\n                      <img\n                        src=\"/assets/dashboard/images/icon/icon_31.svg\"\n                        alt=\"\"\n                        class=\"lazy-img\"\n                      />\n                    </div>\n                    <div class=\"ps-2\">\n                      <div class=\"file-name\">{{ textExcerpt(att, 25) }}</div>\n                    </div>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </template>\n        </template>\n      </div>\n\n      <!-- /.email-body -->\n\n      <div class=\"email-footer\">\n        <div class=\"ps-xxl-5 pe-xxl-5 pe-4 ps-4\">\n          <!-- new message -->\n          <div v-if=\"conversation.blocked_by\">{{ trans(\"You can't not send message\") }}</div>\n          <div v-else class=\"compose-new-email-container\">\n            <div class=\"compose-body\">\n              <textarea\n                ref=\"messageTextarea\"\n                v-model=\"messageForm.body\"\n                placeholder=\"Write message...\"\n              >\n              </textarea>\n              <InputFieldError :message=\"messageForm.errors.body\" />\n            </div>\n            <div class=\"row mt-10 ps-2\" v-if=\"messageForm?.attachments.length > 0\">\n              <div class=\"attachments col-3 mb-2\" v-for=\"att in messageForm.attachments\" :key=\"att\">\n                <a class=\"file tran3s d-flex align-items-center\" download>\n                  <div class=\"icon rounded-circle d-flex align-items-center justify-content-center\">\n                    <img\n                      src=\"/assets/dashboard/images/icon/icon_31.svg\"\n                      alt=\"icon\"\n                      class=\"lazy-img\"\n                    />\n                  </div>\n                  <div class=\"ps-1\">\n                    <div class=\"file-name\">{{ textExcerpt(att.name, 15) }}</div>\n                  </div>\n                </a>\n              </div>\n            </div>\n            <div class=\"compose-email-footer d-flex justify-content-between position-relative\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"insert-file position-relative me-3\">\n                  <img src=\"/assets/dashboard/images/icon/icon_32.svg\" alt=\"\" class=\"lazy-img\" />\n                  <input\n                    multiple\n                    @change=\"previewFlies\"\n                    type=\"file\"\n                    name=\"uploadImg\"\n                    accept=\".csv,.docx,.pdf,.xlsx,.xls\"\n                    title=\"Insert File\"\n                  />\n                </div>\n                <div class=\"insert-file position-relative me-3\">\n                  <img src=\"/assets/dashboard/images/icon/icon_34.svg\" alt=\"\" class=\"lazy-img\" />\n                  <input\n                    multiple\n                    @change=\"previewFlies\"\n                    type=\"file\"\n                    name=\"uploadImg\"\n                    accept=\"image/*\"\n                    title=\"Insert Image\"\n                  />\n                </div>\n                <!-- emoji-backdrop -->\n                <div @click=\"emojiState = false\" class=\"emoji-backdrop\" v-show=\"emojiState\" />\n                <div class=\"m-emoji-container\">\n                  <EmojiPicker v-show=\"emojiState\" :native=\"true\" @select=\"onSelectEmoji\" />\n                </div>\n                <button class=\"insert-emoji me-3\" type=\"button\" @click=\"emojiState = !emojiState\">\n                  <img src=\"/assets/dashboard/images/icon/icon_33.svg\" alt=\"\" class=\"lazy-img\" />\n                </button>\n              </div>\n\n              <div class=\"d-flex align-items-center\">\n                <button @click.prevent=\"submit\" class=\"reply-btn tran3s\">\n                  {{ trans('Reply') }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport InputFieldError from \"@/Components/InputFieldError.vue\";\nimport UserLayout from \"@/Layouts/User.vue\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport { router, Head, useForm } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nimport { ref } from \"vue\";\n\ndefineOptions({ layout: UserLayout });\n\nconst props = defineProps([\"user\", \"countries\", \"states\"]);\n\nconst states = ref(props.states);\n\nconst form = useForm({\n  name: props.user.name,\n  meta: {\n    ...props.user.meta,\n    social: props.user?.meta?.social ?? {\n      facebook: \"\",\n      linkedin: \"\",\n      twitter: \"\",\n      instagram: \"\",\n    },\n  },\n  country_id: props.user.countries[0]?.id,\n  state_id: props.user.states[0]?.id,\n});\n\nconst submit = () => {\n  form.patch(route(\"user.profile.update\"), {\n    onSuccess() {\n      notify.success(trans(\"Profile has been updated successfully\"));\n    },\n  });\n};\n\nconst updateAvatar = (e) => {\n  form.avatar = e.target.files[0];\n  router.post(route(\"user.profile.update\"), {\n    _method: \"PATCH\",\n    avatar: form.avatar,\n  });\n};\n</script>\n\n<template>\n  <Head title=\"Profile\" />\n\n  <h2 class=\"main-title\">{{ trans(\"Profile\") }}</h2>\n\n  <div class=\"card-box border-20 bg-white\">\n    <div class=\"user-avatar-setting d-flex align-items-center mb-30\">\n      <img\n        v-lazy=\"\n          user.avatar == null\n            ? `https://ui-avatars.com/api/?name=${user.name}`\n            : `${user.avatar}`\n        \"\n        alt=\"\"\n        class=\"lazy-img user-img\"\n      />\n      <div class=\"upload-btn position-relative tran3s me-3 ms-4\">\n        {{ trans(\"Upload new photo\") }}\n        <input\n          type=\"file\"\n          @input=\"updateAvatar\"\n          id=\"uploadImg\"\n          name=\"uploadImg\"\n          placeholder=\"\"\n        />\n      </div>\n    </div>\n    <!-- /.user-avatar-setting -->\n    <div class=\"dash-input-wrapper mb-30\">\n      <label for=\"\">{{ trans(\"Full Name\") }} *</label>\n      <input type=\"text\" placeholder=\"Zubayer Hasan\" v-model=\"form.name\" />\n      <InputFieldError :message=\"form.errors?.name\" />\n    </div>\n   \n    <!-- /.dash-input-wrapper -->\n  </div>\n\n  <!-- /.card-box -->\n  <div class=\"card-box border-20 mt-40 bg-white\">\n    <h4 class=\"dash-title-three\">{{ trans(\"Social Media\") }}</h4>\n    <div class=\"row mb-2 mt-4\">\n      <div class=\"col-6 dash-input-wrapper\">\n        <label for=\"\">Linkedin</label>\n        <input\n          placeholder=\"linkedin\"\n          type=\"url\"\n          v-model=\"form.meta.social.linkedin\"\n          class=\"form-control\"\n        />\n        <InputFieldError :message=\"form.errors.meta?.social?.linkedin\" />\n      </div>\n      <div class=\"col-6 dash-input-wrapper\">\n        <label for=\"\">Twitter</label>\n        <input\n          placeholder=\"Twitter\"\n          type=\"url\"\n          v-model=\"form.meta.social.twitter\"\n          class=\"form-control\"\n        />\n        <InputFieldError :message=\"form.errors.meta?.social?.twitter\" />\n      </div>\n    </div>\n    <div class=\"row dash-input-wrapper mb-2\">\n      <div class=\"col-6\">\n        <label for=\"\">Facebook</label>\n        <input\n          placeholder=\"facebook\"\n          type=\"url\"\n          v-model=\"form.meta.social.facebook\"\n          class=\"form-control\"\n        />\n        <InputFieldError :message=\"form.errors.meta?.social?.facebook\" />\n      </div>\n      <div class=\"col-6 dash-input-wrapper\">\n        <label for=\"\">Instagram</label>\n        <input\n          placeholder=\"facebook\"\n          type=\"url\"\n          v-model=\"form.meta.social.instagram\"\n          class=\"form-control\"\n        />\n        <InputFieldError :message=\"form.errors.meta?.social?.instagram\" />\n      </div>\n    </div>\n  </div>\n\n  <!-- /.card-box -->\n\n\n  <div class=\"button-group d-inline-flex align-items-center mt-30\">\n    <button @click=\"submit\" type=\"button\" class=\"dash-btn-two tran3s me-3\">\n      {{ trans(\"Update\") }}\n    </button>\n  </div>\n</template>\n","<script setup>\nimport axios from 'axios'\nimport { Head, useForm } from '@inertiajs/vue3'\nimport notify from '@/Plugins/Admin/notify'\nimport { ref, computed, onMounted } from 'vue'\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport LabelWithAjaxLoader from '@/Components/LabelWithAjaxLoader.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport { modal } from '@/Composables/modalComposable'\nimport trans from '@/Composables/transComposable'\n\ndefineOptions({ layout: DefaultLayout })\n\nconst props = defineProps([\n  'user',\n  'meta',\n  'countries',\n  'services',\n  'education_qualifications',\n  'expertLevels',\n  'currencies'\n])\n\nconst completedSteps = props.meta?.step_completed ?? 0\nconst nextStepToComplete = completedSteps ? new Number(completedSteps) + 1 : 1\nconst step = ref(nextStepToComplete ?? 1)\nconst completedAllSteps = ref(step.value == 6)\nconst stepProgress = computed(() => {\n  return ((step.value * 100) / 5).toFixed(2)\n})\n\nconst states = ref([])\nconst categories = ref([])\nconst skills = ref([])\n\nconst form = useForm({\n  // step 1\n  overview: '',\n  gender: '',\n  date_of_birth: '',\n  avatar: '',\n  phone: '',\n\n  // step 2\n  country_id: '',\n  state_id: '',\n  address: '',\n\n  // step 3\n  service_id: '',\n  category_id: '',\n  expert_level: '',\n  skills: [],\n  work_experiences: [\n    {\n      from: '',\n      to: '',\n      is_current: false,\n      org_name: '',\n      designation: ''\n    }\n  ],\n\n  // step 4\n  education_qualifications: [\n    {\n      institute_name: '',\n      result: '',\n      start_at: '',\n      pass_year: '',\n      degree: '',\n      out_of: 5,\n      is_current: false\n    }\n  ],\n\n  // step 5\n  resume: '',\n  expected_salary: 0,\n  currency: 'USD'\n})\n\nonMounted(() => {\n  form.overview = props.meta?.overview ?? ''\n  form.gender = props.meta?.gender ?? ''\n  form.phone = props.user?.phone ?? ''\n  form.date_of_birth = props.meta?.date_of_birth ?? ''\n\n  form.country_id = props.meta?.country_id ?? ''\n  if (form.country_id) {\n    fetchStates()\n  }\n  form.address = props.user?.address ?? ''\n  form.service_id = props.meta?.service_id ?? ''\n  if (form.service_id) {\n    fetchCategories()\n  }\n\n  form.category_id = props.meta?.category_id ?? ''\n  if (form.category_id) {\n    fetchTags()\n  }\n\n  form.expert_level = props.meta?.expert_level ?? ''\n  form.skills = props.meta?.skills ?? []\n  form.work_experiences = props.meta?.work_experiences ?? []\n  form.expected_salary = props.meta?.expected_salary ?? ''\n\n  if (props.meta?.education_qualifications?.length) {\n    form.education_qualifications = props.meta.education_qualifications\n  }\n  form.custom_cv = ''\n})\n\nconst addWorkExperienceItem = () => {\n  form.work_experiences.push({\n    from: '',\n    to: '',\n    is_current: false,\n    org_name: '',\n    designation: ''\n  })\n}\n\nconst setWorkingExpDate = (item) => {\n  if (item.is_current) {\n    item.to = ''\n  }\n}\n\nconst setCurrentlyStudingDate = (item) => {\n  if (item.is_current) {\n    item.result = ''\n    // item.out_of = ''\n    item.pass_year = ''\n  }\n}\n\nconst removeWorkExperienceItem = (index) => {\n  modal.initCallback(() => form.work_experiences.splice(index, 1))\n}\n\nconst addEducationItem = () => {\n  form.education_qualifications.push({\n    institute_name: '',\n    result: '',\n    pass_year: '',\n    degree: '',\n    out_of: 5,\n    is_current: false\n  })\n}\n\nconst removeEducationItem = (index) => {\n  modal.initCallback(() => form.education_qualifications.splice(index, 1))\n}\n\nconst gettingCategories = ref(false)\nconst fetchCategories = () => {\n  form.category_id = ''\n  categories.value = []\n\n  form.skills = []\n  skills.value = []\n  if (form.service_id) {\n    gettingCategories.value = true\n    axios\n      .get(`/api/categories?service_id=${form.service_id}`)\n      .then((res) => {\n        gettingCategories.value = false\n        categories.value = res.data\n      })\n      .catch((e) => {\n        gettingCategories.value = false\n      })\n  }\n}\n\nconst gettingSkills = ref(false)\nconst fetchTags = () => {\n  if (form.category_id) {\n    gettingSkills.value = true\n    axios\n      .get(`/api/categories?category_id=${form.category_id}`)\n      .then((res) => {\n        gettingSkills.value = false\n        skills.value = res.data\n      })\n      .catch((e) => {\n        gettingSkills.value = false\n      })\n  }\n}\n\nconst gettingStates = ref(false)\nconst fetchStates = () => {\n  states.value = []\n  form.state_id = ''\n  if (form.country_id) {\n    gettingStates.value = true\n    axios\n      .get(`/api/locations?location_id=${form.country_id}`)\n      .then((res) => {\n        gettingStates.value = false\n        states.value = res.data\n        if (props.meta?.state_id) {\n          form.state_id = props.meta?.state_id\n        }\n      })\n      .catch((e) => {\n        gettingStates.value = false\n      })\n  }\n}\n\nconst nextStep = () => {\n  form.post(route('user.profile-setup.store', { step: step.value, is_editing: false }), {\n    preserveScroll: true,\n    // preserveState: true,\n    onSuccess: () => {\n      completedAllSteps.value = true\n      notify.success('Information has been updated successfully')\n      if (step.value < 5) step.value += 1\n    }\n  })\n}\n\nconst prevStep = () => {\n  if (step.value > 1) {\n    step.value -= 1\n  }\n}\n</script>\n\n<template>\n  <Head title=\"Complete candidate profile\" />\n\n  <div class=\"inner-banner-one position-relative p-70px\"></div>\n\n  <div class=\"dashboard-body container mx-auto mt-4 rounded p-5\">\n    <h2 class=\"main-title ml-5\">{{ trans('Setup Your CV') }}</h2>\n\n    <div class=\"mb-30\">\n      <div class=\"progress h-25px\">\n        <div\n          class=\"progress-bar\"\n          role=\"progressbar\"\n          :aria-label=\"'Step ' + step + ' of 5'\"\n          :style=\"{ width: stepProgress + '%', background: 'rgb(36 64 52)' }\"\n          :aria-valuenow=\"stepProgress\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        >\n          {{ trans('Step') }} {{ step }} {{ trans(' of 5') }}\n        </div>\n      </div>\n    </div>\n\n    <form @submit.prevent=\"nextStep\">\n      <div v-if=\"step == 1\">\n        <div class=\"dash-input-wrapper mb-4\">\n          <label for=\"\">{{ trans('Overview') }} *</label>\n          <textarea\n            v-model=\"form.overview\"\n            placeholder=\"enter something about yourself (max 500 character)\"\n            rows=\"5\"\n          ></textarea>\n          <InputFieldError :message=\"form.errors.overview\" />\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6 dash-input-wrapper mb-2\">\n            <label for=\"\">{{ trans('Gender') }} *</label>\n            <NiceSelect\n              v-model=\"form.gender\"\n              :options=\"['male', 'female', 'other']\"\n              placeholder=\"SELECT\"\n            />\n            <InputFieldError :message=\"form.errors.gender\" />\n          </div>\n          <div class=\"col-md-6 dash-input-wrapper mb-2\">\n            <label for=\"\">{{ trans('Date of birth') }} *</label>\n            <input type=\"date\" v-model=\"form.date_of_birth\" />\n            <InputFieldError :message=\"form.errors.date_of_birth\" />\n          </div>\n          <div class=\"col-md-6 mb-2\">\n            <label for=\"\">{{ trans('Phone') }} * </label>\n            <input type=\"tel\" v-model=\"form.phone\" class=\"form-control p-3\" placeholder=\"\" />\n            <InputFieldError :message=\"form.errors.phone\" />\n          </div>\n          <div class=\"col-md-6 mb-2\">\n            <label for=\"\">{{ trans('Avatar') }} </label>\n            <input\n              type=\"file\"\n              @change=\"(e) => (form.avatar = e.target.files[0])\"\n              class=\"form-control p-3\"\n            />\n            <InputFieldError :message=\"form.errors.avatar\" />\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"step == 2\">\n        <div class=\"row\">\n          <div class=\"col-md-6 dash-input-wrapper mb-2\">\n            <label for=\"\">{{ trans('Country') }} *</label>\n            <NiceSelect\n              v-model=\"form.country_id\"\n              :options=\"props.countries\"\n              label=\"name\"\n              value-by=\"id\"\n              :placeholder=\"trans('Select Country')\"\n              @change=\"fetchStates()\"\n            />\n            <InputFieldError :message=\"form.errors.country_id\" />\n          </div>\n          <div class=\"col-md-6 dash-input-wrapper mb-2\">\n            <LabelWithAjaxLoader text=\"State *\" :loading=\"gettingStates\" />\n            <NiceSelect\n              v-model=\"form.state_id\"\n              :options=\"states\"\n              label=\"name\"\n              value-by=\"id\"\n              :placeholder=\"trans('Select State')\"\n            />\n            <InputFieldError :message=\"form.errors.state_id\" />\n          </div>\n        </div>\n\n        <div class=\"dash-input-wrapper mb-2\">\n          <label for=\"\">{{ trans('Address') }} *</label>\n          <input type=\"text\" v-model=\"form.address\" placeholder=\"\" />\n          <InputFieldError :message=\"form.errors.address\" />\n        </div>\n      </div>\n\n      <div v-if=\"step == 3\">\n        <div class=\"row\">\n          <div class=\"col-md-6 dash-input-wrapper mb-2\">\n            <label for=\"\">{{ trans('Service') }} *</label>\n            <NiceSelect\n              v-model=\"form.service_id\"\n              :options=\"props.services\"\n              @change=\"fetchCategories()\"\n              label=\"title\"\n              value-by=\"id\"\n              :placeholder=\"trans('Select Service')\"\n            />\n            <InputFieldError :message=\"form.errors.service_id\" />\n          </div>\n          <div class=\"col-md-6 dash-input-wrapper mb-2\">\n            <LabelWithAjaxLoader text=\"Service Category *\" :loading=\"gettingCategories\" />\n\n            <NiceSelect\n              v-model=\"form.category_id\"\n              :options=\"categories\"\n              label=\"title\"\n              value-by=\"id\"\n              :placeholder=\"trans('Select Category')\"\n              @change=\"fetchTags()\"\n            />\n            <InputFieldError :message=\"form.errors.category_id\" />\n          </div>\n        </div>\n\n        <div class=\"mb-2 rounded bg-white p-3\">\n          <label class=\"d-flex me-3\"\n            >{{ trans('Skills') }}:\n            <LabelWithAjaxLoader text=\"\" :loading=\"gettingSkills\" />\n          </label>\n\n          <div class=\"form-check form-check-inline\" v-for=\"tag in skills\" :key=\"tag.id\">\n            <input\n              class=\"form-check-input\"\n              v-model=\"form.skills\"\n              type=\"checkbox\"\n              :id=\"'tagId' + tag.id\"\n              :value=\"tag.id\"\n            />\n            <label class=\"form-check-label\" :for=\"'tagId' + tag.id\">{{ tag.title }} </label>\n          </div>\n\n          <InputFieldError :message=\"form.errors.skills\" />\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-4 dash-input-wrapper mb-2\">\n            <label for=\"\">{{ trans('Expert Level ') }}*</label>\n            <NiceSelect\n              v-model=\"form.expert_level\"\n              :options=\"expertLevels\"\n              label=\"title\"\n              value-by=\"id\"\n              :placeholder=\"trans('Select Level')\"\n            />\n            <InputFieldError :message=\"form.errors.expert_level\" />\n          </div>\n\n          <div class=\"col-md-4 dash-input-wrapper mb-2\">\n            <label for=\"\">{{ trans('Expected Salary') }}</label>\n            <input type=\"number\" v-model=\"form.expected_salary\" />\n            <InputFieldError :message=\"form.errors.expected_salary\" />\n          </div>\n          <div class=\"col-md-4 dash-input-wrapper mb-2\">\n            <label for=\"\">{{ trans('Currency ') }}*</label>\n            <NiceSelect\n              v-model=\"form.currency\"\n              :options=\"currencies\"\n              label=\"code\"\n              value-by=\"code\"\n              :placeholder=\"trans('Currency')\"\n            />\n            <InputFieldError :message=\"form.errors.currency\" />\n          </div>\n        </div>\n\n        <!-- work experiences -->\n        <div class=\"mt-30\">\n          <p class=\"fw-bold\">{{ trans('Work Experiences') }}:</p>\n          <div\n            v-for=\"(item, index) in form.work_experiences\"\n            :key=\"index\"\n            class=\"row m-0 mb-2 rounded bg-white p-2\"\n          >\n            <div class=\"col-md-12 border-bottom mb-3 pb-2\">\n              <div class=\"d-flex justify-content-between align-items-center\">\n                <h5>{{ trans('Work Experience #') }}{{ index + 1 }}</h5>\n                <button\n                  type=\"button\"\n                  class=\"btn-nine text-danger fw-bold\"\n                  @click=\"removeWorkExperienceItem(index)\"\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div class=\"col-md-12 dash-input-wrapper mb-3\">\n              <label for=\"\">{{ trans('Organization') }} *</label>\n              <input type=\"text\" v-model=\"item.org_name\" />\n              <InputFieldError :message=\"form.errors['work_experiences.' + index + '.org_name']\" />\n            </div>\n\n            <div class=\"col-md-4 dash-input-wrapper\">\n              <label for=\"\">{{ trans('Designation') }} *</label>\n              <input type=\"text\" v-model=\"item.designation\" />\n              <InputFieldError\n                :message=\"form.errors['work_experiences.' + index + '.designation']\"\n              />\n            </div>\n\n            <div class=\"col-md-4 dash-input-wrapper\">\n              <label for=\"\">{{ trans('from') }} *</label>\n              <input type=\"date\" v-model=\"item.from\" />\n              <InputFieldError :message=\"form.errors['work_experiences.' + index + '.from']\" />\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"d-flex justify-content-between mb-2\">\n                <span>{{ trans('To') }}</span>\n                <span>\n                  <div class=\"form-check\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      v-model=\"item.is_current\"\n                      @change=\"setWorkingExpDate(item)\"\n                      :id=\"`isCurrent-${index + 1}`\"\n                    />\n                    <label class=\"form-check-label\" :for=\"`isCurrent-${index + 1}`\">\n                      {{ trans('Currently working') }}\n                    </label>\n                  </div>\n                </span>\n              </div>\n              <div class=\"dash-input-wrapper\">\n                <input type=\"date\" v-model=\"item.to\" :disabled=\"item.is_current\" />\n              </div>\n              <InputFieldError :message=\"form.errors['work_experiences.' + index + '.to']\" />\n            </div>\n\n            <div class=\"col-md-12 dash-input-wrapper mt-2\">\n              <textarea\n                v-model=\"item.responsibilities\"\n                rows=\"6\"\n                placeholder=\"Enter short brif about your role or responsibilities (Optional)\"\n              >\n              </textarea>\n              <InputFieldError\n                :message=\"form.errors['work_experiences.' + index + '.responsibilities']\"\n              />\n            </div>\n          </div>\n        </div>\n        <button type=\"button\" @click=\"addWorkExperienceItem\" class=\"btn-two\">\n          <i class=\"bi bi-plus\"></i> {{ trans('Add Work Experience') }}\n        </button>\n      </div>\n\n      <div v-if=\"step == 4\">\n       \n        <div v-for=\"(item, index) in form.education_qualifications\" :key=\"index\">\n          <div class=\"row align-items-center bg-light mb-3 mt-2 rounded border pt-2\">\n            <div class=\"col-md-12 mb-2 pb-2\">\n              <div class=\"col-md-12 border-bottom mb-3 pb-2\">\n                <div class=\"d-flex justify-content-between align-items-center\">\n                  <h5>{{ trans('Education History #') }}{{ index + 1 }}</h5>\n\n                  <button\n                    type=\"button\"\n                    class=\"btn-nine text-danger fw-bold\"\n                    @click=\"removeEducationItem(index)\"\n                  >\n                    X\n                  </button>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-md-2 dash-input-wrapper mb-2\">\n                  <label for=\"\">{{ trans('Degree') }} *</label>\n\n                  <NiceSelect\n                    v-model=\"item.degree\"\n                    :options=\"education_qualifications\"\n                    label=\"title\"\n                    value-by=\"id\"\n                    :placeholder=\"trans('Select Degree')\"\n                  />\n\n                  <InputFieldError\n                    :message=\"form.errors['education_qualifications.' + index + '.degree']\"\n                  />\n                </div>\n                <div class=\"col-md-4 dash-input-wrapper mb-2\">\n                  <label for=\"\">{{ trans('Institute Name') }} *</label>\n                  <input type=\"text\" v-model=\"item.institute_name\" />\n                  <InputFieldError\n                    :message=\"form.errors['education_qualifications.' + index + '.institute_name']\"\n                  />\n                </div>\n\n               \n                <div class=\"col-md-2 dash-input-wrapper mb-2\">\n                  <label for=\"\">{{ trans('Start Year') }} *</label>\n                  <input type=\"number\" v-model=\"item.start_at\" placeholder=\"2020\" />\n                  <InputFieldError\n                    :message=\"form.errors['education_qualifications.' + index + '.start_at']\"\n                  />\n                </div>\n                <div class=\"col-md-2 dash-input-wrapper mb-2\">\n                  <label for=\"\">{{ trans('Passing year') }} *</label>\n                  <input\n                    type=\"number\"\n                    v-model=\"item.pass_year\"\n                    placeholder=\"2024\"\n                    :disabled=\"item.is_current\"\n                  />\n                  <InputFieldError\n                    :message=\"form.errors['education_qualifications.' + index + '.pass_year']\"\n                  />\n                </div>\n                <div class=\"col-md-2 dash-input-wrapper mb-2\">\n                  <label for=\"\">{{ trans('Result') }} *</label>\n                  <input\n                    type=\"number\"\n                    v-model=\"item.result\"\n                    step=\"0.01\"\n                    max=\"5.00\"\n                    :disabled=\"item.is_current\"\n                  />\n                  <InputFieldError\n                    :message=\"form.errors['education_qualifications.' + index + '.result']\"\n                  />\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-check\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      v-model=\"item.is_current\"\n                      @change=\"setCurrentlyStudingDate(item)\"\n                      :id=\"`currentItem${index}`\"\n                    />\n                    <label class=\"form-check-label\" :for=\"`currentItem${index}`\">\n                      {{ trans(' Currently Studying') }}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"text-end\">\n          <button type=\"button\" class=\"btn-two\" @click=\"addEducationItem\">\n            {{ trans('Add More') }}\n          </button>\n        </div>\n      </div>\n\n      <div v-if=\"step == 5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 dash-input-wrapper mb-2\">\n            <label for=\"\">{{ trans('Resume / CV') }} </label>\n            <input\n              type=\"file\"\n              @change=\"(e) => (form.resume = e.target.files[0])\"\n              class=\"form-control p-3\"\n            />\n            <InputFieldError :message=\"form.errors.resume\" />\n          </div>\n         \n        </div>\n      </div>\n\n      <div class=\"d-flex justify-content-between mt-40 gap-3\">\n        <button type=\"button\" @click=\"prevStep\" :disabled=\"step == 1\" class=\"btn-five bg-secondary\">\n          Prev\n        </button>\n        <SpinnerBtn\n          :processing=\"form.processing\"\n          btn-text=\"Next\"\n          classes=\"btn-five d-flex align-items-center justify-content-center\"\n        />\n      </div>\n    </form>\n  </div>\n</template>\n","<script setup>\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport { Head, useForm } from '@inertiajs/vue3'\nimport UserLayout from '@/Layouts/User.vue'\nimport LabelWithAjaxLoader from '@/Components/LabelWithAjaxLoader.vue'\nimport { ref, onMounted } from 'vue'\nimport notify from '@/Plugins/Admin/notify'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport trans from '@/Composables/transComposable'\nimport { modal } from '@/Composables/modalComposable'\ndefineOptions({ layout: UserLayout })\n\nconst props = defineProps([\n  'meta',\n  'portfolios',\n  'countries',\n  'services',\n  'education_qualifications',\n  'expertLevels',\n  'candidate',\n  'currencies'\n])\n\nconst errors = ref([])\nconst states = ref([])\nconst categories = ref([])\nconst skills = ref([])\n\nconst form = useForm({\n  // step 1\n  overview: '',\n  gender: '',\n  date_of_birth: '',\n  phone: '',\n\n  // step 2\n  country_id: '',\n  state_id: '',\n  address: '',\n\n  // step 3\n  service_id: '',\n  category_id: '',\n  expert_level: '',\n  skills: [],\n  work_experiences: [\n    {\n      from: '',\n      to: '',\n      is_current: false,\n      org_name: '',\n      designation: ''\n    }\n  ],\n\n  // step 4\n  education_qualifications: [\n    {\n      institute_name: '',\n      result: '',\n      pass_year: '',\n      degree: '',\n      out_of: 5\n    }\n  ],\n\n  // step 5\n  avatar: '',\n  resume: '',\n  expected_salary: 0,\n  currency: ''\n})\n\nonMounted(() => {\n  form.gender = props.meta?.gender\n  form.phone = props.candidate?.phone\n  form.overview = props.meta?.overview\n  form.date_of_birth = props.meta?.date_of_birth\n\n  form.country_id = props.meta?.country_id\n  if (form.country_id) fetchStates()\n  form.state_id = props.meta.state_id\n\n  form.address = props.candidate?.address ?? ''\n  form.service_id = props.meta?.service_id ?? ''\n  if (form.service_id) {\n    fetchCategories()\n  }\n  form.category_id = props.meta?.category_id ?? ''\n\n  if (form.category_id) {\n    fetchTags()\n  }\n  form.skills = props.meta?.skills ?? ''\n\n  form.expected_salary = props.meta?.expected_salary ?? ''\n  form.currency = props.meta?.currency ?? 'USD'\n  form.expert_level = props.meta?.expert_level ?? ''\n  form.work_experiences = props.meta?.work_experiences ?? []\n\n  if (props.meta?.education_qualifications) {\n    form.education_qualifications = props.meta.education_qualifications\n  }\n})\n\nconst submitForm = () => {\n  form.post(route('user.resume.store'), {\n    // preserveScroll: true,\n    onSuccess: () => {\n      notify.success(trans('Information has been updated successfully'))\n    },\n    onError: () => {\n      notify.danger(trans('Something went wrong, please check the form again'))\n    }\n  })\n}\n\n// resume upload\n\nconst cvForm = useForm({\n  submit_type: 'resume',\n  resume: ''\n})\n\nconst uploadCV = (file) => {\n  cvForm.resume = file\n  cvForm.post(route('user.resume.store'), {\n    onSuccess: () => {\n      notify.success(trans('CV has been updated successfully'))\n    },\n    onError: (errors) => {\n      console.log(errors)\n      notify.danger('Something went wrong')\n    }\n  })\n}\n\nconst removeResume = () => {\n  let actionUrl = route('user.resume.destroy')\n  modal.init(actionUrl, {\n    data: {\n      submit_type: 'resume'\n    },\n    method: 'post',\n    callback: () => {\n      notify.danger(trans('CV Removed'))\n    }\n  })\n}\n\nconst removeVideoIntro = () => {\n  let actionUrl = route('user.resume.destroy')\n\n  modal.init(actionUrl, {\n    data: {\n      submit_type: 'video_intro'\n    },\n    method: 'post',\n    callback: () => {\n      notify.danger(trans('Video Intro Removed'))\n    }\n  })\n}\n\n// education qualification\nconst addEducationItem = () => {\n  form.education_qualifications.push({\n    institute_name: '',\n    result: '',\n    pass_year: '',\n    degree: '',\n    out_of: 5,\n    is_current: false\n  })\n}\n\nconst removeEducationItem = (index) => {\n  modal.init(null, {\n    callback: () => {\n      form.education_qualifications.splice(index, 1)\n    }\n  })\n}\n\n// service category tags\nconst gettingCategories = ref(false)\nconst fetchCategories = () => {\n  form.category_id = ''\n  categories.value = []\n\n  form.skills = []\n  skills.value = []\n  if (form.service_id) {\n    gettingCategories.value = true\n    axios.get(`/api/categories?service_id=${form.service_id}`).then((res) => {\n      gettingCategories.value = false\n      categories.value = res.data\n    })\n  }\n}\n\nconst gettingSkills = ref(false)\nconst fetchTags = () => {\n  form.skills = []\n  skills.value = []\n  if (form.category_id) {\n    gettingSkills.value = true\n    axios.get(`/api/categories?category_id=${form.category_id}`).then((res) => {\n      gettingSkills.value = false\n      skills.value = res.data\n\n      // if (props.meta?.skills) {\n      //   form.skills = props.meta?.skills ?? ''\n      // }\n    })\n  }\n}\n\n// Location\nconst gettingStates = ref(false)\nconst fetchStates = () => {\n  states.value = []\n  form.state_id = ''\n  if (form.country_id) {\n    gettingStates.value = true\n    return axios.get(`/api/locations?location_id=${form.country_id}`).then((res) => {\n      gettingStates.value = false\n      states.value = res.data\n    })\n  }\n}\n\n// work experience\nconst addWorkExperienceItem = () => {\n  form.work_experiences.push({\n    from: '',\n    to: '',\n    is_current: false,\n    org_name: '',\n    designation: ''\n  })\n}\nconst removeWorkExperienceItem = (index) => {\n  modal.init(null, {\n    callback: () => {\n      form.work_experiences.splice(index, 1)\n    }\n  })\n}\n\n// portfolio\nconst portfolioForm = useForm({\n  title: '',\n  preview: ''\n})\n\nconst portfolioModalClsBtn = ref(null)\nconst addPortfolio = () => {\n  portfolioForm.post(route('user.portfolios.store'), {\n    preserveScroll: true,\n    onSuccess: (page) => {\n      notify.success('Portfolio added')\n      portfolioModalClsBtn.value.click()\n      portfolioForm.reset()\n    }\n  })\n}\n\nconst removePortfolio = (route) => {\n  modal.init(null, {\n    callback: () => {\n      portfolioForm.delete(route, {\n        preserveScroll: true,\n        onSuccess: () => {\n          notify.success('Portfolio removed')\n          portfolioForm.reset()\n        }\n      })\n    }\n  })\n}\n\n// video intro\nlet videoIntroForm = useForm({\n  submit_type: 'video_intro',\n  video_intro: ''\n})\nconst uploadVideoIntro = () => {\n  videoIntroForm.post(route('user.resume.store'), {\n    onSuccess: () => {\n      $('#addVideoIntro .btn-close').trigger('click')\n      notify.success(trans('Video Intro has been updated successfully'))\n      videoIntroForm.reset()\n    },\n    onError: (errors) => {\n      console.log(errors)\n      notify.danger(trans('Something went wrong'))\n    }\n  })\n}\n\nconst arrayRange = (start, stop, step) =>\n  Array.from({ length: (stop - start) / step + 1 }, (value, index) => start + index * step)\n</script>\n<template>\n  <Head :title=\"trans('My Resume')\" />\n  <h2 class=\"main-title\">{{ trans('My Resume') }}</h2>\n\n \n\n  <div class=\"card-box border-20 bg-white\">\n    <h4 class=\"dash-title-three\">{{ trans('Resume Attachment') }}</h4>\n    <div class=\"dash-input-wrapper mb-20\">\n      <label for=\"\">{{ trans('CV Attachment') }} *</label>\n\n      <div\n        v-if=\"meta?.resume\"\n        class=\"attached-file d-flex align-items-center justify-content-between mb-15\"\n      >\n        <span>{{ meta?.resume }}</span>\n        <a href=\"#\" @click=\"removeResume()\" class=\"remove-btn\"><i class=\"bi bi-x\"></i></a>\n      </div>\n      <p v-else>{{ trans('No CV found') }}</p>\n    </div>\n    <!-- /.dash-input-wrapper -->\n    <div for=\"upload-cv\" class=\"dash-btn-one d-inline-block position-relative me-3\">\n      <label for=\"upload-cv\"><i class=\"bi bi-plus\"></i>\n      {{ trans(' Upload CV') }}</label>\n      <input id=\"upload-cv\" type=\"file\" @input=\"uploadCV($event.target.files[0])\" :disabled=\"meta?.resume\" />\n    </div>\n    <small>{{ trans('Upload file') }} .pdf, .doc</small>\n    <InputFieldError :message=\"cvForm.errors.resume\" />\n  </div>\n  <!-- /.card-box -->\n\n  <div class=\"card-box border-20 mt-40 bg-white\">\n    <h4 class=\"dash-title-three\">{{ trans('Intro & Overview') }}</h4>\n    <div class=\"dash-input-wrapper mb-35 md-mb-20\">\n      <label for=\"\">{{ trans('Overview') }} *</label>\n      <textarea\n        class=\"size-lg\"\n        v-model=\"form.overview\"\n        :placeholder=\"trans('Write something interesting about you....')\"\n      ></textarea>\n      <div class=\"alert-text\">{{ trans('Brief description for your resume') }}</div>\n    </div>\n    <!-- /.dash-input-wrapper -->\n\n    <div class=\"row\">\n      <div class=\"col-md-4 mb-2\">\n        <label for=\"\">{{ trans('Gender') }} *</label>\n        <div class=\"dash-input-wrapper\">\n          <NiceSelect v-model=\"form.gender\" :options=\"['male', 'female', 'other']\" />\n        </div>\n        <InputFieldError :message=\"form.errors.gender\" />\n      </div>\n      <div class=\"col-md-4 mb-2\">\n        <label for=\"\">{{ trans('Date of birth') }} *</label>\n        <div class=\"dash-input-wrapper\">\n          <input type=\"date\" v-model=\"form.date_of_birth\" />\n        </div>\n        <InputFieldError :message=\"form.errors.date_of_birth\" />\n      </div>\n\n      <div class=\"col-md-4 mb-2\">\n        <label for=\"\">{{ trans('Phone') }} * </label>\n        <input type=\"text\" v-model=\"form.phone\" class=\"form-control p-3\" />\n        <InputFieldError :message=\"form.errors.phone\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-sm-12 d-flex\" :class=\"[meta?.video_id ? 'col-lg-6' : 'col-lg-12']\">\n        <div\n          v-if=\"meta?.video_id\"\n          class=\"intro-video-post position-relative mt-20\"\n          :style=\"{\n            backgroundImage: `url(https://img.youtube.com/vi/${meta?.video_id}/sddefault.jpg)`\n          }\"\n        >\n          <a\n            class=\"fancybox rounded-circle video-icon tran3s text-center\"\n            data-fancybox=\"\"\n            :href=\"`https://www.youtube.com/embed/${meta?.video_id}`\"\n          >\n            <i class=\"bi bi-play\"></i>\n          </a>\n          <a href=\"#\" @click=\"removeVideoIntro\" class=\"close\"><i class=\"bi bi-x\"></i></a>\n        </div>\n        <!-- /.intro-video-post -->\n      </div>\n      <div class=\"col-sm-6 d-flex\" :class=\"[meta?.video_id ? 'col-lg-6' : 'col-lg-12']\">\n        <div class=\"intro-video-post position-relative empty mt-20\">\n          <button class=\"w-100 h-100\" data-bs-toggle=\"modal\" data-bs-target=\"#addVideoIntro\">\n            <span>+ {{ trans('Add Intro Video') }}</span>\n          </button>\n        </div>\n        <!-- /.intro-video-post -->\n      </div>\n    </div>\n  </div>\n  <!-- /.card-box -->\n\n  <div class=\"card-box border-20 mt-40 bg-white\">\n    <h4 class=\"dash-title-three\">{{ trans('Location / Area') }}</h4>\n\n    <div class=\"row\">\n      <div class=\"col-md-6 dash-input-wrapper mb-2\">\n        <label class=\"mb-1\" for=\"\">{{ trans('Country') }}*</label>\n        <NiceSelect\n          v-model=\"form.country_id\"\n          :options=\"countries\"\n          placeholder=\"Select Country\"\n          label=\"name\"\n          value-by=\"id\"\n          :required=\"true\"\n          @change=\"fetchStates()\"\n        />\n\n        <InputFieldError :message=\"form.errors.country_id\" />\n      </div>\n      <div class=\"col-md-6 dash-input-wrapper mb-2\">\n        <LabelWithAjaxLoader text=\"State *\" :loading=\"gettingStates\" class=\"mb-1\" />\n        <NiceSelect\n          v-model=\"form.state_id\"\n          :options=\"states\"\n          placeholder=\"Select City\"\n          label=\"name\"\n          value-by=\"id\"\n          :required=\"true\"\n        />\n        <InputFieldError :message=\"form.errors.state_id\" />\n      </div>\n    </div>\n\n    <div class=\"mb-2\">\n      <label for=\"\">{{ trans('Address') }} *</label>\n      <div class=\"dash-input-wrapper\">\n        <input\n          type=\"text\"\n          v-model=\"form.address\"\n          class=\"form-control\"\n          :disabled=\"!form.country_id\"\n          placeholder=\"\"\n        />\n      </div>\n      <InputFieldError :message=\"form.errors.address\" />\n    </div>\n  </div>\n\n  <div class=\"card-box border-20 mt-40 bg-white\">\n    <h4 class=\"dash-title-three\">{{ trans('Education') }}</h4>\n\n    <div class=\"accordion dash-accordion-one\" id=\"accordionOne\">\n      <template v-for=\"(item, index) in form.education_qualifications\" :key=\"index\">\n        <div class=\"accordion-item\">\n          <div class=\"accordion-header\" :id=\"`item-${index}`\">\n            <div class=\"d-flex\">\n              <button\n                class=\"accordion-button collapsed\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                :data-bs-target=\"`#collapseItem-${index}`\"\n                aria-expanded=\"false\"\n                :aria-controls=\"`collapseItem-${index}`\"\n              >\n                {{ trans('Education') }} {{ index + 1 }}\n              </button>\n              <button type=\"button\" class=\"btn text-danger\" @click=\"removeEducationItem(index)\">\n                {{ trans('X') }}\n              </button>\n            </div>\n          </div>\n          <div\n            :id=\"`collapseItem-${index}`\"\n            class=\"accordion-collapse collapse\"\n            :aria-labelledby=\"`item-${index}`\"\n            :data-bs-parent=\"`#item-${index}`\"\n          >\n            <div class=\"accordion-body\">\n              <div class=\"row\">\n                <div class=\"form-check mb-20\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"checkbox\"\n                    v-model=\"item.is_current\"\n                    @change=\"setCurrentlyStudingDate(item)\"\n                    :id=\"`currentItem${index}`\"\n                  />\n                  <label class=\"form-check-label\" :for=\"`currentItem${index}`\">\n                    {{ trans(' Currenly Studing') }}\n                  </label>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-md-2 dash-input-wrapper mb-2\">\n                    <label for=\"\">{{ trans('Degree') }} *</label>\n\n                    <select class=\"form-control select-input-degree\" v-model=\"item.degree\">\n                      <option\n                        v-for=\"(item, index) in education_qualifications\"\n                        :key=\"index\"\n                        :value=\"item.id\"\n                      >\n                        {{ item.title }}\n                      </option>\n                    </select>\n\n                    <InputFieldError\n                      :message=\"form.errors['education_qualifications.' + index + '.degree']\"\n                    />\n                  </div>\n                  <div class=\"col-md-4 dash-input-wrapper mb-2\">\n                    <label for=\"\">{{ trans('Institue Name') }} *</label>\n                    <input type=\"text\" v-model=\"item.institute_name\" />\n                    <InputFieldError\n                      :message=\"\n                        form.errors['education_qualifications.' + index + '.institute_name']\n                      \"\n                    />\n                  </div>\n                  <div class=\"col-md-2 dash-input-wrapper mb-2\">\n                    <label for=\"\">{{ trans('Result') }} *</label>\n                    <input\n                      type=\"number\"\n                      v-model=\"item.result\"\n                      step=\"0.01\"\n                      max=\"5.00\"\n                      :disabled=\"item.is_current\"\n                    />\n                    <InputFieldError\n                      :message=\"form.errors['education_qualifications.' + index + '.result']\"\n                    />\n                  </div>\n                 \n                  <div class=\"col-md-2 dash-input-wrapper mb-2\">\n                    <label for=\"\">{{ trans('Start Year') }} *</label>\n                    <input type=\"number\" v-model=\"item.start_at\" placeholder=\"2020\" />\n                    <InputFieldError\n                      :message=\"form.errors['education_qualifications.' + index + '.start_at']\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 dash-input-wrapper mb-2\">\n                    <label for=\"\">{{ trans('Passing year') }} *</label>\n                    <input\n                      type=\"number\"\n                      v-model=\"item.pass_year\"\n                      placeholder=\"2024\"\n                      :disabled=\"item.is_current\"\n                    />\n                    <InputFieldError\n                      :message=\"form.errors['education_qualifications.' + index + '.pass_year']\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </template>\n    </div>\n    <!-- /.dash-accordion-one -->\n    <button type=\"button\" @click=\"addEducationItem\" class=\"dash-btn-one\">\n      <i class=\"bi bi-plus\"></i> {{ trans('Add more') }}\n    </button>\n  </div>\n  <!-- /.card-box -->\n\n  <div class=\"card-box border-20 mt-40 bg-white\">\n    <h4 class=\"dash-title-three\">{{ trans('Skills & Experience') }}</h4>\n    <div class=\"row\">\n      <div class=\"col-md-6 dash-input-wrapper mb-2\">\n        <label for=\"\">{{ trans('Service') }} *</label>\n        <NiceSelect\n          v-model=\"form.service_id\"\n          :options=\"props.services\"\n          label=\"title\"\n          value-by=\"id\"\n          :placeholder=\"trans('Select Service')\"\n          @change=\"fetchCategories\"\n        />\n        <InputFieldError :message=\"form.errors.service_id\" />\n      </div>\n      <div class=\"col-md-6 dash-input-wrapper mb-2\">\n        <LabelWithAjaxLoader text=\"Service Category *\" :loading=\"gettingCategories\" />\n        <NiceSelect\n          v-model=\"form.category_id\"\n          :options=\"categories\"\n          label=\"title\"\n          value-by=\"id\"\n          :placeholder=\"trans('Select Category')\"\n          @change=\"fetchTags\"\n        />\n        <InputFieldError :message=\"form.errors.category_id\" />\n      </div>\n    </div>\n\n    <div class=\"mb-2 rounded bg-white p-3\">\n      <label class=\"d-flex me-3\"\n        >{{ trans('Skills') }}:\n        <LabelWithAjaxLoader text=\"\" :loading=\"gettingSkills\" />\n      </label>\n\n      <div class=\"form-check form-check-inline\" v-for=\"tag in skills\" :key=\"tag.id\">\n        <input\n          class=\"form-check-input\"\n          v-model=\"form.skills\"\n          type=\"checkbox\"\n          :id=\"'tagId' + tag.id\"\n          :value=\"tag.id\"\n        />\n        <label class=\"form-check-label\" :for=\"'tagId' + tag.id\">{{ tag.title }} </label>\n      </div>\n\n      <InputFieldError :message=\"form.errors.skills\" />\n    </div>\n\n    <div class=\"row mb-40\">\n      <div class=\"col-md-4 dash-input-wrapper mb-2\">\n        <label for=\"\">{{ trans('Expert Level') }} *</label>\n\n        <NiceSelect\n          v-model=\"form.expert_level\"\n          :options=\"expertLevels\"\n          label=\"title\"\n          value-by=\"id\"\n          :placeholder=\"trans('Select Level')\"\n        />\n        <InputFieldError :message=\"form.errors.expert_level\" />\n      </div>\n\n      <div class=\"col-md-4 mb-2\">\n        <label for=\"\" class=\"mb-2\">{{ trans('Expected Salery') }}</label>\n        <div class=\"dash-input-wrapper\">\n          <input\n            type=\"number\"\n            v-model=\"form.expected_salary\"\n            placeholder=\"100000\"\n            class=\"form-control\"\n          />\n        </div>\n        <InputFieldError :message=\"form.errors.expected_salary\" />\n      </div>\n      <div class=\"col-md-4 dash-input-wrapper mb-2\">\n        <label for=\"\">{{ trans('Currency') }} *</label>\n\n        <NiceSelect\n          v-model=\"form.currency\"\n          :options=\"currencies\"\n          label=\"code\"\n          value-by=\"code\"\n          :placeholder=\"trans('Currency')\"\n        />\n        <InputFieldError :message=\"form.errors.currency\" />\n      </div>\n    </div>\n\n    <div class=\"dash-input-wrapper mb-15\">\n      <label for=\"\">{{ trans('Work Experiences') }} *</label>\n    </div>\n    <!-- /.dash-input-wrapper -->\n    <div class=\"accordion dash-accordion-one\" id=\"accordionTwo\">\n      <template v-for=\"(item, index) in form.work_experiences\" :key=\"index\">\n        <div class=\"accordion-item\">\n          <div class=\"accordion-header\" :id=\"`heading-${index}`\">\n            <div class=\"d-flex\">\n              <button\n                class=\"accordion-button collapsed\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                :data-bs-target=\"`#collapseOneA-${index}`\"\n                aria-expanded=\"false\"\n                :aria-controls=\"`collapseOneA-${index}`\"\n              >\n                {{ trans('Work Experience') }} {{ index + 1 }}\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn text-danger\"\n                @click=\"removeWorkExperienceItem(index)\"\n              >\n                {{ trans('X') }}\n              </button>\n            </div>\n          </div>\n          <div\n            :id=\"`collapseOneA-${index}`\"\n            class=\"accordion-collapse collapse\"\n            :aria-labelledby=\"`heading-${index}`\"\n            data-bs-parent=\"#accordionTwo\"\n          >\n            <div class=\"accordion-body\">\n              <div class=\"row\">\n                <div class=\"col-lg-2\">\n                  <div class=\"dash-input-wrapper mb-30 md-mb-10\">\n                    <label for=\"\">{{ trans('Title') }} *</label>\n                  </div>\n                  <!-- /.dash-input-wrapper -->\n                </div>\n                <div class=\"col-lg-10\">\n                  <div class=\"dash-input-wrapper mb-30\">\n                    <input\n                      type=\"text\"\n                      v-model=\"item.designation\"\n                      placeholder=\"Lead Product Designer \"\n                    />\n                    <InputFieldError\n                      :message=\"form.errors[`work_experiences.${index}.designation`]\"\n                    />\n                  </div>\n                  <!-- /.dash-input-wrapper -->\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-lg-2\">\n                  <div class=\"dash-input-wrapper mb-30 md-mb-10\">\n                    <label for=\"\">{{ trans('Company') }} *</label>\n                  </div>\n                  <!-- /.dash-input-wrapper -->\n                </div>\n                <div class=\"col-lg-10\">\n                  <div class=\"dash-input-wrapper mb-30\">\n                    <input type=\"text\" v-model=\"item.org_name\" placeholder=\"Amazon Inc\" />\n                    <InputFieldError :message=\"form.errors[`work_experiences.${index}.org_name`]\" />\n                  </div>\n                  <!-- /.dash-input-wrapper -->\n                  <div class=\"form-check mb-4\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      v-model=\"item.is_current\"\n                      :id=\"`isCurrent${index}`\"\n                    />\n                    <label class=\"form-check-label\" :for=\"`isCurrent${index}`\">\n                      {{ trans('Currently working') }}\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-lg-2\">\n                  <div class=\"dash-input-wrapper mb-30 md-mb-10\">\n                    <label for=\"\">{{ trans('Date') }} *</label>\n                  </div>\n                  <!-- /.dash-input-wrapper -->\n                </div>\n                <div class=\"col-lg-10\">\n                  <div class=\"row\">\n                    <div class=\"col-sm-6\">\n                      <div class=\"dash-input-wrapper mb-30\">\n                        <input type=\"date\" v-model=\"item.from\" />\n                        <InputFieldError :message=\"form.errors[`work_experiences.${index}.from`]\" />\n                      </div>\n                      <!-- /.dash-input-wrapper -->\n                    </div>\n                    <div class=\"col-sm-6\">\n                      <div class=\"dash-input-wrapper mb-30\">\n                        <input type=\"date\" v-model=\"item.to\" :disabled=\"item.is_current\" />\n                        <InputFieldError :message=\"form.errors[`work_experiences.${index}.to`]\" />\n                      </div>\n                      <!-- /.dash-input-wrapper -->\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-lg-2\">\n                  <div class=\"dash-input-wrapper mb-30 md-mb-10\">\n                    <label for=\"\">{{ trans('Description') }} *</label>\n                  </div>\n                  <!-- /.dash-input-wrapper -->\n                </div>\n                <div class=\"col-lg-10\">\n                  <div class=\"dash-input-wrapper mb-30\">\n                    <textarea\n                      v-model=\"item.responsibilities\"\n                      class=\"size-lg\"\n                      placeholder=\"Enter short brif about your role or responsibilities (Optional)\"\n                    ></textarea>\n                    <InputFieldError\n                      :message=\"form.errors[`work_experiences.${index}.responsibilities`]\"\n                    />\n                  </div>\n                  <!-- /.dash-input-wrapper -->\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"mb-4\"></div>\n      </template>\n    </div>\n    <!-- /.dash-accordion-one -->\n    <button type=\"button\" @click=\"addWorkExperienceItem\" class=\"dash-btn-one\">\n      <i class=\"bi bi-plus\"></i> {{ trans('Add more') }}\n    </button>\n  </div>\n  <!-- /.card-box -->\n\n  <div class=\"card-box border-20 mt-40 bg-white\">\n    <h4 class=\"dash-title-three\">{{ trans('Portfolio') }}</h4>\n    <div class=\"row\">\n      <div class=\"col-lg-3 col-6\" v-for=\"portfolio in portfolios\" :key=\"portfolio.id\">\n        <div class=\"candidate-portfolio-block position-relative mb-25\">\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <span>{{ portfolio.title }}</span>\n            <button\n              @click=\"removePortfolio(route('user.portfolios.destroy', portfolio))\"\n              class=\"btn text-danger\"\n            >\n              X\n            </button>\n          </div>\n          <img v-lazy=\"portfolio.preview\" class=\"lazy-img w-100\" />\n        </div>\n        <!-- /.candidate-portfolio-block -->\n      </div>\n    </div>\n    <button data-bs-toggle=\"modal\" data-bs-target=\"#addNewPortfolioModal\" class=\"dash-btn-one\">\n      <i class=\"bi bi-plus\"></i> {{ trans('Add more') }}\n    </button>\n  </div>\n  <!-- /.card-box -->\n\n  <div class=\"button-group d-inline-flex align-items-center mt-30\">\n    <button type=\"button\" @click=\"submitForm\" class=\"dash-btn-two tran3s me-3\">\n      {{ trans('Save') }}\n    </button>\n    <button type=\"button\" class=\"dash-cancel-btn tran3s\">{{ trans('Cancel') }}</button>\n  </div>\n\n  <!-- Modal Body -->\n  <!-- if you want to close by clicking outside the modal, delete the last endpoint:data-bs-backdrop and data-bs-keyboard -->\n  <div\n    class=\"modal fade\"\n    id=\"addNewPortfolioModal\"\n    tabindex=\"-1\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    role=\"dialog\"\n    aria-labelledby=\"addNewPortfolioModalTitle\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <form @submit.prevent=\"addPortfolio\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"addNewPortfolioModalTitle\">\n              {{ trans('Add Portfolio') }}\n            </h5>\n            <button\n              type=\"button\"\n              class=\"btn-close\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n            ></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"mb-2\">\n              <label for=\"title\">{{ trans('Title') }}</label>\n              <input type=\"text\" v-model=\"portfolioForm.title\" class=\"form-control\" />\n              <InputFieldError :message=\"portfolioForm.errors.title\" />\n            </div>\n            <div class=\"mb-2\">\n              <label for=\"title\">{{ trans('Preview Image') }}</label>\n              <input\n                type=\"file\"\n                @input=\"(e) => (portfolioForm.preview = e.target.files[0])\"\n                class=\"form-control\"\n                accept=\"image/*\"\n              />\n              <InputFieldError :message=\"portfolioForm.errors.preview\" />\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button\n              type=\"button\"\n              ref=\"portfolioModalClsBtn\"\n              class=\"dash-btn-two\"\n              data-bs-dismiss=\"modal\"\n            >\n              {{ trans('Close') }}\n            </button>\n            <SpinnerBtn\n              :btn-text=\"trans('Add Portfolio')\"\n              classes=\"btn-one d-flex align-items-center\"\n              :processing=\"portfolioForm.processing\"\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n  <!-- Modal Body -->\n  <!-- if you want to close by clicking outside the modal, delete the last endpoint:data-bs-backdrop and data-bs-keyboard -->\n  <div\n    class=\"modal fade\"\n    id=\"addVideoIntro\"\n    tabindex=\"-1\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    role=\"dialog\"\n    aria-labelledby=\"addVideoIntroModal\"\n    aria-hidden=\"true\"\n  >\n    <div\n      class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg\"\n      role=\"document\"\n    >\n      <div class=\"modal-content\">\n        <form @submit.prevent=\"uploadVideoIntro\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"addVideoIntroModal\">\n              {{ trans('Add Video intro') }}\n            </h5>\n            <button\n              type=\"button\"\n              class=\"btn-close\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n            ></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"dash-input-wrapper mb-1\">\n              <label for=\"\">{{ trans('Youtube video link') }}</label>\n              <input\n                type=\"text\"\n                v-model=\"videoIntroForm.video_intro\"\n                placeholder=\"enter a youtube video link here\"\n              />\n              <InputFieldError :message=\"videoIntroForm.errors.video_intro\" />\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-eight py-2\" data-bs-dismiss=\"modal\">\n              {{ trans('Close') }}\n            </button>\n            <SpinnerBtn\n              type=\"submit\"\n              classes=\"btn-one d-flex align-items-center\"\n              :processing=\"videoIntroForm.processing\"\n              :btn-text=\"trans('Save')\"\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Head, router } from \"@inertiajs/vue3\";\nimport UserLayout from \"@/Layouts/User.vue\";\nimport Paginate from \"@/Components/WebPaginate.vue\";\nimport NiceSelect from \"@/Components/NiceSelect.vue\";\nimport { ref, watch } from \"vue\";\nimport moment from \"moment\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\nconst { textExcerpt } = sharedComposable();\ndefineOptions({ layout: UserLayout });\nconst props = defineProps([\"reviews\"]);\nconst sorts = [\n  {\n    label: \"Latest\",\n    value: \"asc\",\n  },\n  {\n    label: \"Oldest\",\n    value: \"desc\",\n  },\n];\nconst filterForm = ref({\n  sort: \"\",\n});\nwatch(\n  () => filterForm.value.sort,\n  () => {\n    router.get(route(\"user-job.reviews\"), filterForm.value, {\n      preserveState: true,\n    });\n  }\n);\n</script>\n\n<template>\n  <Head :title=\"trans('Job Reviews')\" />\n\n  <div class=\"mb-40 d-flex align-items-center justify-content-between lg-mb-30\">\n    <h2 class=\"main-title m0\">{{ trans(\"Job Reviews\") }}</h2>\n    <div class=\"short-filter d-flex align-items-center\">\n      <div class=\"text-dark fw-500 text-nowrap me-2\">{{ trans(\"Sort by\") }}:</div>\n      <NiceSelect\n        v-model=\"filterForm.sort\"\n        :options=\"sorts\"\n        value-by=\"value\"\n        label=\"label\"\n        placeholder=\"Default\"\n      />\n    </div>\n  </div>\n\n  <div class=\"bg-white card-box border-20\">\n    <div class=\"table-responsive\" v-if=\"reviews.total\">\n      <table class=\"table job-alert-table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">{{ trans(\"Company\") }}</th>\n            <th scope=\"col\">{{ trans(\"Job\") }}</th>\n            <th scope=\"col\">{{ trans(\"Ratting\") }}</th>\n            <th scope=\"col\">{{ trans(\"Comment\") }}</th>\n            <th scope=\"col\">{{ trans(\"Created At\") }}</th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody class=\"border-0\">\n          <tr v-for=\"review in reviews.data\">\n            <td>\n              <div class=\"gap-3 d-flex align-items-center\" v-if=\"review.company\">\n                <img\n                  class=\"review-avatar-img\"\n                  v-lazy=\"\n                    review.company?.avatar == null\n                      ? `https://ui-avatars.com/api/?name=${review.company?.name}`\n                      : `${review.company?.avatar}`\n                  \"\n                />\n                <a\n                  target=\"_blank\"\n                  class=\"fw-bold\"\n                  :href=\"route('companies.show', review.company?.username)\"\n                  >{{ review.company?.name }}</a\n                >\n              </div>\n            </td>\n\n            <td>\n              <div v-if=\"review.job?.id\">\n                <a target=\"_blank\" :href=\"route('jobs.show', review.job.slug)\">\n                  {{ review.job.title }}\n                </a>\n              </div>\n              <span v-else>NA</span>\n            </td>\n\n            <td>{{ review.ratting }} {{ trans(\"Star\") }}</td>\n            <td>{{ textExcerpt(review.comment, 30) }}</td>\n            <td>\n              {{ moment(review.created_at).format(\"DD-MMM-YYYY\") }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <!-- /.table job-alert-table -->\n    </div>\n    <div v-else class=\"bg-white card-box border-20\">\n      <div class=\"text-center\">{{ trans(\"No record found\") }}</div>\n    </div>\n  </div>\n\n  <div class=\"d-flex justify-content-end mt-30\">\n    <Paginate :links=\"reviews.links\" />\n  </div>\n</template>\n","<script setup>\nimport { Head, Link, useForm } from \"@inertiajs/vue3\";\nimport UserLayout from \"@/Layouts/User.vue\";\nimport Paginate from \"@/Components/Paginate.vue\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\nimport NiceSelect from \"@/Components/NiceSelect.vue\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport { modal } from \"@/Composables/modalComposable\";\nconst { formatNumber, copyToClipboard } = sharedComposable();\n\ndefineOptions({ layout: UserLayout });\ndefineProps([\"jobs\"]);\n\nconst toggleBookmark = (job) => {\n  modal.init(route(\"jobs.bookmark\", job), {\n    callback: () => {\n      let form = useForm({});\n      form.post(route(\"jobs.bookmark\", job), {\n        preserveScroll: true,\n        onSuccess: () => {\n          notify.success(\"Removed successfully\");\n        },\n      });\n    },\n  });\n};\n\nconst sorts = [\n  {\n    value: \"asc\",\n    label: \"Newest\",\n  },\n  {\n    value: \"desc\",\n    label: \"Oldest\",\n  },\n];\n\nconst sortForm = useForm({\n  order_by: \"\",\n});\n\nconst sortSubmit = () => {\n  sortForm.get(window.location.href, {\n    preserveState: true,\n  });\n};\n</script>\n\n<template>\n  <Head title=\"Saved Jobs\" />\n\n  <div class=\"mb-40 d-flex align-items-center justify-content-between lg-mb-30\">\n    <h2 class=\"main-title m0\">{{ trans(\"Saved Job\") }}</h2>\n    <div class=\"short-filter d-flex align-items-center\">\n      <div class=\"text-dark fw-500 me-2\">{{ trans(\"Sort by\") }}:</div>\n      <NiceSelect\n        v-model=\"sortForm.order_by\"\n        :options=\"sorts\"\n        label=\"label\"\n        value-by=\"value\"\n        placeholder=\"Default\"\n        @change=\"sortSubmit\"\n      />\n    </div>\n  </div>\n\n  <div v-if=\"jobs.total\" class=\"wrapper\">\n    <div\n      v-for=\"(job, index) in jobs.data\"\n      :key=\"index\"\n      class=\"mb-20 overflow-visible job-list-one style-two position-relative\"\n    >\n      <div class=\"row justify-content-between align-items-center\">\n        <div class=\"col-xxl-3 col-lg-4\">\n          <div class=\"job-title d-flex align-items-center\">\n            <a target=\"_blank\" :href=\"route('jobs.show', job.slug)\" class=\"logo\"\n              ><img\n                v-lazy=\"\n                  job.user?.avatar == null\n                    ? `https://ui-avatars.com/api/?name=${job.user?.name}`\n                    : `${job.user?.avatar}`\n                \"\n                alt=\"\"\n                class=\"m-auto lazy-img\"\n            />\n            </a>\n            <a target=\"_blank\" :href=\"route('jobs.show', job.slug)\" class=\"title fw-500 tran3s\">{{\n              job.title\n            }}</a>\n          </div>\n        </div>\n        <div class=\"col-lg-3 col-md-4 col-sm-6 ms-auto\">\n          <a href=\"#\" class=\"job-duration fw-500\">{{ job.type }}</a>\n          <div class=\"job-salary\">\n            <span\n              class=\"fw-500 text-dark\"\n              v-if=\"\n                job.salary_range &&\n                job.salary_range.split('-')[0] > 0 &&\n                job.salary_range.split('-')[1] > 0\n              \"\n            >\n              {{ formatNumber(job.salary_range.split(\"-\")[0] ?? 0, 0) }}-{{\n                formatNumber(job.salary_range.split(\"-\")[1] ?? 0, 0)\n              }}\n            </span>\n            <span class=\"fw-500 text-dark\" v-else>\n              {{ trans(\"Negotiable \") }}\n            </span>\n            / {{ job.salary_type }} .\n            {{ job.expertise }}\n          </div>\n        </div>\n        <div class=\"col-xxl-2 col-lg-3 col-md-4 col-sm-6 xs-mt-10 ms-auto\">\n          <div class=\"job-location\">\n            <a href=\"#\"> {{ job.address }}</a>\n          </div>\n          <div class=\"job-category\">\n            {{ job.categories.map((item) => item.title).join(\", \") }}\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-md-4\">\n          <div class=\"action-dots float-end\">\n            <button\n              class=\"action-btn dropdown-toggle\"\n              type=\"button\"\n              data-bs-toggle=\"dropdown\"\n              aria-expanded=\"false\"\n            >\n              <span></span>\n            </button>\n            <ul class=\"dropdown-menu dropdown-menu-end\">\n              <li>\n                <Link class=\"dropdown-item\" :href=\"route('jobs.show', job.slug)\"\n                  ><img\n                    src=\"/assets/dashboard/images/icon/icon_18.svg\"\n                    alt=\"\"\n                    class=\"lazy-img\"\n                  />\n                  {{ trans(\"View in website\") }}</Link\n                >\n              </li>\n              <li>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  @click=\"copyToClipboard(route('jobs.show', job.slug))\"\n                  ><img\n                    src=\"/assets/dashboard/images/icon/icon_19.svg\"\n                    alt=\"\"\n                    class=\"lazy-img\"\n                  />\n                  {{ trans(\"Copy link\") }}</a\n                >\n              </li>\n\n              <li>\n                <a class=\"dropdown-item\" href=\"#\" @click=\"toggleBookmark(job)\"\n                  ><img\n                    src=\"/assets/dashboard/images/icon/icon_21.svg\"\n                    alt=\"\"\n                    class=\"lazy-img\"\n                  />\n                  {{ trans(\"Delete\") }}</a\n                >\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div v-else class=\"text-center bg-white fw-bold card-box\">\n    {{ trans(\"No job found\") }}\n  </div>\n\n  <div class=\"d-flex justify-content-end mt-30\">\n    <Paginate :links=\"jobs.links\" />\n  </div>\n</template>\n","<script setup>\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport { Head, useForm } from '@inertiajs/vue3'\nimport UserLayout from '@/Layouts/User.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport trans from '@/Composables/transComposable'\n\ndefineOptions({ layout: UserLayout })\n\nconst form = useForm({\n  current_password: '',\n  new_password: '',\n  new_password_confirmation: ''\n})\n\nconst submit = () => {\n  form.put(route('user.update-password'), {\n    onSuccess: () => {\n      notify.success(trans('password has been updated successfully'))\n      form.reset()\n    }\n  })\n}\n</script>\n\n<template>\n  <Head :title=\"trans('Change Password')\" />\n  <h2 class=\"main-title\">{{ trans('Change Password') }}</h2>\n\n  <div class=\"card-box border-20 bg-white\">\n    <form @submit.prevent=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"dash-input-wrapper mb-20\">\n            <label for=\"\"> {{ trans('Old Password') }} *</label>\n            <input type=\"password\" v-model=\"form.current_password\" />\n            <InputFieldError :message=\"form.errors.current_password\" />\n          </div>\n          <!-- /.dash-input-wrapper -->\n        </div>\n        <div class=\"col-12\">\n          <div class=\"dash-input-wrapper mb-20\">\n            <label for=\"\"> {{ trans('New Password') }} *</label>\n            <input type=\"password\" v-model=\"form.new_password\" />\n            <InputFieldError :message=\"form.errors.new_password\" />\n          </div>\n          <!-- /.dash-input-wrapper -->\n        </div>\n        <div class=\"col-12\">\n          <div class=\"dash-input-wrapper mb-20\">\n            <label for=\"\">{{ trans('Confirm Password') }} *</label>\n            <input type=\"password\" v-model=\"form.new_password_confirmation\" />\n            <InputFieldError :message=\"form.errors.new_password_confirmation\" />\n          </div>\n          <!-- /.dash-input-wrapper -->\n        </div>\n      </div>\n\n      <div class=\"button-group d-inline-flex align-items-center\">\n        <button type=\"submit\" class=\"dash-btn-two tran3s rounded-3\">\n          {{ trans('Save Changes') }}\n        </button>\n      </div>\n    </form>\n  </div>\n</template>\n","<script setup>\nimport { Head, Link, useForm } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nimport InputFieldError from \"@/Components/InputFieldError.vue\";\nimport UserLayout from \"@/Layouts/User.vue\";\nimport notify from \"@/Plugins/Admin/notify\";\ndefineOptions({ layout: UserLayout });\n\nconst props = defineProps([\"user\"]);\n\nconst form = useForm({\n  name: props.user.name,\n  email: props.user.email,\n  phone: props.user.phone,\n  current_password: \"\",\n});\n\nconst submit = () => {\n  let uri = route(\"user.account-settings.update\");\n  form.put(uri, {\n    preserveState: true,\n    onSuccess: () => {\n      notify.success(trans(\"Account has been updated successfully\"));\n      form.reset('current_password');\n    },\n  });\n};\n</script>\n\n<template>\n  <Head :title=\"trans('Account Settings')\" />\n  <h2 class=\"main-title\">{{ trans(\"Account Settings\") }}</h2>\n\n  <div class=\"bg-white card-box border-20\">\n    <h4 class=\"dash-title-three\">{{ trans(\"Edit & Update\") }}</h4>\n    <form @submit.prevent=\"submit\" method=\"post\">\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"mb-20 dash-input-wrapper\">\n            <label for=\"\">{{ trans(\"Full Name\") }}</label>\n            <input type=\"text\" v-model=\"form.name\" placeholder=\"Zubayer\" />\n            <InputFieldError :message=\"form.errors.name\" />\n          </div>\n          <!-- /.dash-input-wrapper -->\n        </div>\n        <div class=\"col-lg-12\" v-if=\"!user.provider_id\">\n          <div class=\"mb-20 dash-input-wrapper\">\n            <label for=\"\">{{ trans(\"Email\") }}</label>\n            <input\n              type=\"email\"\n              v-model=\"form.email\"\n              placeholder=\"zubayerhasan@gmal.com\"\n            />\n            <InputFieldError :message=\"form.errors.email\" />\n          </div>\n          <!-- /.dash-input-wrapper -->\n        </div>\n        <div class=\"col-lg-12\">\n          <div class=\"mb-20 dash-input-wrapper\">\n            <label for=\"\">{{ trans(\"Phone Number\") }}</label>\n            <input type=\"tel\" v-model=\"form.phone\" placeholder=\"+810 989 989 989\" />\n            <InputFieldError :message=\"form.errors.phone\" />\n          </div>\n          <!-- /.dash-input-wrapper -->\n        </div>\n        <div class=\"col-lg-12\" v-if=\"!user.provider_id\">\n          <div class=\"mb-20 dash-input-wrapper\">\n            <label for=\"\">{{ trans(\"Current Password\") }}</label>\n            <input\n              type=\"password\"\n              v-model=\"form.current_password\"\n              placeholder=\"enter your current password\"\n            />\n\n            <InputFieldError :message=\"form.errors.current_password\" />\n\n            <div\n              class=\"mt-5 info-text d-sm-flex align-items-center justify-content-between\"\n            >\n              <p class=\"m0\">\n                {{ trans(\"Want to change the password?\") }}\n                <Link :href=\"route('user.change-password')\" class=\"fw-500\">\n                  {{ trans(\"Click here\") }}</Link\n                >\n              </p>\n              <Link :href=\"route('user.change-password')\" class=\"fw-500 chng-pass\">\n                {{ trans(\"Change Password\") }}</Link\n              >\n            </div>\n          </div>\n          <!-- /.dash-input-wrapper -->\n        </div>\n      </div>\n\n      <div class=\"button-group d-inline-flex align-items-center mt-30\">\n        <button type=\"submit\" class=\"dash-btn-two tran3s me-3 rounded-3\">\n          {{ trans(\"Save\") }}\n        </button>\n        <Link :href=\"route('user.dashboard')\" class=\"dash-cancel-btn tran3s\"\n          >{{ trans(\"Cancel\") }}\n        </Link>\n      </div>\n    </form>\n  </div>\n</template>\n","<script setup>\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport UserLayout from '@/Layouts/User.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport { Head, useForm } from '@inertiajs/vue3'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\ndefineOptions({ layout: UserLayout })\n\nconst form = useForm({\n  subject: '',\n  message: ''\n})\n\nconst submit = () => {\n  form.post(route('user.support.store'), {\n    onSuccess: () => {\n      notify.success('Updated Successfully')\n    }\n  })\n}\n</script>\n\n<template>\n  <Head :title=\"trans('Create Ticket')\" />\n\n  <h2 class=\"main-title\">{{ trans('Create Ticket') }}</h2>\n\n  <form @submit.prevent=\"submit\">\n    <div class=\"card-box border-20 bg-white\">\n      <div class=\"dash-input-wrapper mb-30\">\n        <label for=\"\">{{ trans('Subject') }}*</label>\n        <input type=\"text\" placeholder=\"Subject\" v-model=\"form.subject\" />\n        <InputFieldError :message=\"form.errors.subject\" />\n      </div>\n\n      <div class=\"dash-input-wrapper\">\n        <label for=\"\">{{ trans('Message') }}*</label>\n        <textarea\n          required\n          v-model=\"form.message\"\n          class=\"size-lg\"\n          placeholder=\"Write message....\"\n        ></textarea>\n        <InputFieldError :message=\"form.errors.message\" />\n      </div>\n    </div>\n    <div class=\"button-group d-inline-flex align-items-center mt-30\">\n      <SpinnerBtn :processing=\"form.processing\" btn-text=\"Submit\" />\n    </div>\n  </form>\n</template>\n","<script setup>\nimport UserLayout from '@/Layouts/User.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport { router, Head } from '@inertiajs/vue3'\nimport moment from 'moment'\nimport { ref } from 'vue'\ndefineOptions({ layout: UserLayout })\n\nconst sorts = [\n  {\n    label: 'Open',\n    value: 'open'\n  },\n  {\n    label: 'Pending',\n    value: 'pending'\n  },\n  {\n    label: 'Close',\n    value: 'close'\n  }\n]\ndefineProps(['supports'])\nconst { pickBy } = sharedComposable()\nconst filterForm = ref({\n  order: '',\n  status: ''\n})\nconst filter = () => {\n  router.get(route('user.support.index'), pickBy(filterForm.value), {\n    preserveState: true\n  })\n}\nconst setOrder = (val) => {\n  filterForm.value.order = val\n  filter()\n}\n</script>\n\n<template>\n  <Head title=\"Supports\" />\n\n  <div class=\"d-sm-flex align-items-center justify-content-between lg-mb-30 mb-40\">\n    <h2 class=\"main-title m0\">{{ trans('Supports') }}</h2>\n    <div class=\"d-flex xs-mt-30 ms-auto\">\n      <div class=\"nav nav-tabs tab-filter-btn me-4\">\n        <button\n          @click=\"setOrder('')\"\n          :class=\"{ active: filterForm.order === '' }\"\n          class=\"nav-link\"\n          type=\"button\"\n        >\n          {{ trans('All') }}\n        </button>\n        <button\n          @click=\"setOrder('desc')\"\n          class=\"nav-link\"\n          :class=\"{ active: filterForm.order === 'desc' }\"\n          type=\"button\"\n        >\n          {{ trans('New') }}\n        </button>\n        <button\n          @click=\"setOrder('asc')\"\n          class=\"nav-link\"\n          :class=\"{ active: filterForm.order === 'asc' }\"\n          type=\"button\"\n        >\n          {{ trans('Old') }}\n        </button>\n      </div>\n      <div class=\"short-filter d-flex align-items-center ms-auto\">\n        <div class=\"text-dark fw-500 me-2\">{{ trans('Sort by') }}:</div>\n        <NiceSelect\n          v-model=\"filterForm.status\"\n          :options=\"sorts\"\n          value-by=\"value\"\n          label=\"label\"\n          placeholder=\"Default\"\n          @change=\"filter\"\n        />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card-box border-20 bg-white\">\n    <div class=\"tab-content\" id=\"nav-tabContent\">\n      <div class=\"tab-pane fade show active\" id=\"a1\" role=\"tabpanel\">\n        <div v-if=\"supports.total\" class=\"table-responsive\">\n          <table class=\"job-alert-table table\">\n            <thead>\n              <tr>\n                <th>{{ trans('Subject') }}</th>\n                <th>{{ trans('Total Replies') }}</th>\n                <th>{{ trans('Status') }}</th>\n                <th>\n                  {{ trans('Created At') }}\n                </th>\n                <th>{{ trans('Ticket') }}</th>\n              </tr>\n            </thead>\n            <tbody class=\"border-0\">\n              <tr\n                v-for=\"support in supports.data\"\n                :key=\"support.id\"\n                :class=\"{\n                  active: support.status == 1,\n                  expired: support.status == 0,\n                  pending: support.status == 2\n                }\"\n              >\n                <td>\n                  <Link :href=\"route('user.support.show', support.id)\">\n                    {{ support.subject }}\n                  </Link>\n                </td>\n                <td class=\"text-center\">\n                  {{ support.conversations_count }}\n                </td>\n                <td>\n                  <div class=\"job-status\">\n                    {{\n                      support.status == 2\n                        ? trans('Pending')\n                        : support.status == 1\n                        ? trans('Active')\n                        : trans('Closed')\n                    }}\n                  </div>\n                </td>\n                <td>\n                  {{ moment(support.created_at).format('D MMM y') }}\n                </td>\n                <td class=\"text-end\">\n                  <Link\n                    :href=\"route('user.support.show', support.id)\"\n                    class=\"save-btn rounded-circle tran3s fw-normal text-center\"\n                    ><i class=\"bi bi-eye\"></i>\n                  </Link>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <!-- /.table job-alert-table -->\n        </div>\n        <div class=\"text-center\" v-else>{{ trans('No record found') }}</div>\n      </div>\n    </div>\n  </div>\n  <!-- /.card-box -->\n\n  <div class=\"d-flex justify-content-end mt-30\">\n    <Paginate :links=\"supports.links\" />\n  </div>\n</template>\n","<script setup>\nimport { Head, useForm } from '@inertiajs/vue3'\nimport UserLayout from '@/Layouts/User.vue'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport notify from '@/Plugins/Admin/notify'\ndefineOptions({ layout: UserLayout })\n\nconst props = defineProps(['support'])\n\nconst form = useForm({\n  message: ''\n})\n\nconst submit = () => {\n  form.patch(route('user.support.update', props.support.id), {\n    onSuccess: () => {\n      form.reset()\n      notify.success('Submitted Successfully')\n    }\n  })\n}\n</script>\n\n<template>\n  <Head :title=\"trans('Messages')\" />\n  <h2 class=\"main-title m0 pb-40\">{{ trans('Subject') }} : {{ support.subject }}</h2>\n  <div class=\"row justify-content-center message-wrapper\">\n    <div class=\"col-lg-8 rounded bg-white p-4\">\n      <div class=\"open-email-container\">\n        <!-- /.email-header -->\n        <div class=\"max-h-22-r pt-5\">\n          <template v-for=\"reply in support.conversations\" :key=\"reply.id\">\n            <div class=\"email-body divider\">\n              <div class=\"ps-xxl-5 pe-xxl-5 d-flex align-items-center pe-4 ps-4\">\n                <img\n                  v-if=\"reply.is_admin == 1\"\n                  width=\"20\"\n                  height=\"20\"\n                  src=\"/assets/dashboard/images/icon/icon_41.svg\"\n                  alt=\"avatar\"\n                />\n                <p\n                  class=\"w-100 mt-3 pe-2 ps-2\"\n                  :class=\"reply.is_admin == 0 ? 'text-success text-end' : 'text-start'\"\n                >\n                  {{ reply.comment }}\n                </p>\n                <img\n                  v-if=\"reply.is_admin == 0\"\n                  width=\"20\"\n                  height=\"20\"\n                  src=\"/assets/dashboard/images/icon/icon_2.svg\"\n                  alt=\"avatar\"\n                />\n              </div>\n            </div>\n          </template>\n        </div>\n\n        <!-- /.email-body -->\n\n        <div class=\"email-footer\">\n          <div class=\"ps-xxl-5 pe-xxl-5 pe-4 ps-4\">\n            <div v-if=\"support.status !== 1\">{{ trans(\"You can't not send reply\") }}</div>\n            <div v-else class=\"compose-new-email-container\">\n              <div class=\"compose-body\">\n                <textarea v-model=\"form.message\" placeholder=\"Write message...\"> </textarea>\n                <InputFieldError :message=\"form.errors.message\" />\n              </div>\n\n              <div class=\"compose-email-footer d-flex justify-content-between position-relative\">\n                <div class=\"d-flex align-items-center\">\n                  <button type=\"button\" @click=\"form.message = ''\" class=\"delete-mail me-3\">\n                    <img src=\"/assets/dashboard/images/icon/icon_35.svg\" alt=\"\" class=\"lazy-img\" />\n                  </button>\n                  <button @click.prevent=\"submit\" class=\"reply-btn tran3s\">\n                    {{ trans('Reply') }}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import { ref, toValue } from 'vue'\n\nconst properties = ref({\n  categories: {\n    apiUrl: route('api.home-categories')\n  },\n\n  featuredCategories: {\n    apiUrl: route('api.home-featured-categories')\n  },\n  menuCategories: {\n    apiUrl: route('api.home-menu-categories')\n  },\n  \n  featuredServices: {\n    apiUrl: route('api.home-featured-services')\n  },\n  homeMenuServices: {\n    apiUrl: route('api.home-menu-services')\n  },\n\n  popularCategories: {\n    apiUrl: route('api.home-popular-categories')\n  },\n\n  services: {\n    apiUrl: route('api.home-services')\n  },\n  experts: {\n    apiUrl: route('api.home-experts')\n  },\n\n  features: {\n    apiUrl: route('api.home-features')\n  },\n  feedbacks: {\n    apiUrl: route('api.home-feedbacks')\n  },\n  brands: {\n    apiUrl: route('api.home-brands')\n  },\n  blogs: {\n    apiUrl: route('api.home-blogs')\n  },\n  faqs: {\n    apiUrl: route('api.home-faqs')\n  },\n  companies: {\n    apiUrl: route('api.home-companies')\n  },\n  jobList: {\n    apiUrl: route('api.home-jobs-list')\n  },\n  totalJobsCount: {\n    apiUrl: route('api.total-jobs-count')\n  },\n  countries: {\n    apiUrl: route('api.locations')\n  }\n})\n\nconst get = async propertyKey => {\n  let module = properties.value[propertyKey]\n  if (!module) {\n    console.error(`The module: ${propertyKey} is not supported for lazyApiService`)\n    return false\n  }\n  if (!module.apiUrl) {\n    console.error(`The module: ${propertyKey}.apiUrl is not set for lazyApiService`)\n    return false\n  }\n\n  // now we have valid module and apiURL\n  if (!module.isFetched) {\n    await fetch(toValue(module.apiUrl))\n      .then(res => res.json())\n      .then(json => {\n        module.items = json\n        module.isFetched = true\n      })\n      .catch(err => console.error(err))\n  }\n  return module.items\n}\n\nexport default {\n  get\n}\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nconst features = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('features').then((res) => {\n    features.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"how-it-works position-relative bg-color pt-110 lg-pt-80 pb-110 lg-pb-70\">\n    <div class=\"container\">\n      <div class=\"title-one mb-65 lg-mb-40 text-center\">\n        <h2 class=\"text-white\">\n          {{ trans('How it’s') }}\n          <span class=\"position-relative\"\n            >{{ trans('work?') }}\n            <img src=\"/assets/images/shape/shape_07.svg\" alt=\"\" class=\"lazy-img shapes shape\"\n          /></span>\n        </h2>\n      </div>\n\n      <div class=\"row justify-content-center\">\n        <div\n          class=\"col-xxl-3 col-lg-4 col-md-6\"\n          v-for=\"(item, index) in features\"\n          :key=\"index\"\n          :class=\"{ 'm-auto': index == 1 }\"\n        >\n          <div\n            class=\"card-style-two mt-25 wow fadeInUp text-center\"\n            :class=\"{ 'position-relative arrow': index == 1 }\"\n          >\n            <div\n              class=\"icon rounded-circle d-flex align-items-center justify-content-center m-auto\"\n            >\n              <img v-lazy=\"item.preview\" alt=\"preview\" class=\"m-h-40px\" />\n            </div>\n            <div class=\"title fw-500 text-white\">{{ item.title }}</div>\n            <p :title=\"item.full_text\">{{ item.text }}</p>\n          </div>\n          <!-- /.card-style-two -->\n        </div>\n      </div>\n    </div>\n    <img src=\"/assets/images/shape/shape_08.svg\" alt=\"\" class=\"lazy-img shapes shape_01\" />\n    <img src=\"/assets/images/shape/shape_09.svg\" alt=\"\" class=\"lazy-img shapes shape_02\" />\n  </section>\n</template>\n","<script setup>\nimport { Swiper, SwiperSlide } from 'swiper/vue'\nimport { Navigation } from 'swiper'\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nimport 'swiper/css'\nimport 'swiper/css/navigation'\n\nconst navigationOptions = {\n  nextEl: '.next_a',\n  prevEl: '.prev_a'\n}\nconst modules = [Navigation]\n\nconst feedbacks = ref([])\nconst brands = ref([])\nconst loading = ref(true)\nconst breakpoints = {\n  769: {\n    slidesPerView: 2,\n    spaceBetween: 10\n  }\n}\nonMounted(() => {\n  homeApiService.get('feedbacks').then((res) => {\n    feedbacks.value = res\n  })\n\n  homeApiService.get('brands').then((res) => {\n    brands.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"feedback-section-one pt-180 xl-pt-150 lg-pt-100\">\n    <div class=\"position-relative container\">\n      <div class=\"row\">\n        <div class=\"col-lg-5 col-md-6\">\n          <div class=\"title-one text-md-start mb-65 md-mb-50 text-center\">\n            <h2>{{ trans('Trusted by leading startups.') }}</h2>\n          </div>\n        </div>\n      </div>\n\n      <Swiper :breakpoints=\"breakpoints\" :modules=\"modules\" :navigation=\"navigationOptions\">\n        <SwiperSlide class=\"feedback-block-one\" v-for=\"(item, index) in feedbacks\" :key=\"index\">\n          <div class=\"logo\">\n            <img v-lazy=\"item.banner_logo\" alt=\"image\" />\n          </div>\n          <blockquote class=\"fw-500 mt-50 md-mt-30 mb-50 md-mb-30\">“{{ item.review }}”</blockquote>\n          <div class=\"name text-dark\">\n            <span class=\"fw-500\">{{ item.author }},</span> {{ item.author_designation }}\n          </div>\n          <div\n            class=\"review md-pt-20 md-mt-30 d-flex justify-content-between align-items-center mt-40 pt-40\"\n          >\n            <div class=\"text-md fw-500 text-dark\">\n              {{ item.ratting_point }}.0 {{ item.rating_type }}\n            </div>\n            <ul class=\"style-none d-flex\">\n              <li v-for=\"sl in 5\" :key=\"sl\">\n                <a href=\"#\"\n                  ><i :class=\"sl <= item.ratting_point ? 'bi bi-star-fill' : 'bi bi-star'\"></i\n                ></a>\n              </li>\n            </ul>\n          </div>\n        </SwiperSlide>\n      </Swiper>\n\n      <ul\n        v-show=\"feedbacks?.length > 2\"\n        class=\"slider-arrows slick-arrow-one d-flex justify-content-center style-none sm-mt-30\"\n      >\n        <li class=\"prev_a slick-arrow\">\n          <i class=\"bi bi-arrow-left\"></i>\n        </li>\n        <li class=\"next_a slick-arrow\">\n          <i class=\"bi bi-arrow-right\"></i>\n        </li>\n      </ul>\n\n      <div class=\"partner-logos pt-150 xl-pt-120 md-pt-80 sm-pt-40 md-pb-40 pb-80\">\n        <Swiper :slides-per-view=\"6\" :space-between=\"30\">\n          <SwiperSlide class=\"item\" v-for=\"(item, index) in brands\" :key=\"index\">\n            <img v-lazy=\"item.preview\" alt=\"image\" />\n          </SwiperSlide>\n        </Swiper>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup></script>\n\n<template>\n  <section class=\"job-portal-intro\">\n    <div class=\"container\">\n      <div class=\"wrapper bottom-border pt-65 md-pt-50 pb-65 md-pb-50\">\n        <div class=\"row align-items-center\">\n          <div class=\"col-lg-7\">\n            <div class=\"text-center text-lg-start\">\n              <h2>{{ trans(\"Most complete job portal.\") }}</h2>\n              <p class=\"text-md m0 md-pb-20\">\n                {{ trans(\"Signup and start find your job or talents.\") }}\n              </p>\n            </div>\n          </div>\n          <div class=\"col-lg-5\">\n            <ul\n              class=\"btn-group style-none d-flex flex-wrap justify-content-center justify-content-lg-end\"\n            >\n              <li class=\"me-2\">\n                <Link href=\"/jobs\" class=\"btn-three\">{{\n                  trans(\"Looking for job?\")\n                }}</Link>\n              </li>\n              <li class=\"ms-2\">\n                <Link href=\"/employer/jobs/create\" class=\"btn-four\">{{\n                  trans(\"Post a job\")\n                }}</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { computed } from \"vue\";\nimport { useThemeLoaderStore } from \"@/Store/themeLoaderStore\";\nconst themeLoader = useThemeLoaderStore();\nimport sharedComposable from \"@/Composables/sharedComposable\";\nconst { textExcerpt } = sharedComposable();\ndefineProps({\n  title: String,\n  href: String,\n  hrefText: String,\n  subtitle: String,\n});\n\nconst breadcrumbColor = computed(() => {\n  const themes = [\"One\", \"Six\"];\n  if (themes.includes(themeLoader.theme)) {\n    return \"\";\n  }\n  return \"inner-breadcrumb-colors\";\n});\n</script>\n<template>\n  <div class=\"inner-banner-one position-relative\" :class=\"breadcrumbColor\">\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"row\">\n          <div class=\"m-auto text-center\">\n            <div class=\"title-two\">\n              <h2 :title=\"title\">{{ textExcerpt(title || \"Title\", 40) }}</h2>\n            </div>\n            <ul class=\"style-none d-flex justify-content-center page-pagination mt-15\">\n              <li>\n                <Link v-if=\"href\" :href=\"href\">\n                  {{ hrefText }}\n                </Link>\n                <template>{{ trans(\"Home\") }} </template>\n              </li>\n              <li><i class=\"bi bi-chevron-right\"></i></li>\n              <li>{{ textExcerpt(subtitle, 60) }}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <img\n      v-lazy=\"'/assets/images/shape/shape_02.svg'\"\n      alt=\"shape\"\n      class=\"lazy-img shapes shape_01\"\n    />\n    <img\n      v-lazy=\"'/assets/images/shape/shape_03.svg'\"\n      alt=\"shape\"\n      class=\"lazy-img shapes shape_02\"\n    />\n  </div>\n</template>\n","<script setup>\nimport DefaultLayout from \"@/Layouts/Default.vue\";\nimport FeatureSection from \"@/Pages/Web/Home/One/Partials/FeatureSection.vue\";\nimport FeedbackSection from \"@/Pages/Web/Home/One/Partials/FeedbackSection.vue\";\nimport JobIntro from \"@/Pages/Web/Candidate/Partials/JobIntro.vue\";\nimport { Head } from \"@inertiajs/vue3\";\nimport Breadcrumb from \"@/Components/Breadcrumb.vue\";\ndefineOptions({ layout: DefaultLayout });\nconst { about, home, seo } = defineProps([\"about\", \"home\", \"seo\"]);\n</script>\n\n<template>\n  <Head :title=\"seo.site_name\" />\n\n  <Breadcrumb\n    :title=\"trans('About us')\"\n    href=\"/\"\n    :href-text=\"trans('Home')\"\n    :subtitle=\"trans('About')\"\n  />\n  <!-- /.inner-banner-one -->\n\n  <section class=\"text-feature-three position-relative pt-100 lg-pt-80 md-pt-50\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"m-auto col-xxl-11\">\n          <div class=\"row\">\n            <div class=\"col-lg-5\">\n              <div class=\"title-one mt-30 md-mb-40\">\n                <h2 class=\"fw-500\">{{ about.cta_s1.title }}</h2>\n              </div>\n            </div>\n            <div class=\"col-lg-6 ms-auto\">\n              <div class=\"wow fadeInRight\">\n                <div\n                  class=\"accordion accordion-style-one color-two ps-xxl-5 ms-xxl-4\"\n                  id=\"accordionOne\"\n                >\n                  <div\n                    v-for=\"(item, index) in about.cta_s1.features\"\n                    :key=\"index\"\n                    class=\"accordion-item\"\n                  >\n                    <div class=\"accordion-header\" :id=\"`item${index}`\">\n                      <button\n                        class=\"accordion-button\"\n                        :class=\"{ collapsed: index != 0 }\"\n                        type=\"button\"\n                        data-bs-toggle=\"collapse\"\n                        :data-bs-target=\"`#collapse${index}`\"\n                        aria-expanded=\"false\"\n                        :aria-controls=\"`collapse${index}`\"\n                      >\n                        {{ item.title }}\n                      </button>\n                    </div>\n                    <div\n                      :id=\"`collapse${index}`\"\n                      class=\"accordion-collapse collapse\"\n                      :class=\"{ show: index == 0 }\"\n                      data-bs-parent=\"#accordionOne\"\n                    >\n                      <div class=\"accordion-body\">\n                        <p>{{ item.body }}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div\n            class=\"video-post d-flex align-items-center justify-content-center mt-100 lg-mt-50 mb-50 lg-mb-30\"\n            :style=\"{ backgroundImage: `url(${about.video_s1.image})` }\"\n          >\n            <a\n              class=\"text-center fancybox rounded-circle video-icon tran3s\"\n              data-fancybox=\"\"\n              :href=\"about.video_s1.link\"\n            >\n              <i class=\"bi bi-play\"></i>\n            </a>\n          </div>\n          <div class=\"border-bottom pb-50 lg-pb-10\">\n            <div class=\"row\">\n              <div class=\"col-sm-4\">\n                <div class=\"text-center counter-block-one mt-25 wow fadeInUp\">\n                  <h2 class=\"main-count fw-500\">\n                    {{ about.video_s1.completed_jobs }}\n                  </h2>\n                  <p>{{ trans(\"Completed Jobs\") }}</p>\n                </div>\n                <!-- /.counter-block-one -->\n              </div>\n              <div class=\"col-sm-4\">\n                <div\n                  class=\"text-center counter-block-one mt-25 wow fadeInUp\"\n                  data-wow-delay=\"0.2s\"\n                >\n                  <h2 class=\"main-count fw-500\">\n                    {{ about.video_s1.clients }}\n                  </h2>\n                  <p>{{ trans(\"Businesses WorldWide\") }}</p>\n                </div>\n                <!-- /.counter-block-one -->\n              </div>\n              <div class=\"col-sm-4\">\n                <div\n                  class=\"text-center counter-block-one mt-25 wow fadeInUp\"\n                  data-wow-delay=\"0.35s\"\n                >\n                  <h2 class=\"main-count fw-500\">\n                    {{ about.video_s1.applied_jobs }}\n                  </h2>\n                  <p>{{ trans(\"Applied Jobs\") }}</p>\n                </div>\n                <!-- /.counter-block-one -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <!-- /.text-feature-three -->\n\n  <section\n    class=\"text-feature-one position-relative pt-180 xl-pt-150 lg-pt-100 md-pt-80 pb-180 xl-pb-150\"\n  >\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-lg-5 order-lg-last\">\n          <div class=\"ps-xxl-4 wow fadeInRight\">\n            <div class=\"title-one\">\n              <h2>{{ about.cta_s2.title }}</h2>\n            </div>\n            <p class=\"mt-40 mb-40 md-mt-20 md-mb-20\">\n              {{ about.cta_s2.subtitle }}\n            </p>\n            <ul v-if=\"about.cta_s2?.features?.length\" class=\"list-style-one style-none\">\n              <li v-for=\"item in about.cta_s2.features.split(',')\" :key=\"item\">\n                {{ item }}\n              </li>\n            </ul>\n            <a :href=\"about.cta_s2.btn_link\" class=\"btn-one lg mt-50 md-mt-30\">{{\n              about.cta_s2.btn_text\n            }}</a>\n          </div>\n        </div>\n        <div class=\"m-auto col-lg-7 col-md-11 order-lg-first\">\n          <div class=\"img-data position-relative pe-xl-5 me-xl-5 md-mt-50\">\n            <div class=\"row\">\n              <div class=\"col-md-6 col-sm-8 col-10\">\n                <img v-lazy=\"about.cta_s2.image1\" alt=\"image\" class=\"lazy-img img01\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-4 col-5\">\n                <img\n                  v-lazy=\"about.cta_s2.image2\"\n                  alt=\"image\"\n                  class=\"lazy-img img02 mt-35\"\n                />\n              </div>\n              <div class=\"col-md-6 col-7\">\n                <img\n                  v-lazy=\"about.cta_s2.image3\"\n                  alt=\"image\"\n                  class=\"lazy-img img01 mt-35\"\n                />\n              </div>\n            </div>\n            <img\n              v-lazy=\"about.cta_s2.image4\"\n              alt=\"image\"\n              class=\"lazy-img shapes screen01 wow fadeInRight\"\n            />\n            <img\n              v-lazy=\"about.cta_s2.image5\"\n              alt=\"image\"\n              class=\"lazy-img shapes screen02 wow fadeInUp\"\n            />\n            <img\n              v-lazy=\"about.cta_s2.image6\"\n              alt=\"image\"\n              class=\"lazy-img shapes screen03 wow fadeInUp\"\n            />\n            <img\n              src=\"/assets/images/shape/shape_06.svg\"\n              alt=\"image\"\n              class=\"lazy-img shapes shape_01\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <FeatureSection />\n  <FeedbackSection />\n  <JobIntro />\n</template>\n","<script setup>\nimport { Link } from '@inertiajs/vue3'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport moment from 'moment'\nconst { textExcerpt } = sharedComposable()\nconst { post } = defineProps(['post'])\n\n</script>\n\n<template>\n  <article class=\"blog-meta-two mb-75 lg-mb-40\">\n    <figure class=\"post-img m0\">\n      <Link :href=\"route('blogs.show', post)\" class=\"w-100 d-block\"\n        ><img v-lazy=\"post.preview.value\" alt=\"preview\" class=\"lazy-img w-100 tran4s\"\n      /></Link>\n      <Link v-if=\"post?.categories\" :href=\"route('blogs.show', post)\" class=\"tags color-two fw-500\">\n        {{ post.categories?.[0]?.title }}\n      </Link>\n    </figure>\n    <div class=\"post-data mt-35 lg-mt-20\">\n      <div class=\"date\">\n        <span class=\"fw-500 text-dark\" v-show=\"post.featured\">{{ trans('Featured') }} - </span>\n        <Link :href=\"route('blogs.show', post)\">{{ moment(post.created_at).format('DD MMM, YYYY') }}</Link>\n      </div>\n      <Link :href=\"route('blogs.show', post)\">\n        <h4 class=\"tran3s blog-title\">{{ textExcerpt(post.title, 60) }}</h4>\n      </Link>\n      <Link :href=\"route('blogs.show', post)\" class=\"continue-btn tran3s d-flex align-items-center\">\n        <span class=\"fw-500 me-2\">{{ trans('Continue Reading') }}</span>\n        <i class=\"bi bi-arrow-right\"></i>\n      </Link>\n    </div>\n  </article>\n</template>\n","<script setup>\nimport { router } from \"@inertiajs/vue3\";\nimport moment from \"moment\";\nimport { ref } from \"vue\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\nconst { textExcerpt, getQueryParams } = sharedComposable();\n\nconst props = defineProps([\"categories\", \"recent_blogs\", \"tags\"]);\nconst request = getQueryParams();\nconst searchInput = ref(request.s ?? \"\");\n\nconst submit = () => {\n  router.get(route(\"blogs.index\"), { s: searchInput.value });\n};\n</script>\n\n<template>\n  <div class=\"blog-sidebar ps-xl-4 md-mt-60\">\n    <form @submit.prevent=\"submit\" class=\"search-form position-relative mb-50 lg-mb-40\">\n      <input v-model=\"searchInput\" type=\"text\" placeholder=\"Search...\" />\n      <button><i class=\"bi bi-search\"></i></button>\n    </form>\n\n    <div class=\"category-list lg-mb-40 mb-60\" v-if=\"categories.length\">\n      <h3 class=\"sidebar-title\">{{ trans(\"Category\") }}</h3>\n      <ul class=\"style-none\">\n        <li v-for=\"(item, index) in categories\" :key=\"index\">\n          <Link :href=\"`/blogs/category/${item.slug}/${item.id}`\">\n            {{ item.title }} ({{ item.postcategories_count }})\n          </Link>\n        </li>\n      </ul>\n    </div>\n    <div class=\"sidebar-recent-news lg-mb-40 mb-60\">\n      <h4 class=\"sidebar-title\">{{ trans(\"Recent News\") }}</h4>\n      <template v-if=\"recent_blogs?.length\">\n        <div\n          v-for=\"(item, index) in recent_blogs\"\n          :key=\"index\"\n          class=\"pt-20 pb-20 news-block d-flex align-items-center border-top\"\n        >\n          <div>\n            <img v-lazy=\"item.preview?.value\" alt=\"img\" class=\"lazy-img\" />\n          </div>\n          <div class=\"post ps-4\">\n            <h4 class=\"mb-5\">\n              <Link :href=\"route('blogs.show', item)\" class=\"title tran3s\">\n                {{ textExcerpt(item.title, 60) }}</Link\n              >\n            </h4>\n            <div class=\"date\">{{ moment(item.created_at).format(\"DD MMM, YYYY\") }}</div>\n          </div>\n        </div>\n      </template>\n      <div v-else>{{ trans(\"no items found\") }}</div>\n    </div>\n    <div class=\"sidebar-keyword\" v-if=\"tags.length\">\n      <h4 class=\"sidebar-title\">{{ trans(\"Keywords\") }}</h4>\n      <ul class=\"flex-wrap style-none d-flex\">\n        <li v-for=\"(item, index) in tags\" :key=\"index\">\n          <Link :href=\"`/blogs/tag/${item.slug}/${item.id}`\"> {{ item.title }}</Link>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport JobIntro from '@/Pages/Web/Candidate/Partials/JobIntro.vue'\nimport SingleBlogPostStandard from '@/Components/SingleBlogPostStandard.vue'\nimport BlogSidebarRight from '@/Pages/Web/Blog/Partials/BlogSidebarRight.vue'\nimport WebPaginate from '@/Components/WebPaginate.vue'\nimport Breadcrumb from '@/Components/Breadcrumb.vue'\n\ndefineOptions({ layout: DefaultLayout })\n\nconst props = defineProps(['blogs', 'categories', 'recent_blogs', 'tags', 'meta'])\n</script>\n\n<template>\n  <Seo :metaData=\"meta\" />\n  <Breadcrumb\n    :title=\"trans('Blog')\"\n    href=\"/\"\n    :href-text=\"trans('Home')\"\n    :subtitle=\"trans('Blog')\"\n  />\n  <section class=\"blog-section pt-100 lg-pt-80 pb-120 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xxl-11 m-auto\">\n          <div class=\"row\">\n            <div class=\"col-lg-8\">\n              <template v-if=\"blogs.total\">\n                <SingleBlogPostStandard v-for=\"post in blogs.data\" :key=\"post.id\" :post=\"post\" />\n                <WebPaginate :links=\"blogs.links\" />\n              </template>\n              <h3 v-else class=\"text-muted text-center\">{{ trans('No blog posts') }}</h3>\n            </div>\n\n            <div class=\"col-lg-4\">\n              <BlogSidebarRight\n                :categories=\"categories\"\n                :tags=\"tags\"\n                :recent_blogs=\"recent_blogs\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <!-- ./blog-section -->\n\n  <JobIntro />\n</template>\n","<script setup>\nimport DefaultLayout from \"@/Layouts/Default.vue\";\nimport JobIntro from \"@/Pages/Web/Candidate/Partials/JobIntro.vue\";\nimport BlogSidebarRight from \"@/Pages/Web/Blog/Partials/BlogSidebarRight.vue\";\nimport moment from \"moment\";\nimport Breadcrumb from \"@/Components/Breadcrumb.vue\";\n\ndefineOptions({ layout: DefaultLayout });\n\nconst props = defineProps([\n  \"blog\",\n  \"categories\",\n  \"tags\",\n  \"recent_blogs\",\n  \"seo\",\n  \"nextBlog\",\n  \"lastBlog\",\n]);\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <Breadcrumb\n    :title=\"blog.title\"\n    href=\"/\"\n    :href-text=\"trans('Home')\"\n    :subtitle=\"trans('Blog')\"\n  />\n\n  <section class=\"blog-section pt-100 lg-pt-80\">\n    <div class=\"container\">\n      <div class=\"border-bottom pb-160 xl-pb-130 lg-pb-80\">\n        <div class=\"row\">\n          <div class=\"col-lg-8\">\n            <div class=\"blog-details-page pe-xxl-5 me-xxl-3\">\n              <article class=\"blog-details-meta\">\n                <div class=\"blog-pubish-date\">\n                  {{ blog.categories[0]?.title }} .\n                  {{ moment(blog.created_at).format(\"DD MMM, YYYY\") }}\n                </div>\n                <h2 class=\"blog-heading\">{{ blog.title }}</h2>\n                <div class=\"img-meta mb-15\">\n                  <img v-lazy=\"blog.preview?.value\" alt=\"preview\" class=\"lazy-img\" />\n                </div>\n\n                <h4>{{ trans('Overview') }}</h4>\n                <div v-html=\"blog.short_description?.value\"></div>\n                <br>\n                <hr />\n                <br>\n                <div v-html=\"blog.long_description?.value\"></div>\n\n                <div\n                  class=\"bottom-widget d-sm-flex align-items-center justify-content-between\"\n                >\n                  <ul class=\"pb-20 d-flex tags style-none\">\n                    <li>{{ trans(\"Tag\") }}:</li>\n                    <li>\n                      <Link\n                        v-for=\"(item, index) in blog.tags\"\n                        :key=\"index\"\n                        :href=\"`/blogs/tag/${item.slug}/${item.id}`\"\n                        >{{ item.title }}</Link\n                      >\n                    </li>\n                  </ul>\n                  <ul class=\"pb-20 d-flex share-icon align-items-center style-none\">\n                    <li>{{ trans(\"Share\") }}:</li>\n                    <li>\n                      <a\n                        target=\"_blank\"\n                        :href=\"`https://www.facebook.com/sharer/sharer.php?u=${route(\n                          'blogs.show',\n                          blog.slug\n                        )}`\"\n                        ><i class=\"bi bi-facebook\"></i\n                      ></a>\n                    </li>\n                    <li>\n                      <a\n                        target=\"_blank\"\n                        :href=\"`https://twitter.com/intent/tweet?url=${route(\n                          'blogs.show',\n                          blog.slug\n                        )}`\"\n                        ><i class=\"bi bi-twitter\"></i\n                      ></a>\n                    </li>\n                    <li>\n                      <a\n                        target=\"_blank\"\n                        :href=\"`https://www.linkedin.com/shareArticle?mini=true&url=${route(\n                          'blogs.show',\n                          blog.slug\n                        )}`\"\n                        ><i class=\"bi bi-linkedin\"></i\n                      ></a>\n                    </li>\n                  </ul>\n                </div>\n              </article>\n            </div>\n          </div>\n\n          <div class=\"col-lg-4\">\n            <BlogSidebarRight\n              :categories=\"categories\"\n              :tags=\"tags\"\n              :recent_blogs=\"recent_blogs\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <!-- ./blog-section -->\n\n  <JobIntro />\n</template>\n","<template>\n  <div class=\"inner-banner-one position-relative\">\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"row\">\n          <div class=\"col-xl-6 m-auto text-center\">\n            <div class=\"title-two\">\n              <h2 class=\"text-white\">{{ trans('Blog') }}</h2>\n            </div>\n            <ul class=\"style-none d-flex justify-content-center page-pagination mt-15\">\n              <li>\n                <Link href=\"/\">{{ trans('Home') }}</Link>\n              </li>\n              <li><i class=\"bi bi-chevron-right\"></i></li>\n              <li>{{ trans('Blog') }}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <img src=\"/assets/images/shape/shape_02.svg\" alt=\"\" class=\"lazy-img shapes shape_01\" />\n    <img src=\"/assets/images/shape/shape_03.svg\" alt=\"\" class=\"lazy-img shapes shape_02\" />\n  </div>\n  <!-- /.inner-banner-one -->\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport JobIntro from '@/Pages/Web/Candidate/Partials/JobIntro.vue'\nimport WebPaginate from '@/Components/WebPaginate.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport moment from 'moment'\nimport Breadcrumb from '@/Components/Breadcrumb.vue'\nconst { textExcerpt } = sharedComposable()\n\ndefineOptions({ layout: DefaultLayout })\n\nconst props = defineProps(['blogs', 'categories', 'recent_blogs', 'tags', 'meta'])\n</script>\n\n<template>\n  <Seo :metaData=\"meta\" />\n  <Breadcrumb\n    :title=\"trans('Blog')\"\n    href=\"/\"\n    :href-text=\"trans('Home')\"\n    :subtitle=\"trans('Blog')\"\n  />\n\n  <section class=\"blog-section bg-color pt-100 lg-pt-80 pb-120 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row gx-xl-5\" v-if=\"blogs.total\">\n        <div v-for=\"(post, index) in props.blogs.data\" :key=\"index\" class=\"col-md-6\">\n          <article class=\"blog-meta-two box-layout mb-50 lg-mb-30\">\n            <figure class=\"post-img m0\">\n              <Link :href=\"route('blogs.show', post)\" class=\"w-100 d-block\">\n                <img v-lazy=\"post.preview?.value\" alt=\"preview\" class=\"lazy-img w-100 tran4s\" />\n              </Link>\n              <Link :href=\"route('blogs.show', post)\" class=\"tags fw-500\">{{\n                post.categories[0]?.title\n              }}</Link>\n            </figure>\n            <div class=\"post-data mt-35\">\n              <div class=\"date\">\n                <span class=\"fw-500 text-dark\" v-show=\"post.featured\"\n                  >{{ trans('Featured') }} -\n                </span>\n                <Link :href=\"route('blogs.show', post)\">{{\n                  moment(post.created_at).format('DD MMM, YYYY')\n                }}</Link>\n              </div>\n              <Link :href=\"route('blogs.show', post)\">\n                <h4 class=\"tran3s blog-title\">{{ textExcerpt(post.title, 60) }}</h4>\n              </Link>\n              <Link\n                :href=\"route('blogs.show', post)\"\n                class=\"continue-btn tran3s d-flex align-items-center\"\n              >\n                <span class=\"fw-500 me-2\">{{ trans('Continue Reading') }}</span>\n                <i class=\"bi bi-arrow-right\"></i>\n              </Link>\n            </div>\n          </article>\n          <!-- /.blog-meta-two -->\n        </div>\n      </div>\n\n      <h3 v-else class=\"text-muted text-center\">\n        {{ trans('No blog posts') }}\n      </h3>\n\n      <WebPaginate :links=\"props.blogs.links\" />\n    </div>\n  </section>\n  <JobIntro />\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport JobIntro from '@/Pages/Web/Candidate/Partials/JobIntro.vue'\nimport SingleBlogPostStandard from '@/Components/SingleBlogPostStandard.vue'\nimport BlogSidebarRight from '@/Pages/Web/Blog/Partials/BlogSidebarRight.vue'\nimport WebPaginate from '@/Components/WebPaginate.vue'\nimport Breadcrumb from '@/Components/Breadcrumb.vue'\n\ndefineOptions({ layout: DefaultLayout })\nconst props = defineProps(['blogs', 'categories', 'recent_blogs', 'tags', 'meta'])\n</script>\n\n<template>\n  <Seo :metaData=\"meta\" />\n  <Breadcrumb\n    :title=\"trans('Blog')\"\n    href=\"/\"\n    :href-text=\"trans('Home')\"\n    :subtitle=\"trans('Blog')\"\n  />\n  <section class=\"blog-section pt-100 lg-pt-80 pb-120 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"m-auto col-xxl-11\">\n          <div class=\"row\">\n            <div class=\"col-lg-8\">\n              <div class=\"row\">\n                <template v-if=\"blogs.total\">\n                  <SingleBlogPostStandard class=\"col-md-6\" v-for=\"post in blogs.data\" :key=\"post.id\" :post=\"post\" />\n                </template>\n                <h3 v-else class=\"text-center text-muted\">\n                  {{ trans('No blog posts') }}\n                </h3>\n              </div>\n              <WebPaginate :links=\"props.blogs.links\" />\n            </div>\n\n            <div class=\"col-lg-4\">\n              <BlogSidebarRight\n                :categories=\"props.categories\"\n                :tags=\"props.tags\"\n                :recent-blogs=\"props.recent_blogs\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <!-- ./blog-section -->\n\n  <JobIntro />\n</template>\n","import { defineStore } from 'pinia'\nimport axios from 'axios'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { router, useForm } from '@inertiajs/vue3'\nimport notify from '@/Plugins/Admin/notify'\nimport trans from '@/Composables/transComposable'\nconst { pickBy, authUser } = sharedComposable()\n\nexport const useCandidateFilterStore = defineStore({\n  id: 'CandidateFilterStore',\n  state: () => ({\n    layout: null,\n\n    loading: {\n      categories: false,\n      states: false\n    },\n    sorts: [\n      { label: 'Latest', value: 'desc' },\n      { label: 'Oldest', value: 'asc' }\n    ],\n  \n    genders: ['Male', 'Female', 'Other'],\n\n    services: [],\n    categories: [],\n    countries: [],\n    states: [],\n    expertLevels: [],\n    qualifications: [],\n    currencies: [],\n    highestSalaryAmount: 100000,\n    modified: {\n      salary: false\n    },\n    form: {\n      v: '',\n      keyword: '',\n      order_by: '',\n      service: '',\n      category: '',\n      country: '',\n      state: '',\n\n      expert_level: '',\n      currency: '',\n      qualification: '',\n      gender: '',\n      min_salary: 0,\n      max_salary: 0\n    }\n  }),\n  actions: {\n    fetchCategories() {\n      this.form.category = ''\n      this.categories = []\n\n      if (this.form.service) {\n        this.loading.categories = true\n        axios.get(`/api/categories?service_slug=${this.form.service}`).then((res) => {\n          this.categories = res.data\n          this.loading.categories = false\n        })\n      }\n    },\n\n    fetchStates(selected_state = '') {\n      this.states = []\n      this.form.state = selected_state\n      if (this.form.country) {\n        this.loading.states = true\n        axios.get(`/api/locations?location_id=${this.form.country}`).then((res) => {\n          this.loading.states = false\n          this.states = res.data\n        })\n      }\n    },\n\n    submit() {\n      let formData = { ...this.form }\n      if (!this.modified.salary) {\n        formData.min_salary = ''\n        formData.max_salary = ''\n      }\n      router.get(route('candidates.index'), pickBy(formData), {\n        preserveState: true,\n      })\n    },\n    sort() {\n      this.submit()\n    },\n    toggleBookmark(id, isBookmarked) {\n      if (authUser?.value?.role != 'employer') {\n        return notify.danger(trans('Please login with an employer account to save the candidate'))\n      }\n\n      let form = useForm({})\n      form.post(route('candidates.bookmark', id), {\n        preserveScroll: true,\n        onSuccess: () => {\n          if (authUser.value) {\n            isBookmarked\n              ? notify.danger(trans('Candidate has been removed successfully'))\n              : notify.success(trans('Candidate has been saved successfully'))\n          }\n        }\n      })\n    },\n\n    setExpertLevel(item) {\n      if (this.form.expert_level && this.form.expert_level === item) {\n        this.form.expert_level = ''\n      } else {\n        this.form.expert_level = item\n      }\n    },\n\n    setQualification(item) {\n      if (this.form.qualification && this.form.qualification === item) {\n        this.form.qualification = ''\n      } else {\n        this.form.qualification = item\n      }\n    },\n\n    setGender(item) {\n      if (this.form.gender && this.form.gender === item) {\n        this.form.gender = ''\n      } else {\n        this.form.gender = item\n      }\n    },\n\n    setLayout(layout) {\n      this.layout = layout\n    },\n\n    clear() {\n      let v = this.form.v\n      this.form = {\n        v: v,\n        keyword: '',\n        order_by: '',\n        service: '',\n        category: '',\n        country: '',\n        state: '',\n\n        expert_level: '',\n        currency: '',\n        qualification: '',\n        gender: '',\n        min_salary: '',\n        max_salary: ''\n      }\n\n      this.modified.salary = false;\n\n      router.get(route('candidates.index'), pickBy(this.form))\n      const modal = document.getElementById('filterPopUp')\n      const backdrop = document.querySelector('.modal-backdrop')\n\n      if (modal && modal.classList.contains('show') && backdrop) {\n        modal.classList.remove('show')\n        document.body.removeChild(backdrop)\n        document.body.style = ''\n      }\n\n    }\n  }\n})\n","<script setup>\nimport LabelWithAjaxLoader from '@/Components/LabelWithAjaxLoader.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport { useCandidateFilterStore } from '@/Store/candidateFilterStore'\nimport { computed } from 'vue'\nconst store = useCandidateFilterStore()\n\nconst inputRangePercentage = computed(() => {\n  return 100 - store.form.max_salary / (store.highestSalaryAmount / 100) + '%'\n})\n</script>\n\n<template>\n  <button\n    type=\"button\"\n    class=\"filter-btn w-100 fw-500 tran3s d-lg-none mb-40 h-auto pb-2 pt-2\"\n    data-bs-toggle=\"offcanvas\"\n    data-bs-target=\"#filteroffcanvas\"\n  >\n    <i class=\"bi bi-funnel\"></i>\n    {{ trans('Filter') }}\n  </button>\n\n  <div class=\"filter-area-tab offcanvas offcanvas-start\" id=\"filteroffcanvas\">\n    <button\n      type=\"button\"\n      class=\"btn-close text-reset d-lg-none\"\n      data-bs-dismiss=\"offcanvas\"\n      aria-label=\"Close\"\n    ></button>\n    <div class=\"main-title fw-500 text-dark\">{{ trans('Filter By') }}</div>\n    <div class=\"light-bg border-20 pt-25 pb-30 mt-20 pe-4 ps-4\">\n      <form @submit.prevent=\"store.submit(true)\">\n        <div class=\"filter-block bottom-line pb-25\">\n          <a\n            class=\"filter-title fw-500 text-dark\"\n            data-bs-toggle=\"collapse\"\n            href=\"#collapseSemploye\"\n            role=\"button\"\n            aria-expanded=\"false\"\n            >{{ trans('Name or Keyword') }}</a\n          >\n          <div class=\"show collapse\" id=\"collapseSemploye\">\n            <div class=\"main-body\">\n              <div class=\"input-box position-relative\">\n                <input type=\"text\" v-model=\"store.form.keyword\" placeholder=\"Name or keyword\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- /.filter-block -->\n        <div class=\"filter-block bottom-line pb-25 mt-25\">\n          <a\n            class=\"filter-title fw-500 text-dark\"\n            data-bs-toggle=\"collapse\"\n            href=\"#collapseService\"\n            role=\"button\"\n            aria-expanded=\"false\"\n            >{{ trans('Service') }}</a\n          >\n\n          <div class=\"show collapse\" id=\"collapseService\">\n            <div class=\"main-body\">\n              <NiceSelect\n                v-model=\"store.form.service\"\n                :options=\"store.services\"\n                value-by=\"slug\"\n                label=\"title\"\n                placeholder=\"Select Service\"\n                @change=\"store.fetchCategories()\"\n              />\n              <br />\n              <LabelWithAjaxLoader :text=\"trans('Category')\" :loading=\"store.loading.categories\" />\n              <NiceSelect\n                v-model=\"store.form.category\"\n                :options=\"store.categories\"\n                label=\"title\"\n                value-by=\"slug\"\n                placeholder=\"Select Category\"\n              />\n            </div>\n          </div>\n        </div>\n        <!-- /.filter-block -->\n        <div class=\"filter-block bottom-line pb-25 mt-25\">\n          <a\n            class=\"filter-title fw-500 text-dark\"\n            data-bs-toggle=\"collapse\"\n            href=\"#collapseLocation\"\n            role=\"button\"\n            aria-expanded=\"false\"\n            >{{ trans('Location') }}</a\n          >\n          <div class=\"show collapse\" id=\"collapseLocation\">\n            <div class=\"main-body\">\n              <div class=\"mb-2\">\n                <label for=\"\">{{ trans('Country') }} *</label>\n                <NiceSelect\n                  v-model=\"store.form.country\"\n                  :options=\"store.countries\"\n                  label=\"name\"\n                  value-by=\"id\"\n                  :placeholder=\"trans('Select Country')\"\n                  @change=\"store.fetchStates\"\n                />\n              </div>\n              <div class=\"mb-2\">\n                <LabelWithAjaxLoader text=\"States *\" :loading=\"store.loading.states\" />\n                <NiceSelect\n                  v-model=\"store.form.state\"\n                  :options=\"store.states\"\n                  label=\"name\"\n                  value-by=\"id\"\n                  placeholder=\"Select State\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- /.filter-block -->\n        <div class=\"filter-block bottom-line pb-25 mt-25\">\n          <a\n            class=\"filter-title fw-500 text-dark\"\n            data-bs-toggle=\"collapse\"\n            href=\"#collapseExp\"\n            role=\"button\"\n            aria-expanded=\"false\"\n            >{{ trans('Expert Level') }}</a\n          >\n          <div class=\"show collapse\" id=\"collapseExp\">\n            <div class=\"main-body\">\n              <ul class=\"style-none filter-input\">\n                <li v-for=\"(item, index) in store.expertLevels\" :key=\"index\">\n                  <input\n                    type=\"checkbox\"\n                    @change=\"store.setExpertLevel(item.id)\"\n                    :checked=\"store.form.expert_level === item.id\"\n                  />\n                  <label>{{ item.title }}</label>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <!-- /.filter-block -->\n        <div class=\"filter-block bottom-line pb-25 mt-25\">\n          <a\n            class=\"filter-title fw-500 text-dark\"\n            data-bs-toggle=\"collapse\"\n            href=\"#collapseQualification\"\n            role=\"button\"\n            aria-expanded=\"false\"\n            >{{ trans('Qualification') }}</a\n          >\n          <div class=\"show collapse\" id=\"collapseQualification\">\n            <div class=\"main-body\">\n              <ul class=\"style-none filter-input\">\n                <li v-for=\"(item, index) in store.qualifications\" :key=\"index\">\n                  <input\n                    type=\"checkbox\"\n                    @change=\"store.setQualification(item.id)\"\n                    :checked=\"store.form.qualification == item.id\"\n                  />\n                  <label>{{ item.title }}</label>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <!-- /.filter-block -->\n        <div class=\"filter-block bottom-line pb-25 mt-25\">\n          <a\n            class=\"filter-title fw-500 text-dark\"\n            data-bs-toggle=\"collapse\"\n            href=\"#collapseCType\"\n            role=\"button\"\n            aria-expanded=\"false\"\n            >{{ trans('Candidate Type') }}</a\n          >\n          <div class=\"show collapse\" id=\"collapseCType\">\n            <div class=\"main-body\">\n              <ul class=\"style-none filter-input\">\n                <li v-for=\"item in store.genders\" :key=\"item\">\n                  <input\n                    type=\"checkbox\"\n                    @change=\"store.setGender(item.toLocaleLowerCase())\"\n                    :checked=\"store.form.gender == item.toLocaleLowerCase()\"\n                  />\n                  <label>{{ item }}</label>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <!-- /.filter-block -->\n\n        <div class=\"filter-block bottom-line pb-25 mt-25\">\n          <a\n            class=\"filter-title fw-500 text-dark\"\n            data-bs-toggle=\"collapse\"\n            href=\"#collapseSalary\"\n            role=\"button\"\n            aria-expanded=\"false\"\n            >{{ trans('Salary Range') }}</a\n          >\n          <div class=\"show collapse\" id=\"collapseSalary\">\n            <div class=\"main-body\">\n              <div class=\"salary-slider\">\n                <div class=\"price-input d-flex align-items-center pt-5\">\n                  <div class=\"field d-flex align-items-center\">\n                    <input\n                      type=\"number\"\n                      class=\"input-min\"\n                      :value=\"store.form.min_salary\"\n                      disabled\n                    />\n                  </div>\n                  <div class=\"pe-1 ps-1\">-</div>\n                  <div class=\"field d-flex align-items-center\">\n                    <input\n                      type=\"number\"\n                      class=\"input-max\"\n                      :value=\"store.form.max_salary\"\n                      disabled\n                    />\n                  </div>\n                  <div class=\"filter-currency\">\n                    <NiceSelect\n                      v-model=\"store.form.currency\"\n                      :options=\"store.currencies\"\n                      value-by=\"code\"\n                      label=\"code\"\n                      placeholder=\"Currency\"\n                      @change=\"store.modified.salary = true\"\n                    />\n                  </div>\n                </div>\n                <div class=\"slider\">\n                  <div class=\"progress\" :style=\"{ right: inputRangePercentage }\"></div>\n                </div>\n                <div class=\"range-input mb-10\">\n                  <input\n                    v-model=\"store.form.min_salary\"\n                    type=\"range\"\n                    class=\"range-min\"\n                    min=\"0\"\n                    :max=\"store.form.max_salary\"\n                    step=\"1000\"\n                    @change=\"store.modified.salary = true\"\n                  />\n                  <input\n                    v-model=\"store.form.max_salary\"\n                    type=\"range\"\n                    class=\"range-max\"\n                    min=\"1000\"\n                    :max=\"store.highestSalaryAmount\"\n                    step=\"1000\"\n                    @change=\"store.modified.salary = true\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <button type=\"submit\" class=\"btn-ten fw-500 w-100 tran3s mt-30 text-center text-white\">\n          {{ trans('Apply Filter') }}\n        </button>\n\n        <button @click=\"store.clear\" class=\"btn-nine fw-500 w-100 tran3s mt-30 text-center\">\n          {{ trans('Clear Filter') }}\n        </button>\n      </form>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport LabelWithAjaxLoader from \"@/Components/LabelWithAjaxLoader.vue\"\nimport NiceSelect from \"@/Components/NiceSelect.vue\"\nimport { useCandidateFilterStore } from \"@/Store/candidateFilterStore\"\nimport { computed } from \"vue\"\nconst store = useCandidateFilterStore()\n\nconst inputRangePercentage = computed(() => {\n  return 100 - store.form.max_salary / (store.highestSalaryAmount / 100) + \"%\"\n})\n</script>\n\n<template>\n  <!-- Modal -->\n  <div\n    class=\"modal popUpModal fade\"\n    id=\"filterPopUp\"\n    tabindex=\"-1\"\n    aria-labelledby=\"exampleModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-fullscreen modal-dialog-centered\">\n      <div class=\"container\">\n        <div class=\"filter-area-tab modal-content\">\n          <button\n            type=\"button\"\n            ref=\"filterPopUpCloseBtn\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n          <form @submit.prevent=\"store.submit\">\n            <div class=\"position-relative\">\n              <div\n                class=\"main-title fw-500 text-dark pt-15 pb-15 border-bottom pe-4 ps-4\"\n              >\n                {{ trans(\"Filter By\") }}\n              </div>\n              <div class=\"pt-25 pb-30 pe-4 ps-4\">\n                <div class=\"row\">\n                  <div class=\"col-lg-12\">\n                    <div class=\"filter-block pb-50 md-pb-20\">\n                      <div class=\"filter-title fw-500 text-dark\">\n                        {{ trans(\"Keyword or Title\") }}\n                      </div>\n                      <div class=\"input-box position-relative\">\n                        <input\n                          type=\"text\"\n                          v-model=\"store.form.keyword\"\n                          placeholder=\"Name or keyword\"\n                        />\n                      </div>\n                    </div>\n                    <!-- /.filter-block -->\n                  </div>\n                  <div class=\"col-lg-3\">\n                    <div class=\"filter-block pb-50 md-pb-20\">\n                      <div class=\"filter-title fw-500 text-dark\">\n                        {{ trans(\"Service\") }}\n                      </div>\n                      <NiceSelect\n                        v-model=\"store.form.service\"\n                        :options=\"store.services\"\n                        value-by=\"slug\"\n                        label=\"title\"\n                        placeholder=\"Service\"\n                        @change=\"store.fetchCategories\"\n                      />\n                    </div>\n                    <!-- /.filter-block -->\n                  </div>\n                  <div class=\"col-lg-3\">\n                    <div class=\"filter-title fw-500 text-dark d-flex\">\n                      {{ trans(\"Category\") }}\n                      <LabelWithAjaxLoader text=\"\" :loading=\"store.loading.categories\" />\n                    </div>\n                    <NiceSelect\n                      v-model=\"store.form.category\"\n                      :options=\"store.categories\"\n                      value-by=\"slug\"\n                      label=\"title\"\n                      placeholder=\"Select Category\"\n                    />\n                    <!-- /.filter-block -->\n                  </div>\n                  <div class=\"col-lg-3\">\n                    <div class=\"filter-block pb-50 md-pb-20\">\n                      <div class=\"filter-title fw-500 text-dark\">\n                        {{ trans(\"Country\") }}\n                      </div>\n                      <NiceSelect\n                        v-model=\"store.form.country\"\n                        :options=\"store.countries\"\n                        label=\"name\"\n                        value-by=\"id\"\n                        placeholder=\"Select Country\"\n                        @change=\"store.fetchStates\"\n                      />\n                    </div>\n                    <!-- /.filter-block -->\n                  </div>\n                  <div class=\"col-lg-3\">\n                    <div class=\"filter-block pb-50 md-pb-20\">\n                      <LabelWithAjaxLoader\n                        text=\"States\"\n                        class=\"filter-title fw-500 text-dark\"\n                        :loading=\"store.loading.states\"\n                      />\n                      <NiceSelect\n                        v-model=\"store.form.state\"\n                        :options=\"store.states\"\n                        label=\"name\"\n                        value-by=\"id\"\n                        placeholder=\"Select State\"\n                      />\n                    </div>\n                    <!-- /.filter-block -->\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-lg-3\">\n                    <div class=\"filter-block pb-25\">\n                      <div class=\"filter-title fw-500 text-dark\">\n                        {{ trans(\"Expert Level\") }}\n                      </div>\n                      <div class=\"main-body\">\n                        <ul class=\"style-none filter-input\">\n                          <li v-for=\"(item, index) in store.expertLevels\" :key=\"index\">\n                            <input\n                              type=\"checkbox\"\n                              @change=\"store.setExpertLevel(item.id)\"\n                              :checked=\"store.form.expert_level === item.id\"\n                            />\n                            <label>{{ item.title }}</label>\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                    <!-- /.filter-block -->\n                  </div>\n                  <div class=\"col-lg-3\">\n                    <div class=\"filter-block pb-25\">\n                      <div class=\"filter-title fw-500 text-dark\">\n                        {{ trans(\"Qualification\") }}\n                      </div>\n                      <div class=\"main-body\">\n                        <ul class=\"style-none filter-input\">\n                          <li v-for=\"(item, index) in store.qualifications\" :key=\"index\">\n                            <input\n                              type=\"checkbox\"\n                              @change=\"store.setQualification(item.id)\"\n                              :checked=\"store.form.qualification === item.id\"\n                            />\n                            <label>{{ item.title }}</label>\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                    <!-- /.filter-block -->\n                  </div>\n                  <div class=\"col-lg-3\">\n                    <div class=\"filter-block pb-25\">\n                      <div class=\"filter-title fw-500 text-dark\">\n                        {{ trans(\"Candidate Type\") }}\n                      </div>\n                      <div class=\"main-body\">\n                        <ul class=\"style-none filter-input\">\n                          <li v-for=\"item in store.genders\" :key=\"item\">\n                            <input\n                              type=\"checkbox\"\n                              @change=\"store.setGender(item.toLocaleLowerCase())\"\n                              :checked=\"store.form.gender == item.toLocaleLowerCase()\"\n                            />\n                            <label>{{ item }}</label>\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                    <!-- /.filter-block -->\n                  </div>\n                  <div class=\"col-lg-3\">\n                    <div class=\"filter-title fw-500 text-dark\">\n                      {{ trans(\"Salary Range\") }}\n                    </div>\n                    <div class=\"main-body\">\n                      <div class=\"salary-slider\">\n                        <div class=\"pt-5 price-input d-flex align-items-center\">\n                          <div class=\"field d-flex align-items-center\">\n                            <input\n                              type=\"number\"\n                              class=\"input-min\"\n                              :value=\"store.form.min_salary\"\n                              disabled\n                            />\n                          </div>\n                          <div class=\"pe-1 ps-1\">-</div>\n                          <div class=\"field d-flex align-items-center\">\n                            <input\n                              type=\"number\"\n                              class=\"input-max\"\n                              :value=\"store.form.max_salary\"\n                              disabled\n                            />\n                          </div>\n                          <div class=\"filter-currency\">\n                            <NiceSelect\n                              v-model=\"store.form.currency\"\n                              :options=\"store.currencies\"\n                              value-by=\"code\"\n                              label=\"code\"\n                              placeholder=\"Currency\"\n                              @change=\"store.modified.salary = true\"\n                            />\n                          </div>\n                        </div>\n                        <div class=\"slider\">\n                          <div\n                            class=\"progress\"\n                            :style=\"{ right: inputRangePercentage }\"\n                          ></div>\n                        </div>\n                        <div class=\"mb-10 range-input\">\n                          <input\n                            v-model=\"store.form.min_salary\"\n                            type=\"range\"\n                            class=\"range-min\"\n                            min=\"0\"\n                            :max=\"store.form.max_salary\"\n                            step=\"1000\"\n                            @change=\"store.modified.salary = true\"\n                          />\n                          <input\n                            v-model=\"store.form.max_salary\"\n                            type=\"range\"\n                            class=\"range-max\"\n                            min=\"1000\"\n                            :max=\"parseInt(store.highestSalaryAmount)\"\n                            step=\"1000\"\n                            @change=\"store.modified.salary = true\"\n                          />\n                        </div>\n                      </div>\n                      <!-- /.filter-block -->\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"m-auto col-xl-2\">\n                      <button\n                        type=\"submit\"\n                        class=\"text-center text-white btn-ten fw-500 w-100 tran3s mt-30\"\n                      >\n                        {{ trans(\"Apply Filter\") }}\n                      </button>\n                      <button\n                        type=\"button\"\n                        @click=\"store.clear\"\n                        class=\"text-center btn-nine fw-500 w-100 tran3s mt-30\"\n                      >\n                        {{ trans(\"Clear Filter\") }}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n        <!-- /.filter-area-tab -->\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { Link } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nimport { useCandidateFilterStore } from '@/Store/candidateFilterStore'\nimport sharedComposable from '@/Composables/sharedComposable'\nconst { formatNumber } = sharedComposable()\n\nconst store = useCandidateFilterStore()\n\ndefineProps(['candidate'])\nconst tags = (tags) => {\n  const maxTag = 3\n  const tagItems = tags?.length > maxTag ? tags?.slice(0, 2) : tags\n  const count = tags?.length > maxTag ? tags?.length + 1 : tags?.length\n  const remainingTagsCount = Math.max(count - maxTag)\n  const showMoreTags = remainingTagsCount > 0\n\n  return {\n    tagItems,\n    remainingTagsCount,\n    showMoreTags\n  }\n}\n</script>\n\n<template>\n  <div class=\"col-xxl-3 col-lg-4 col-sm-6 d-flex\">\n    <div\n      class=\"candidate-profile-card grid-layout mb-25 text-center\"\n      :class=\"{ favourite: candidate.is_star }\"\n    >\n      <button\n        @click=\"store.toggleBookmark(candidate.id, candidate.isBookmarked)\"\n        class=\"save-btn tran3s\"\n      >\n        <i\n          class=\"bi\"\n          :class=\"[candidate.isBookmarked ? 'text-danger bi-heart-fill' : 'bi-heart']\"\n        ></i>\n      </button>\n      <div class=\"cadidate-avatar online position-relative d-block m-auto\">\n        <Link :href=\"route('candidates.show', candidate.username)\" class=\"rounded-circle\">\n          <img\n            v-lazy=\"\n              candidate?.avatar == null\n                ? `https://ui-avatars.com/api/?name=${candidate.name}`\n                : `${candidate?.avatar}`\n            \"\n            alt=\"avatar\"\n            class=\"lazy-img rounded-circle\"\n          />\n        </Link>\n      </div>\n      <h4 class=\"candidate-name mt-15 mb-0\">\n        <Link :href=\"route('candidates.show', candidate.username)\" class=\"tran3s\">{{\n          candidate.name\n        }}</Link>\n      </h4>\n      <div class=\"candidate-post\">\n        {{ candidate.service?.title }}\n      </div>\n      <ul\n        class=\"cadidate-skills style-none d-flex align-items-center justify-content-center justify-content-md-between pt-30 sm-pt-20 flex-wrap pb-10\"\n      >\n        <li\n          class=\"text-nowrap\"\n          v-for=\"(item, index) in tags(candidate.tags).tagItems ?? []\"\n          :key=\"index\"\n        >\n          {{ item.title }}\n        </li>\n        <li class=\"more\" v-if=\"tags(candidate.tags).showMoreTags\">\n          {{ tags(candidate.tags).remainingTagsCount }}+\n        </li>\n      </ul>\n      <!-- /.cadidate-skills -->\n      <div class=\"row gx-1\">\n        <div class=\"col-md-6\">\n          <div class=\"candidate-info mt-10\">\n            <span>{{ trans('Salary') }}</span>\n            <div v-if=\"candidate.meta?.expected_salary && candidate.meta?.expected_salary > 1\">\n              {{ formatNumber(candidate.meta?.expected_salary ?? 0) }}/\n              {{ candidate.meta?.currency }}\n            </div>\n            <div v-else>{{ trans('Negotiable') }}</div>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"candidate-info mt-10\">\n            <span>{{ trans('Location') }}</span>\n            <div class=\"text-truncate\" :title=\"candidate.location.join(', ')\">\n              {{ candidate.location.join(', ') }}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row gx-2 pt-25 sm-pt-10\">\n        <div class=\"col-md-6\">\n          <Link\n            :href=\"route('candidates.show', candidate.username)\"\n            class=\"profile-btn tran3s w-100 mt-5\"\n          >\n            {{ trans('View Profile') }}\n          </Link>\n        </div>\n        <div class=\"col-md-6\">\n          <Link\n            :href=\"route('candidates.show', candidate.username)\"\n            class=\"msg-btn tran3s w-100 mt-5\"\n          >\n            {{ trans('Message') }}</Link\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport notify from '@/Plugins/Admin/notify'\nimport { Link, useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { useCandidateFilterStore } from '@/Store/candidateFilterStore'\n\nconst { formatNumber } = sharedComposable()\nconst store = useCandidateFilterStore()\ndefineProps(['candidate'])\n\nconst tags = (tags) => {\n  const maxTag = 3\n  const tagItems = tags?.slice(0, maxTag)\n  const remainingTagsCount = Math.max(tags?.length - maxTag, 0)\n  const showMoreTags = remainingTagsCount > 0\n\n  return {\n    tagItems,\n    remainingTagsCount,\n    showMoreTags\n  }\n}\n</script>\n\n<template>\n  <div class=\"candidate-profile-card list-layout mb-25\" :class=\"{ favourite: candidate.is_star }\">\n    <div class=\"d-flex\">\n      <div class=\"cadidate-avatar online position-relative d-block m-auto\">\n        <Link :href=\"route('candidates.show', candidate.username)\" class=\"rounded-circle\">\n          <img\n            v-lazy=\"\n              candidate?.avatar == null\n                ? `https://ui-avatars.com/api/?name=${candidate.name}`\n                : `${candidate?.avatar}`\n            \"\n            alt=\"avatar\"\n            class=\"lazy-img rounded-circle\"\n          />\n        </Link>\n      </div>\n      <div class=\"right-side\">\n        <div class=\"row gx-1 align-items-center\">\n          <div class=\"col-xl-3\">\n            <div class=\"position-relative\">\n              <h4 class=\"candidate-name mb-0\">\n                <Link :href=\"route('candidates.show', candidate.username)\" class=\"tran3s\">{{\n                  candidate.name\n                }}</Link>\n              </h4>\n              <div class=\"candidate-post\">\n                {{ candidate.designation }}\n              </div>\n              <ul class=\"cadidate-skills style-none d-flex align-items-center text-nowrap\">\n                <li v-for=\"(item, index) in tags(candidate.tags).tagItems ?? []\" :key=\"index\">\n                  {{ item.title }}\n                </li>\n                <li class=\"more\" v-if=\"tags(candidate.tags).showMoreTags\">\n                  {{ tags(candidate.tags).remainingTagsCount }}+\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div class=\"col-xl-3 col-md-4 col-sm-6 mb-2\">\n            <div class=\"candidate-info\">\n              <span>{{ trans('Salary') }}</span>\n              <div v-if=\"candidate.meta?.expected_salary && candidate.meta?.expected_salary > 1\">\n                {{ formatNumber(candidate.meta?.expected_salary) }}/\n                {{ candidate.meta?.currency }}\n              </div>\n              <div v-else>{{ trans('Negotiable') }}</div>\n            </div>\n            <!-- /.candidate-info -->\n          </div>\n          <div class=\"col-xl-3 col-md-4 col-sm-6\">\n            <div class=\"candidate-info\">\n              <span>{{ trans('Location') }}</span>\n              <div class=\"text-truncate\" :title=\"candidate.location.join(', ')\">\n                {{ candidate.location.join(', ') }}\n              </div>\n            </div>\n            <!-- /.candidate-info -->\n          </div>\n          <div class=\"col-xl-3 col-md-4\">\n            <div class=\"d-flex justify-content-lg-end\">\n              <button\n                @click=\"store.toggleBookmark(candidate.id, candidate.isBookmarked)\"\n                class=\"save-btn rounded-circle tran3s mt-10 text-center\"\n              >\n                <i\n                  class=\"bi\"\n                  :class=\"[candidate.isBookmarked ? 'text-danger bi-heart-fill' : 'bi-heart']\"\n                ></i>\n              </button>\n\n              <Link\n                :href=\"route('candidates.show', candidate.username)\"\n                class=\"profile-btn tran3s ms-md-2 sm-mt-20 mt-10\"\n                >{{ trans('View Profile') }}</Link\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport NiceSelect from \"@/Components/NiceSelect.vue\";\nimport LabelWithAjaxLoader from \"@/Components/LabelWithAjaxLoader.vue\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\nconst { getQueryParams } = sharedComposable();\nimport { useCandidateFilterStore } from \"@/Store/candidateFilterStore\";\nconst store = useCandidateFilterStore();\n</script>\n\n<template>\n  <form @submit.prevent=\"store.submit\">\n    <div class=\"row\">\n      <div class=\"col-md-5\">\n        <div class=\"input-box\">\n          <div class=\"label\">{{ trans(\"What are you looking for?\") }}</div>\n          <NiceSelect\n            v-model=\"store.form.service\"\n            :options=\"store.services\"\n            value-by=\"slug\"\n            label=\"title\"\n            :placeholder=\"trans('Select Service')\"\n            @change=\"store.fetchCategories\"\n          />\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"input-box border-left\">\n          <LabelWithAjaxLoader\n            :text=\"trans('Category')\"\n            :loading=\"store.loading.categories\"\n          />\n          <NiceSelect\n            v-model=\"store.form.category\"\n            :options=\"store.categories\"\n            label=\"title\"\n            value-by=\"slug\"\n            placeholder=\"Select Category\"\n          />\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n        <button\n          type=\"submit\"\n          class=\"fw-500 text-uppercase h-100 tran3s search-btn\"\n          :disabled=\"store.loading.categories\"\n        >\n          {{ trans(\"Search\") }}\n        </button>\n      </div>\n    </div>\n  </form>\n</template>\n","<script setup>\nimport { computed } from 'vue'\nimport CandidateSearchForm from '@/Components/CandidateSearchForm.vue'\nimport { useThemeLoaderStore } from '@/Store/themeLoaderStore'\nconst themeLoader = useThemeLoaderStore()\nconst innerBannerColor = computed(() => {\n  const themes = ['One', 'Six']\n  if (themes.includes(themeLoader.theme)) {\n    return ''\n  }\n  return 'inner-banner-colors'\n})\n</script>\n\n<template>\n  <div class=\"inner-banner-one position-relative\" :class=\"innerBannerColor\">\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"row\">\n          <div class=\"col-xl-6 m-auto text-center\">\n            <div class=\"title-two\">\n              <h2>{{ trans('Candidates') }}</h2>\n            </div>\n            <p class=\"mt-30 lg-mt-20 mb-35 lg-mb-20 text-lg\">\n              {{ trans('Find you desire talents & make your work done') }}\n            </p>\n          </div>\n        </div>\n        <div class=\"position-relative\">\n          <div class=\"row\">\n            <div class=\"col-xl-9 col-lg-8 m-auto\">\n              <div class=\"job-search-one position-relative\">\n                <CandidateSearchForm />\n              </div>\n              <!-- /.job-search-one -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <img\n      v-lazy=\"'/assets/images/shape/shape_02.svg'\"\n      alt=\"shape\"\n      class=\"lazy-img shapes shape_01\"\n    />\n    <img\n      v-lazy=\"'/assets/images/shape/shape_03.svg'\"\n      alt=\"shape\"\n      class=\"lazy-img shapes shape_02\"\n    />\n  </div>\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport WebPaginate from '@/Components/WebPaginate.vue'\nimport JobIntro from '@/Pages/Web/Candidate/Partials/JobIntro.vue'\nimport SingleGridCandidate from '@/Components/SingleGridCandidate.vue'\nimport SingleListCandidate from '@/Components/SingleListCandidate.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport InnerBanner from '@/Pages/Web/Candidate/Partials/InnerBanner.vue'\nimport FilterModalForm from '@/Pages/Web/Candidate/Common/FilterModalForm.vue'\nimport { useCandidateFilterStore } from '@/Store/candidateFilterStore'\nimport { onMounted } from 'vue'\nimport sharedComposable from '@/Composables/sharedComposable'\n\ndefineOptions({ layout: DefaultLayout })\n\nconst { getQueryParams } = sharedComposable()\nconst store = useCandidateFilterStore()\nconst request = getQueryParams()\n\nconst props = defineProps([\n  'candidates',\n  'services',\n  'categories',\n  'countries',\n  'expertLevels',\n  'qualifications',\n  'meta',\n  'currencies',\n  'highestSalaryAmount'\n])\n\nonMounted(() => {\n  store.$patch({\n    services: props.services,\n    categories: props.categories,\n    countries: props.countries,\n    expertLevels: props.expertLevels,\n    qualifications: props.qualifications,\n    currencies: props.currencies,\n    highestSalaryAmount: parseInt(props.highestSalaryAmount),\n    form: {\n      keyword: request.keyword,\n      v: request.v,\n      order_by: request.order_by,\n      service: Number(request.service ?? 0) || '',\n      category: Number(request.category ?? 0) || '',\n      country: Number(request.country ?? 0) || '',\n      state: Number(request.state) || '',\n\n      expert_level: Number(request.expert_level ?? 0) || '',\n      currency: request.currency,\n      qualification: Number(request.qualification ?? 0) || '',\n      gender: request.gender ?? '',\n      max_salary: parseInt(request.max_salary ?? props.highestSalaryAmount),\n      min_salary: Number(request.min_salary) || 0\n    }\n  })\n\n  if (!store.layout) {\n    store.$patch({\n      layout: 'list'\n    })\n  }\n\n  if (request.country) {\n    store.fetchStates(store.form.state)\n  }\n})\n</script>\n\n<template>\n  <Seo :metaData=\"meta\" />\n\n  <FilterModalForm />\n\n  <InnerBanner />\n  <!-- /.inner-banner-one -->\n\n  <section class=\"candidates-profile bg-color pt-90 lg-pt-70 pb-160 xl-pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"position-relative\">\n            <div\n              class=\"upper-filter d-flex justify-content-between align-items-start align-items-md-center mb-20\"\n            >\n              <div class=\"d-md-flex justify-content-between align-items-center\">\n                <button\n                  type=\"button\"\n                  class=\"filter-btn fw-500 tran3s me-3\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#filterPopUp\"\n                >\n                  <i class=\"bi bi-funnel\"></i>\n                  {{ trans('Filter') }}\n                </button>\n                <div class=\"total-job-found md-mt-10\">\n                  {{ trans('All') }}\n                  <span class=\"text-dark fw-500\">{{ candidates.total }}</span>\n                  {{ trans('candidates found') }}\n                </div>\n              </div>\n              <div class=\"d-flex justify-content-between align-items-center\">\n                <div class=\"short-filter d-flex align-items-center\">\n                  <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n                  <NiceSelect\n                    v-model=\"store.form.order_by\"\n                    :options=\"store.sorts\"\n                    value-by=\"value\"\n                    label=\"label\"\n                    @change=\"store.sort()\"\n                    placeholder=\"Default\"\n                  />\n                </div>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s list-btn ms-2 text-center\"\n                  title=\"Active List\"\n                  :class=\"[store.layout == 'grid' ? 'active' : '']\"\n                  @click=\"store.setLayout('list')\"\n                >\n                  <i class=\"bi bi-list\"></i>\n                </button>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s grid-btn ms-2 text-center\"\n                  title=\"Active Grid\"\n                  :class=\"[store.layout == 'list' ? 'active' : '']\"\n                  @click=\"store.setLayout('grid')\"\n                >\n                  <i class=\"bi bi-grid\"></i>\n                </button>\n              </div>\n            </div>\n            <!-- /.upper-filter -->\n            <div class=\"accordion-box grid-style\" :class=\"[store.layout == 'grid' ? 'show' : '']\">\n              <div class=\"row\">\n                <SingleGridCandidate\n                  v-for=\"candidate in candidates.data\"\n                  :key=\"candidate.id\"\n                  :candidate=\"candidate\"\n                  class=\"col-xxl-3 col-lg-3 col-sm-6\"\n                />\n              </div>\n            </div>\n            <!-- /.accordion-box -->\n\n            <div class=\"accordion-box list-style\" :class=\"[store.layout == 'list' ? 'show' : '']\">\n              <SingleListCandidate\n                v-for=\"candidate in candidates.data\"\n                :key=\"candidate.id\"\n                :candidate=\"candidate\"\n              />\n            </div>\n            <!-- /.accordion-box -->\n\n            <div class=\"pt-50 lg-pt-20 d-sm-flex align-items-center justify-content-between\">\n              <p class=\"m0 order-sm-last text-sm-start xs-pb-20 text-center\">\n                {{ trans('Showing') }}\n                <span class=\"text-dark fw-500\">{{ candidates.from }} to {{ candidates.to }}</span>\n                {{ trans('of') }}\n                <span class=\"text-dark fw-500\">{{ candidates.total }}</span>\n              </p>\n              <WebPaginate :links=\"candidates.links\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <h4 v-if=\"candidates.total == 0\" class=\"alert alert-info mt-5\">\n        {{ trans('No record found') }}\n      </h4>\n    </div>\n  </section>\n  <!-- ./candidates-profile -->\n\n  <JobIntro />\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport WebPaginate from '@/Components/WebPaginate.vue'\nimport JobIntro from '@/Pages/Web/Candidate/Partials/JobIntro.vue'\nimport InnerBanner from '@/Pages/Web/Candidate/Partials/InnerBanner.vue'\nimport SingleGridCandidate from '@/Components/SingleGridCandidate.vue'\nimport SingleListCandidate from '@/Components/SingleListCandidate.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport AsideFilterForm from '@/Pages/Web/Candidate/Common/AsideFilterForm.vue'\nimport { useCandidateFilterStore } from '@/Store/candidateFilterStore'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { onMounted } from 'vue'\n\ndefineOptions({ layout: DefaultLayout })\n\nconst { getQueryParams } = sharedComposable()\nconst store = useCandidateFilterStore()\nconst request = getQueryParams()\n\nconst props = defineProps([\n  'candidates',\n  'services',\n  'categories',\n  'countries',\n  'expertLevels',\n  'qualifications',\n  'meta',\n  'currencies',\n  'highestSalaryAmount'\n])\n\nonMounted(() => {\n  store.$patch({\n    services: props.services,\n    categories: props.categories,\n    countries: props.countries,\n    expertLevels: props.expertLevels,\n    qualifications: props.qualifications,\n    currencies: props.currencies,\n    highestSalaryAmount: parseInt(props.highestSalaryAmount),\n    form: {\n      keyword: request.keyword,\n      v: request.v,\n      order_by: request.order_by,\n      service: request.service ?? '',\n      category: request.category ?? '',\n      country: Number(request.country ?? 0) || '',\n      state: Number(request.state) || '',\n\n      expert_level: Number(request.expert_level ?? 0) || '',\n      currency: request.currency,\n      qualification: Number(request.qualification ?? 0) || '',\n      gender: request.gender ?? '',\n      max_salary: parseInt(request.max_salary ?? props.highestSalaryAmount),\n      min_salary: Number(request.min_salary) || 0\n    }\n  })\n\n  if (!store.layout) {\n    store.layout = 'grid'\n  }\n\n  if (request.country) {\n    store.fetchStates(store.form.state)\n  }\n})\n</script>\n\n<template>\n  <Seo :metaData=\"meta\" />\n  <InnerBanner />\n  <!-- /.inner-banner-one -->\n\n  <section class=\"candidates-profile pt-110 lg-pt-80 pb-160 xl-pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xl-3 col-lg-4\">\n          <AsideFilterForm />\n        </div>\n\n        <div class=\"col-xl-9 col-lg-8\">\n          <div class=\"ms-xxl-5 ms-xl-3\">\n            <div class=\"upper-filter d-flex justify-content-between align-items-center mb-20\">\n              <div class=\"total-job-found\">\n                <span class=\"text-dark fw-500\">{{ candidates.total }}</span>\n                {{ trans('candidates found') }}\n              </div>\n              <div class=\"d-flex align-items-center\">\n                <div class=\"short-filter d-flex align-items-center\">\n                  <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n                  <NiceSelect\n                    v-model=\"store.form.order_by\"\n                    :options=\"store.sorts\"\n                    value-by=\"value\"\n                    label=\"label\"\n                    @change=\"store.sort()\"\n                    placeholder=\"Default\"\n                  />\n                </div>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s list-btn ms-2 text-center\"\n                  title=\"Active List\"\n                  :class=\"[store.layout == 'grid' ? 'active' : '']\"\n                  @click=\"store.setLayout('list')\"\n                >\n                  <i class=\"bi bi-list\"></i>\n                </button>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s grid-btn ms-2 text-center\"\n                  title=\"Active Grid\"\n                  :class=\"[store.layout == 'list' ? 'active' : '']\"\n                  @click=\"store.setLayout('grid')\"\n                >\n                  <i class=\"bi bi-grid\"></i>\n                </button>\n              </div>\n            </div>\n            <!-- /.upper-filter -->\n\n            <template v-if=\"candidates.total\">\n              <div class=\"accordion-box grid-style\" :class=\"[store.layout == 'grid' ? 'show' : '']\">\n                <div class=\"row\">\n                  <SingleGridCandidate\n                    v-for=\"candidate in candidates.data\"\n                    :key=\"candidate.id\"\n                    :candidate=\"candidate\"\n                    class=\"col-xxl-4 col-lg-4 col-sm-3 d-flex\"\n                  />\n                </div>\n              </div>\n              <!-- /.accordion-box -->\n\n              <div class=\"accordion-box list-style\" :class=\"[store.layout == 'list' ? 'show' : '']\">\n                <SingleListCandidate\n                  v-for=\"candidate in candidates.data\"\n                  :key=\"candidate.id\"\n                  :candidate=\"candidate\"\n                />\n              </div>\n              <!-- /.accordion-box -->\n\n              <div class=\"pt-50 lg-pt-20 d-sm-flex align-items-center justify-content-between\">\n                <p class=\"m0 order-sm-last text-sm-start xs-pb-20 text-center\">\n                  {{ trans('Showing') }}\n                  <span class=\"text-dark fw-500\"\n                    >{{ candidates.from }} {{ trans('to') }} {{ candidates.to }}</span\n                  >\n                  {{ trans('of') }}\n                  <span class=\"text-dark fw-500\">{{ candidates.total }}</span>\n                </p>\n                <WebPaginate :links=\"candidates.links\" />\n              </div>\n            </template>\n\n            <h4 v-else class=\"alert alert-info text-center\">{{ trans('No record found') }}</h4>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <JobIntro />\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport axios from 'axios'\nimport { onMounted } from 'vue'\nimport JobIntro from '../Partials/JobIntro.vue'\nimport moment from 'moment'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { useForm } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport notify from '@/Plugins/Admin/notify'\nimport Breadcrumb from '@/Components/Breadcrumb.vue'\n\ndefineOptions({ layout: DefaultLayout })\nconst { authUser, formatNumber } = sharedComposable()\nconst props = defineProps(['candidate', 'seo'])\nconst meta = props.candidate?.meta ?? {}\n\nconst form = useForm({\n  body: '',\n  email: props.candidate.email\n})\n\nconst submit = () => {\n  if (form.body) {\n    form.post(route('employer.message.store'), {\n      onSuccess: () => {\n        notify.success('Message Send Successfully')\n        form.body = ''\n      }\n    })\n  }\n}\n\nonMounted(() => {\n  axios.get(route('candidates.visit', props.candidate))\n\n  let tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\n  tooltipTriggerList.map(function (tooltipTriggerEl) {\n    return new bootstrap.Tooltip(tooltipTriggerEl)\n  })\n\n  $(document).ready(() => {\n    if ($('.candidate-portfolio-slider').length) {\n      $('.candidate-portfolio-slider').slick({\n        dots: true,\n        arrows: false,\n        lazyLoad: 'ondemand',\n        centerPadding: '0px',\n        slidesToShow: 3,\n        slidesToScroll: 2,\n        autoplay: true,\n        autoplaySpeed: 3000,\n        responsive: [\n          {\n            breakpoint: 992,\n            settings: {\n              slidesToShow: 2\n            }\n          },\n          {\n            breakpoint: 450,\n            settings: {\n              slidesToShow: 1\n            }\n          }\n        ]\n      })\n    }\n  })\n})\n\nconst candidate_reviews_avg_ratting = Math.round(props.candidate.candidate_reviews_avg_ratting ?? 0)\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <Breadcrumb\n    :title=\"candidate.name\"\n    href=\"/\"\n    :href-text=\"trans('Home')\"\n    :subtitle=\"candidate.name\"\n  />\n\n  <!-- /.inner-banner-one -->\n\n  <section class=\"candidates-profile pt-100 lg-pt-70 pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xxl-9 col-lg-8\">\n          <div class=\"candidates-profile-details me-xxl-5 pe-xxl-4\">\n            <div class=\"inner-card border-style mb-65 lg-mb-40\">\n              <h3 class=\"title\">{{ trans('Overview') }}</h3>\n              <p>{{ meta.overview }}</p>\n            </div>\n            <!-- /.inner-card -->\n\n            <template v-if=\"meta?.video_id\">\n              <h3 class=\"title\">{{ trans('Intro') }}</h3>\n              <div\n                class=\"video-post d-flex align-items-center justify-content-center mt-25 lg-mt-20 mb-75 lg-mb-50\"\n                :style=\"{\n                  backgroundImage: `url(https://img.youtube.com/vi/${meta?.video_id}/sddefault.jpg)`\n                }\"\n              >\n                <a\n                  class=\"fancybox rounded-circle video-icon tran3s text-center\"\n                  data-fancybox=\"\"\n                  :href=\"`https://www.youtube.com/embed/${meta?.video_id}`\"\n                >\n                  <i class=\"bi bi-play\"></i>\n                </a>\n              </div>\n            </template>\n\n            <div class=\"inner-card border-style mb-75 lg-mb-50\">\n              <h3 class=\"title\">{{ trans('Education') }}</h3>\n              <div class=\"time-line-data position-relative pt-15\">\n                <div\n                  class=\"info position-relative\"\n                  v-for=\"(item, index) in candidate.educations ?? []\"\n                  :key=\"index\"\n                >\n                  <div\n                    class=\"numb fw-500 rounded-circle d-flex align-items-center justify-content-center\"\n                  >\n                    {{ index + 1 }}\n                  </div>\n                  <p>\n                    {{ item.start_at }}\n                    {{ item.pass_year ? 'to ' + item.pass_year : 'to continue' }}\n                  </p>\n                  <div class=\"text_1 fw-500\">{{ item.institute_name }} ({{ item.degree }})</div>\n                  <p v-if=\"!item.is_current\">\n                    {{ item.result?.toFixed(2) + trans(' out of ') + item.out_of }}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <!-- /.inner-card -->\n            <div class=\"inner-card border-style mb-75 lg-mb-50\">\n              <h3 class=\"title\">{{ trans('Skills') }}</h3>\n              <ul class=\"style-none skill-tags d-flex pb-25 flex-wrap\">\n                <li v-for=\"(item, index) in candidate.skills ?? []\" :key=\"index\">\n                  {{ item.title }}\n                </li>\n                <li v-if=\"candidate.skills.length > 10\" class=\"more\">\n                  {{ candidate.skills.length - 10 }}+\n                </li>\n              </ul>\n            </div>\n            <!-- /.inner-card -->\n            <div\n              class=\"inner-card border-style lg-mb-50 mb-60\"\n              v-if=\"meta.work_experiences?.length\"\n            >\n              <h3 class=\"title\">{{ trans('Work Experience') }}</h3>\n              <div class=\"time-line-data position-relative pt-15\">\n                <div\n                  v-for=\"(item, index) in meta.work_experiences\"\n                  :key=\"index\"\n                  class=\"info position-relative\"\n                >\n                  <div\n                    class=\"numb fw-500 rounded-circle d-flex align-items-center justify-content-center\"\n                  >\n                    {{ index + 1 }}\n                  </div>\n                  <div class=\"fw-500\" :class=\"'text_' + (index + 1)\">\n                    {{ moment(item.from).format('MMM YYYY') }}\n                    {{\n                      item.is_current || item.to == null\n                        ? 'to till now'\n                        : 'to ' + moment(item.to).format('MMM YYYY')\n                    }}\n                  </div>\n                  <h4>{{ item.designation }} ({{ item.org_name }})</h4>\n                  <p>{{ item.responsibilities }}</p>\n                </div>\n              </div>\n            </div>\n            <!-- /.inner-card -->\n\n            <template v-if=\"candidate.portfolios?.length\">\n              <h3 class=\"title\">{{ trans('Portfolio') }}</h3>\n              <div class=\"candidate-portfolio-slider\">\n                <div class=\"item\" v-for=\"(item, index) in candidate.portfolios\" :key=\"index\">\n                  <img\n                    v-lazy=\"item.preview\"\n                    alt=\"preview\"\n                    class=\"w-100\"\n                    data-bs-toggle=\"tooltip\"\n                    data-bs-placement=\"bottom\"\n                    :title=\"item.title\"\n                  />\n                </div>\n              </div>\n            </template>\n\n            <div class=\"mt-30 position-relative\" v-if=\"candidate.candidate_reviews?.length\">\n              <h3 class=\"fw-bold mb-20\">{{ trans('Reviews') }}</h3>\n\n              <div class=\"candidate-review-slider\">\n                <div\n                  v-for=\"(review, index) in candidate.candidate_reviews\"\n                  :key=\"index\"\n                  class=\"item\"\n                >\n                  <div class=\"feedback-block-four\">\n                    <div class=\"d-flex align-items-center\">\n                      <ul class=\"style-none d-flex rating\">\n                        <li v-for=\"(item, index) in review.ratting\" :key=\"index\">\n                          <a href=\"#\" tabindex=\"0\"><i class=\"bi bi-star-fill\"></i></a>\n                        </li>\n                      </ul>\n                      <div class=\"review-score\">\n                        <span class=\"fw-500 text-dark\">{{ review.ratting?.toFixed(1) }}</span>\n                        {{ trans('out of 5') }}\n                      </div>\n                    </div>\n                    <blockquote>\n                      {{ review.comment }}\n                    </blockquote>\n                    <div class=\"d-flex align-items-center\">\n                      <img\n                        v-lazy=\"\n                          review.company?.avatar == null\n                            ? `https://ui-avatars.com/api/?name=${review.company?.name}`\n                            : `${review.company?.avatar}`\n                        \"\n                        alt=\"img\"\n                        class=\"author-img rounded-circle\"\n                      />\n                      <div class=\"ms-3\">\n                        <div class=\"name fw-500 text-dark\">\n                          {{ review.company?.name }}\n                        </div>\n                        <span class=\"opacity-50\">{{\n                          review.company?.countries[0]?.name ?? ''\n                        }}</span>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- /.feedback-block-four -->\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- /.candidates-profile-details -->\n        </div>\n        <div class=\"col-xxl-3 col-lg-4\">\n          <div class=\"cadidate-profile-sidebar ms-xl-5 ms-xxl-0 md-mt-60\">\n            <div class=\"cadidate-bio bg-wrapper bg-color md-mb-40 mb-60\">\n              <div class=\"pt-25\">\n                <div class=\"cadidate-avatar m-auto\">\n                  <img\n                    v-lazy=\"\n                      candidate?.avatar == null\n                        ? `https://ui-avatars.com/api/?name=${candidate.name}`\n                        : `${candidate?.avatar}`\n                    \"\n                    alt=\"img\"\n                    class=\"lazy-img rounded-circle w-100\"\n                  />\n                </div>\n              </div>\n              <h3 class=\"cadidate-name text-center\">{{ candidate.name }}</h3>\n\n              <ul class=\"style-none\">\n                <li>\n                  <span>{{ trans('Location') }}: </span>\n                  <div>{{ candidate.state ?? '' }} , {{ candidate.country ?? '' }}</div>\n                </li>\n                <li>\n                  <span>{{ trans('Date of Birth') }}: </span>\n                  <div>{{ moment(meta.date_of_birth).format('DD-MMM-YYYY') }}</div>\n                </li>\n\n                <li>\n                  <span>{{ trans('Qualification') }}: </span>\n                  <div>{{ candidate.currentEducationDegree }}</div>\n                </li>\n                <li>\n                  <span>{{ trans('Gender') }}: </span>\n                  <div class=\"text-capitalize\">{{ meta.gender }}</div>\n                </li>\n                <li>\n                  <span>{{ trans('Expected Salary') }}: </span>\n                  <div v-if=\"meta?.expected_salary && meta?.expected_salary > 1\">\n                    {{ formatNumber(meta.expected_salary) }}/ {{ meta.currency }}\n                  </div>\n                  <div v-else>{{ trans('Negotiable') }}</div>\n                </li>\n                <li v-if=\"candidate_reviews_avg_ratting > 0\">\n                  <span>{{ trans('Rating') }}: </span>\n                  <div>\n                    <div class=\"d-flex gap-1\">\n                      <span\n                        v-for=\"(item, index) in Math.round(\n                          candidate.candidate_reviews_avg_ratting ?? 0\n                        )\"\n                        :key=\"index\"\n                      >\n                        <i class=\"bi bi-star-fill text-warning\"></i>\n                      </span>\n                    </div>\n                  </div>\n                </li>\n\n                <li v-if=\"candidate.hasSocial\">\n                  <span>{{ trans('Social') }}:</span>\n                  <div>\n                    <a\n                      v-if=\"meta?.social?.facebook\"\n                      :href=\"meta?.social?.facebook ?? '#'\"\n                      class=\"me-3\"\n                      ><i class=\"bi bi-facebook\"></i\n                    ></a>\n                    <a\n                      v-if=\"meta?.social?.instagram\"\n                      :href=\"meta?.social?.instagram ?? '#'\"\n                      class=\"me-3\"\n                      ><i class=\"bi bi-instagram\"></i\n                    ></a>\n                    <a\n                      v-if=\"meta?.social?.twitter\"\n                      :href=\"meta?.social?.twitter ?? '#'\"\n                      class=\"me-3\"\n                      ><i class=\"bi bi-twitter\"></i\n                    ></a>\n                    <a v-if=\"meta?.social?.linkedin\" :href=\"meta?.social?.linkedin ?? '#'\"\n                      ><i class=\"bi bi-linkedin\"></i\n                    ></a>\n                  </div>\n                </li>\n              </ul>\n              <a\n                v-if=\"meta.custom_cv\"\n                :href=\"meta.custom_cv\"\n                download=\"\"\n                class=\"btn-ten fw-500 w-100 tran3s mt-15 text-center text-white\"\n                >{{ trans('Download CV') }}</a\n              >\n            </div>\n            <!-- /.cadidate-bio -->\n            <h4 class=\"sidebar-title\">{{ trans('Location') }}</h4>\n            <div class=\"map-area md-mb-40 mb-60\">\n              <div class=\"gmap_canvas h-100 w-100\">\n                <iframe\n                  class=\"gmap_iframe h-100 w-100\"\n                  :src=\"`https://maps.google.com/maps?width=600&amp;height=400&amp;hl=en&amp;q=${candidate.state},${candidate.country}&amp;t=&amp;z=12&amp;ie=UTF8&amp;iwloc=B&amp;output=embed`\"\n                ></iframe>\n              </div>\n            </div>\n\n            <template v-if=\"authUser && authUser.role == 'employer'\">\n              <h4 class=\"sidebar-title\">{{ trans('Send Message') }}</h4>\n\n              <div v-if=\"candidate.mgs_blocked\">\n                {{ trans(\"You can't not send message\") }}\n              </div>\n\n              <div v-else class=\"email-form bg-wrapper bg-color\">\n                <p>{{ trans('Send direct message to this candidate.') }}</p>\n                <form @submit.prevent=\"submit\">\n                  <div class=\"d-sm-flex mb-25\">\n                    <label for=\"\">{{ trans('Name') }}</label>\n                    <input type=\"text\" :value=\"authUser.name\" disabled />\n                  </div>\n                  <div class=\"d-sm-flex\">\n                    <label for=\"\">{{ trans('Message') }}</label>\n                    <textarea v-model=\"form.body\"></textarea>\n                  </div>\n                  <InputFieldError class=\"mb-5\" :message=\"form.errors.body\" />\n                  <div class=\"d-sm-flex mt-20\">\n                    <SpinnerBtn\n                      type=\"submit\"\n                      :processing=\"form.processing\"\n                      classes=\"btn-ten fw-500 d-flex align-items-center justify-content-center w-100 tran3s text-center text-white\"\n                      :btn-text=\"trans('Send ')\"\n                    />\n                  </div>\n                </form>\n              </div>\n            </template>\n          </div>\n          <!-- /.cadidate-profile-sidebar -->\n        </div>\n      </div>\n    </div>\n  </section>\n  <!-- /.candidates-profile -->\n\n  <JobIntro />\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport WebPaginate from '@/Components/WebPaginate.vue'\nimport JobIntro from '@/Pages/Web/Candidate/Partials/JobIntro.vue'\nimport SingleGridCandidate from '@/Components/SingleGridCandidate.vue'\nimport SingleListCandidate from '@/Components/SingleListCandidate.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport InnerBanner from '@/Pages/Web/Candidate/Partials/InnerBanner.vue'\nimport FilterModalForm from '@/Pages/Web/Candidate/Common/FilterModalForm.vue'\nimport { useCandidateFilterStore } from '@/Store/candidateFilterStore'\nimport { onMounted } from 'vue'\nimport sharedComposable from '@/Composables/sharedComposable'\n\ndefineOptions({ layout: DefaultLayout })\n\nconst { getQueryParams } = sharedComposable()\nconst store = useCandidateFilterStore()\nconst request = getQueryParams()\n\nconst props = defineProps([\n  'candidates',\n  'services',\n  'categories',\n  'countries',\n  'expertLevels',\n  'qualifications',\n  'meta',\n  'currencies',\n  'highestSalaryAmount'\n])\n\nstore.$patch({\n  services: props.services,\n  categories: props.categories,\n  countries: props.countries,\n  expertLevels: props.expertLevels,\n  qualifications: props.qualifications,\n  currencies: props.currencies,\n  highestSalaryAmount: parseInt(props.highestSalaryAmount),\n  form: {\n    keyword: request.keyword,\n    v: request.v,\n    order_by: request.order_by,\n    service: Number(request.service ?? 0) || '',\n    category: Number(request.category ?? 0) || '',\n    country: Number(request.country ?? 0) || '',\n    state: Number(request.state) || '',\n\n    expert_level: Number(request.expert_level ?? 0) || '',\n    currency: request.currency,\n    qualification: Number(request.qualification ?? 0) || '',\n    gender: request.gender ?? '',\n    max_salary: parseInt(request.max_salary ?? props.highestSalaryAmount),\n    min_salary: Number(request.min_salary) || 0\n  }\n})\n\nonMounted(() => {\n  store.$patch({\n    services: props.services,\n    categories: props.categories,\n    countries: props.countries,\n    expertLevels: props.expertLevels,\n    qualifications: props.qualifications,\n    currencies: props.currencies,\n    highestSalaryAmount: parseInt(props.highestSalaryAmount),\n    form: {\n      keyword: request.keyword,\n      v: request.v,\n      order_by: request.order_by,\n      service: Number(request.service ?? 0) || '',\n      category: Number(request.category ?? 0) || '',\n      country: Number(request.country ?? 0) || '',\n      state: Number(request.state) || '',\n\n      expert_level: Number(request.expert_level ?? 0) || '',\n      currency: request.currency,\n      qualification: Number(request.qualification ?? 0) || '',\n      gender: request.gender ?? '',\n      max_salary: parseInt(request.max_salary ?? props.highestSalaryAmount),\n      min_salary: Number(request.min_salary) || 0\n    }\n  })\n\n  if (!store.layout) {\n    store.$patch({\n      layout: 'grid'\n    })\n  }\n  if (request.country) {\n    store.fetchStates(store.form.state)\n  }\n})\n</script>\n\n<template>\n  <Seo :metaData=\"meta\" />\n\n  <FilterModalForm />\n\n  <InnerBanner />\n  <!-- /.inner-banner-one -->\n\n  <section class=\"candidates-profile bg-color pt-90 lg-pt-70 pb-160 xl-pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"position-relative\">\n            <div\n              class=\"upper-filter d-flex justify-content-between align-items-start align-items-md-center mb-20\"\n            >\n              <div class=\"d-md-flex justify-content-between align-items-center\">\n                <button\n                  type=\"button\"\n                  class=\"filter-btn fw-500 tran3s me-3\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#filterPopUp\"\n                >\n                  <i class=\"bi bi-funnel\"></i>\n                  {{ trans('Filter') }}\n                </button>\n                <div class=\"total-job-found md-mt-10\">\n                  {{ trans('All') }}\n                  <span class=\"text-dark fw-500\">{{ candidates.total }}</span>\n                  {{ trans('candidates found') }}\n                </div>\n              </div>\n              <div class=\"d-flex justify-content-between align-items-center\">\n                <div class=\"short-filter d-flex align-items-center\">\n                  <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n                  <NiceSelect\n                    v-model=\"store.form.order_by\"\n                    :options=\"store.sorts\"\n                    value-by=\"value\"\n                    label=\"label\"\n                    @change=\"store.sort()\"\n                    placeholder=\"Default\"\n                  />\n                </div>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s list-btn ms-2 text-center\"\n                  title=\"Active List\"\n                  :class=\"[store.layout == 'grid' ? 'active' : '']\"\n                  @click=\"store.setLayout('list')\"\n                >\n                  <i class=\"bi bi-list\"></i>\n                </button>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s grid-btn ms-2 text-center\"\n                  title=\"Active Grid\"\n                  :class=\"[store.layout == 'list' ? 'active' : '']\"\n                  @click=\"store.setLayout('grid')\"\n                >\n                  <i class=\"bi bi-grid\"></i>\n                </button>\n              </div>\n            </div>\n\n            <template v-if=\"candidates.total\">\n              <!-- /.upper-filter -->\n              <div class=\"accordion-box grid-style\" :class=\"[store.layout == 'grid' ? 'show' : '']\">\n                <div class=\"row\">\n                  <SingleGridCandidate\n                    v-for=\"candidate in candidates.data\"\n                    :key=\"candidate.id\"\n                    :candidate=\"candidate\"\n                    class=\"col-xxl-3 col-lg-3 col-sm-6\"\n                  />\n                </div>\n              </div>\n              <!-- /.accordion-box -->\n\n              <div class=\"accordion-box list-style\" :class=\"[store.layout == 'list' ? 'show' : '']\">\n                <SingleListCandidate\n                  v-for=\"candidate in candidates.data\"\n                  :key=\"candidate.id\"\n                  :candidate=\"candidate\"\n                />\n              </div>\n              <!-- /.accordion-box -->\n\n              <div class=\"pt-50 lg-pt-20 d-sm-flex align-items-center justify-content-between\">\n                <p class=\"m0 order-sm-last text-sm-start xs-pb-20 text-center\">\n                  {{ trans('Showing') }}\n                  <span class=\"text-dark fw-500\"\n                    >{{ candidates.from }} {{ trans('to') }} {{ candidates.to }}</span\n                  >\n                  {{ trans('of') }}\n                  <span class=\"text-dark fw-500\">{{ candidates.total }}</span>\n                </p>\n                <WebPaginate :links=\"candidates.links\" />\n              </div>\n            </template>\n\n            <h4 v-else class=\"alert alert-info\">{{ trans('No record found') }}</h4>\n          </div>\n          <!-- /.-->\n        </div>\n        <!-- /.col- -->\n      </div>\n    </div>\n  </section>\n  <!-- ./candidates-profile -->\n\n  <JobIntro />\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport WebPaginate from '@/Components/WebPaginate.vue'\nimport JobIntro from '@/Pages/Web/Candidate/Partials/JobIntro.vue'\nimport InnerBanner from '@/Pages/Web/Candidate/Partials/InnerBanner.vue'\nimport SingleGridCandidate from '@/Components/SingleGridCandidate.vue'\nimport SingleListCandidate from '@/Components/SingleListCandidate.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport AsideFilterForm from '@/Pages/Web/Candidate/Common/AsideFilterForm.vue'\nimport { useCandidateFilterStore } from '@/Store/candidateFilterStore'\nimport { onMounted } from 'vue'\nimport sharedComposable from '@/Composables/sharedComposable'\n\ndefineOptions({ layout: DefaultLayout })\n\nconst { getQueryParams } = sharedComposable()\nconst store = useCandidateFilterStore()\nconst request = getQueryParams()\n\nconst props = defineProps([\n  'candidates',\n  'services',\n  'categories',\n  'countries',\n  'expertLevels',\n  'qualifications',\n  'meta',\n  'currencies',\n  'highestSalaryAmount'\n])\n\nonMounted(() => {\n  store.$patch({\n    services: props.services,\n    categories: props.categories,\n    countries: props.countries,\n    expertLevels: props.expertLevels,\n    qualifications: props.qualifications,\n    currencies: props.currencies,\n    highestSalaryAmount: parseInt(props.highestSalaryAmount),\n    form: {\n      keyword: request.keyword,\n      v: request.v,\n\n      order_by: request.order_by,\n      service: Number(request.service ?? 0) || '',\n      category: Number(request.category ?? 0) || '',\n      country: Number(request.country ?? 0) || '',\n      state: Number(request.state) || '',\n\n      expert_level: Number(request.expert_level ?? 0) || '',\n      currency: request.currency,\n      qualification: Number(request.qualification ?? 0) || '',\n      gender: request.gender ?? '',\n      max_salary: parseInt(request.max_salary ?? props.highestSalaryAmount),\n      min_salary: Number(request.min_salary) || 0\n    }\n  })\n\n  if (!store.layout) {\n    store.$patch({\n      layout: 'list'\n    })\n  }\n  if (request.country) {\n    store.fetchStates(store.form.state)\n  }\n})\n</script>\n\n<template>\n  <Seo :metaData=\"meta\" />\n  <InnerBanner />\n  <!-- /.inner-banner-one -->\n\n  <section class=\"candidates-profile pt-110 lg-pt-80 pb-160 xl-pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xl-3 col-lg-4\">\n          <AsideFilterForm />\n        </div>\n\n        <div class=\"col-xl-9 col-lg-8\">\n          <div class=\"ms-xxl-5 ms-xl-3\">\n            <div class=\"upper-filter d-flex justify-content-between align-items-center mb-20\">\n              <div class=\"total-job-found\">\n                <span class=\"text-dark fw-500\">{{ candidates.total }}</span>\n                {{ trans('candidates found') }}\n              </div>\n              <div class=\"d-flex align-items-center\">\n                <div class=\"short-filter d-flex align-items-center\">\n                  <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n                  <NiceSelect\n                    v-model=\"store.form.order_by\"\n                    :options=\"store.sorts\"\n                    value-by=\"value\"\n                    label=\"label\"\n                    @change=\"store.sort()\"\n                    placeholder=\"Default\"\n                  />\n                </div>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s list-btn ms-2 text-center\"\n                  title=\"Active List\"\n                  :class=\"[store.layout == 'grid' ? 'active' : '']\"\n                  @click=\"store.setLayout('list')\"\n                >\n                  <i class=\"bi bi-list\"></i>\n                </button>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s grid-btn ms-2 text-center\"\n                  title=\"Active Grid\"\n                  :class=\"[store.layout == 'list' ? 'active' : '']\"\n                  @click=\"store.setLayout('grid')\"\n                >\n                  <i class=\"bi bi-grid\"></i>\n                </button>\n              </div>\n            </div>\n            <!-- /.upper-filter -->\n\n            <template v-if=\"candidates.total\">\n              <div class=\"accordion-box grid-style\" :class=\"[store.layout == 'grid' ? 'show' : '']\">\n                <div class=\"row\">\n                  <SingleGridCandidate\n                    v-for=\"candidate in candidates.data\"\n                    :key=\"candidate.id\"\n                    :candidate=\"candidate\"\n                    class=\"col-xxl-4 col-lg-4 col-sm-3 d-flex\"\n                  />\n                </div>\n              </div>\n              <!-- /.accordion-box -->\n\n              <div class=\"accordion-box list-style\" :class=\"[store.layout == 'list' ? 'show' : '']\">\n                <SingleListCandidate\n                  v-for=\"candidate in candidates.data\"\n                  :key=\"candidate.id\"\n                  :candidate=\"candidate\"\n                />\n              </div>\n              <!-- /.accordion-box -->\n\n              <div class=\"pt-50 lg-pt-20 d-sm-flex align-items-center justify-content-between\">\n                <p class=\"m0 order-sm-last text-sm-start xs-pb-20 text-center\">\n                  {{ trans('Showing') }}\n                  <span class=\"text-dark fw-500\"\n                    >{{ candidates.from }} {{ trans('to') }} {{ candidates.to }}</span\n                  >\n                  {{ trans('of') }}\n                  <span class=\"text-dark fw-500\">{{ candidates.total }}</span>\n                </p>\n                <WebPaginate :links=\"candidates.links\" />\n              </div>\n            </template>\n            <h4 v-else class=\"alert alert-info\">{{ trans('No record found') }}</h4>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <!-- ./candidates-profile -->\n\n  <JobIntro />\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport axios from 'axios'\nimport { computed, onMounted } from 'vue'\nimport JobIntro from '../Partials/JobIntro.vue'\nimport moment from 'moment'\nimport { useForm } from '@inertiajs/vue3'\nimport notify from '@/Plugins/Admin/notify'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nimport { useThemeLoaderStore } from '@/Store/themeLoaderStore'\nconst themeLoader = useThemeLoaderStore()\ndefineOptions({ layout: DefaultLayout })\n\nconst props = defineProps(['candidate', 'seo'])\nconst meta = props.candidate?.meta ?? {}\nconst { authUser, formatNumber } = sharedComposable()\nonMounted(() => {\n  axios.get(route('candidates.visit', props.candidate)).then((res) => console.log(res.data))\n\n  let tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\n  tooltipTriggerList.map(function (tooltipTriggerEl) {\n    return new bootstrap.Tooltip(tooltipTriggerEl)\n  })\n\n  $(document).ready(() => {\n    if ($('.candidate-portfolio-slider').length) {\n      $('.candidate-portfolio-slider').slick({\n        dots: true,\n        arrows: false,\n        lazyLoad: 'ondemand',\n        centerPadding: '0px',\n        slidesToShow: 3,\n        slidesToScroll: 2,\n        autoplay: true,\n        autoplaySpeed: 3000,\n        responsive: [\n          {\n            breakpoint: 992,\n            settings: {\n              slidesToShow: 2\n            }\n          },\n          {\n            breakpoint: 450,\n            settings: {\n              slidesToShow: 1\n            }\n          }\n        ]\n      })\n    }\n  })\n})\n\nconst toggleBookmark = (id) => {\n  let form = useForm({})\n  form.post(route('candidates.bookmark', id), {\n    preserveScroll: true,\n    onSuccess: () => {}\n  })\n}\nconst form = useForm({\n  body: '',\n  email: props.candidate.email\n})\nconst submit = () => {\n  if (form.body) {\n    form.post(route('employer.message.store'), {\n      onSuccess: () => {\n        notify.success('Message Send Successfully')\n        form.body = ''\n      }\n    })\n  }\n}\nconst breadcrumbColor = computed(() => {\n  const themes = ['One', 'Six']\n  if (themes.includes(themeLoader.theme)) {\n    return ''\n  }\n  return 'inner-breadcrumb-colors'\n})\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <div class=\"inner-banner-one position-relative\" :class=\"breadcrumbColor\">\n    <div class=\"container\">\n      <div class=\"candidate-profile-card list-layout\">\n        <div class=\"d-flex align-items-start align-items-xl-center\">\n          <div class=\"cadidate-avatar position-relative d-block me-auto ms-auto\">\n            <a href=\"#\" class=\"rounded-circle\"\n              ><img\n                v-lazy=\"\n                  candidate?.avatar == null\n                    ? `https://ui-avatars.com/api/?name=${candidate.name}`\n                    : `${candidate?.avatar}`\n                \"\n                alt=\"\"\n                class=\"lazy-img rounded-circle\"\n            /></a>\n          </div>\n          <div class=\"right-side\">\n            <div class=\"row gx-1 align-items-center\">\n              <div class=\"col-xl-2 order-xl-0\">\n                <div class=\"position-relative\">\n                  <h4 class=\"candidate-name mb-0\">\n                    {{ candidate.name }}\n                  </h4>\n                  <div class=\"candidate-post\">{{ candidate.serviceName }}</div>\n                </div>\n              </div>\n              <div class=\"col-xl-3 order-xl-3\">\n                <ul class=\"cadidate-skills style-none d-flex align-items-center flex-wrap\">\n                  <li v-for=\"(item, index) in candidate.skills ?? []\" :key=\"index\">\n                    {{ item.title }}\n                  </li>\n                  <li v-if=\"candidate.skills.length > 10\" class=\"more\">\n                    {{ candidate.skills.length - 10 }}+\n                  </li>\n                </ul>\n                <!-- /.cadidate-skills -->\n              </div>\n              <div class=\"col-xl-2 col-md-4 order-xl-1\">\n                <div class=\"candidate-info\">\n                  <span>{{ trans('Location') }}</span>\n                  <div>{{ candidate.state ?? '' }} , {{ candidate.country ?? '' }}</div>\n                </div>\n                <!-- /.candidate-info -->\n              </div>\n              <div class=\"col-xl-2 col-md-4 order-xl-2\">\n                <div class=\"candidate-info\">\n                  <span>{{ trans('Salary') }}</span>\n                  <div>\n                    {{ meta.expected_salary ? formatNumber(meta.expected_salary) : 'Negotiable' }}\n                    {{ meta.currency }}\n                  </div>\n                </div>\n                <!-- /.candidate-info -->\n              </div>\n              <div class=\"col-xl-3 col-md-4 order-xl-4\">\n                <div class=\"d-flex justify-content-md-end\">\n                  <button\n                    @click=\"toggleBookmark(candidate.id)\"\n                    class=\"save-btn rounded-circle tran3s text-center\"\n                  >\n                    <i\n                      class=\"bi\"\n                      :class=\"{\n                        'bi-heart-fill text-danger': candidate.isBookmarked,\n                        'bi-heart': !candidate.isBookmarked\n                      }\"\n                    ></i>\n                  </button>\n\n                  <a\n                    v-if=\"meta.custom_cv\"\n                    :href=\"meta.custom_cv\"\n                    download=\"\"\n                    class=\"cv-download-btn fw-500 tran3s ms-md-3 sm-mt-20\"\n                    >{{ trans('Download CV') }}</a\n                  >\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <img src=\"/assets/images/shape/shape_02.svg\" alt=\"\" class=\"lazy-img shapes shape_01\" />\n    <img src=\"/assets/images/shape/shape_03.svg\" alt=\"\" class=\"lazy-img shapes shape_02\" />\n  </div>\n\n  <section class=\"candidates-profile bg-color pt-100 lg-pt-70 pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xxl-9 col-lg-8\">\n          <div class=\"candidates-profile-details me-xxl-5 pe-xxl-4\">\n            <div class=\"inner-card mb-65 lg-mb-40\">\n              <h3 class=\"title\">{{ trans('Overview') }}</h3>\n              <p>\n                {{ meta.overview }}\n              </p>\n            </div>\n            <!-- /.inner-card -->\n            <template v-if=\"meta?.video_id\">\n              <h3 class=\"title\">{{ trans('Intro') }}</h3>\n              <div\n                class=\"video-post d-flex align-items-center justify-content-center mt-25 lg-mt-20 mb-75 lg-mb-50\"\n                :style=\"{\n                  backgroundImage: `url(https://img.youtube.com/vi/${meta?.video_id}/sddefault.jpg)`\n                }\"\n              >\n                <a\n                  class=\"fancybox rounded-circle video-icon tran3s text-center\"\n                  data-fancybox=\"\"\n                  :href=\"`https://www.youtube.com/embed/${meta?.video_id}`\"\n                >\n                  <i class=\"bi bi-play\"></i>\n                </a>\n              </div>\n            </template>\n\n            <div class=\"inner-card border-style mb-75 lg-mb-50\">\n              <h3 class=\"title\">{{ trans('Education') }}</h3>\n              <div class=\"time-line-data position-relative pt-15\">\n                <div\n                  class=\"info position-relative\"\n                  v-for=\"(item, index) in candidate.educations ?? []\"\n                  :key=\"index\"\n                >\n                  <div\n                    class=\"numb fw-500 rounded-circle d-flex align-items-center justify-content-center\"\n                  >\n                    {{ index + 1 }}\n                  </div>\n                  <p>\n                    {{ item.start_at }}\n                    {{ item.pass_year ? 'to ' + item.pass_year : 'to continue' }}\n                  </p>\n                  <div class=\"text_1 fw-500\">{{ item.institute_name }} ({{ item.degree }})</div>\n                  <p v-if=\"!item.is_current\">\n                    {{ item.result?.toFixed(2) + trans(' out of ') + item.out_of }}\n                  </p>\n                </div>\n              </div>\n              <!-- /.time-line-data -->\n            </div>\n            <!-- /.inner-card -->\n            <div class=\"inner-card mb-75 lg-mb-50\">\n              <h3 class=\"title\">{{ trans('Skills') }}</h3>\n              <ul class=\"style-none skill-tags d-flex pb-25 flex-wrap\">\n                <li v-for=\"(item, index) in candidate.skills ?? []\" :key=\"index\">\n                  {{ item.title }}\n                </li>\n                <li v-if=\"candidate.skills.length > 10\" class=\"more\">\n                  {{ candidate.skills.length - 10 }}+\n                </li>\n              </ul>\n            </div>\n            <!-- /.inner-card -->\n            <div class=\"inner-card lg-mb-50 mb-60\">\n              <h3 class=\"title\">{{ trans('Work Experience') }}</h3>\n              <div class=\"time-line-data position-relative pt-15\">\n                <div\n                  v-for=\"(item, index) in meta.work_experiences\"\n                  :key=\"index\"\n                  class=\"info position-relative\"\n                >\n                  <div\n                    class=\"numb fw-500 rounded-circle d-flex align-items-center justify-content-center\"\n                  >\n                    {{ index + 1 }}\n                  </div>\n                  <div class=\"fw-500\" :class=\"'text_' + (index + 1)\">\n                    {{ moment(item.from).format('MMM YYYY') }}\n                    {{\n                      item.is_current || item.to == null\n                        ? 'to till now'\n                        : 'to ' + moment(item.to).format('MMM YYYY')\n                    }}\n                  </div>\n                  <h4>{{ item.designation }} ({{ item.org_name }})</h4>\n                  <p>{{ item.responsibilities }}</p>\n                </div>\n              </div>\n              <!-- /.time-line-data -->\n            </div>\n            <!-- /.inner-card -->\n            <div class=\"inner-card\">\n              <template v-if=\"candidate.portfolios?.length\">\n                <h3 class=\"title\">{{ trans('Portfolio') }}</h3>\n                <div class=\"candidate-portfolio-slider\">\n                  <div class=\"item\" v-for=\"(item, index) in candidate.portfolios\" :key=\"index\">\n                    <img\n                      v-lazy=\"item.preview\"\n                      alt=\"preview\"\n                      class=\"w-100\"\n                      data-bs-toggle=\"tooltip\"\n                      data-bs-placement=\"bottom\"\n                      :title=\"item.title\"\n                    />\n                  </div>\n                </div>\n              </template>\n            </div>\n            <!-- /.inner-card -->\n\n            <div class=\"mt-30 position-relative\" v-if=\"candidate.candidate_reviews?.length\">\n              <h3 class=\"fw-bold mb-20\">{{ trans('Reviews') }}</h3>\n\n              <div class=\"candidate-review-slider\">\n                <div\n                  v-for=\"(review, index) in candidate.candidate_reviews\"\n                  :key=\"index\"\n                  class=\"item\"\n                >\n                  <div class=\"feedback-block-four border-0 bg-white\">\n                    <div class=\"d-flex align-items-center\">\n                      <ul class=\"style-none d-flex rating\">\n                        <li v-for=\"(item, index) in review.ratting\" :key=\"index\">\n                          <a href=\"#\" tabindex=\"0\"><i class=\"bi bi-star-fill\"></i></a>\n                        </li>\n                      </ul>\n                      <div class=\"review-score\">\n                        <span class=\"fw-500 text-dark\">{{ review.ratting?.toFixed(1) }}</span>\n                        {{ trans('out of 5') }}\n                      </div>\n                    </div>\n                    <blockquote>\n                      {{ review.comment }}\n                    </blockquote>\n                    <div class=\"d-flex align-items-center\">\n                      <img\n                        v-lazy=\"\n                          review.company?.avatar == null\n                            ? `https://ui-avatars.com/api/?name=${review.company?.name}`\n                            : `${review.company?.avatar}`\n                        \"\n                        alt=\"img\"\n                        class=\"author-img rounded-circle\"\n                      />\n                      <div class=\"ms-3\">\n                        <div class=\"name fw-500 text-dark\">\n                          {{ review.company?.name }}\n                        </div>\n                        <span class=\"opacity-50\">{{\n                          review.company?.countries[0]?.name ?? ''\n                        }}</span>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- /.feedback-block-four -->\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- /.candidates-profile-details -->\n        </div>\n        <div class=\"col-xxl-3 col-lg-4\">\n          <div class=\"cadidate-profile-sidebar ms-xl-5 ms-xxl-0 md-mt-60\">\n            <div class=\"cadidate-bio bg-wrapper md-mb-40 mb-60\">\n              <ul class=\"style-none\">\n                <li>\n                  <span>{{ trans('Location') }}: </span>\n                  <div>\n                    {{ candidate.state ?? 'NA' }} ,\n                    {{ candidate.country ?? 'NA' }}\n                  </div>\n                </li>\n                <li>\n                  <span>{{ trans('Date of Birth') }}: </span>\n                  <div>\n                    {{ moment(meta.date_of_birth).format('DD-MMM-YYYY') }}\n                  </div>\n                </li>\n                <li>\n                  <span>{{ trans('Qualification') }}: </span>\n                  <div>{{ candidate.currentEducationDegree }}</div>\n                </li>\n                <li>\n                  <span>{{ trans('Gender') }}: </span>\n                  <div class=\"text-capitalize\">{{ meta.gender }}</div>\n                </li>\n                <li>\n                  <span>{{ trans('Expected Salary') }}: </span>\n                  <div v-if=\"meta?.expected_salary && meta?.expected_salary > 1\">\n                    {{ formatNumber(meta.expected_salary) }}/{{ meta.currency }}\n                  </div>\n                  <div v-else>{{ trans('Negotiable') }}</div>\n                </li>\n\n                <li v-if=\"candidate?.candidate_reviews_avg_ratting\">\n                  <span>{{ trans('Ratting') }}: </span>\n                  <div>\n                    <div class=\"d-flex gap-1\">\n                      <span\n                        v-for=\"item in Math.round(candidate.candidate_reviews_avg_ratting ?? 0)\"\n                        :key=\"item\"\n                      >\n                        <i class=\"bi bi-star-fill text-warning\"></i>\n                      </span>\n                    </div>\n                  </div>\n                </li>\n\n                <li v-if=\"candidate.hasSocial\">\n                  <span>{{ trans('Social') }}:</span>\n                  <div>\n                    <a\n                      v-if=\"meta?.social?.facebook\"\n                      :href=\"meta?.social?.facebook ?? '#'\"\n                      class=\"me-3\"\n                      ><i class=\"bi bi-facebook\"></i\n                    ></a>\n                    <a\n                      v-if=\"meta?.social?.instagram\"\n                      :href=\"meta?.social?.instagram ?? '#'\"\n                      class=\"me-3\"\n                      ><i class=\"bi bi-instagram\"></i\n                    ></a>\n                    <a\n                      v-if=\"meta?.social?.twitter\"\n                      :href=\"meta?.social?.twitter ?? '#'\"\n                      class=\"me-3\"\n                      ><i class=\"bi bi-twitter\"></i\n                    ></a>\n                    <a v-if=\"meta?.social?.linkedin\" :href=\"meta?.social?.linkedin ?? '#'\"\n                      ><i class=\"bi bi-linkedin\"></i\n                    ></a>\n                  </div>\n                </li>\n              </ul>\n              <a\n                v-if=\"meta.custom_cv\"\n                :href=\"meta.custom_cv\"\n                download=\"\"\n                class=\"btn-ten fw-500 w-100 tran3s mt-15 text-center text-white\"\n                >{{ trans('Download CV') }}</a\n              >\n            </div>\n            <!-- /.cadidate-bio -->\n            <h4 class=\"sidebar-title\">{{ trans('Location') }}</h4>\n            <div class=\"map-area md-mb-40 mb-60\">\n              <div class=\"gmap_canvas h-100 w-100\">\n                <iframe\n                  class=\"gmap_iframe h-100 w-100\"\n                  src=\"https://maps.google.com/maps?width=600&amp;height=400&amp;hl=en&amp;q=dhaka collage&amp;t=&amp;z=12&amp;ie=UTF8&amp;iwloc=B&amp;output=embed\"\n                ></iframe>\n              </div>\n            </div>\n            <template v-if=\"authUser && authUser.role == 'employer'\">\n              <h4 class=\"sidebar-title\">{{ trans('Send Message') }}</h4>\n              <div class=\"email-form bg-wrapper\">\n                <p>{{ trans('Send direct message to this candidate.') }}</p>\n                <form @submit.prevent=\"submit\">\n                  <div class=\"d-sm-flex mb-25\">\n                    <label for=\"\">{{ trans('Name') }}</label>\n                    <input type=\"text\" :value=\"authUser.name\" disabled />\n                  </div>\n                  <div class=\"d-sm-flex\">\n                    <label for=\"\">{{ trans('Message') }}</label>\n                    <textarea v-model=\"form.body\"></textarea>\n                  </div>\n                  <InputFieldError class=\"mb-5\" :message=\"form.errors.body\" />\n                  <div class=\"d-sm-flex mt-20\">\n                    <SpinnerBtn\n                      type=\"submit\"\n                      :processing=\"form.processing\"\n                      classes=\"btn-ten fw-500 d-flex align-items-center justify-content-center w-100 tran3s text-center text-white\"\n                      :btn-text=\"trans('Send ')\"\n                    />\n                  </div>\n                </form>\n              </div>\n            </template>\n          </div>\n          <!-- /.cadidate-profile-sidebar -->\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <JobIntro />\n</template>\n","import { defineStore } from 'pinia'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport axios from 'axios'\nimport { router } from '@inertiajs/vue3'\nconst { pickBy, getQueryParams } = sharedComposable()\n\nexport const useCompanyFilterStore = defineStore({\n  id: 'companyFilterFormStore',\n  state: () => ({\n    layout: null,\n    filterForm: {\n      sort: '',\n      keyword: '',\n      status: '',\n      category: '',\n      team: '',\n      country: '',\n      state: ''\n    },\n    teamSizes: [\n      '1-15',\n      '16-30',\n      '31-50',\n      '51-120',\n      '121-300',\n      '301-500',\n      '501-1000',\n      '1001-5000',\n      '5001-10000',\n      '10000'\n    ],\n    sorts: [\n      { name: 'Latest', value: 'created_at', order: 'desc' },\n      { name: 'Oldest', value: 'created_at', order: 'asc' }\n    ],\n    states: [],\n    locations: [],\n    services: [],\n    loading: {\n      states: false\n    }\n  }),\n\n  actions: {\n    updateInitialState(props) {\n      this.services = props.services\n      this.locations = props.locations\n      // request\n      const request = props.request\n      this.filterForm.keyword = request?.keyword ?? ''\n      this.filterForm.status = request?.status ?? ''\n      this.filterForm.category = request?.category ?? ''\n      this.filterForm.team = request?.team ?? ''\n      this.filterForm.country = request?.country ? +request?.country : ''\n      if (this.filterForm.country) {\n        this.getStates()\n        if (!this.filterForm.state) {\n          this.filterForm.state = +request?.state ?? ''\n        }\n      }\n    },\n    setCategory(cat) {\n      if (this.filterForm.category && this.filterForm.category === cat) {\n        this.filterForm.category = ''\n      } else {\n        this.filterForm.category = cat\n      }\n      this.filter()\n    },\n\n    setTeam(size) {\n      if (this.filterForm.team && this.filterForm.team === size) {\n        this.filterForm.team = ''\n      } else {\n        this.filterForm.team = size\n      }\n      this.filter()\n    },\n\n    getStates() {\n      this.states = []\n      this.filterForm.state = ''\n      if (this.filterForm.country) {\n        this.loading.states = true\n\n        this.filterForm.state = ''\n        axios.get(`/api/locations?location_id=${this.filterForm.country}`).then((res) => {\n          this.states = res.data\n          this.loading.states = false\n        })\n      }\n    },\n    setLayout(layout) {\n      this.layout = layout\n    },\n    submit() {\n      const queryParams = Object.fromEntries(new URLSearchParams(window.location.search))\n      const updatedQueryParams = { v: queryParams?.v, ...this.filterForm }\n      router.get('/companies', pickBy(updatedQueryParams), {\n        preserveState: true,\n        replace: true\n      })\n    },\n    clear() {\n      const request = getQueryParams()\n      const layout = this.layout\n      const modal = document.getElementById('filterPopUp')\n      const backdrop = document.querySelector('.modal-backdrop')\n\n      this.$reset()\n      const filter = {\n        type: request.type ?? '',\n        v: request.v ?? ''\n      }\n\n      router.get('/companies', pickBy(filter))\n      this.layout = layout\n\n      if (modal && modal.classList.contains('show') && backdrop) {\n        modal.classList.remove('show')\n        document.body.removeChild(backdrop)\n        document.body.style = ''\n      }\n    }\n  }\n})\n","<script setup>\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport { useCompanyFilterStore } from '@/Store/companyFilterStore'\nimport LabelWithAjaxLoader from '@/Components/LabelWithAjaxLoader.vue'\nimport { onMounted } from 'vue'\nconst props = defineProps(['services', 'locations', 'request'])\nconst filter = useCompanyFilterStore()\n\nonMounted(() => {\n  filter.updateInitialState(props)\n})\n</script>\n\n<template>\n  <div class=\"container\">\n    <div class=\"filter-area-tab modal-content\">\n      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      <div class=\"position-relative\">\n        <div class=\"main-title fw-500 text-dark pt-15 pb-15 border-bottom pe-4 ps-4\">\n          {{ trans('Filter By') }}\n        </div>\n        <div class=\"pt-25 pb-30 pe-4 ps-4\">\n          <div class=\"row\">\n            <div class=\"col-lg-4\">\n              <div class=\"filter-block pb-50 lg-pb-20\">\n                <div class=\"filter-title fw-500 text-dark\">\n                  {{ trans('Search Company') }}\n                </div>\n                <form @submit.prevent=\"filter.submit\" class=\"input-box position-relative\">\n                  <input\n                    type=\"text\"\n                    v-model=\"filter.filterForm.keyword\"\n                    placeholder=\"Search by Keywords\"\n                  />\n                  <button type=\"submit\">\n                    <i class=\"bi bi-search\"></i>\n                  </button>\n                </form>\n              </div>\n              <!-- /.filter-block -->\n            </div>\n            <div class=\"col-lg-4\">\n              <div class=\"filter-block pb-50 lg-pb-20\">\n                <div class=\"filter-title fw-500 text-dark\">\n                  {{ trans('Category') }}\n                </div>\n                <NiceSelect\n                  v-model=\"filter.filterForm.category\"\n                  :options=\"filter.services\"\n                  value-by=\"slug\"\n                  label=\"title\"\n                  placeholder=\"Category\"\n                />\n              </div>\n              <!-- /.filter-block -->\n            </div>\n            <div class=\"col-lg-4\">\n              <div class=\"filter-block pb-50 lg-pb-20\">\n                <div class=\"filter-title fw-500 text-dark\">\n                  {{ trans('Country') }}\n                </div>\n                <NiceSelect\n                  v-model=\"filter.filterForm.country\"\n                  :options=\"filter.locations\"\n                  value-by=\"id\"\n                  label=\"name\"\n                  placeholder=\"Select Country\"\n                  @change=\"filter.getStates\"\n                />\n              </div>\n              <!-- /.filter-block -->\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-lg-4\">\n              <div class=\"filter-title fw-500 text-dark\">\n                <LabelWithAjaxLoader text=\"States\" :loading=\"filter.loading.states\" />\n              </div>\n\n              <NiceSelect\n                v-model=\"filter.filterForm.state\"\n                :disabled=\"!filter.filterForm.country || filter.loading.states\"\n                :options=\"filter.states\"\n                value-by=\"id\"\n                label=\"name\"\n                placeholder=\"Select State\"\n              >\n              </NiceSelect>\n            </div>\n            <div class=\"col-lg-4\">\n              <div class=\"filter-block pb-50 lg-pb-20\">\n                <div class=\"filter-title fw-500 text-dark\">\n                  {{ trans('Company Size') }}\n                </div>\n                <NiceSelect\n                  v-model=\"filter.filterForm.team\"\n                  :options=\"filter.teamSizes\"\n                  placeholder=\"Company Size\"\n                />\n              </div>\n              <!-- /.filter-block -->\n            </div>\n            <div class=\"col-lg-4\">\n              <div class=\"filter-block pb-25\">\n                <div class=\"filter-title fw-500 text-dark mt-1\">\n                  {{ trans('Company Status') }}\n                </div>\n                <div class=\"main-body\">\n                  <ul class=\"style-none filter-input d-flex\">\n                    <li class=\"me-3\">\n                      <input\n                        @input=\"filter.filterForm.status = 'asc'\"\n                        type=\"checkbox\"\n                        name=\"CompanyStatus\"\n                        value=\"asc\"\n                        :checked=\"filter.filterForm.status === 'asc'\"\n                      />\n                      <label>{{ trans('New') }}</label>\n                    </li>\n\n                    <li>\n                      <input\n                        @input=\"filter.filterForm.status = 'desc'\"\n                        type=\"checkbox\"\n                        name=\"CompanyStatus\"\n                        value=\"desc\"\n                        :checked=\"filter.filterForm.status === 'desc'\"\n                      />\n                      <label>{{ trans('Older') }}</label>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <!-- /.filter-block -->\n            </div>\n\n            <div class=\"col-lg-4 m-auto\">\n              <button\n                @click.prevent=\"filter.submit\"\n                class=\"btn-ten fw-500 w-100 tran3s text-center text-white\"\n              >\n                {{ trans('Apply Filter') }}\n              </button>\n              <button @click=\"filter.clear\" class=\"btn-nine fw-500 w-100 tran3s mt-30 text-center\">\n                {{ trans('Clear Filter') }}\n              </button>\n            </div>\n          </div>\n        </div>\n        <!-- /.filter header -->\n      </div>\n    </div>\n    <!-- /.filter-area-tab -->\n  </div>\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport JobIntro from '../../Candidate/Partials/JobIntro.vue'\nimport ModalFilterForm from '../Partials/ModalFilterForm.vue'\nimport { useCompanyFilterStore } from '@/Store/companyFilterStore'\nimport Breadcrumb from '@/Components/Breadcrumb.vue'\nimport { onMounted } from 'vue'\nconst props = defineProps(['companies', 'services', 'locations', 'seo', 'request'])\ndefineOptions({ layout: DefaultLayout })\nconst filter = useCompanyFilterStore()\nonMounted(() => {\n  if (!filter.layout) {\n    filter.setLayout('list')\n  }\n})\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <Breadcrumb\n    :title=\"trans('Company')\"\n    href=\"/\"\n    :href-text=\"trans('Home')\"\n    :subtitle=\"trans('Companies')\"\n  />\n  <!-- /.inner-banner-one -->\n\n  <section class=\"company-profiles bg-color pt-90 lg-pt-70 pb-160 xl-pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"wrapper\">\n            <div\n              class=\"upper-filter d-flex justify-content-between align-items-start align-items-md-center mb-25\"\n            >\n              <div class=\"d-md-flex align-items-center\">\n                <button\n                  type=\"button\"\n                  class=\"filter-btn fw-500 tran3s me-3\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#filterPopUp\"\n                >\n                  <i class=\"bi bi-funnel\"></i>\n                  {{ trans('Filter') }}\n                </button>\n                <div class=\"total-job-found md-mt-10\">\n                  {{ trans('All') }}\n                  <span class=\"text-dark fw-500\">{{ companies.total }}</span>\n                  {{ trans(' company found') }}\n                </div>\n              </div>\n              <div class=\"d-flex align-items-center\">\n                <div class=\"short-filter d-flex align-items-center\">\n                  <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n                  <NiceSelect\n                    v-model=\"filter.filterForm.sort\"\n                    value-by=\"order\"\n                    label=\"name\"\n                    :options=\"filter.sorts\"\n                    placeholder=\"Default\"\n                    @change=\"filter.submit\"\n                  />\n                </div>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s list-btn ms-2 text-center\"\n                  :class=\"[filter.layout == 'grid' ? 'active' : '']\"\n                  @click=\"filter.setLayout('list')\"\n                  title=\"Active List\"\n                >\n                  <i class=\"bi bi-list\"></i>\n                </button>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s grid-btn ms-2 text-center\"\n                  :class=\"[filter.layout == 'list' ? 'active' : '']\"\n                  @click=\"filter.setLayout('grid')\"\n                  title=\"Active Grid\"\n                >\n                  <i class=\"bi bi-grid\"></i>\n                </button>\n              </div>\n            </div>\n            <!-- /.upper-filter -->\n\n            <div class=\"accordion-box grid-style\" :class=\"[filter.layout == 'grid' ? 'show' : '']\">\n              <div class=\"row\">\n                <template v-for=\"company in companies.data\" :key=\"company.id\">\n                  <div class=\"col-xl-3 col-lg-4 col-sm-6 d-flex\">\n                    <div\n                      class=\"company-grid-layout mb-30 border-0\"\n                      :class=\"{ favourite: company.is_star }\"\n                    >\n                      <Link\n                        :href=\"`/companies/${company.username}`\"\n                        class=\"company-logo rounded-circle me-auto ms-auto\"\n                        ><img\n                          v-lazy=\"\n                            company?.avatar == null\n                              ? `https://ui-avatars.com/api/?name=${company.name}`\n                              : `${company?.avatar}`\n                          \"\n                          alt=\"img\"\n                          class=\"lazy-img rounded-circle\"\n                      /></Link>\n                      <h5 class=\"text-center\">\n                        <Link\n                          :href=\"`/companies/${company.username}`\"\n                          class=\"company-name tran3s\"\n                          >{{ company.meta.company.name }}</Link\n                        >\n                      </h5>\n                      <p class=\"text-center\">\n                        {{ company.states[0]?.name }}\n                        ,\n                        {{ company.countries[0]?.name }}\n                      </p>\n                      <div class=\"bottom-line d-flex\">\n                        <Link :href=\"`/companies/${company.username}`\"\n                          >{{ company.jobs_count }} {{ trans('Vacancy') }}</Link\n                        >\n                        <Link :href=\"`/companies/${company.username}`\"\n                          ><i class=\"bi bi-bookmark-dash\"></i> {{ trans('Save') }}</Link\n                        >\n                      </div>\n                    </div>\n                  </div>\n                </template>\n              </div>\n            </div>\n            <!-- /.accordion-box -->\n\n            <div\n              class=\"accordion-box list-style show\"\n              :class=\"[filter.layout == 'list' ? 'show' : '']\"\n            >\n              <template v-for=\"company in companies.data\" :key=\"company.id\">\n                <div\n                  class=\"company-list-layout mb-20 border-0\"\n                  :class=\"{ favourite: company.is_star }\"\n                >\n                  <div class=\"row justify-content-between align-items-center\">\n                    <div class=\"col-xl-6 col-lg-5\">\n                      <div class=\"d-flex align-items-xl-center\">\n                        <Link\n                          :href=\"`/companies/${company.username}`\"\n                          class=\"company-logo rounded-circle\"\n                        >\n                          <img\n                            v-lazy=\"\n                              company?.avatar == null\n                                ? `https://ui-avatars.com/api/?name=${company.name}`\n                                : `${company?.avatar}`\n                            \"\n                            alt=\"avatar\"\n                            class=\"lazy-img rounded-circle\"\n                          />\n                        </Link>\n                        <div class=\"company-data\">\n                          <h5 class=\"m0\">\n                            <Link\n                              :href=\"`/companies/${company.username}`\"\n                              class=\"company-name tran3s\"\n                              >{{ company.meta.company.name }}</Link\n                            >\n                          </h5>\n                          <p>\n                            {{ company.states[0]?.name }}\n                            ,\n                            {{ company.countries[0]?.name }}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-xl-3 col-lg-4 col-md-8\">\n                      <div class=\"d-flex align-items-center md-mt-20\">\n                        <div class=\"d-flex align-items-center\">\n                          <template v-if=\"company.meta.company?.teams?.length > 0\">\n                            <img\n                              v-for=\"team in company?.meta?.company?.teams\"\n                              :key=\"team\"\n                              v-lazy=\"team\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                          </template>\n                          <template v-else>\n                            <img\n                              v-lazy=\"'/assets/images/assets/img_42.png'\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                            <img\n                              v-lazy=\"'/assets/images/assets/img_43.png'\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                            <img\n                              v-lazy=\"'/assets/images/assets/img_44.png'\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                          </template>\n                          <div class=\"team-text\">\n                            <span class=\"text-md fw-500 text-dark d-block\">\n                              {{ company.meta.company.size }}\n                            </span>\n                            {{ trans(' Team Size') }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-3 col-md-4\">\n                      <div\n                        class=\"btn-group d-flex align-items-center justify-content-md-end md-mt-20\"\n                      >\n                        <Link\n                          :href=\"`/companies/${company.username}`\"\n                          class=\"open-job-btn fw-500 tran3s me-2 text-center\"\n                          >{{ company.jobs_count }} {{ trans('open job') }}</Link\n                        >\n                        <Link\n                          :href=\"`/companies/${company.username}`\"\n                          class=\"save-btn rounded-circle tran3s text-center\"\n                          title=\"Save Job\"\n                          ><i class=\"bi bi-bookmark-dash\"></i\n                        ></Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </template>\n\n              <!-- /.company-list-layout -->\n            </div>\n            <template v-if=\"companies?.data.length > 0\">\n              <div class=\"pt-50 lg-pt-20 d-sm-flex align-items-center justify-content-between\">\n                <p class=\"m0 order-sm-last text-sm-start xs-pb-20 text-center\">\n                  {{ trans('Showing') }}\n                  <span class=\"text-dark fw-500\"\n                    >{{ companies.from }} {{ trans('to') }} {{ companies.to }}</span\n                  >\n                  {{ trans('of') }}\n                  <span class=\"text-dark fw-500\">{{ companies.total }}</span>\n                </p>\n                <Paginate :links=\"companies.links\" />\n              </div>\n            </template>\n            <div class=\"alert alert-info mt-30 text-center\" role=\"alert\" v-else>\n              {{ trans('No company found') }}\n            </div>\n          </div>\n        </div>\n        <!-- /.col- -->\n      </div>\n    </div>\n  </section>\n  <!-- popUpModal -->\n  <div\n    class=\"modal popUpModal fade\"\n    id=\"filterPopUp\"\n    tabindex=\"-1\"\n    aria-labelledby=\"exampleModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-fullscreen modal-dialog-centered\">\n      <ModalFilterForm :services=\"services\" :request=\"request\" :locations=\"locations\" />\n    </div>\n  </div>\n  <JobIntro />\n</template>\n","<script setup>\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport { useCompanyFilterStore } from '@/Store/companyFilterStore'\nimport LabelWithAjaxLoader from '@/Components/LabelWithAjaxLoader.vue'\nimport { onMounted } from 'vue'\nconst props = defineProps(['services', 'locations', 'request'])\nconst filter = useCompanyFilterStore()\n\nonMounted(() => {\n  filter.updateInitialState(props)\n})\n</script>\n\n<template>\n  <div class=\"col-xl-3 col-lg-4\">\n    <button\n      type=\"button\"\n      class=\"filter-btn w-100 fw-500 tran3s d-lg-none mb-40 h-auto pb-2 pt-2\"\n      data-bs-toggle=\"offcanvas\"\n      data-bs-target=\"#filteroffcanvas\"\n    >\n      <i class=\"bi bi-funnel\"></i>\n      {{ trans('Filter') }}\n    </button>\n    <div class=\"filter-area-tab offcanvas offcanvas-start\" id=\"filteroffcanvas\">\n      <button\n        type=\"button\"\n        class=\"btn-close text-reset d-lg-none\"\n        data-bs-dismiss=\"offcanvas\"\n        aria-label=\"Close\"\n      ></button>\n      <div class=\"main-title fw-500 text-dark\">\n        {{ trans('Filter By') }}\n      </div>\n      <div class=\"light-bg border-20 pt-25 pb-30 mt-20 pe-4 ps-4\">\n        <div class=\"filter-block bottom-line pb-25\">\n          <a\n            class=\"filter-title fw-500 text-dark\"\n            data-bs-toggle=\"collapse\"\n            href=\"#collapseSemploye\"\n            role=\"button\"\n            aria-expanded=\"false\"\n            >{{ trans('Search Company') }}</a\n          >\n          <div class=\"show collapse\" id=\"collapseSemploye\">\n            <div class=\"main-body\">\n              <form @submit.prevent=\"filter.submit\" class=\"input-box position-relative\">\n                <input v-model=\"filter.filterForm.keyword\" type=\"text\" placeholder=\"Company Name\" />\n                <button type=\"submit\">\n                  <i class=\"bi bi-search\"></i>\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n        <!-- /.filter-block -->\n        <div class=\"filter-block bottom-line pb-25 mt-25\">\n          <a\n            class=\"filter-title fw-500 text-dark\"\n            data-bs-toggle=\"collapse\"\n            href=\"#collapseCstatus\"\n            role=\"button\"\n            aria-expanded=\"false\"\n            >{{ trans('Company Status') }}</a\n          >\n          <div class=\"show collapse\" id=\"collapseCstatus\">\n            <div class=\"main-body\">\n              <ul class=\"style-none filter-input\">\n                <li>\n                  <input\n                    @input=\"filter.filterForm.status = 'asc'\"\n                    type=\"checkbox\"\n                    name=\"CompanyStatus\"\n                    value=\"asc\"\n                    :checked=\"filter.filterForm.status === 'asc'\"\n                  />\n                  <label>{{ trans('New') }}</label>\n                </li>\n\n                <li>\n                  <input\n                    @input=\"filter.filterForm.status = 'desc'\"\n                    type=\"checkbox\"\n                    name=\"CompanyStatus\"\n                    value=\"desc\"\n                    :checked=\"filter.filterForm.status === 'desc'\"\n                  />\n                  <label>{{ trans('Older') }}</label>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <!-- /.filter-block -->\n        <div class=\"filter-block bottom-line pb-25 mt-25\">\n          <a\n            class=\"filter-title fw-500 text-dark\"\n            data-bs-toggle=\"collapse\"\n            href=\"#collapseLocation\"\n            role=\"button\"\n            aria-expanded=\"false\"\n            >{{ trans('Location') }}</a\n          >\n          <div class=\"show collapse\" id=\"collapseLocation\">\n            <div class=\"main-body\">\n              <div class=\"mb-2\">\n                <label for=\"\" class=\"filter-title fw-500 text-dark\">{{ trans('Country') }}</label>\n                <NiceSelect\n                  v-model=\"filter.filterForm.country\"\n                  :options=\"filter.locations\"\n                  value-by=\"id\"\n                  label=\"name\"\n                  placeholder=\"Select Country\"\n                  @change=\"filter.getStates\"\n                />\n              </div>\n              <div class=\"mb-2\">\n                <LabelWithAjaxLoader\n                  class=\"filter-title fw-500 text-dark\"\n                  text=\"States\"\n                  :loading=\"filter.loading.states\"\n                />\n                <NiceSelect\n                  v-model=\"filter.filterForm.state\"\n                  :disabled=\"!filter.filterForm.country || filter.loading.states\"\n                  :options=\"filter.states\"\n                  value-by=\"id\"\n                  label=\"name\"\n                  placeholder=\"Select State\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- /.filter-block -->\n\n        <div class=\"filter-block bottom-line pb-25 mt-25\">\n          <a\n            class=\"filter-title fw-500 text-dark collapsed\"\n            data-bs-toggle=\"collapse\"\n            href=\"#collapseCategory\"\n            role=\"button\"\n            aria-expanded=\"false\"\n            >{{ trans('Category') }}</a\n          >\n          <div class=\"collapse\" id=\"collapseCategory\">\n            <div class=\"main-body\">\n              <ul class=\"style-none filter-input\">\n                <li v-for=\"service in filter.services\" :key=\"service.id\">\n                  <input\n                    @change=\"filter.setCategory(service.slug)\"\n                    type=\"checkbox\"\n                    name=\"service\"\n                    :value=\"service.slug\"\n                    :checked=\"filter.filterForm.category === service.slug\"\n                  />\n                  <label\n                    >{{ service.title }} <span>{{ service.companies_count }}</span></label\n                  >\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <!-- /.filter-block -->\n        <div class=\"filter-block bottom-line pb-25 mt-25\">\n          <a\n            class=\"filter-title fw-500 text-dark collapsed\"\n            data-bs-toggle=\"collapse\"\n            href=\"#collapseTeam\"\n            role=\"button\"\n            aria-expanded=\"false\"\n            >{{ trans('Team Size') }}</a\n          >\n          <div class=\"collapse\" id=\"collapseTeam\">\n            <div class=\"main-body\">\n              <ul class=\"style-none filter-input\">\n                <li v-for=\"size in filter.teamSizes\" :key=\"size\">\n                  <input\n                    type=\"checkbox\"\n                    @change=\"filter.setTeam(size)\"\n                    name=\"Team\"\n                    value=\"01\"\n                    :checked=\"filter.filterForm.team === size\"\n                  />\n                  <label>{{ size }}+</label>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <!-- /.filter-block -->\n        <button\n          @click.prevent=\"filter.submit\"\n          class=\"btn-ten fw-500 w-100 tran3s mt-30 text-center text-white\"\n        >\n          {{ trans('Apply Filter') }}\n        </button>\n        <button @click=\"filter.clear\" class=\"btn-nine fw-500 w-100 tran3s mt-30 text-center\">\n          {{ trans('Clear Filter') }}\n        </button>\n      </div>\n    </div>\n    <!-- /.filter-area-tab -->\n  </div>\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport JobIntro from '../../Candidate/Partials/JobIntro.vue'\nimport SideFilterForm from '../Partials/SideFilterForm.vue'\nimport { useCompanyFilterStore } from '@/Store/companyFilterStore'\nimport Breadcrumb from '@/Components/Breadcrumb.vue'\nimport { onMounted } from 'vue'\ndefineOptions({ layout: DefaultLayout })\nconst props = defineProps(['companies', 'services', 'locations', 'seo', 'request'])\n\nconst filter = useCompanyFilterStore()\n\nonMounted(() => {\n  if (!filter.layout) {\n    filter.setLayout('grid')\n  }\n})\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <Breadcrumb\n    :title=\"trans('Company')\"\n    href=\"/\"\n    :href-text=\"trans('Home')\"\n    :subtitle=\"trans('Companies')\"\n  />\n\n  <!-- /.inner-banner-one -->\n\n  <section class=\"company-profiles pt-110 lg-pt-80 pb-160 xl-pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <SideFilterForm :services=\"services\" :request=\"request\" :locations=\"locations\" />\n\n        <div class=\"col-xl-9 col-lg-8\">\n          <div class=\"ms-xxl-5 ms-xl-3\">\n            <div class=\"upper-filter d-flex justify-content-between align-items-center mb-20\">\n              <div class=\"total-job-found\">\n                {{ trans('All') }}\n                <span class=\"text-dark fw-500\">{{ companies.total }}</span>\n                {{ trans(' company found') }}\n              </div>\n              <div class=\"d-flex align-items-center\">\n                <div class=\"short-filter d-flex align-items-center\">\n                  <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n                  <NiceSelect\n                    v-model=\"filter.filterForm.sort\"\n                    value-by=\"order\"\n                    label=\"name\"\n                    :options=\"filter.sorts\"\n                    placeholder=\"Default\"\n                    @change=\"filter.submit\"\n                  />\n                </div>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s list-btn ms-2 text-center\"\n                  title=\"Active List\"\n                  :class=\"[filter.layout == 'grid' ? 'active' : '']\"\n                  @click=\"filter.setLayout('list')\"\n                >\n                  <i class=\"bi bi-list\"></i>\n                </button>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s grid-btn ms-2 text-center\"\n                  title=\"Active Grid\"\n                  :class=\"[filter.layout == 'list' ? 'active' : '']\"\n                  @click=\"filter.setLayout('grid')\"\n                >\n                  <i class=\"bi bi-grid\"></i>\n                </button>\n              </div>\n            </div>\n            <!-- /.upper-filter -->\n\n            <div class=\"accordion-box grid-style\" :class=\"[filter.layout == 'grid' ? 'show' : '']\">\n              <div class=\"row\">\n                <template v-for=\"company in companies.data\" :key=\"company.id\">\n                  <div class=\"col-xl-4 col-lg-6 col-md-4 col-sm-6 d-flex\">\n                    <div class=\"company-grid-layout mb-30\" :class=\"{ favourite: company.is_star }\">\n                      <Link\n                        :href=\"`/companies/${company.username}`\"\n                        class=\"company-logo rounded-circle me-auto ms-auto\"\n                      >\n                        <img\n                          v-lazy=\"\n                            company?.avatar == null\n                              ? `https://ui-avatars.com/api/?name=${company.name}`\n                              : `${company?.avatar}`\n                          \"\n                          alt=\"avatar\"\n                          class=\"lazy-img rounded-circle\"\n                        />\n                      </Link>\n                      <h5 class=\"text-center\">\n                        <Link :href=\"`/companies/${company.username}`\" class=\"company-name tran3s\">\n                          {{ company.meta.company.name }}\n                        </Link>\n                      </h5>\n                      <p class=\"mb-auto text-center\">\n                        {{ company.states[0]?.name }}\n                        ,\n                        {{ company.countries[0]?.name }}\n                      </p>\n                      <div class=\"bottom-line d-flex\">\n                        <Link :href=\"`/companies/${company.username}`\"\n                          >{{ company.jobs_count }} {{ trans('Vacancy') }}\n                        </Link>\n                        <Link :href=\"`/companies/${company.username}`\"\n                          ><i class=\"bi bi-bookmark-dash\"></i> {{ trans('Save') }}</Link\n                        >\n                      </div>\n                    </div>\n                    <!-- /.company-grid-layout -->\n                  </div>\n                </template>\n              </div>\n            </div>\n            <!-- list style -->\n            <div class=\"accordion-box list-style\" :class=\"[filter.layout == 'list' ? 'show' : '']\">\n              <template v-for=\"company in companies.data\" :key=\"company.id\">\n                <div class=\"company-list-layout mb-20\" :class=\"{ favourite: company.is_star }\">\n                  <div class=\"row justify-content-between align-items-center\">\n                    <div class=\"col-xl-5\">\n                      <div class=\"d-flex align-items-xl-center\">\n                        <Link\n                          :href=\"`/companies/${company.username}`\"\n                          class=\"company-logo rounded-circle\"\n                        >\n                          <img\n                            v-lazy=\"\n                              company?.avatar == null\n                                ? `https://ui-avatars.com/api/?name=${company.name}`\n                                : `${company?.avatar}`\n                            \"\n                            alt=\"avatar\"\n                            class=\"lazy-img rounded-circle\"\n                          />\n                        </Link>\n                        <div class=\"company-data\">\n                          <h5 class=\"m0\">\n                            <Link\n                              :href=\"`/companies/${company.username}`\"\n                              class=\"company-name tran3s\"\n                            >\n                              {{ company.meta.company.name }}\n                            </Link>\n                          </h5>\n                          <p>\n                            {{ company.states[0]?.name }}\n                            ,\n                            {{ company.countries[0]?.name }}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-xl-4 col-md-8\">\n                      <div class=\"d-flex align-items-center ps-xxl-5 lg-mt-20\">\n                        <div class=\"d-flex align-items-center\">\n                          <template v-if=\"company.meta.company?.teams?.length > 0\">\n                            <img\n                              v-for=\"team in company?.meta?.company?.teams\"\n                              :key=\"team\"\n                              v-lazy=\"team\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                          </template>\n                          <template v-else>\n                            <img\n                              v-lazy=\"'/assets/images/assets/img_42.png'\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                            <img\n                              v-lazy=\"'/assets/images/assets/img_43.png'\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                            <img\n                              v-lazy=\"'/assets/images/assets/img_44.png'\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                          </template>\n                          <div class=\"team-text\">\n                            <span class=\"text-md fw-500 text-dark d-block\">\n                              {{ company.meta.company.size }}\n                            </span>\n                            {{ trans(' Team Size') }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-xl-3 col-md-4\">\n                      <div\n                        class=\"btn-group d-flex align-items-center justify-content-md-end lg-mt-20\"\n                      >\n                        <Link\n                          :href=\"`/companies/${company.username}`\"\n                          class=\"open-job-btn fw-500 tran3s me-2 text-center\"\n                        >\n                          {{ company.jobs_count }} {{ trans('open job') }}</Link\n                        >\n                        <Link\n                          :href=\"`/companies/${company.username}`\"\n                          class=\"save-btn rounded-circle tran3s text-center\"\n                          title=\"Save Job\"\n                          ><i class=\"bi bi-bookmark-dash\"></i\n                        ></Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </template>\n            </div>\n\n            <template v-if=\"companies.total > 0\">\n              <div class=\"pt-50 lg-pt-20 d-sm-flex align-items-center justify-content-between\">\n                <p class=\"m0 order-sm-last text-sm-start xs-pb-20 text-center\">\n                  {{ trans('Showing') }}\n                  <span class=\"text-dark fw-500\"\n                    >{{ companies.from }} {{ trans('to') }} {{ companies.to }}</span\n                  >\n                  {{ trans('of') }}\n                  <span class=\"text-dark fw-500\">{{ companies.total }}</span>\n                </p>\n                <Paginate :links=\"companies.links\" />\n              </div>\n            </template>\n\n            <div class=\"alert alert-info mt-30 text-center\" role=\"alert\" v-else>\n              {{ trans('No company found') }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <!-- ./company-profiles -->\n\n  <JobIntro />\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport { computed } from 'vue'\nimport moment from 'moment'\nconst props = defineProps(['company', 'jobs', 'seo'])\nimport JobIntro from '../../Candidate/Partials/JobIntro.vue'\nimport Breadcrumb from '@/Components/Breadcrumb.vue'\ndefineOptions({ layout: DefaultLayout })\nconst meta = computed(() => props.company.meta)\nconst companyDetails = computed(() => meta.value.company)\nconst business = computed(() => meta.value.business)\nconst contact = computed(() => meta.value.contact)\nconst socials = computed(() => meta.value.social)\nconst shareLink = computed(() => window.location.origin + '/companies/' + props.company.username)\n\nconst hasValidLinks = () => {\n  for (const key in socials.value) {\n    if (socials.value[key] && socials.value[key] !== '') {\n      return true\n    }\n  }\n  return false\n}\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <Breadcrumb :title=\"companyDetails.name\" href=\"/\" :href-text=\"trans('Home')\" :subtitle=\"companyDetails.name\" />\n\n  <!-- /.inner-banner-one -->\n\n  <!-- \n\t\t=============================================\n\t\t\tCompany Details\n\t\t============================================== \n\t\t-->\n  <section class=\"company-details lg-pt-80 pb-160 xl-pb-150 lg-pb-80 pt-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xxl-3 col-xl-4 order-xl-last\">\n          <div class=\"job-company-info ms-xl-5 ms-xxl-0 lg-mb-50\">\n            <img\n              v-lazy=\"\n                company.avatar == null\n                  ? `https://ui-avatars.com/api/?name=${company.name}`\n                  : `${company.avatar}`\n              \"\n              alt=\"img\"\n              class=\"m-auto lazy-img logo\"\n            />\n            <div class=\"mb-20 text-center text-md text-dark mt-15 lg-mb-10\">\n              {{ companyDetails.name }}\n            </div>\n            <div class=\"text-center\">\n              <a\n                v-if=\"business.site_url\"\n                :href=\"business.site_url\"\n                class=\"website-btn-two tran3s\"\n                target=\"_blank\"\n              >\n                {{ trans('Visit our website') }}\n              </a>\n            </div>\n\n            <div class=\"border-top mt-35 lg-mt-20 pt-25\">\n              <ul class=\"job-meta-data row style-none\">\n                <li class=\"col-12\">\n                  <span>{{ trans('Location') }} : </span>\n                  <div>\n                    {{ companyDetails.address }}, {{ company?.countries[0]?.name }},\n                    {{ company?.states[0]?.name }}.\n                  </div>\n                </li>\n                <li class=\"col-12\">\n                  <span> {{ trans('Size') }} :</span>\n                  <div>{{ companyDetails.size }}+, {{ trans('Employees') }}</div>\n                </li>\n                <li class=\"col-12\">\n                  <span>{{ trans('Email') }}: </span>\n                  <div>\n                    <a :href=\"`mailto:${contact.email}`\">{{ contact.email }}</a>\n                  </div>\n                </li>\n                <li class=\"col-12\">\n                  <span> {{ trans('Founded') }} : </span>\n                  <div>{{ companyDetails.year_of_establishment }}</div>\n                </li>\n                <li v-if=\"contact.mobile\" class=\"col-12\">\n                  <span> {{ trans('Phone') }} :</span>\n                  <div>\n                    <a href=\"#\">{{ contact.mobile }}</a>\n                  </div>\n                </li>\n                <li class=\"col-12\">\n                  <span>{{ trans('Category') }}: </span>\n                  <div>\n                    {{ company.service?.title }}\n                  </div>\n                </li>\n                <li class=\"col-12\" v-if=\"hasValidLinks()\">\n                  <span>{{ trans('Social') }}: </span>\n                  <div>\n                    <template v-for=\"(link, key) in socials\" :key=\"key\">\n                      <a class=\"ms-2\" v-if=\"link\" :href=\"link\" target=\"_blank\">\n                        <i class=\"bi\" :class=\"`bi-${key}`\"></i>\n                      </a>\n                    </template>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <!-- /.job-company-info -->\n        </div>\n        <div class=\"col-xxl-9 col-xl-8 order-xl-first\">\n          <div class=\"details-post-data me-xxl-5 pe-xxl-4\">\n            <h3>{{ trans('Overview') }}</h3>\n            <p>{{ business.description }}</p>\n\n            <template v-if=\"meta?.company?.video_id\">\n              <h3 class=\"title\">{{ trans('Intro') }}</h3>\n              <div\n                class=\"video-post d-flex align-items-center justify-content-center mt-25 lg-mt-20 mb-75 lg-mb-50\"\n                :style=\"{\n                  backgroundImage: `url(https://img.youtube.com/vi/${meta?.company?.video_id}/sddefault.jpg)`\n                }\"\n              >\n                <a\n                  class=\"text-center fancybox rounded-circle video-icon tran3s\"\n                  data-fancybox=\"\"\n                  :href=\"`https://www.youtube.com/embed/${meta?.company?.video_id}`\"\n                >\n                  <i class=\"bi bi-play\"></i>\n                </a>\n              </div>\n            </template>\n            <div class=\"position-relative\" v-if=\"company.company_reviews?.length\">\n              <h3>{{ trans('Reviews') }}</h3>\n\n              <div class=\"company-review-slider\">\n                <div v-for=\"(review, index) in company.company_reviews\" :key=\"index\" class=\"item\">\n                  <div class=\"feedback-block-four\">\n                    <div class=\"d-flex align-items-center\">\n                      <ul class=\"style-none d-flex rating\">\n                        <li v-for=\"(item, index) in review.ratting\" :key=\"index\">\n                          <a href=\"#\" tabindex=\"0\"><i class=\"bi bi-star-fill\"></i></a>\n                        </li>\n                      </ul>\n                      <div class=\"review-score\">\n                        <span class=\"fw-500 text-dark\">{{ review.ratting?.toFixed(1) }}</span>\n                        {{ trans('out of 5') }}\n                      </div>\n                    </div>\n                    <blockquote>\n                      {{ review.comment }}\n                    </blockquote>\n                    <div class=\"d-flex align-items-center\">\n                      <img\n                        :src=\"review.author?.avatar\"\n                        alt=\"img\"\n                        class=\"author-img rounded-circle\"\n                      />\n                      <div class=\"ms-3\">\n                        <div class=\"name fw-500 text-dark\">{{ review.author?.name }}</div>\n                        <span class=\"opacity-50\">{{\n                          review.author?.countries[0]?.name ?? ''\n                        }}</span>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- /.feedback-block-four -->\n                </div>\n              </div>\n            </div>\n\n            <div class=\"share-option mt-60\">\n              <ul class=\"style-none d-flex align-items-center\">\n                <li class=\"fw-500 me-2\">{{ trans('Share') }}:</li>\n                <li>\n                  <a\n                    target=\"_blank\"\n                    :href=\"`https://www.facebook.com/sharer/sharer.php?u=${shareLink}`\"\n                    ><i class=\"bi bi-facebook\"></i\n                  ></a>\n                </li>\n                <li>\n                  <a\n                    target=\"_blank\"\n                    :href=\"`https://www.linkedin.com/sharing/share-offsite/?url=${shareLink}`\"\n                    ><i class=\"bi bi-linkedin\"></i\n                  ></a>\n                </li>\n                <li>\n                  <a target=\"_blank\" :href=\"`https://twitter.com/intent/tweet?url=${shareLink}`\"\n                    ><i class=\"bi bi-twitter\"></i\n                  ></a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <!-- ./company-details -->\n\n  <section class=\"company-open-position lg-pt-60 pb-100 lg-pb-60 pt-80\" v-if=\"jobs?.length > 0\">\n    <div class=\"container\">\n      <div class=\"row justify-content-between align-items-center\">\n        <div class=\"col-lg-6\">\n          <div class=\"title-two\">\n            <h2>{{ trans('Open Position') }}</h2>\n          </div>\n        </div>\n        <div class=\"col-lg-5\">\n          <div class=\"d-flex justify-content-lg-end\">\n            <Link :href=\"route('jobs.index')\" class=\"btn-six\">{{ trans('Explore More') }}</Link>\n          </div>\n        </div>\n      </div>\n      <div class=\"mt-50\">\n        <div\n          class=\"mb-20 job-list-one style-two position-relative\"\n          v-for=\"job in jobs\"\n          :key=\"job.id\"\n        >\n          <div class=\"row justify-content-between align-items-center\">\n            <div class=\"col-xxl-3 col-lg-4\">\n              <div class=\"job-title d-flex align-items-center\">\n                <Link :href=\"route('jobs.show', job.slug)\" class=\"logo\"\n                  ><img\n                    v-lazy=\"\n                      job.user?.avatar == null\n                        ? `https://ui-avatars.com/api/?name=${job.user.name}`\n                        : `${job.user?.avatar}`\n                    \"\n                    alt=\"img\"\n                    class=\"m-auto lazy-img\"\n                /></Link>\n                <Link :href=\"route('jobs.show', job.slug)\" class=\"title fw-500 tran3s\">{{\n                  job.title\n                }}</Link>\n              </div>\n            </div>\n            <div class=\"col-lg-3 col-md-4 col-sm-6 ms-auto\">\n              <Link :href=\"route('jobs.show', job.slug)\" class=\"job-duration fw-500\">\n                {{ job.type }}</Link\n              >\n              <div class=\"job-date\">\n                {{ moment(job.created).format('DD MMM, YYYY') }} {{ trans('by') }}\n                <a :href=\"route('jobs.show', job.slug)\">{{ company.name }}</a>\n              </div>\n            </div>\n            <div class=\"col-xxl-2 col-lg-3 col-md-4 col-sm-6 xs-mt-10 ms-auto\">\n              <div class=\"job-location\">\n                <Link :href=\"route('jobs.show', job.slug)\" v-if=\"JSON.parse(job.meta).is_remote\">{{\n                  trans('Remote')\n                }}</Link>\n                <Link :href=\"route('jobs.show', job.slug)\" v-else>\n                  {{ job.country ? job.country?.[0]?.name : '' }},\n                  {{ job.state ? job.state?.[0]?.name : '' }}\n                </Link>\n              </div>\n              <div class=\"job-category\">\n                <a\n                  v-for=\"cat in job.categories\"\n                  :key=\"cat.id\"\n                  :href=\"route('jobs.index', { category: cat.slug })\"\n                  >{{ cat.title }},</a\n                >\n              </div>\n            </div>\n            <div class=\"col-lg-2 col-md-4\">\n              <div class=\"btn-group d-flex align-items-center justify-content-md-end sm-mt-20\">\n                <Link\n                  :href=\"route('jobs.show', job.slug)\"\n                  class=\"text-center save-btn rounded-circle tran3s me-3\"\n                  title=\"Save Job\"\n                  ><i class=\"bi bi-bookmark-dash\"></i\n                ></Link>\n                <Link :href=\"route('jobs.show', job.slug)\" class=\"text-center apply-btn tran3s\"\n                  >{{ trans('APPLY') }}\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <JobIntro />\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport ModalFilterForm from '../Partials/ModalFilterForm.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport JobIntro from '../../Candidate/Partials/JobIntro.vue'\nimport { useCompanyFilterStore } from '@/Store/companyFilterStore'\nimport Breadcrumb from '@/Components/Breadcrumb.vue'\nimport { onMounted } from 'vue'\nconst filter = useCompanyFilterStore()\nconst props = defineProps(['companies', 'services', 'locations', 'seo', 'request'])\ndefineOptions({ layout: DefaultLayout })\nonMounted(() => {\n  if (!filter.layout) {\n    filter.setLayout('grid')\n  }\n})\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <Breadcrumb\n    :title=\"trans('Company')\"\n    href=\"/\"\n    :href-text=\"trans('Home')\"\n    :subtitle=\"trans('Companies')\"\n  />\n  <!-- /.inner-banner-one -->\n\n  <section class=\"company-profiles bg-color pt-90 lg-pt-70 pb-160 xl-pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"wrapper\">\n            <div\n              class=\"upper-filter d-flex justify-content-between align-items-start align-items-md-center mb-25\"\n            >\n              <div class=\"d-md-flex align-items-center\">\n                <button\n                  type=\"button\"\n                  class=\"filter-btn fw-500 tran3s me-3\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#filterPopUp\"\n                >\n                  <i class=\"bi bi-funnel\"></i>\n                  {{ trans('Filter') }}\n                </button>\n                <div class=\"total-job-found md-mt-10\">\n                  {{ trans('All') }}\n                  <span class=\"text-dark fw-500\">{{ companies.total }}</span>\n                  {{ trans(' company found') }}\n                </div>\n              </div>\n              <div class=\"d-flex align-items-center\">\n                <div class=\"short-filter d-flex align-items-center\">\n                  <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n                  <NiceSelect\n                    v-model=\"filter.filterForm.sort\"\n                    value-by=\"order\"\n                    label=\"name\"\n                    :options=\"filter.sorts\"\n                    placeholder=\"Default\"\n                    @change=\"filter.submit\"\n                  />\n                </div>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s list-btn ms-2 text-center\"\n                  :class=\"[filter.layout == 'grid' ? 'active' : '']\"\n                  @click=\"filter.setLayout('list')\"\n                  title=\"Active List\"\n                >\n                  <i class=\"bi bi-list\"></i>\n                </button>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s grid-btn ms-2 text-center\"\n                  :class=\"[filter.layout == 'list' ? 'active' : '']\"\n                  @click=\"filter.setLayout('grid')\"\n                  title=\"Active Grid\"\n                >\n                  <i class=\"bi bi-grid\"></i>\n                </button>\n              </div>\n            </div>\n            <!-- /.upper-filter -->\n\n            <div class=\"accordion-box grid-style\" :class=\"[filter.layout == 'grid' ? 'show' : '']\">\n              <div class=\"row\">\n                <template v-for=\"company in companies.data\" :key=\"company.id\">\n                  <div class=\"col-xl-3 col-lg-4 col-sm-6 d-flex\">\n                    <div\n                      class=\"company-grid-layout mb-30 border-0\"\n                      :class=\"{ favourite: company.is_star }\"\n                    >\n                      <Link\n                        :href=\"`/companies/${company.username}`\"\n                        class=\"company-logo rounded-circle me-auto ms-auto\"\n                      >\n                        <img\n                          v-lazy=\"\n                            company?.avatar == null\n                              ? `https://ui-avatars.com/api/?name=${company.name}`\n                              : `${company?.avatar}`\n                          \"\n                          alt=\"avatar\"\n                          class=\"lazy-img rounded-circle\"\n                        />\n                      </Link>\n                      <h5 class=\"text-center\">\n                        <Link\n                          :href=\"`/companies/${company.username}`\"\n                          class=\"company-name tran3s\"\n                          >{{ company.meta.company.name }}</Link\n                        >\n                      </h5>\n                      <p class=\"text-center\">\n                        {{ company.states[0]?.name }}\n                        ,\n                        {{ company.countries[0]?.name }}\n                      </p>\n                      <div class=\"bottom-line d-flex\">\n                        <Link :href=\"`/companies/${company.username}`\"\n                          >{{ company.jobs_count }} {{ trans('Vacancy') }}</Link\n                        >\n                        <Link :href=\"`/companies/${company.username}`\"\n                          ><i class=\"bi bi-bookmark-dash\"></i> {{ trans('Save') }}</Link\n                        >\n                      </div>\n                    </div>\n                    <!-- /.company-grid-layout -->\n                  </div>\n                </template>\n              </div>\n            </div>\n            <!-- /.accordion-box -->\n\n            <div class=\"accordion-box list-style\" :class=\"[filter.layout == 'list' ? 'show' : '']\">\n              <template v-for=\"company in companies.data\" :key=\"company.id\">\n                <div\n                  class=\"company-list-layout mb-20 border-0\"\n                  :class=\"{ favourite: company.is_star }\"\n                >\n                  <div class=\"row justify-content-between align-items-center\">\n                    <div class=\"col-xl-6 col-lg-5\">\n                      <div class=\"d-flex align-items-xl-center\">\n                        <Link\n                          :href=\"`/companies/${company.username}`\"\n                          class=\"company-logo rounded-circle\"\n                        >\n                          <img\n                            v-lazy=\"\n                              company?.avatar == null\n                                ? `https://ui-avatars.com/api/?name=${company.name}`\n                                : `${company?.avatar}`\n                            \"\n                            alt=\"avatar\"\n                            class=\"lazy-img rounded-circle\"\n                          />\n                        </Link>\n                        <div class=\"company-data\">\n                          <h5 class=\"m0\">\n                            <Link\n                              :href=\"`/companies/${company.username}`\"\n                              class=\"company-name tran3s\"\n                              >{{ company.meta.company.name }}\n                            </Link>\n                          </h5>\n                          <p>\n                            {{ company.states[0]?.name }}\n                            ,\n                            {{ company.countries[0]?.name }}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-xl-3 col-lg-4 col-md-8\">\n                      <div class=\"d-flex align-items-center md-mt-20\">\n                        <div class=\"d-flex align-items-center\">\n                          <template v-if=\"company.meta.company?.teams?.length > 0\">\n                            <img\n                              v-for=\"team in company?.meta?.company?.teams\"\n                              :key=\"team\"\n                              v-lazy=\"team\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                          </template>\n                          <template v-else>\n                            <img\n                              v-lazy=\"'/assets/images/assets/img_42.png'\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                            <img\n                              v-lazy=\"'/assets/images/assets/img_43.png'\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                            <img\n                              v-lazy=\"'/assets/images/assets/img_44.png'\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                          </template>\n                          <div class=\"team-text\">\n                            <span class=\"text-md fw-500 text-dark d-block\">\n                              {{ company.meta.company.size }}\n                            </span>\n                            {{ trans(' Team Size') }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-3 col-md-4\">\n                      <div\n                        class=\"btn-group d-flex align-items-center justify-content-md-end md-mt-20\"\n                      >\n                        <Link\n                          :href=\"`/companies/${company.username}`\"\n                          class=\"open-job-btn fw-500 tran3s me-2 text-center\"\n                          >{{ company.jobs_count }} {{ trans('open job') }}</Link\n                        >\n                        <Link\n                          :href=\"`/companies/${company.username}`\"\n                          class=\"save-btn rounded-circle tran3s text-center\"\n                          title=\"Save Job\"\n                          ><i class=\"bi bi-bookmark-dash\"></i\n                        ></Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </template>\n\n              <!-- /.company-list-layout -->\n            </div>\n            <!-- /.accordion-box -->\n            <template v-if=\"companies?.data.length > 0\">\n              <div class=\"pt-50 lg-pt-20 d-sm-flex align-items-center justify-content-between\">\n                <p class=\"m0 order-sm-last text-sm-start xs-pb-20 text-center\">\n                  {{ trans('Showing') }}\n                  <span class=\"text-dark fw-500\"\n                    >{{ companies.from }} {{ trans('to') }} {{ companies.to }}</span\n                  >\n                  {{ trans('of') }}\n                  <span class=\"text-dark fw-500\">{{ companies.total }}</span>\n                </p>\n                <Paginate :links=\"companies.links\" />\n              </div>\n            </template>\n            <div class=\"alert alert-info mt-30 text-center\" role=\"alert\" v-else>\n              {{ trans('No company found') }}\n            </div>\n          </div>\n        </div>\n        <!-- /.col- -->\n      </div>\n    </div>\n  </section>\n  <!-- popUpModal -->\n  <div\n    class=\"modal popUpModal fade\"\n    id=\"filterPopUp\"\n    tabindex=\"-1\"\n    aria-labelledby=\"exampleModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-fullscreen modal-dialog-centered\">\n      <ModalFilterForm :request=\"request\" :services=\"services\" :locations=\"locations\" />\n    </div>\n  </div>\n  <JobIntro />\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport JobIntro from '../../Candidate/Partials/JobIntro.vue'\nimport SideFilterForm from '../Partials/SideFilterForm.vue'\nimport { useCompanyFilterStore } from '@/Store/companyFilterStore'\nimport Breadcrumb from '@/Components/Breadcrumb.vue'\nimport { onMounted } from 'vue'\nconst filter = useCompanyFilterStore()\nconst props = defineProps(['companies', 'services', 'locations', 'seo', 'request'])\ndefineOptions({ layout: DefaultLayout })\n\nonMounted(() => {\n  if (!filter.layout) {\n    filter.setLayout('list')\n  }\n})\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n\n  <Breadcrumb\n    :title=\"trans('Company')\"\n    href=\"/\"\n    :href-text=\"trans('Home')\"\n    :subtitle=\"trans('Companies')\"\n  />\n  <!-- /.inner-banner-one -->\n\n  <section class=\"company-profiles pt-110 lg-pt-80 pb-160 xl-pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <SideFilterForm :services=\"services\" :request=\"request\" :locations=\"locations\" />\n\n        <div class=\"col-xl-9 col-lg-8\">\n          <div class=\"ms-xxl-5 ms-xl-3\">\n            <div class=\"upper-filter d-flex justify-content-between align-items-center mb-20\">\n              <div class=\"total-job-found\">\n                {{ trans('All') }}\n                <span class=\"text-dark fw-500\">{{ companies.total }}</span>\n                {{ trans(' company found') }}\n              </div>\n              <div class=\"d-flex align-items-center\">\n                <div class=\"short-filter d-flex align-items-center\">\n                  <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n                  <NiceSelect\n                    v-model=\"filter.filterForm.sort\"\n                    value-by=\"order\"\n                    label=\"name\"\n                    :options=\"filter.sorts\"\n                    placeholder=\"Default\"\n                    @change=\"filter.submit\"\n                  />\n                </div>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s list-btn ms-2 text-center\"\n                  :class=\"[filter.layout == 'grid' ? 'active' : '']\"\n                  @click=\"filter.setLayout('list')\"\n                  title=\"Active List\"\n                >\n                  <i class=\"bi bi-list\"></i>\n                </button>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s grid-btn ms-2 text-center\"\n                  :class=\"[filter.layout == 'list' ? 'active' : '']\"\n                  @click=\"filter.setLayout('grid')\"\n                  title=\"Active Grid\"\n                >\n                  <i class=\"bi bi-grid\"></i>\n                </button>\n              </div>\n            </div>\n            <!-- /.upper-filter -->\n\n            <div class=\"accordion-box grid-style\" :class=\"[filter.layout == 'grid' ? 'show' : '']\">\n              <div class=\"row\">\n                <template v-for=\"company in companies.data\" :key=\"company.id\">\n                  <div class=\"col-xl-4 col-lg-6 col-md-4 col-sm-6 d-flex\">\n                    <div class=\"company-grid-layout mb-30\" :class=\"{ favourite: company.is_star }\">\n                      <Link\n                        :href=\"`/companies/${company.username}`\"\n                        class=\"company-logo rounded-circle me-auto ms-auto\"\n                      >\n                        <img\n                          v-lazy=\"\n                            company?.avatar == null\n                              ? `https://ui-avatars.com/api/?name=${company.name}`\n                              : `${company?.avatar}`\n                          \"\n                          alt=\"avatar\"\n                          class=\"lazy-img rounded-circle\"\n                        />\n                      </Link>\n                      <h5 class=\"text-center\">\n                        <Link :href=\"`/companies/${company.username}`\" class=\"company-name tran3s\">\n                          {{ company.meta.company.name }}\n                        </Link>\n                      </h5>\n                      <p class=\"mb-auto text-center\">\n                        {{ company.states[0]?.name }}\n                        ,\n                        {{ company.countries[0]?.name }}\n                      </p>\n                      <div class=\"bottom-line d-flex\">\n                        <Link :href=\"`/companies/${company.username}`\"\n                          >{{ company.jobs_count }} {{ trans('Vacancy') }}</Link\n                        >\n                        <Link :href=\"`/companies/${company.username}`\"\n                          ><i class=\"bi bi-bookmark-dash\"></i> {{ trans('Save') }}</Link\n                        >\n                      </div>\n                    </div>\n                    <!-- /.company-grid-layout -->\n                  </div>\n                </template>\n              </div>\n            </div>\n            <!-- list style -->\n            <div class=\"accordion-box list-style\" :class=\"[filter.layout == 'list' ? 'show' : '']\">\n              <template v-for=\"company in companies.data\" :key=\"company.id\">\n                <div class=\"company-list-layout mb-20\" :class=\"{ favourite: company.is_star }\">\n                  <div class=\"row justify-content-between align-items-center\">\n                    <div class=\"col-xl-5\">\n                      <div class=\"d-flex align-items-xl-center\">\n                        <Link\n                          :href=\"`/companies/${company.username}`\"\n                          class=\"company-logo rounded-circle\"\n                        >\n                          <img\n                            v-lazy=\"\n                              company?.avatar == null\n                                ? `https://ui-avatars.com/api/?name=${company.name}`\n                                : `${company?.avatar}`\n                            \"\n                            alt=\"avatar\"\n                            class=\"lazy-img rounded-circle\"\n                          />\n                        </Link>\n                        <div class=\"company-data\">\n                          <h5 class=\"m0\">\n                            <Link\n                              :href=\"`/companies/${company.username}`\"\n                              class=\"company-name tran3s\"\n                            >\n                              {{ company.meta.company.name }}\n                            </Link>\n                          </h5>\n                          <p>\n                            {{ company.states[0]?.name }}\n                            ,\n                            {{ company.countries[0]?.name }}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-xl-4 col-md-8\">\n                      <div class=\"d-flex align-items-center ps-xxl-5 lg-mt-20\">\n                        <div class=\"d-flex align-items-center\">\n                          <template v-if=\"company.meta.company?.teams?.length > 0\">\n                            <img\n                              v-for=\"team in company?.meta?.company?.teams\"\n                              :key=\"team\"\n                              v-lazy=\"team\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                          </template>\n                          <template v-else>\n                            <img\n                              v-lazy=\"'/assets/images/assets/img_42.png'\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                            <img\n                              v-lazy=\"'/assets/images/assets/img_43.png'\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                            <img\n                              v-lazy=\"'/assets/images/assets/img_44.png'\"\n                              alt=\"img\"\n                              class=\"lazy-img rounded-circle team-img\"\n                            />\n                          </template>\n                          <div class=\"team-text\">\n                            <span class=\"text-md fw-500 text-dark d-block\">\n                              {{ company.meta.company.size }}\n                            </span>\n                            {{ trans(' Team Size') }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-xl-3 col-md-4\">\n                      <div\n                        class=\"btn-group d-flex align-items-center justify-content-md-end lg-mt-20\"\n                      >\n                        <Link\n                          :href=\"`/companies/${company.username}`\"\n                          class=\"open-job-btn fw-500 tran3s me-2 text-center\"\n                          >{{ company.jobs_count }} {{ trans('open job') }}</Link\n                        >\n                        <Link\n                          :href=\"`/companies/${company.username}`\"\n                          class=\"save-btn rounded-circle tran3s text-center\"\n                          title=\"Save Job\"\n                          ><i class=\"bi bi-bookmark-dash\"></i\n                        ></Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </template>\n            </div>\n            <template v-if=\"companies?.data.length > 0\">\n              <div class=\"pt-50 lg-pt-20 d-sm-flex align-items-center justify-content-between\">\n                <p class=\"m0 order-sm-last text-sm-start xs-pb-20 text-center\">\n                  {{ trans('Showing') }}\n                  <span class=\"text-dark fw-500\"\n                    >{{ companies.from }} {{ trans('to') }} {{ companies.to }}</span\n                  >\n                  {{ trans('of') }}\n                  <span class=\"text-dark fw-500\">{{ companies.total }}</span>\n                </p>\n                <Paginate :links=\"companies.links\" />\n              </div>\n            </template>\n            <div class=\"alert alert-info mt-30 text-center\" role=\"alert\" v-else>\n              {{ trans('No company found') }}\n            </div>\n          </div>\n        </div>\n        <!-- /.col- -->\n      </div>\n    </div>\n  </section>\n\n  <JobIntro />\n</template>\n","<script setup>\nimport { useForm } from '@inertiajs/vue3'\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport { computed, ref } from 'vue'\nimport { onMounted } from 'vue'\nimport notify from '@/Plugins/Admin/notify'\nimport trans from '@/Composables/transComposable'\nimport InputFieldError from '@/Components/InputFieldError.vue'\nimport { useThemeLoaderStore } from '@/Store/themeLoaderStore'\nimport SpinnerBtn from '@/Components/Admin/SpinnerBtn.vue'\nconst themeLoader = useThemeLoaderStore()\ndefineOptions({ layout: DefaultLayout })\nconst props = defineProps(['contact', 'seo', 'recaptchaSiteKey'])\nconst contact = ref({ ...props.contact })\n\nconst form = useForm({\n  email: '',\n  name: '',\n  subject: '',\n  message: '',\n  recaptcha: false\n})\n\nconst submit = () => {\n  if (props.recaptchaSiteKey && !form.recaptcha) {\n    return notify.danger(trans('reCaptcha field is required'))\n  }\n\n  form.post(route('send.mail'), {\n    preserveScroll: true,\n    onSuccess: () => {\n      notify.success(trans('Messages has been send successfully'))\n      form.reset()\n      setTimeout(() => {\n        window.location.reload()\n      }, 500)\n    }\n  })\n}\n\nonMounted(() => {\n  renderRecaptcha()\n})\n\nconst renderRecaptcha = () => {\n  if (props.recaptchaSiteKey) {\n    grecaptcha.render('grecaptcha', {\n      sitekey: props.recaptchaSiteKey,\n      callback: (res) => (form.recaptcha = true)\n    })\n  }\n}\n\nconst breadcrumbColor = computed(() => {\n  const themes = ['One', 'Six']\n  if (themes.includes(themeLoader.theme)) {\n    return ''\n  }\n  return 'inner-breadcrumb-colors'\n})\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <div class=\"inner-banner-one position-relative pb-0\" :class=\"breadcrumbColor\">\n    <div class=\"map-banner\">\n      <div class=\"gmap_canvas h-100 w-100\">\n        <iframe class=\"gmap_iframe h-100 w-100\" :src=\"contact.map_link\"></iframe>\n      </div>\n    </div>\n    <img src=\"/assets/images/shape/shape_02.svg\" alt=\"\" class=\"lazy-img shapes shape_01\" />\n  </div>\n\n  <section class=\"contact-us-section pt-100 lg-pt-80\">\n    <div class=\"container\">\n      <div class=\"border-bottom pb-150 lg-pb-80\">\n        <div class=\"title-one mb-70 lg-mb-40 text-center\">\n          <h2>{{ trans('Get in touch') }}</h2>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-xl-10 m-auto\">\n            <div class=\"row\">\n              <div class=\"col-md-4\">\n                <div class=\"address-block-one wow fadeInUp mb-40 text-center\">\n                  <div\n                    class=\"icon rounded-circle d-flex align-items-center justify-content-center m-auto\"\n                  >\n                    <img src=\"/assets/images/icon/icon_57.svg\" alt=\"\" />\n                  </div>\n                  <h5 class=\"title\">{{ trans('Our Address') }}</h5>\n                  <p>{{ contact.address }} - {{ contact.country }}</p>\n                </div>\n                <!-- /.address-block-one -->\n              </div>\n              <div class=\"col-md-4\">\n                <div class=\"address-block-one wow fadeInUp mb-40 text-center\">\n                  <div\n                    class=\"icon rounded-circle d-flex align-items-center justify-content-center m-auto\"\n                  >\n                    <img src=\"/assets/images/icon/icon_58.svg\" alt=\"\" />\n                  </div>\n                  <h5 class=\"title\">{{ trans('Contact Info') }}</h5>\n                  <p>\n                    {{ contact.contact_info_text }} <br /><a\n                      :href=\"`tel:${contact.contact_info_number}`\"\n                      class=\"call\"\n                      >{{ contact.contact_info_number }}</a\n                    >\n                  </p>\n                </div>\n                <!-- /.address-block-one -->\n              </div>\n              <div class=\"col-md-4\">\n                <div class=\"address-block-one wow fadeInUp mb-40 text-center\">\n                  <div\n                    class=\"icon rounded-circle d-flex align-items-center justify-content-center m-auto\"\n                  >\n                    <img src=\"/assets/images/icon/icon_59.svg\" alt=\"\" />\n                  </div>\n                  <h5 class=\"title\">{{ trans('Live Support') }}</h5>\n                  <p>\n                    {{ contact.live_chat_service_text }} <br /><a href=\"#\" class=\"webaddress\">{{\n                      contact.live_chat_service_website\n                    }}</a>\n                  </p>\n                </div>\n                <!-- /.address-block-one -->\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-xl-9 m-auto\">\n            <div class=\"form-style-one mt-85 lg-mt-50 wow fadeInUp\">\n              <form @submit.prevent=\"submit\">\n                <div class=\"messages\"></div>\n                <div class=\"row controls\">\n                  <div class=\"col-sm-6\">\n                    <div class=\"input-group-meta form-group mb-30\">\n                      <label for=\"\">{{ trans('Name') }}*</label>\n                      <input v-model=\"form.name\" type=\"text\" placeholder=\"Your Name*\" />\n                      <InputFieldError :message=\"form.errors.name\" />\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"input-group-meta form-group mb-30\">\n                      <label for=\"\">{{ trans('Email') }} *</label>\n                      <input v-model=\"form.email\" type=\"email\" placeholder=\"Email Address*\" />\n                      <InputFieldError :message=\"form.errors.email\" />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"input-group-meta form-group mb-35\">\n                      <label for=\"\">{{ trans('Subject') }} </label>\n                      <input\n                        v-model=\"form.subject\"\n                        type=\"text\"\n                        :placeholder=\"trans('Write about the subject here..')\"\n                      />\n                      <InputFieldError :message=\"form.errors.subject\" />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"input-group-meta form-group mb-35\">\n                      <textarea v-model=\"form.message\" placeholder=\"Your message*\"></textarea>\n                      <InputFieldError :message=\"form.errors.message\" />\n                    </div>\n                  </div>\n                  \n                  <div class=\"col-12\">\n                    <SpinnerBtn\n                      classes=\"d-flex align-items-center justify-content-center btn-eleven fw-500 tran3s d-block\"\n                      :processing=\"form.processing\"\n                      :btn-text=\"trans('Send Message')\"\n                    >\n                    </SpinnerBtn>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <!-- /.form-style-one -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <!-- ./contact-us-section -->\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport Breadcrumb from '@/Components/Breadcrumb.vue'\ndefineOptions({ layout: DefaultLayout })\ndefineProps(['info', 'seo'])\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <Breadcrumb :title=\"info.title\" href=\"/\" :href-text=\"trans('Home')\" :subtitle=\"info.title\" />\n\n  <section class=\"faq-section position-relative pt-100 lg-pt-80\">\n    <div class=\"container\" v-html=\"info.description?.value\"></div>\n  </section>\n</template>\n","<script setup>\nimport { computed, ref } from 'vue'\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport Breadcrumb from '@/Components/Breadcrumb.vue'\n\ndefineOptions({ layout: DefaultLayout })\nconst props = defineProps(['faqs', 'seo'])\n\nconst tabsItems = computed(() => {\n  return new Set(props.faqs.map((f) => f.faq_categories?.[0]?.slug))\n})\nconst activeTabValue = ref('')\n\nconst filterFaq = computed(() => {\n  if (activeTabValue.value) {\n    return props.faqs.filter((faq) => faq.faq_categories?.[0]?.slug.includes(activeTabValue.value))\n  } else {\n    return props.faqs\n  }\n})\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <Breadcrumb\n    :title=\"trans('Question & Answers')\"\n    href=\"/\"\n    :href-text=\"trans('Home')\"\n    :subtitle=\"trans('Question & Answers')\"\n  />\n\n  <!-- /.inner-banner-one -->\n\n  <section class=\"faq-section position-relative pt-100 lg-pt-80\">\n    <div class=\"container\">\n      <ul class=\"nav nav-tabs justify-content-center border-0\" role=\"tablist\">\n        <li class=\"nav-item\" role=\"presentation\">\n          <button\n            @click=\"activeTabValue = ''\"\n            class=\"nav-link active\"\n            data-bs-toggle=\"tab\"\n            data-bs-target=\"#fc1\"\n            role=\"tab\"\n          >\n            {{ trans('All') }}\n          </button>\n        </li>\n        <li v-for=\"(tab, i) in tabsItems\" :key=\"i\" class=\"nav-item\" role=\"presentation\">\n          <button\n            @click=\"activeTabValue = tab\"\n            class=\"nav-link text-capitalize\"\n            data-bs-toggle=\"tab\"\n            :data-bs-target=\"`#fc2`\"\n            role=\"tab\"\n          >\n            {{ tab ? tab.replace(/-/g, ' ') : tab }}\n          </button>\n        </li>\n      </ul>\n      <div class=\"bg-wrapper lg-mt-40 mt-60\">\n        <div class=\"tab-content\" id=\"myTabContent\">\n          <div class=\"tab-pane fade show active\" role=\"tabpanel\" id=\"fc1\">\n            <div class=\"accordion accordion-style-two\" id=\"accordionTwo\">\n              <div class=\"accordion-item\" v-for=\"(faq, i) in filterFaq\" :key=\"faq.id\">\n                <div class=\"accordion-header\" id=\"FheadingOne\">\n                  <button\n                    class=\"accordion-button collapsed\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    :data-bs-target=\"`#${faq.slug + i}`\"\n                    aria-expanded=\"false\"\n                    :aria-controls=\"faq.slug + i\"\n                  >\n                    {{ faq.title }}\n                  </button>\n                </div>\n                <div\n                  :id=\"faq.slug + i\"\n                  class=\"accordion-collapse collapse\"\n                  aria-labelledby=\"FheadingOne\"\n                  data-bs-parent=\"#accordionTwo\"\n                >\n                  <div class=\"accordion-body\">\n                    <p>\n                      {{ faq.excerpt.value }}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- /.accordion-style-two -->\n          </div>\n          <!-- /.tab-pane -->\n          <div class=\"tab-pane fade\" role=\"tabpanel\" id=\"fc2\">\n            <div class=\"accordion accordion-style-two\" id=\"accordionThree\">\n              <div class=\"accordion-item\" v-for=\"(faq, i) in filterFaq\" :key=\"faq.id\">\n                <div class=\"accordion-header\">\n                  <button\n                    class=\"accordion-button collapsed\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    :data-bs-target=\"`#${faq.slug + i}`\"\n                    aria-expanded=\"false\"\n                    :aria-controls=\"faq.slug + i\"\n                  >\n                    {{ faq.title }}\n                  </button>\n                </div>\n                <div\n                  :id=\"faq.slug + i\"\n                  class=\"accordion-collapse collapse\"\n                  data-bs-parent=\"#accordionThree\"\n                >\n                  <div class=\"accordion-body\">\n                    <p>\n                      {{ faq.excerpt.value }}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"border-bottom pb-150 lg-pb-50 lg-mt-40 wow fadeInUp mt-60 text-center\">\n        <div class=\"title-three mb-30\">\n          <h2 class=\"fw-normal\">{{ trans('Don’t get your answer?') }}</h2>\n        </div>\n        <Link href=\"/contact-us\" class=\"btn-one\">{{ trans('Contact Us') }}</Link>\n      </div>\n    </div>\n  </section>\n</template>\n","<template>\n    <section class=\"job-portal-intro\">\n        <div class=\"container\">\n            <div class=\"wrapper bottom-border pt-100 lg-pt-80 md-pt-50 pb-65 md-pb-50\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col-lg-7\">\n                        <div class=\"text-center text-lg-start\">\n                            <h2>{{ trans('Most complete job portal.') }}</h2>\n                            <p class=\"text-md m0 md-pb-20\">{{ trans('Signup and start find your job or talents.') }}</p>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-5\">\n                        <ul class=\"btn-group style-none d-flex flex-wrap justify-content-center justify-content-lg-end\">\n                            <li class=\"me-2\"><Link href=\"/jobs\" class=\"btn-three\">{{ trans('Looking for job?') }}</Link></li>\n                            <li class=\"ms-2\"><Link href=\"/employer/jobs/create\" class=\"btn-four\">{{ trans('Post a job') }}</Link></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>","<script setup>\nimport { ref } from 'vue'\nimport { useForm } from '@inertiajs/vue3'\nconst freelancerCount = ref('18k+')\nimport sharedComposable from '@/Composables/sharedComposable'\n\nconst { pickBy } = sharedComposable()\n\ndefineProps(['home'])\n\nconst form = useForm({\n  keyword: ''\n})\n\nconst formSubmit = () => {\n  form.transform(data => pickBy(data)).get(route('jobs.index'))\n}\n</script>\n\n<template>\n  <div class=\"hero-banner-five position-relative pt-200 lg-pt-150\">\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"row\">\n          <div class=\"col-lg-6 col-md-8\">\n            <h1>{{ home.hero.title }}</h1>\n            <p class=\"mt-40 text-md lg-mt-20 mb-65 lg-mb-30 pe-xxl-5\">\n              {{ home.hero.subtitle }}\n            </p>\n          </div>\n        </div>\n        <div class=\"position-relative\">\n          <div class=\"row\">\n            <div class=\"col-lg-6 col-md-8\">\n              <div class=\"job-search-two position-relative me-xxl-5\">\n                <form @submit.prevent=\"formSubmit\" class=\"d-flex align-items-center justify-content-between\">\n                  <input type=\"text\" v-model=\"form.keyword\" placeholder=\"Search job, title etc....\" class=\"bg-grey\"\n                     />\n                  <button type=\"submit\" class=\"btn-five h-100\">{{ trans('Search') }}</button>\n                </form>\n              </div>\n              <!-- /.job-search-two -->\n            </div>\n          </div>\n        </div>\n        <div class=\"d-sm-flex align-items-center mt-85 lg-mt-50\">\n          <img v-lazy=\"home.hero.image2\" alt=\"img\" class=\"lazy-img\" />\n          <div class=\"ps-3\">\n            <div class=\"fw-500 text-dark text-md\">{{ freelancerCount }}</div>\n            <div>{{ trans('Individual Freelancer') }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"img-meta\" :style=\"{ backgroundImage: `url(${home.hero.image})` }\">\n      <img src=\"/assets/images/shape/shape_29.svg\" alt=\"img\" class=\"lazy-img shapes shape_01\" />\n    </div>\n    <a href=\"#\" class=\"chat-btn tran3s\"><i class=\"bi bi-chat-dots\"></i></a>\n  </div>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\nimport { Link } from '@inertiajs/vue3'\n\nconst categories = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('featuredCategories').then((res) => {\n    categories.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"category-section-five position-relative mt-190 lg-mt-150\">\n    <div class=\"container\">\n      <div class=\"row justify-content-between align-items-center\">\n        <div class=\"col-lg-8\">\n          <div class=\"title-four text-lg-start text-center\">\n            <h2>{{ trans('Most Demanding Categories.') }}</h2>\n          </div>\n        </div>\n        <div class=\"col-lg-4\">\n          <div class=\"d-flex justify-content-lg-end\">\n            <Link href=\"/jobs\" class=\"btn-six d-none d-lg-inline-block\">\n              {{ trans('Explore all fields') }}</Link\n            >\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"card-wrapper d-flex justify-content-center justify-content-lg-between pt-50 lg-pt-30 flex-wrap\"\n      >\n        <div\n          v-for=\"(item, index) in categories\"\n          :key=\"index\"\n          class=\"card-style-seven bg-color mt-15 wow fadeInUp text-center\"\n        >\n          <Link\n            :href=\"route('job-categories.show', item.slug)\"\n            class=\"wrapper d-flex align-items-center\"\n          >\n            <div class=\"icon d-flex align-items-center justify-content-center\">\n              <img v-lazy=\"item.preview\" alt=\"shape\" class=\"lazy-img category-section-img\" />\n            </div>\n            <div class=\"title fw-500\">{{ item.title }}</div>\n          </Link>\n        </div>\n      </div>\n      <!-- /.card-wrapper -->\n      <div class=\"d-lg-none mt-40 text-center\">\n        <Link href=\"/jobs\" class=\"btn-six\">{{ trans('Explore all fields') }}</Link>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nconst features = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('features').then((res) => {\n    features.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"how-it-works-two position-relative pt-160 xl-pt-130 lg-pt-100\">\n    <div class=\"container\">\n      <div\n        class=\"title-one d-flex align-items-center justify-content-between mb-45 lg-mb-20 text-center\"\n      >\n        <span class=\"line\"></span>\n        <h2 class=\"w-100 main-font\">{{ trans('Our Core Values') }}</h2>\n        <span class=\"line\"></span>\n      </div>\n\n      <div class=\"position-relative\">\n        <div class=\"row justify-content-center\">\n          <div class=\"col-lg-4 col-md-6\" v-for=\"(item, index) in features\" :key=\"index\">\n            <div\n              class=\"card-style-five position-relative mt-25 pb-35 lg-pb-20 wow fadeInUp text-center\"\n            >\n              <div class=\"numb fw-500 d-flex align-items-center justify-content-center m-auto\">\n                <span>0{{ index + 1 }}</span>\n              </div>\n              <div class=\"title fw-500 text-dark mt-25 mb-10 text-lg\">{{ item.title }}</div>\n              <p>{{ item.text }}</p>\n            </div>\n            <!-- /.card-style-five -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from \"vue\";\nimport homeApiService from \"@/Composables/homeApiService\";\nimport { Link, useForm } from \"@inertiajs/vue3\";\n\nconst jobs = ref([]);\nconst loading = ref(true);\n\nonMounted(async () => {\n  homeApiService.get(\"jobList\").then((res) => {\n    jobs.value = res;\n    loading.value = false;\n  });\n});\n\nconst toggleBookmark = (job) => {\n  let form = useForm({});\n  form.post(route(\"jobs.bookmark\", job), {\n    preserveScroll: true,\n    onSuccess: () => {},\n  });\n};\n</script>\n\n<template>\n  <section \n    v-if=\"jobs.length > 0\"\n    class=\"job-listing-two pt-120 xl-pt-100 md-pt-80 pb-130 xl-pb-100 lg-pb-80 mt-110 xl-mt-90 md-mt-50\"\n  >\n    <div class=\"container\">\n      <div class=\"row align-items-center\">\n        <div class=\"col-xl-6 col-lg-5\">\n          <div class=\"text-center title-one text-lg-start md-mb-20\">\n            <h2 class=\"main-font\">{{ trans(\"New job listing\") }}</h2>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"mb-3 col-md-4\" v-for=\"(item, index) in jobs\" :key=\"index\">\n            <div class=\"mt-40 job-list-two lg-mt-20\">\n              <Link :href=\"route('jobs.show', item.slug)\" class=\"logo\">\n                <img\n                  v-lazy=\"\n                    item.user?.avatar == null\n                      ? `https://ui-avatars.com/api/?name=${item.user.name}`\n                      : `${item.user?.avatar}`\n                  \"\n                  alt=\"avatar\"\n                  class=\"m-auto lazy-img\"\n                />\n              </Link>\n\n              <button\n                type=\"button\"\n                @click=\"toggleBookmark(item)\"\n                class=\"text-center save-btn rounded-circle tran3s me-3\"\n                :class=\"{ 'bg-success': item.is_bookmarked }\"\n                title=\"Save Job\"\n              >\n                <i class=\"bi bi-bookmark-dash\"></i>\n              </button>\n\n              <div>\n                <Link :href=\"route('jobs.show', item.slug)\" class=\"job-duration fw-500\">{{\n                  item.type\n                }}</Link>\n              </div>\n              <div>\n                <Link :href=\"route('jobs.show', item.slug)\" class=\"title fw-500 tran3s\">{{\n                  item.title\n                }}</Link>\n              </div>\n              <div class=\"job-date\">{{ item.created_at_date }}</div>\n              <div class=\"d-flex align-items-center justify-content-between\">\n                <div class=\"job-location\">\n                  <Link :href=\"route('jobs.show', item.slug)\">{{ item.address }}</Link>\n                </div>\n                <Link\n                  :href=\"route('jobs.show', item.slug)\"\n                  class=\"text-center apply-btn tran3s\"\n                  >{{ trans(\"APPLY\") }}</Link\n                >\n              </div>\n            </div>\n            <!-- /.job-list-two -->\n          </div>\n        </div>\n        <!-- /.item -->\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\ndefineProps(['home'])\n\nconst features = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('features').then((res) => {\n    features.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"text-feature-three position-relative pt-200 xl-pt-150 md-pt-80\">\n    <div class=\"container\">\n      <div class=\"row align-items-center\">\n        <div class=\"col-lg-5 order-lg-last ms-auto\">\n          <div class=\"wow fadeInRight\">\n            <div class=\"title-one\">\n              <h2 class=\"main-font\">{{ home.cta_s1.title }}</h2>\n            </div>\n            <div class=\"accordion accordion-style-one mt-25\" id=\"accordionOne\">\n              <div\n                class=\"accordion-item\"\n                v-for=\"(item, index) in home.cta_s1.features\"\n                :key=\"index\"\n              >\n                <div class=\"accordion-header\" :id=\"`heading${index}`\">\n                  <button\n                    class=\"accordion-button\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    :data-bs-target=\"`#collapse${index}`\"\n                    aria-expanded=\"false\"\n                    :aria-controls=\"`collapse${index}`\"\n                  >\n                    {{ item.title }}\n                  </button>\n                </div>\n                <div\n                  :id=\"`collapse${index}`\"\n                  class=\"accordion-collapse collapse\"\n                  :aria-labelledby=\"`heading${index}`\"\n                  data-bs-parent=\"#accordionOne\"\n                >\n                  <div class=\"accordion-body\">\n                    <p>{{ item.body }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- /.accordion-style-one -->\n            <a :href=\"home.cta_s1.btn_link\" class=\"btn-five border6 mt-45\">{{\n              home.cta_s1.btn_text\n            }}</a>\n          </div>\n        </div>\n        <div class=\"col-lg-6 order-lg-first\">\n          <div\n            class=\"img-box position-relative rounded-circle d-flex align-items-center justify-content-center wow fadeInLeft\"\n          >\n            <img v-lazy=\"home.cta_s1.image1\" alt=\"image\" class=\"lazy-img\" />\n            <img v-lazy=\"home.cta_s1.image2\" alt=\"image\" class=\"lazy-img shapes screen_02\" />\n            <img src=\"/assets/images/shape/shape_25.svg\" alt=\"\" class=\"lazy-img shapes shape_01\" />\n          </div>\n          <!-- /.big-circle -->\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { Swiper, SwiperSlide } from 'swiper/vue'\nimport { Navigation } from 'swiper'\nimport { onMounted, ref } from 'vue'\nimport axios from 'axios'\n// swiper styles\nimport 'swiper/css'\nimport 'swiper/css/navigation'\nimport trans from '@/Composables/transComposable'\nconst navigationOptions = {\n  nextEl: '.prev_a',\n  prevEl: '.next_a'\n}\nconst modules = [Navigation]\nconst items = ref([])\nconst loading = ref(true)\nonMounted(() => {\n  axios.get(route('api.home-experts')).then((res) => {\n    items.value = res.data\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"expert-section-one position-relative mt-180 xl-mt-150 md-mt-100\" v-if=\"items.length > 0\">\n    <div class=\"position-relative container\">\n      <div class=\"row justify-content-between align-items-center\">\n        <div class=\"col-lg-6\">\n          <div class=\"title-one\">\n            <h2 class=\"main-font\">{{ trans('Top Experts') }}</h2>\n          </div>\n        </div>\n        <div class=\"col-lg-5\">\n          <div class=\"d-flex justify-content-lg-end\">\n            <Link href=\"/candidates\" class=\"btn-six d-none d-lg-inline-block\">{{\n              trans('Explore all')\n            }}</Link>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"pt-70 lg-pt-40\">\n        <Swiper\n          :slides-per-view=\"4\"\n          :space-between=\"10\"\n          :modules=\"modules\"\n          :navigation=\"navigationOptions\"\n        >\n          <SwiperSlide v-for=\"(item, index) in items\" :key=\"index\" class=\"item\">\n            <div class=\"card-style-eight\">\n              <div class=\"img-meta mb-20\">\n                <Link\n                  :href=\"route('candidates.show', item.username)\"\n                  class=\"name text-md fw-500 text-dark\"\n                >\n                  <img v-lazy=\"item.avatar\" alt=\"\" class=\"expertSectionImg m-auto\" />\n                </Link>\n              </div>\n              <Link :href=\"route('candidates.show', item.username)\" class=\"name fw-500 tran3s\">{{\n                item.name\n              }}</Link>\n              <div class=\"post\">{{ item.designation }}</div>\n            </div>\n            <!-- /.card-style-eight -->\n          </SwiperSlide>\n        </Swiper>\n      </div>\n      <div class=\"d-lg-none mt-40 text-center\">\n        <Link href=\"/candidates\" class=\"btn-six\">{{ trans('Explore all') }}</Link>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nconst feedbacks = ref([])\n\nonMounted(() => {\n  homeApiService\n    .get('feedbacks')\n    .then((res) => {\n      feedbacks.value = res\n    })\n    .then(() => {\n      // ------------------------ Feedback Slider Three\n      if ($('.feedback-slider-three-a').length) {\n        $('.feedback-slider-three-a').slick({\n          dots: false,\n          arrows: true,\n          prevArrow: $('.prev_d'),\n          nextArrow: $('.next_d'),\n          lazyLoad: 'ondemand',\n          centerPadding: '0px',\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          autoplay: true,\n          fade: true,\n          autoplaySpeed: 300000,\n          asNavFor: '.feedback-slider-three-b'\n        })\n      }\n      if ($('.feedback-slider-three-b').length) {\n        $('.feedback-slider-three-b').slick({\n          dots: true,\n          arrows: false,\n          lazyLoad: 'ondemand',\n          centerPadding: '0px',\n          slidesToShow: feedbacks.value.length > 3 ? 3 : 2,\n          slidesToScroll: 1,\n          autoplay: true,\n          autoplaySpeed: 300000,\n          asNavFor: '.feedback-slider-three-a',\n          responsive: [\n            {\n              breakpoint: 992,\n              settings: {\n                slidesToShow: 2\n              }\n            },\n            {\n              breakpoint: 576,\n              settings: {\n                slidesToShow: 1\n              }\n            }\n          ]\n        })\n      }\n    })\n})\n</script>\n\n<template>\n  <section class=\"feedback-section-four position-relative mt-180 xl-mt-150 lg-mt-100\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xl-5 col-lg-6 order-lg-last ms-auto\">\n          <div class=\"title-one ps-xxl-5\">\n            <h2 class=\"main-font\">{{ trans('Our Customer Feedback') }}</h2>\n          </div>\n        </div>\n        <div class=\"col-xxl-7 col-lg-6 order-lg-first\">\n          <div class=\"bg-wrapper position-relative me-xxl-4 md-mt-40 md-mb-40\">\n            <div class=\"icon d-flex align-items-center justify-content-center rounded-circle\">\n              <img v-lazy=\"'/assets/images/icon/icon_30.svg'\" alt=\"\" class=\"lazy-img\" />\n            </div>\n\n            <div class=\"feedback-slider-three-a\">\n              <div class=\"item\" v-for=\"(item, index) in feedbacks\" :key=\"index\">\n                <p>“{{ item.review }}”</p>\n                <div class=\"name text-md text-white\">\n                  {{ item.author }},<span class=\"opacity-50\">{{ item.author_designation }}</span>\n                </div>\n              </div>\n            </div>\n            <ul\n              class=\"slider-arrows d-flex justify-content-between justify-content-lg-center style-none\"\n            >\n              <li class=\"prev_d slick-arrow\"><i class=\"bi bi-arrow-left\"></i></li>\n              <li class=\"next_d slick-arrow\"><i class=\"bi bi-arrow-right\"></i></li>\n            </ul>\n          </div>\n          <!-- /.bg-wrapper -->\n        </div>\n      </div>\n      <div class=\"slider-wrapper\">\n        <div class=\"feedback-slider-three-b\">\n          <div class=\"item\" v-for=\"(item, index) in feedbacks\" :key=\"index\">\n            <img :src=\"item.company_logo\" alt=\"\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nconst brands = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService\n    .get('brands')\n    .then((res) => {\n      brands.value = res\n      loading.value = false\n    })\n    .then(() => {\n      if ($('.partner-slider').length) {\n        $('.partner-slider').slick({\n          dots: false,\n          arrows: false,\n          lazyLoad: 'ondemand',\n          centerPadding: '0px',\n          slidesToShow: 6,\n          slidesToScroll: 1,\n          autoplay: true,\n          autoplaySpeed: 3500,\n          responsive: [\n            {\n              breakpoint: 1400,\n              settings: {\n                slidesToShow: 5\n              }\n            },\n            {\n              breakpoint: 768,\n              settings: {\n                slidesToShow: 4\n              }\n            },\n            {\n              breakpoint: 576,\n              settings: {\n                slidesToShow: 3\n              }\n            }\n          ]\n        })\n      }\n    })\n})\n</script>\n\n<template>\n  <div class=\"container\">\n    <div class=\"partner-logos pt-120 lg-pt-80 lg-pb-40 pb-80\">\n      <div class=\"title fw-500 text-dark text-uppercase mb-65 lg-mb-30 text-center\">\n       {{ trans('Trusted by') }} <span>{{ trans('500+') }}</span> {{ trans('companies') }}\n      </div>\n      <div class=\"partner-slider\">\n        <div class=\"item\" v-for=\"(item, index) in brands\" :key=\"index\">\n          <div class=\"logo d-flex align-items-center\"><img v-lazy=\"item.preview\" alt=\"\" /></div>\n        </div>\n      </div>\n    </div>\n    <!-- /.partner-logos -->\n  </div>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nconst blogs = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('blogs').then((res) => {\n    blogs.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"blog-section-one mt-160 xl-mt-130 lg-mt-100\">\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"row\">\n          <div class=\"col-xl-7\">\n            <div class=\"title-one lg-mb-10 mb-20\">\n              <h2 class=\"main-font\">{{ $page.props.app_name }} {{ trans('Guides') }}</h2>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row gx-xl-5\">\n          <div v-for=\"(blog, index) in blogs.slice(0, 2)\" :key=\"index\" class=\"col-sm-6\">\n            <article class=\"blog-meta-two mt-35 xs-mt-20 wow fadeInUp\">\n              <figure class=\"post-img m0\">\n                <Link :href=\"route('blogs.show', blog)\" class=\"w-100 d-block\"\n                  ><img v-lazy=\"blog.preview?.value\" alt=\"\" class=\"lazy-img w-100 tran4s\" />\n                </Link>\n                <Link :href=\"route('blogs.show', blog)\" class=\"tags fw-500\">{{\n                  blog.category_name\n                }}</Link>\n              </figure>\n              <div class=\"post-data mt-35 lg-mt-20\">\n                <div class=\"date\">\n                  <span class=\"fw-500 text-dark\">{{ blog.is_featured ? 'Featured' : '' }} -</span>\n                  <a :href=\"route('blogs.show', blog)\">{{ blog.created_at_diff }}</a>\n                </div>\n                <Link :href=\"route('blogs.show', blog)\">\n                  <h4 class=\"tran3s blog-title\">{{ blog.title }}</h4>\n                </Link>\n                <Link\n                  :href=\"route('blogs.show', blog)\"\n                  class=\"continue-btn tran3s d-flex align-items-center\"\n                >\n                  <span class=\"fw-500 me-2\">{{ trans('Continue Reading') }}</span>\n                  <i class=\"bi bi-arrow-right\"></i>\n                </Link>\n              </div>\n            </article>\n            <!-- /.blog-meta-two -->\n          </div>\n        </div>\n\n        <div class=\"explore-btn sm-mt-50 text-center\">\n          <Link href=\"/blogs\" class=\"btn-six\">{{ trans('Explore More') }}</Link>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport BannerSection from '@/Pages/Web/Home/Five/Partials/BannerSection.vue'\nimport CategorySection from '@/Pages/Web/Home/Five/Partials/CategorySection.vue'\nimport FeatureSection from '@/Pages/Web/Home/Five/Partials/FeatureSection.vue'\nimport JobListSection from '@/Pages/Web/Home/Five/Partials/JobListSection.vue'\nimport FeatureSection2 from '@/Pages/Web/Home/Five/Partials/FeatureSection2.vue'\nimport ExpertSection from '@/Pages/Web/Home/Five/Partials/ExpertSection.vue'\nimport FeedbackSection from '@/Pages/Web/Home/Five/Partials/FeedbackSection.vue'\nimport BrandSection from '@/Pages/Web/Home/Five/Partials/BrandSection.vue'\nimport BlogSection from '@/Pages/Web/Home/Five/Partials/BlogSection.vue'\nimport BannerSection2 from '@/Pages/Web/Home/Five/Partials/BannerSection2.vue'\n\ndefineOptions({ layout: DefaultLayout })\n\ndefineProps(['home', 'seo'])\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n\n  <BannerSection :home=\"home\" />\n  <CategorySection />\n  <FeatureSection />\n  <JobListSection />\n  <FeatureSection2 :home=\"home\" />\n  <ExpertSection />\n\n  <FeedbackSection />\n  <BrandSection />\n  <BlogSection />\n  <BannerSection2 :home=\"home\" />\n</template>\n","<script setup>\nimport { ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService';\n\nconst categories = ref([])\nconst loading = ref(true)\n\nhomeApiService.get('featuredCategories').then((res) => {\n  categories.value = res\n  loading.value = false\n})\n\n</script>\n\n<template>\n  <section class=\"category-section-one position-relative mt-120\">\n    <div class=\"container\">\n      <div class=\"row justify-content-between align-items-center\">\n        <div class=\"col-lg-8\">\n          <div class=\"title-three\">\n            <h2 class=\"fw-600 color-blue\">{{ trans('Explore the marketplace.') }}</h2>\n          </div>\n        </div>\n        <div class=\"col-lg-4\">\n          <div class=\"d-flex justify-content-lg-end\">\n            <Link href=\"/jobs\" class=\"btn-six d-none d-lg-inline-block\">{{\n              trans('Explore all fields')\n            }}</Link>\n          </div>\n        </div>\n      </div>\n      <div class=\"card-wrapper row justify-content-center mt-45 lg-mt-30\">\n        <div v-for=\"(category, index) in categories\" :key=\"index\" class=\"card-style-one wow fadeInUp mt-20 text-center\">\n          <Link :href=\"route('job-categories.show', category.slug)\" class=\"wrapper\">\n          <div class=\"icon d-flex align-items-center justify-content-center\">\n            <img v-lazy=\"category.preview\" alt=\"shape\" class=\"lazy-img category-section-img\" />\n          </div>\n          <div class=\"title fw-500\">{{ category.title }}</div>\n          <div class=\"total-job\">{{ category.jobs_count }} {{ trans('Jobs') }}</div>\n          </Link>\n        </div>\n        <!-- /.card-style-one -->\n      </div>\n      <!-- /.card-wrapper -->\n      <div class=\"d-lg-none mt-40 text-center\">\n        <Link href=\"/jobs\" class=\"btn-six\">{{ trans('Explore all fields') }}</Link>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\ndefineProps(['home'])\n\nconst features = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('features').then((res) => {\n    features.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"text-feature-one position-relative pt-180 xl-pt-150 lg-pt-100\">\n    <div class=\"container\">\n      <div class=\"row align-items-center\">\n        <div class=\"col-lg-5 order-lg-last\">\n          <div class=\"ps-lg-4 wow fadeInRight\">\n            <div class=\"title-one\">\n              <div class=\"sub-title\">{{ home.cta_s2.top_title }}</div>\n              <h2 class=\"text-dark\">{{ home.cta_s2.title }}</h2>\n            </div>\n            <div class=\"accordion accordion-style-one mt-25\" id=\"accordionOne\">\n              <div\n                class=\"accordion-item\"\n                v-for=\"(item, index) in home.cta_s2?.features ?? []\"\n                :key=\"index\"\n              >\n                <div class=\"accordion-header\" :id=\"`heading${index}`\">\n                  <button\n                    class=\"accordion-button\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    :data-bs-target=\"`#collapse${index}`\"\n                    aria-expanded=\"false\"\n                    :aria-controls=\"`collapse${index}`\"\n                  >\n                    {{ item.title }}\n                  </button>\n                </div>\n                <div\n                  :id=\"`collapse${index}`\"\n                  class=\"accordion-collapse collapse\"\n                  :aria-labelledby=\"`heading${index}`\"\n                  data-bs-parent=\"#accordionOne\"\n                >\n                  <div class=\"accordion-body\">\n                    <p>{{ item.body }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <a :href=\"home.cta_s2.btn_link\" class=\"btn-seven border6 mt-70 lg-mt-40\">{{\n              home.cta_s2.btn_text\n            }}</a>\n          </div>\n        </div>\n        <div class=\"col-lg-7 col-md-8 order-lg-first m-auto\">\n          <div class=\"img-data position-relative me-xl-5 md-mt-20\">\n            <div class=\"row align-items-center\">\n              <div class=\"col-6\">\n                <img\n                  v-lazy=\"home.cta_s2.image1\"\n                  alt=\"image\"\n                  class=\"lazy-img mt-35 md-mt-20 wow fadeInLeft\"\n                />\n              </div>\n              <div class=\"col-6\">\n                <img\n                  v-lazy=\"home.cta_s2.image2\"\n                  alt=\"image\"\n                  class=\"lazy-img mt-35 md-mt-20 wow fadeInDown\"\n                />\n                <img\n                  v-lazy=\"home.cta_s2.image3\"\n                  alt=\"image\"\n                  class=\"lazy-img mt-35 md-mt-20 wow fadeInUp\"\n                />\n              </div>\n            </div>\n            <img\n              src=\"/assets/images/shape/shape_06.svg\"\n              alt=\"shape\"\n              class=\"lazy-img shapes shape_02\"\n            />\n            <img\n              src=\"/assets/images/shape/shape_21.svg\"\n              alt=\"shape\"\n              class=\"lazy-img shapes shape_03\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from \"vue\";\nimport homeApiService from \"@/Composables/homeApiService\";\nimport { useForm } from \"@inertiajs/vue3\";\nimport NiceSelect from \"@/Components/NiceSelect.vue\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\n\nconst { pickBy } = sharedComposable();\n\ndefineProps([\"home\"]);\nconst categories = ref([]);\nconst countries = ref([]);\nconst loading = ref(true);\n\nconst form = useForm({\n  keyword: \"\",\n  service: \"\",\n  country: \"\",\n});\n\nonMounted(async () => {\n  homeApiService.get(\"services\").then((res) => {\n    categories.value = res;\n    loading.value = false;\n  });\n\n  homeApiService.get(\"countries\").then((res) => {\n    countries.value = res;\n    loading.value = false;\n  });\n});\n\nconst formSubmit = () => {\n  form.transform((data) => pickBy(data)).get(route(\"jobs.index\"));\n};\n</script>\n\n<template>\n  <div\n    class=\"hero-banner-four position-relative pt-170 lg-pt-150 pb-300 lg-pb-150 md-pb-100\"\n    :style=\"{ backgroundImage: `url(${home.hero.image})` }\"\n  >\n    <div class=\"container\">\n      <div class=\"position-relative pb-70 sm-pb-20\">\n        <div class=\"row\">\n          <div class=\"m-auto text-center col-xxl-7 col-lg-8\">\n            <h1>{{ home.hero.title }}</h1>\n            <p class=\"text-md mt-25 mb-45 md-mb-30\">\n              {{ home.hero.subtitle }}\n            </p>\n          </div>\n        </div>\n        <div class=\"position-relative\">\n          <div class=\"row\">\n            <div class=\"m-auto col-xxl-8 col-xl-9 col-lg-10\">\n              <div class=\"job-search-one style-two position-relative\">\n                <form @submit.prevent=\"formSubmit\">\n                  <div class=\"row align-items-center\">\n                    <div class=\"col-md-3\">\n                      <div class=\"input-box\">\n                        <div class=\"label\">{{ trans(\"Job Categories\") }}</div>\n                        <NiceSelect\n                          v-model=\"form.service\"\n                          :options=\"categories\"\n                          value-by=\"slug\"\n                          label=\"title\"\n                          placeholder=\"SELECT\"\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-md-3\">\n                      <div class=\"input-box\">\n                        <div class=\"label\">{{ trans(\"Location\") }}</div>\n                        <NiceSelect\n                          v-model=\"form.country\"\n                          :options=\"countries\"\n                          value-by=\"id\"\n                          label=\"name\"\n                          placeholder=\"SELECT\"\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-md-3\">\n                      <div class=\"input-box border-left\">\n                        <div class=\"label\">{{ trans(\"Keywords or Title\") }}</div>\n                        <input\n                          type=\"text\"\n                          v-model=\"form.keyword\"\n                          placeholder=\"Design, branding\"\n                          class=\"keyword\"\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-md-3 sm-mb-10 sm-mt-10\">\n                      <button class=\"m-auto text-uppercase btn-five border6 tran3s\">\n                        {{ trans(\"Search\") }}\n                      </button>\n                    </div>\n                  </div>\n                </form>\n                <div\n                  class=\"upload-btn position-relative d-flex align-items-center justify-content-between\"\n                >\n                <span><Link :href=\"home.hero.btn_link\" class=\"fw-500 text-dark me-1\">{{ home.hero.btn_text }}</Link></span>\n                  <i class=\"bi bi-file-earmark-arrow-up\"></i>\n                  \n                </div>\n              </div>\n              <!-- /.job-search-one -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <img v-lazy=\"home.hero.image1\" alt=\"img\" class=\"lazy-img shapes shape_01\" />\n    <img v-lazy=\"home.hero.image2\" alt=\"img\" class=\"lazy-img shapes shape_02\" />\n    <img v-lazy=\"home.hero.image3\" alt=\"img\" class=\"lazy-img shapes shape_03\" />\n    <img v-lazy=\"home.hero.image4\" alt=\"img\" class=\"lazy-img shapes shape_04\" />\n  </div>\n</template>\n","<script setup>\nimport { Swiper, SwiperSlide } from \"swiper/vue\"\nimport { Navigation } from \"swiper\"\nimport { onMounted, ref } from \"vue\"\nimport homeApiService from \"@/Composables/homeApiService\"\n\nimport \"swiper/css\"\nimport \"swiper/css/navigation\"\n\nconst navigationOptions = {\n    nextEl: \".next_a\",\n    prevEl: \".prev_a\"\n}\nconst modules = [Navigation]\n\nconst feedbacks = ref([])\nconst brands = ref([])\nconst loading = ref(true)\n\nonMounted(() => {\n    homeApiService.get('feedbacks').then(res => {\n        feedbacks.value = res\n    })\n\n    homeApiService.get('brands').then(res => {\n        brands.value = res\n        loading.value = false\n    })\n})\n\n</script>\n\n<template>\n    <section class=\"feedback-section-one pt-120 lg-pt-100\">\n        <div class=\"container position-relative\">\n            <div class=\"row\">\n                <div class=\"col-lg-6 col-md-7\">\n                    <div class=\"title-one mb-65 md-mb-50\">\n                        <h2 class=\"main-font\">{{ trans('Trusted by leading startups.') }}</h2>\n                    </div>\n                </div>\n            </div>\n\n            <Swiper :slides-per-view=\"2\" :space-between=\"30\" :modules=\"modules\" :navigation=\"navigationOptions\">\n                <SwiperSlide class=\"feedback-block-one color-two \" v-for=\"(item, index) in feedbacks\" :key=\"index\">\n                    <div class=\"logo\">\n                        <img :src=\"item.banner_logo\" alt=\"\" />\n                    </div>\n                    <blockquote class=\"fw-500 mt-50 md-mt-30 mb-50 md-mb-30  text-white\">\n                        “{{ item.review }}”\n                    </blockquote>\n                    <div class=\"name text-white\">\n                        <span class=\"fw-500\">{{ item.author }},</span> {{ item.author_designation }}\n                    </div>\n                    <div class=\"review md-pt-20 md-mt-30 d-flex justify-content-between align-items-center mt-40 pt-40\">\n                        <div class=\"text-md fw-500 text-white\">{{ item.ratting_point }} {{ item.rating_type }}</div>\n                        <ul class=\"style-none d-flex\">\n                            <li v-for=\"sl in 5\" :key=\"sl\">\n                                <a href=\"#\"><i :class=\"sl <= item.ratting_point ? 'bi bi-star-fill' : 'bi bi-star'\"></i></a>\n                            </li>\n                        </ul>\n                    </div>\n                </SwiperSlide>\n            </Swiper>\n\n            <ul v-if=\"feedbacks?.length > 2\"\n                class=\"slider-arrows slick-arrow-one d-flex justify-content-center style-none sm-mt-30\">\n                <li class=\"prev_a slick-arrow\">\n                    <i class=\"bi bi-arrow-left\"></i>\n                </li>\n                <li class=\"next_a slick-arrow\">\n                    <i class=\"bi bi-arrow-right\"></i>\n                </li>\n            </ul>\n\n        </div>\n    </section>\n</template>","<template>\n  <section class=\"job-portal-intro\">\n    <div class=\"container\">\n      <div class=\"wrapper bottom-border top-border lg-pt-40 pb-65 lg-pb-40 pt-60\">\n        <div class=\"row align-items-center\">\n          <div class=\"col-lg-7\">\n            <div class=\"text-lg-start text-center\">\n              <h2>{{ trans('Most complete job portal.') }}</h2>\n              <p class=\"text-md m0 md-pb-20\">\n                {{ trans('Signup and start find your job or talents.') }}\n              </p>\n            </div>\n          </div>\n          <div class=\"col-lg-5\">\n            <ul class=\"btn-group style-none d-flex justify-content-center justify-content-lg-end\">\n              <li class=\"me-2\">\n                <a href=\"/jobs\" class=\"btn-seven border6\">{{ trans('Looking for job?') }}</a>\n              </li>\n              <li class=\"ms-2\">\n                <a href=\"/register\" class=\"btn-five border6\">{{ trans('Post a job') }}</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from \"@/Composables/homeApiService\"\n\nconst faqs = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n    homeApiService.get('faqs').then(res => {\n        faqs.value = res\n        loading.value = false\n    })\n})\n\n</script>\n\n<template>\n    <section class=\"faq-section position-relative mt-180 xl-mt-150 lg-mt-100 mb-150 lg-mb-100\">\n        <div class=\"container\">\n            <div class=\"title-one text-center\">\n                <h2 class=\"text-dark\">{{ trans('Questions & Answers') }}</h2>\n            </div>\n            <div class=\"bg-wrapper mt-60 lg-mt-40\">\n                <div class=\"accordion accordion-style-two\" id=\"accordionTwo\">\n                    <div class=\"accordion-item\" v-for=\"(item, index) in faqs\" :key=\"index\">\n                        <div class=\"accordion-header\" :id=\"`Fheading${index}F`\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                                :data-bs-target=\"`#Fcollapse${index}`\" aria-expanded=\"false\"\n                                :aria-controls=\"`Fcollapse${index}`\">\n                                {{ item.title }}\n                            </button>\n                        </div>\n                        <div :id=\"`Fcollapse${index}`\" class=\"accordion-collapse collapse\"\n                            :aria-labelledby=\"`Fheading${index}`\" :data-bs-parent=\"`#accordionTwo`\">\n                            <div class=\"accordion-body\">\n                                <p>{{ item.excerpt?.value }}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div> <!-- /.accordion-style-two -->\n            </div>\n            <!-- ./bg-wrapper -->\n            <div class=\"text-center mt-50 sm-mt-40 wow fadeInUp\">\n                <div class=\"btn-eight fw-500\">\n                    {{ trans('Don’t find the answer? We can help.') }}\n                    <Link href=\"/faq\">{{ trans('Click here') }}</Link>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>","<script setup>\nimport sharedComposable from \"@/Composables/sharedComposable\";\nimport { useForm } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nconst { formatNumber, textExcerpt } = sharedComposable();\ndefineProps({\n  items: {\n    type: Object,\n    default: [],\n  },\n});\n\nconst toggleBookmark = (job) => {\n  let form = useForm({});\n  form.post(route(\"jobs.bookmark\", job), {\n    preserveScroll: true,\n    onSuccess: () => {},\n  });\n};\n</script>\n<template>\n  <div\n    v-for=\"job in items\"\n    :key=\"job.id\"\n    class=\"mb-20 job-list-one style-two position-relative border-style\"\n    :class=\"{ favourite: job.featured_expire_at }\"\n  >\n    <div class=\"row justify-content-between align-items-center\">\n      <div class=\"col-md-5\">\n        <div class=\"job-title d-flex align-items-center\">\n          <Link :href=\"route('jobs.show', job.slug)\" class=\"logo\">\n            <img\n              v-lazy=\"\n                job.user?.avatar == null\n                  ? `https://ui-avatars.com/api/?name=${job.user.name}&rounded=true&background=random&color=#fff`\n                  : `${job.user?.avatar}`\n              \"\n              alt=\"avatar\"\n              class=\"m-auto candidate-avatar-rounded\"\n            />\n          </Link>\n          <div class=\"split-box1\">\n            <Link :href=\"route('jobs.show', job.slug)\" class=\"job-duration fw-500\">\n              {{ job.type }}\n            </Link>\n            <Link :href=\"route('jobs.show', job.slug)\" class=\"title fw-500 tran3s\">\n              {{ textExcerpt(job.title, 50) }}</Link\n            >\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-4 col-sm-6\">\n        <div class=\"job-location\" v-if=\"!job.country?.[0]?.name\">\n          {{ trans(\"Remote\") }}\n        </div>\n        <div class=\"job-location\" v-else>\n          <Link :href=\"route('jobs.show', job.slug)\">\n            {{ job.country?.[0]?.name }}, {{ job.state?.[0]?.name }}</Link\n          >\n        </div>\n        <div class=\"job-salary\">\n          <span\n            class=\"fw-500 text-dark\"\n            v-if=\"\n              job.salary_range &&\n              job.salary_range.split('-')[0] > 0 &&\n              job.salary_range.split('-')[1] > 0\n            \"\n          >\n            {{ formatNumber(job.salary_range.split(\"-\")[0], 0) }}\n            -\n            {{ formatNumber(job.salary_range.split(\"-\")[1], 0) }}\n          </span>\n          <span class=\"fw-500 text-dark\" v-else>{{ trans(\"Negotiable \") }}</span>\n          / {{ job.salary_type }} .\n          {{ job.experience }}\n        </div>\n      </div>\n      <div class=\"col-md-3 col-sm-6\">\n        <div class=\"btn-group d-flex align-items-center justify-content-sm-end xs-mt-20\">\n          <button\n            type=\"button\"\n            @click=\"toggleBookmark(job)\"\n            class=\"text-center save-btn rounded-circle tran3s me-3\"\n            :class=\"{ 'bg-success': job.is_bookmarked }\"\n            title=\"Save Job\"\n          >\n            <i class=\"bi bi-bookmark-dash\"></i>\n          </button>\n          <Link :href=\"route('jobs.show', job.slug)\" class=\"text-center apply-btn tran3s\">\n            {{ trans(\"Details\") }}\n          </Link>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { onMounted, ref } from \"vue\"\nimport homeApiService from \"@/Composables/homeApiService\"\nimport JobsItemList from \"@/Components/Job/JobsItemList.vue\"\nimport { Link } from \"@inertiajs/vue3\"\n\nconst jobs = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get(\"jobList\").then((res) => {\n    jobs.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"job-listing-one mt-180 xl-mt-150 lg-mt-100\" v-if=\"jobs.length > 0\">\n    <div class=\"container\">\n      <div class=\"row justify-content-between align-items-center\">\n        <div class=\"col-lg-6\">\n          <div class=\"title-one\">\n            <h2 class=\"text-dark\">{{ trans(\"New job listing\") }}</h2>\n          </div>\n        </div>\n        <div class=\"col-lg-5\">\n          <div class=\"d-flex justify-content-lg-end\">\n            <Link href=\"/jobs\" class=\"btn-six d-none d-lg-inline-block\">{{\n              trans(\"Explore all jobs\")\n            }}</Link>\n          </div>\n        </div>\n      </div>\n\n      <div\n        class=\"job-listing-wrapper border-wrapper lg-mt-40 wow fadeInUp mt-80\"\n      >\n        <JobsItemList :items=\"jobs\" />\n      </div>\n      <!-- /.job-listing-wrapper -->\n\n      <div class=\"d-lg-none mt-40 text-center\">\n        <Link href=\"/jobs\" class=\"btn-six\">{{\n          trans(\"Explore all jobs\")\n        }}</Link>\n      </div>\n\n      <div class=\"lg-mt-30 wow fadeInUp mt-80 text-center\">\n        <div class=\"btn-eight fw-500\">\n          {{ trans(\"Do you want to post a job for your company?\") }}\n          <span>{{ trans(\"We can help.\") }}</span>\n          <a href=\"/register\">{{ trans(\"Click here\") }}</a>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport CategorySection from '@/Pages/Web/Home/Four/Partials/CategorySection.vue'\nimport FeatureSection from '@/Pages/Web/Home/Four/Partials/FeatureSection.vue'\nimport BannerSection from '@/Pages/Web/Home/Four/Partials/BannerSection.vue'\nimport BannerSection2 from '@/Pages/Web/Home/Four/Partials/BannerSection2.vue'\nimport FeedbackSection from '@/Pages/Web/Home/Four/Partials/FeedbackSection.vue'\nimport JobIntroSection from '@/Pages/Web/Home/Four/Partials/JobIntroSection.vue'\nimport FaqSection from '@/Pages/Web/Home/Four/Partials/FaqSection.vue'\nimport JobListSection from '@/Pages/Web/Home/Four/Partials/JobListSection.vue'\n\ndefineOptions({ layout: DefaultLayout })\n\ndefineProps(['home', 'seo'])\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <BannerSection :home=\"home\" />\n  <CategorySection />\n  <BannerSection2 :home=\"home\" />\n  <JobListSection />\n  <FeedbackSection />\n  <FeatureSection :home=\"home\" />\n  <FaqSection />\n  <JobIntroSection />\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nconst blogs = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('blogs').then((res) => {\n    blogs.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"blog-section-one\">\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"title-one mb-30 lg-mb-10\">\n          <h2>{{ $page.props.app_name }} {{ trans('Guides') }}</h2>\n        </div>\n\n        <div class=\"row gx-xxl-5\">\n          <div v-for=\"(blog, index) in blogs\" :key=\"index\" class=\"col-lg-4 col-md-6\">\n            <article class=\"blog-meta-one mt-35 wow fadeInUp\">\n              <figure class=\"post-img m0\">\n                <Link :href=\"route('blogs.show', blog)\" class=\"w-100 d-block\">\n                  <img v-lazy=\"blog.preview?.value\" alt=\"\" class=\"lazy-img w-100 tran4s\" />\n                </Link>\n              </figure>\n              <div class=\"post-data mt-30 lg-mt-20\">\n                <ul class=\"tags style-none d-flex\">\n                  <li\n                    class=\"me-1\"\n                    v-for=\"(item, index) in blog.categories.slice(0, 3)\"\n                    :key=\"index\"\n                  >\n                    <a href=\"#\"> {{ item.title }}</a>\n                  </li>\n                </ul>\n                <Link :href=\"route('blogs.show', blog)\" class=\"mb-10 mt-10\">\n                  <h4 class=\"tran3s blog-title\">\n                    {{ blog.title }}\n                  </h4>\n                </Link>\n              </div>\n            </article>\n            <!-- /.blog-meta-one -->\n          </div>\n        </div>\n\n        <div class=\"explore-btn sm-mt-30 text-center\">\n          <Link :href=\"route('blogs.index')\" class=\"btn-one\">{{ trans('Explore More') }}</Link>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\ndefineProps(['home'])\n\nconst brands = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('brands').then((res) => {\n    brands.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section\n    class=\"text-feature-two position-relative pt-180 xl-pt-150 lg-pt-100 pb-180 xl-pb-150 lg-pb-120\"\n  >\n    <div class=\"container\">\n      <div class=\"row align-items-center\">\n        <div class=\"col-lg-5 order-lg-last\">\n          <div class=\"wow fadeInRight\">\n            <div class=\"title-one\">\n              <div class=\"sub-title\">{{ home.cta_s2.top_title }}</div>\n              <h2>{{ home.cta_s2.title }}</h2>\n            </div>\n            <p class=\"lg-mt-20 lg-mb-30 mb-40 mt-40 text-lg\">\n              {{ home.cta_s2.subtitle }}\n            </p>\n            <a :href=\"home.cta_s2.btn_link\" class=\"btn-nine tran3s d-flex align-items-center\">\n              <span class=\"fw-500 me-2\">{{ home.cta_s2.btn_text }}</span>\n              <i class=\"bi bi-arrow-right\"></i>\n            </a>\n          </div>\n        </div>\n        <div class=\"col-lg-7 order-lg-first\">\n          <div\n            class=\"big-circle rounded-circle position-relative d-flex align-items-center justify-content-center ms-lg-5 wow fadeInLeft\"\n          >\n            <div\n              class=\"inner-circle rounded-circle d-flex align-items-center justify-content-center\"\n            >\n              <img v-lazy=\"home.cta_s2.image1\" alt=\"\" class=\"lazy-img\" />\n            </div>\n            <!-- /.inner-circle -->\n            <div\n              class=\"brand-icon icon_01 rounded-circle d-flex align-items-center justify-content-center\"\n            >\n              <img v-lazy=\"home.cta_s2.image2\" alt=\"\" class=\"lazy-img\" />\n            </div>\n            <div\n              class=\"brand-icon icon_02 rounded-circle d-flex align-items-center justify-content-center\"\n            >\n              <img v-lazy=\"home.cta_s2.image3\" alt=\"\" class=\"lazy-img\" />\n            </div>\n            <div\n              class=\"brand-icon icon_03 rounded-circle d-flex align-items-center justify-content-center\"\n            >\n              <img v-lazy=\"home.cta_s2.image4\" alt=\"\" class=\"lazy-img\" />\n            </div>\n            <div\n              class=\"brand-icon icon_04 rounded-circle d-flex align-items-center justify-content-center\"\n            >\n              <img v-lazy=\"home.cta_s2.image5\" alt=\"\" class=\"lazy-img\" />\n            </div>\n            <div\n              class=\"brand-icon icon_05 rounded-circle d-flex align-items-center justify-content-center\"\n            >\n              <img v-lazy=\"home.cta_s2.image6\" alt=\"\" class=\"lazy-img\" />\n            </div>\n            <img src=\"/assets/images/shape/shape_10.svg\" class=\"lazy-img shapes shape_01\" />\n          </div>\n          <!-- /.big-circle -->\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { Swiper, SwiperSlide } from 'swiper/vue'\nimport { Navigation } from 'swiper'\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nimport 'swiper/css'\nimport 'swiper/css/navigation'\nimport { Link } from '@inertiajs/vue3'\n\nconst navigationOptions = {\n  nextEl: '.prev_a',\n  prevEl: '.next_a'\n}\n\nconst breakpoints = {\n  1024: {\n    slidesPerView: 4,\n    spaceBetween: 10\n  },\n  768: {\n    slidesPerView: 2,\n    spaceBetween: 10\n  }\n}\n\nconst modules = [Navigation]\nconst items = ref([])\nconst loading = ref(true)\n\nonMounted(() => {\n  homeApiService.get('experts').then((res) => {\n    items.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"expert-section-one position-relative mt-180 xl-mt-150 lg-mt-100\" v-if=\"items.length > 0\">\n    <div class=\"position-relative container\">\n      <div class=\"row\">\n        <div class=\"col-md-7\">\n          <div class=\"title-one text-md-start mb-65 md-mb-50 text-center\">\n            <h2>\n              {{ trans('Find the best') }}\n              <span class=\"position-relative\"\n                >{{ trans('talented') }}\n                <img src=\"/assets/images/shape/shape_04.svg\" alt=\"\" class=\"lazy-img shapes shape\"\n              /></span>\n              {{ trans('expert in') }} {{ $page.props.app_name }}.\n            </h2>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"\">\n        <Swiper :breakpoints=\"breakpoints\" :modules=\"modules\" :navigation=\"navigationOptions\">\n          <SwiperSlide v-for=\"(item, index) in items\" :key=\"index\" class=\"item\">\n            <div class=\"card-style-three text-center\">\n              <div class=\"img-meta lg-mb-20 mb-40\">\n                <Link\n                  :href=\"route('candidates.show', item.username)\"\n                  class=\"name text-md fw-500 text-dark\"\n                >\n                  <img v-lazy=\"item.avatar\" alt=\"\" class=\"expertSectionImg m-auto\" />\n                </Link>\n              </div>\n              <Link\n                :href=\"route('candidates.show', item.username)\"\n                class=\"name text-md fw-500 text-dark\"\n                >{{ item.name }}\n              </Link>\n              <div class=\"post\">{{ item.designation }}</div>\n            </div>\n          </SwiperSlide>\n        </Swiper>\n      </div>\n\n      <ul\n        v-show=\"items?.length > 4\"\n        class=\"slider-arrows slick-arrow-one d-flex justify-content-center style-none sm-mt-30\"\n      >\n        <li class=\"next_a slick-arrow\">\n          <i class=\"bi bi-arrow-left\"></i>\n        </li>\n        <li class=\"prev_a slick-arrow\">\n          <i class=\"bi bi-arrow-right\"></i>\n        </li>\n      </ul>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\nimport { Link } from '@inertiajs/vue3'\nimport sharedComposable from '@/Composables/sharedComposable'\nconst { formatNumber } = sharedComposable()\nconst props = defineProps(['home'])\n\nconst categories = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('featuredCategories').then((res) => {\n    categories.value = res\n    loading.value = false\n  })\n})\n\nconst category_section_title = props.home.category_section.title\nconst category_section_titles = category_section_title.split(' ')\n</script>\n\n<template>\n  <section\n    class=\"category-section-one bg-color position-relative pt-180 xl-pt-150 lg-pt-80 pb-140 xl-pb-120 lg-pb-60\"\n  >\n    <div class=\"container\">\n      <div class=\"row justify-content-between align-items-center\">\n        <div class=\"col-lg-6\">\n          <div class=\"title-one\">\n            <h2>\n              <template\n                v-for=\"(category_section_title, index) in category_section_titles\"\n                :key=\"index\"\n              >\n                <template v-if=\"index == 1\">\n                  <span class=\"position-relative\">\n                    {{ category_section_title }}\n                    <img\n                      src=\"/assets/images/shape/shape_04.svg\"\n                      alt=\"\"\n                      class=\"lazy-img shapes shape\"\n                    />\n                  </span>\n                </template>\n\n                <template v-else>\n                  {{ category_section_title + '&nbsp;' }}\n                </template>\n              </template>\n            </h2>\n          </div>\n        </div>\n        <div class=\"col-xxl-5 col-lg-6\">\n          <p class=\"text-md mb-25 lg-mb-10 md-mt-20\">\n            {{ home.category_section.title_right }}\n          </p>\n          <Link :href=\"home.category_section.btn_link\" class=\"btn-two d-none d-lg-inline-block\">\n            {{ home.category_section.btn_text }}\n          </Link>\n        </div>\n      </div>\n      <div class=\"card-wrapper row justify-content-center mt-75 lg-mt-40 md-mt-10\">\n        <div v-if=\"loading\" class=\"d-flex gap-3\">\n          <div class=\"skeleton p-3\" v-for=\"item in 6\" :key=\"item\">\n            <div class=\"skeleton-line mt-25 w-25 b-radius-30 mx-auto py-3\"></div>\n            <div class=\"skeleton-line w-75 mx-auto mt-40 py-2\"></div>\n            <div class=\"skeleton-line mt-50 mb-20\"></div>\n          </div>\n        </div>\n        <template v-else>\n          <div\n            v-for=\"(category, index) in categories\"\n            :key=\"index\"\n            class=\"card-style-one mt-20 text-center\"\n          >\n            <Link :href=\"route('job-categories.show', category.slug)\" class=\"bg wrapper\">\n              <div class=\"icon d-flex align-items-center justify-content-center\">\n                <img :src=\"category.preview\" />\n              </div>\n              <div class=\"title fw-500\">{{ category.title }}</div>\n              <div class=\"total-job\">\n                {{ formatNumber(category.jobs_count, 0) }} {{ trans('Jobs') }}\n              </div>\n            </Link>\n          </div>\n        </template>\n      </div>\n\n      <!-- /.card-wrapper -->\n      <div class=\"d-lg-none mt-40 text-center\">\n        <Link href=\"/jobs\" class=\"btn-two\">{{ trans('Explore all fields') }}</Link>\n      </div>\n    </div>\n    <img src=\"/assets/images/shape/shape_05.svg\" alt=\"\" class=\"lazy-img shapes shape_01\" />\n  </section>\n</template>\n","import { defineStore } from 'pinia'\nimport axios from 'axios'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport { router, useForm } from '@inertiajs/vue3'\nimport notify from '@/Plugins/Admin/notify'\nimport trans from '@/Composables/transComposable'\nconst { pickBy, getQueryParams } = sharedComposable()\n\nexport const useJobFiltersStore = defineStore({\n  id: 'jobFilterFormStore',\n  state: () => ({\n    layout: null,\n    sorts: [\n      { name: 'Latest', value: 'created_at', order: 'desc' },\n      { name: 'Oldest', value: 'created_at', order: 'asc' }\n    ],\n    minMaxSalary: 0,\n    initialMaxSalary: 0,\n    loading: {\n      states: false,\n      categories: false,\n      skills: false\n    },\n\n    states: [],\n    locations: [],\n    currencies: [],\n\n    jobTypes: [],\n    JobExperiences: [],\n\n    services: [],\n    categories: [],\n    skills: [],\n\n    filterForm: {\n      keyword: '',\n      country: '',\n      state: '',\n      is_remote: null,\n      job_type: '',\n      experience: '',\n      service: '',\n      category: '',\n      skills: [],\n      min_salary: 0,\n      max_salary: 0,\n      salary_type: '',\n      status: '',\n      currency: '',\n      order: ''\n    }\n  }),\n  actions: {\n    updateInitialState(props) {\n      this.services = props.services\n      this.categories = props.categories\n      this.locations = props.locations\n      this.jobTypes = props.jobTypes\n      this.JobExperiences = props.JobExperiences\n      this.currencies = props.currencies\n      this.initialMaxSalary = props.maxSalary\n      this.minMaxSalary = props.maxSalary - Math.round((10 / 100) * props.maxSalary)\n      // request\n      const request = props.request\n      this.filterForm.keyword = request?.keyword ?? ''\n      this.filterForm.is_remote = request.is_remote ? Boolean(request?.is_remote) : null\n      this.filterForm.status = request?.status ?? ''\n      this.filterForm.currency = request?.currency ?? ''\n      this.filterForm.order = request?.order ?? ''\n      this.filterForm.job_type = request?.job_type ?? ''\n      this.filterForm.experience = request?.experience ?? ''\n      this.filterForm.min_salary = request?.min_salary ?? 0\n      this.filterForm.max_salary = request?.max_salary ?? props.maxSalary\n      this.filterForm.country = request?.country ? +request?.country : ''\n      this.filterForm.category = !this.filterForm.service ? request?.category : ''\n      if (this.filterForm.country) {\n        this.getStates()\n        if (!this.filterForm.state) {\n          this.filterForm.state = +request?.state ?? ''\n        }\n      }\n      this.filterForm.service = request?.service ?? ''\n      if (this.filterForm.service) {\n        this.getCategories()\n        this.filterForm.category = request?.category ?? ''\n        if (this.filterForm.category) {\n          this.getSkills()\n          this.filterForm.skills = request?.skills ? request?.skills.map((s) => +s) : []\n        }\n      }\n    },\n    getStates() {\n      this.states = []\n\n      if (this.filterForm.country) {\n        this.loading.states = true\n\n        this.filterForm.state = ''\n        axios.get(`/api/locations?location_id=${this.filterForm.country}`).then((res) => {\n          this.states = res.data\n          this.loading.states = false\n        })\n      }\n    },\n    getCategories() {\n      if (this.filterForm.service) {\n        this.loading.categories = true\n        this.filterForm.category = ''\n        this.categories = []\n        axios\n          .get(`/api/categories?with=jobs_count&service_slug=${this.filterForm.service}`)\n          .then((res) => {\n            this.categories = res.data\n            this.loading.categories = false\n          })\n      }\n    },\n    getSkills() {\n      if (this.filterForm.category) {\n        this.filterForm.skills = []\n        this.skills = []\n        this.loading.skills = true\n        axios.get(`/api/categories?category_slug=${this.filterForm.category}`).then((res) => {\n          this.skills = res.data\n          this.loading.skills = false\n        })\n      }\n    },\n    setCategory(cat) {\n      this.filterForm.category = cat\n      this.getSkills()\n    },\n    setExperience(value) {\n      if (this.filterForm.experience && this.filterForm.experience === value) {\n        this.filterForm.experience = ''\n      } else {\n        this.filterForm.experience = value\n      }\n    },\n    setRemote(value) {\n      this.filterForm.state = ''\n      this.filterForm.country = ''\n      if (this.filterForm.is_remote && this.filterForm.is_remote === value) {\n        this.filterForm.is_remote = null\n      } else {\n        this.filterForm.is_remote = true\n      }\n    },\n    setType(value) {\n      if (this.filterForm.job_type && this.filterForm.job_type === value) {\n        this.filterForm.job_type = ''\n      } else {\n        this.filterForm.job_type = value\n      }\n    },\n    setSkill(id) {\n      const tagIndex = this.filterForm.skills.indexOf(id)\n\n      if (tagIndex !== -1) {\n        this.filterForm.skills.splice(tagIndex, 1)\n      } else {\n        this.filterForm.skills.push(parseInt(id))\n      }\n    },\n    submit() {\n      if (this.filterForm.max_salary < 1 || this.initialMaxSalary === this.filterForm.max_salary) {\n        this.filterForm.max_salary = null\n        this.filterForm.min_salary = null\n      }\n      const queryParams = Object.fromEntries(new URLSearchParams(window.location.search))\n      const updatedQueryParams = { v: queryParams?.v, type: queryParams?.type, ...this.filterForm }\n\n      router.get(route('jobs.index'), pickBy(updatedQueryParams), {\n        preserveState: true,\n        preserveScroll: true,\n        replace: true\n      })\n\n      if (this.filterForm.max_salary < 1 || this.initialMaxSalary === this.filterForm.max_salary) {\n        this.filterForm.min_salary = 0\n        this.filterForm.max_salary = this.initialMaxSalary\n      }\n    },\n\n    setLayout(layout) {\n      this.layout = layout\n    },\n\n    toggleBookmark(job) {\n      let form = useForm({})\n      form.post(route('jobs.bookmark', job), {\n        preserveScroll: true,\n        onSuccess: () => {\n          notify.success(trans('Job has been saved successfully'))\n        }\n      })\n    },\n    clear() {\n      const request = getQueryParams()\n      const layout = this.layout\n      const modal = document.getElementById('filterPopUp')\n      const backdrop = document.querySelector('.modal-backdrop')\n      this.$reset()\n      const filter = {\n        type: request.type ?? '',\n        v: request.v ?? ''\n      }\n      router.get(route('jobs.index', pickBy(filter)))\n      this.layout = layout\n      if (modal && modal.classList.contains('show') && backdrop) {\n        modal.classList.remove('show')\n        document.body.removeChild(backdrop)\n        document.body.style = ''\n      }\n    }\n  }\n})\n","<script setup>\nimport homeApiService from '@/Composables/homeApiService'\nimport LabelWithAjaxLoader from '@/Components/LabelWithAjaxLoader.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport { useJobFiltersStore } from '@/Store/jobFilterStore'\n\nconst filter = useJobFiltersStore()\nhomeApiService.get('services').then((res) => {\n  filter.services = res\n})\n\n</script>\n\n<template>\n  <form @submit.prevent=\"filter.submit('clear')\">\n    <div class=\"row\">\n      <div class=\"col-md-5\">\n        <div class=\"input-box\">\n          <div class=\"label\">{{ trans('What are you looking for?') }}</div>\n          <NiceSelect v-model=\"filter.filterForm.service\" :options=\"filter.services\" value-by=\"slug\" label=\"title\"\n            placeholder=\"Select Service\" @change=\"filter.getCategories\" />\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"input-box border-left\">\n          <LabelWithAjaxLoader class=\"label\" :text=\"trans('Category')\" :loading=\"filter.loading.categories\" />\n          <NiceSelect v-model=\"filter.filterForm.category\" :options=\"filter.categories\" label=\"title\" value-by=\"slug\"\n            placeholder=\"Select Category\" @change=\"() => filter.setCategory(filter.filterForm.category)\" />\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n        <button type=\"submit\" class=\"fw-500 text-uppercase h-100 tran3s search-btn\" :disabled=\"filter.loading.categories\">\n          {{ trans('Search') }}\n        </button>\n      </div>\n    </div>\n  </form>\n</template>\n","<script setup>\nimport { onMounted, ref } from \"vue\";\nimport homeApiService from \"@/Composables/homeApiService\";\nimport { Link } from \"@inertiajs/vue3\";\nimport JobSearchForm from \"@/Components/JobSearchForm.vue\";\n\ndefineProps([\"home\"]);\nconst popularCategories = ref([]);\n\nonMounted(async () => {\n  homeApiService.get(\"popularCategories\").then((res) => {\n    popularCategories.value = res;\n  });\n});\n</script>\n\n<template>\n  <div class=\"hero-banner-one position-relative\">\n    <div class=\"container\">\n      <div class=\"position-relative pt-200 md-pt-150 pb-150 xl-pb-120 md-pb-80\">\n        <div class=\"row\">\n          <div class=\"col-lg-6\">\n            <h1 v-html=\"home?.hero?.title\"></h1>\n            <p class=\"md-mt-30 mb-50 md-mb-30 mt-40 text-lg text-white\">\n              {{ home.hero.subtitle }}\n            </p>\n          </div>\n        </div>\n        <div class=\"position-relative\">\n          <div class=\"row\">\n            <div class=\"col-xl-9 col-lg-8\">\n              <div class=\"job-search-one position-relative me-xl-5\">\n                <JobSearchForm />\n                <ul class=\"tags d-flex style-none mt-20 flex-wrap\">\n                  <li class=\"fw-500 me-2 text-white\">{{ trans(\"Popular\") }}:</li>\n                  <li\n                    v-for=\"(item, index) in popularCategories\"\n                    :key=\"index\"\n                    class=\"me-2\"\n                  >\n                    <Link :href=\"route('job-categories.show', item.slug)\">{{\n                      item.title\n                    }}</Link>\n                  </li>\n                </ul>\n              </div>\n              <!-- /.job-search-one -->\n            </div>\n          </div>\n        </div>\n\n        <div class=\"img-box\">\n          <img src=\"/assets/images/shape/shape_01.svg\" alt=\"\" class=\"lazy-img shapes\" />\n          <img :src=\"home.hero.image\" alt=\"\" class=\"lazy-img w-100\" />\n        </div>\n        <!-- /.img-box -->\n      </div>\n    </div>\n    <img\n      src=\"/assets/images/shape/shape_02.svg\"\n      alt=\"\"\n      class=\"lazy-img shapes shape_01\"\n    />\n    <img\n      src=\"/assets/images/shape/shape_03.svg\"\n      alt=\"\"\n      class=\"lazy-img shapes shape_02\"\n    />\n  </div>\n</template>\n","<script setup>\nimport { Head, usePage } from \"@inertiajs/vue3\";\nconst metaData = usePage().props?.seo ?? [];\nconst site_name = metaData?.title || metaData?.site_name || \"\";\nconst current_url = metaData?.current_url ?? window.location.href;\nconst tags = metaData?.tags || \"\";\nconst description = metaData?.description || \"\";\nconst preview = metaData?.preview || \"\";\n</script>\n\n<template>\n  <Head>\n    <title>{{ site_name }}</title>\n    <meta name=\"description\" itemprop=\"description\" :content=\"description\" />\n    <meta name=\"keywords\" :content=\"tags\" />\n    <meta property=\"og:description\" :content=\"description\" />\n    <meta property=\"og:title\" :content=\"site_name\" />\n    <meta property=\"og:url\" :content=\"current_url\" />\n\n    <meta property=\"og:site_name\" :content=\"site_name\" />\n    <meta property=\"og:image\" :content=\"preview\" />\n    <meta property=\"og:image:url\" :content=\"preview\" />\n\n    <meta name=\"twitter:card\" :content=\"description\" />\n    <meta name=\"twitter:title\" :content=\"site_name\" />\n  </Head>\n</template>\n","<script setup>\nimport DefaultLayout from \"@/Layouts/Default.vue\";\nimport JobIntro from \"@/Pages/Web/Home/Common/JobIntroSection.vue\";\nimport BlogSection from \"@/Pages/Web/Home/One/Partials/BlogSection.vue\";\nimport BrandSection from \"@/Pages/Web/Home/One/Partials/BrandSection.vue\";\nimport ExpertSection from \"@/Pages/Web/Home/One/Partials/ExpertSection.vue\";\nimport CategorySection from \"@/Pages/Web/Home/One/Partials/CategorySection.vue\";\nimport FeedbackSection from \"@/Pages/Web/Home/One/Partials/FeedbackSection.vue\";\nimport BannerSection from \"@/Pages/Web/Home/One/Partials/BannerSection.vue\";\nimport FeatureSection from \"@/Pages/Web/Home/One/Partials/FeatureSection.vue\";\nimport FeatureSection2 from \"@/Pages/Web/Home/One/Partials/FeatureSection2.vue\";\nimport BannerSection2 from \"@/Pages/Web/Home/One/Partials/BannerSection2.vue\";\nimport Seo from \"@/Components/Seo.vue\";\n\ndefineOptions({ layout: DefaultLayout });\ndefineProps([\"home\", \"seo\"]);\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <BannerSection :home=\"home\" />\n  <CategorySection :home=\"home\" />\n  <FeatureSection2 :home=\"home\" />\n  <FeatureSection />\n  <ExpertSection />\n  <FeedbackSection />\n  <BrandSection :home=\"home\" />\n  <BlogSection />\n  <BannerSection2 :home=\"home\" />\n  <JobIntro />\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\nimport { Link, useForm } from '@inertiajs/vue3'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\n\nconst { pickBy } = sharedComposable()\n\ndefineProps(['home'])\n\nconst services = ref([])\nconst popularServices = ref([])\nconst loading = ref(true)\n\nconst form = useForm({\n  service: '',\n  keyword: ''\n})\n\nonMounted(async () => {\n  homeApiService\n    .get('services')\n    .then((res) => {\n      services.value = res\n    })\n\n  homeApiService.get('featuredServices').then((res) => {\n    popularServices.value = res\n  })\n\n})\n\nconst formSubmit = () => {\n  form.transform(data => pickBy(data)).get(route('jobs.index'))\n}\n</script>\n\n<template>\n  <div class=\"hero-banner-seven position-relative pt-200 lg-pt-150 pb-110 md-pb-40\">\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"row\">\n          <div class=\"m-auto text-center col-xl-7 col-lg-8\">\n            <h1>{{ home.hero.title }}</h1>\n            <p class=\"mb-40 text-md mt-25\">\n              {{ home.hero.subtitle }}\n            </p>\n          </div>\n        </div>\n        <div class=\"position-relative\">\n          <div class=\"row\">\n            <div class=\"m-auto col-xxl-7 col-lg-8 col-md-11\">\n              <div class=\"job-search-one style-two border-style position-relative\">\n                <form @submit.prevent=\"formSubmit\">\n                  <div class=\"row align-items-center\">\n                    <div class=\"col-md-5\">\n                      <div class=\"input-box\">\n                        <div class=\"label\">{{ trans('Job Services') }}</div>\n                        <NiceSelect :options=\"services\" label=\"title\" value-by=\"slug\"\n                          :placeholder=\"trans('Select Category')\" v-model=\"form.service\" />\n                      </div>\n                    </div>\n                    <div class=\"col-md-4\">\n                      <div class=\"input-box border-left\">\n                        <div class=\"label\">{{ trans('Keywords or Title') }}</div>\n                        <input v-model=\"form.keyword\" type=\"text\" placeholder=\"Design, branding\" class=\"keyword\"\n                           />\n                      </div>\n                    </div>\n                    <div class=\"col-md-3 sm-mb-10 sm-mt-10\">\n                      <button class=\"m-auto text-uppercase btn-five border6 tran3s\">\n                        {{ trans('Search') }}\n                      </button>\n                    </div>\n                  </div>\n                </form>\n                <ul class=\"flex-wrap filter-tags d-flex justify-content-center style-none mt-25 lg-mt-20\">\n                  <li class=\"fw-500 text-dark me-2\">{{ trans('Popular') }}:</li>\n                  <li v-for=\"(item, index) in popularServices\" :key=\"index\" class=\"me-2\">\n                    <Link :href=\"route('job-services.show', item.slug)\">{{\n                      item.title\n                    }}</Link>\n                  </li>\n                </ul>\n              </div>\n              <!-- /.job-search-one -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <img v-lazy=\"home.hero.image1\" alt=\"image\" class=\"lazy-img shapes screen01\" />\n    <img v-lazy=\"home.hero.image2\" alt=\"image\" class=\"lazy-img shapes screen02\" />\n  </div>\n</template>\n","<script setup>\nimport { Swiper, SwiperSlide } from 'swiper/vue'\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\nimport 'swiper/css'\n\nconst brands = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('brands').then((res) => {\n    brands.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <div class=\"partner-logos pt-45 pb-45 border-0 pe-3 ps-3\">\n    <Swiper :slides-per-view=\"6\" :space-between=\"20\">\n      <SwiperSlide class=\"item\" v-for=\"(item, index) in brands\" :key=\"index\">\n        <img class=\"mx-auto\" v-lazy=\"item.preview\" alt=\"preview\" />\n      </SwiperSlide>\n    </Swiper>\n  </div>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nconst categories = ref([])\nconst totalJobsCount = ref(0)\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('featuredCategories').then((res) => {\n    categories.value = res\n    loading.value = false\n  })\n\n  homeApiService.get('totalJobsCount').then((res) => {\n    totalJobsCount.value = res\n  })\n})\n</script>\n\n<template>\n  <section\n    class=\"category-section-two bg-color position-relative mt-45 md-mt-10 pt-150 xl-pt-130 lg-pt-80 pb-170 xl-pb-130 lg-pb-70\"\n  >\n    <div class=\"container\">\n      <div class=\"row justify-content-between\">\n        <div class=\"col-sm-8\">\n          <div class=\"title-three\">\n            <h2 class=\"main-font\">{{ trans('Most Demanding Categories.') }}</h2>\n          </div>\n        </div>\n        <div class=\"col-sm-4\">\n          <div class=\"d-none d-sm-flex justify-content-sm-end mt-15\">\n            <Link href=\"/jobs\" class=\"btn-six\">{{ trans('All Categories') }}</Link>\n          </div>\n        </div>\n      </div>\n      <div class=\"card-wrapper row lg-mt-20 mt-80\" v-show=\"categories.length\">\n        <div\n          v-for=\"(item, index) in categories\"\n          :key=\"index\"\n          class=\"col-lg-3 col-md-4 col-sm-6 d-flex\"\n        >\n          <div class=\"card-style-four tran3s w-100 mt-30 wow fadeInUp\">\n            <Link :href=\"route('job-categories.show', item.slug)\" class=\"d-block\">\n              <div class=\"icon tran3s d-flex align-items-center justify-content-center\">\n                <img v-lazy=\"item.preview\" alt=\"preview\" class=\"lazy-img\" />\n              </div>\n              <div class=\"title tran3s fw-500 text-lg\">{{ item.title }}</div>\n              <div class=\"total-job\">{{ item.jobs_count }} {{ trans('jobs') }}</div>\n            </Link>\n          </div>\n          <!-- /.card-style-four -->\n        </div>\n        <div class=\"col-lg-3 col-md-4 col-sm-6 d-flex\">\n          <div\n            class=\"card-style-four bg-color tran3s w-100 mt-30 wow fadeInUp\"\n            data-wow-delay=\"0.1s\"\n          >\n            <Link :href=\"route('jobs.index')\" class=\"d-block\">\n              <div class=\"title text-white\">{{ totalJobsCount }} +</div>\n              <div class=\"text-lg text-white\">{{ trans('Job already posted') }}</div>\n              <div class=\"d-flex align-items-center justify-content-end mt-50\">\n                <img v-lazy=\"'/assets/images/shape/shape_22.svg'\" alt=\"image\" class=\"lazy-img\" />\n                <div class=\"icon tran3s d-flex align-items-center justify-content-center ms-5\">\n                  <img v-lazy=\"'/assets/images/icon/icon_19.svg'\" alt=\"image\" class=\"lazy-img\" />\n                </div>\n              </div>\n            </Link>\n          </div>\n          <!-- /.card-style-four -->\n        </div>\n      </div>\n      <!-- /.card-wrapper -->\n      <div class=\"d-sm-none mt-50 text-center\">\n        <a href=\"/jobs\" class=\"btn-six\">{{ trans('All Categories') }}</a>\n      </div>\n    </div>\n    <img src=\"/assets/images/shape/shape_24.svg\" alt=\"\" class=\"lazy-img shapes shape_01\" />\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nconst features = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('features').then((res) => {\n    features.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"how-it-works-two position-relative pt-130 lg-pt-80\">\n    <div class=\"container\">\n      <div class=\"title-one mb-70 lg-mb-30 text-center\">\n        <h2 class=\"main-font\">{{ trans(\"Our Core Values?\") }}</h2>\n      </div>\n\n      <div class=\"border-bottom\">\n        <div class=\"row justify-content-center\">\n          <div class=\"col-lg-4 col-md-6\" v-for=\"(item, index) in features\" :key=\"index\">\n            <div\n              class=\"card-style-five position-relative mt-25 pb-70 lg-pb-20 wow fadeInUp text-center\"\n            >\n              <div\n                class=\"icon rounded-circle d-flex align-items-center justify-content-center m-auto\"\n              >\n                <img v-lazy=\"item.preview\" alt=\"preview\" class=\"w-50\" />\n              </div>\n              <div class=\"title fw-500 text-dark mt-25 lg-mt-20 mb-10 text-lg\">\n                {{ item.title }}\n              </div>\n              <p>{{ item.text }}</p>\n            </div>\n            <!-- /.card-style-five -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { Swiper, SwiperSlide } from \"swiper/vue\"\nimport { Navigation } from \"swiper\"\nimport { onMounted, ref } from \"vue\"\nimport homeApiService from \"@/Composables/homeApiService\"\n\nimport \"swiper/css\"\nimport \"swiper/css/navigation\"\n\nconst navigationOptions = {\n    nextEl: \".next_a\",\n    prevEl: \".prev_a\"\n}\nconst modules = [Navigation]\n\nconst feedbacks = ref([])\nconst brands = ref([])\nconst loading = ref(true)\n\nonMounted(() => {\n    homeApiService.get('feedbacks').then(res => {\n        feedbacks.value = res\n    })\n\n    homeApiService.get('brands').then(res => {\n        brands.value = res\n        loading.value = false\n    })\n})\n\n</script>\n\n<template>\n    <section class=\"feedback-section-one pt-120 lg-pt-100\">\n        <div class=\"container position-relative\">\n            <div class=\"row\">\n                <div class=\"col-lg-6 col-md-7\">\n                    <div class=\"title-one mb-65 md-mb-50\">\n                        <h2 class=\"main-font\">{{ trans('Trusted by leading startups.') }}</h2>\n                    </div>\n                </div>\n            </div>\n\n            <Swiper :slides-per-view=\"2\" :space-between=\"30\" :modules=\"modules\" :navigation=\"navigationOptions\">\n                <SwiperSlide class=\"feedback-block-one color-two \" v-for=\"(item, index) in feedbacks\" :key=\"index\">\n                    <div class=\"logo\">\n                        <img :src=\"item.banner_logo\" alt=\"\" />\n                    </div>\n                    <blockquote class=\"text-white fw-500 mt-50 md-mt-30 mb-50 md-mb-30\">\n                        “{{ item.review }}”\n                    </blockquote>\n                    <div class=\"text-white name\">\n                        <span class=\"fw-500\">{{ item.author }},</span> {{ item.author_designation }}\n                    </div>\n                    <div class=\"pt-40 mt-40 review md-pt-20 md-mt-30 d-flex justify-content-between align-items-center\">\n                        <div class=\"text-white text-md fw-500\"> {{ item.rating_type }}</div>\n                        <ul class=\"style-none d-flex\">\n                            <li v-for=\"sl in 5\" :key=\"sl\">\n                                <a href=\"#\"><i :class=\"sl <= item.ratting_point ? 'bi bi-star-fill' : 'bi bi-star'\"></i></a>\n                            </li>\n                        </ul>\n                    </div>\n                </SwiperSlide>\n            </Swiper>\n\n            <ul v-if=\"feedbacks?.length > 2\"\n                class=\"slider-arrows slick-arrow-one d-flex justify-content-center style-none sm-mt-30\">\n                <li class=\"prev_a slick-arrow\">\n                    <i class=\"bi bi-arrow-left\"></i>\n                </li>\n                <li class=\"next_a slick-arrow\">\n                    <i class=\"bi bi-arrow-right\"></i>\n                </li>\n            </ul>\n\n        </div>\n    </section>\n</template>","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\nimport moment from 'moment'\n\nconst blogs = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('blogs').then((res) => {\n    blogs.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"blog-section-one mt-160 xl-mt-130 lg-mt-100\">\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"row\">\n          <div class=\"col-xl-7\">\n            <div class=\"title-one lg-mb-10 mb-20\">\n              <h2 class=\"main-font\">{{ $page.props.app_name }} {{ trans('Guides') }}</h2>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row gx-xl-5\">\n          <div v-for=\"(blog, index) in blogs.slice(0, 2)\" :key=\"index\" class=\"col-sm-6\">\n            <article class=\"blog-meta-two mt-35 xs-mt-20 wow fadeInUp\">\n              <figure class=\"post-img m0\">\n                <Link :href=\"route('blogs.show', blog)\" class=\"w-100 d-block\"\n                  ><img v-lazy=\"blog.preview?.value\" alt=\"img\" class=\"lazy-img w-100 tran4s\" />\n                </Link>\n                <span class=\"tags fw-500\">\n                  {{ blog.categories.map((item) => item.title).join(', ') }}\n                </span>\n              </figure>\n              <div class=\"post-data mt-35 lg-mt-20\">\n                <div class=\"date\">\n                  <span class=\"fw-500 text-dark\">{{ blog.is_featured ? 'Featured | ' : '' }} </span>\n                  <a :href=\"route('blogs.show', blog)\">{{\n                    moment(blog.created_at).format('DD MMM, YYYY')\n                  }}</a>\n                </div>\n                <Link :href=\"route('blogs.show', blog)\">\n                  <h4 class=\"tran3s blog-title\">{{ blog.title }}</h4>\n                </Link>\n                <Link\n                  :href=\"route('blogs.show', blog)\"\n                  class=\"continue-btn tran3s d-flex align-items-center\"\n                >\n                  <span class=\"fw-500 me-2\">{{ trans('Continue Reading') }}</span>\n                  <i class=\"bi bi-arrow-right\"></i>\n                </Link>\n              </div>\n            </article>\n            <!-- /.blog-meta-two -->\n          </div>\n        </div>\n\n        <div class=\"explore-btn sm-mt-50 text-center\">\n          <Link href=\"/blogs\" class=\"btn-six\">{{ trans('Explore More') }}</Link>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from \"@/Composables/homeApiService\"\nimport { Link } from '@inertiajs/vue3'\n\nconst companies = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n    homeApiService.get('companies').then(res => {\n        companies.value = res\n        loading.value = false\n    })\n})\n\n</script>\n\n<template>\n    <section class=\"top-company-section pt-100 lg-pt-60 pb-130 lg-pb-80 mt-200 xl-mt-150\" v-if=\"companies.length > 0\">\n        <div class=\"container\">\n            <div class=\"row justify-content-between align-items-center pb-40 lg-pb-10\">\n                <div class=\"col-sm-7\">\n                    <div class=\"title-one\">\n                        <h2 class=\"main-font\">{{ trans('Top Company') }}</h2>\n                    </div>\n                </div>\n                <div class=\"col-sm-5\">\n                    <div class=\"d-flex justify-content-sm-end\">\n                        <Link :href=\"route('companies.index')\" class=\"btn-six d-none d-sm-inline-block\">\n                        {{ trans('Explore More') }}</Link>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-lg-3 col-sm-6\" v-for=\"(item, index) in companies\" :key=\"index\">\n                    <div class=\"card-style-ten text-center tran3s mt-25 wow fadeInUp\">\n                        <img :src=\"item.avatar == null\n                            ? `https://ui-avatars.com/api/?name=${item.name}`\n                            : `${item.avatar}`\n                            \" :alt=\"item.name\" class=\"lazy-img m-auto\">\n                        <div class=\"text-lg fw-500 text-dark mt-15 mb-30\">{{ item.name }}</div>\n                        <p class=\"mb-20\">{{ item.location }}</p>\n                        <Link :href=\"route('companies.show', item.username)\" class=\"open-job-btn fw-500 tran3s\">\n                        {{ item.open_jobs_count }} {{ trans('open jobs') }}</Link>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"text-center mt-30 d-sm-none\">\n                <Link :href=\"route('companies.index')\" class=\"btn-six\">{{ trans('Explore More') }}</Link>\n            </div>\n        </div>\n    </section>\n</template>","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from \"@/Composables/homeApiService\"\n\nconst faqs = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n    homeApiService.get('faqs').then(res => {\n        faqs.value = res\n        loading.value = false\n    })\n})\n\n</script>\n\n<template>\n    <section class=\"faq-section position-relative mt-180 xl-mt-150 lg-mt-80\">\n        <div class=\"container\">\n            <div class=\"title-one text-center\">\n                <h2 class=\"main-font\">{{ trans('Questions & Answers') }}</h2>\n            </div>\n            <div class=\"mt-60 lg-mt-30\">\n                <div class=\"row\">\n                    <div class=\"col-xxl-11 m-auto\">\n                        <div class=\"accordion accordion-style-two\" id=\"accordionTwo\">\n                            <div class=\"accordion-item\" v-for=\"(item, index) in faqs\" :key=\"index\">\n                                <div class=\"accordion-header\" :id=\"`Fheading${index}F`\">\n                                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                                        :data-bs-target=\"`#Fcollapse${index}`\" aria-expanded=\"false\" :aria-controls=\"`Fcollapse${index}`\">\n                                        {{ item.title }}\n                                    </button>\n                                </div>\n                                <div :id=\"`Fcollapse${index}`\" class=\"accordion-collapse collapse\" :aria-labelledby=\"`Fheading${index}`\"\n                                    :data-bs-parent=\"`#accordionTwo`\">\n                                    <div class=\"accordion-body\">\n                                        <p>{{ item.excerpt?.value }}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div> <!-- /.accordion-style-two -->\n                    </div>\n                </div>\n            </div>\n            <!-- ./bg-wrapper -->\n            <div class=\"text-center mt-50 lg-mt-30 wow fadeInUp\">\n                <div class=\"btn-eight fw-500\">{{ trans('Don’t find the answer? We can help.') }} <Link href=\"/faq\">{{ trans('Click here') }}</Link></div>\n            </div>\n        </div>\n    </section>\n</template>","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport BannerSection from '@/Pages/Web/Home/Seven/Partials/BannerSection.vue'\nimport BrandSection from '@/Pages/Web/Home/Seven/Partials/BrandSection.vue'\nimport CategorySection from '@/Pages/Web/Home/Seven/Partials/CategorySection.vue'\nimport FeatureSection from '@/Pages/Web/Home/Seven/Partials/FeatureSection.vue'\nimport FeedbackSection from '@/Pages/Web/Home/Seven/Partials/FeedbackSection.vue'\nimport BlogSection from '@/Pages/Web/Home/Seven/Partials/BlogSection.vue'\nimport FeatureSection2 from '@/Pages/Web/Home/Seven/Partials/FeatureSection2.vue'\nimport JobIntroSection from '@/Pages/Web/Home/Seven/Partials/JobIntroSection.vue'\nimport CompanyListSection from '@/Pages/Web/Home/Seven/Partials/CompanyListSection.vue'\nimport FaqSection from '@/Pages/Web/Home/Seven/Partials/FaqSection.vue'\n\ndefineOptions({ layout: DefaultLayout })\ndefineProps(['home', 'seo'])\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n\n  <BannerSection :home=\"home\" />\n  <BrandSection />\n  <CategorySection />\n  <FeatureSection />\n  <FeatureSection2 :home=\"home\" />\n  <CompanyListSection />\n  <FeedbackSection />\n  <FaqSection />\n  <BlogSection />\n  <JobIntroSection :home=\"home\" />\n</template>\n","<script setup>\nimport { onMounted, ref } from \"vue\";\n\nconst props = defineProps({\n  home: {\n    type: Object,\n    required: true\n  }\n});\n\nconst currentSlide = ref(0);\nconst slides = ref([]);\nlet autoplayInterval = null;\n\nonMounted(() => {\n  // Initialize slides only if home.hero exists\n  if (props.home?.hero) {\n    slides.value = [\n      props.home.hero.image1,\n      props.home.hero.image2,\n      props.home.hero.image3\n    ].filter(Boolean);\n    \n    // Start autoplay only after slides are initialized\n    startAutoPlay();\n  }\n});\n\nconst startAutoPlay = () => {\n  autoplayInterval = setInterval(() => {\n    currentSlide.value = (currentSlide.value + 1) % slides.value.length;\n  }, 5000);\n};\n\nconst goToSlide = (index) => {\n  if (autoplayInterval) {\n    clearInterval(autoplayInterval);\n  }\n  currentSlide.value = index;\n  startAutoPlay();\n};\n</script>\n\n<template>\n  <section class=\"hero-section\">\n    <div class=\"container\">\n      <div class=\"hero-grid\">\n        <!-- Left Column: Content -->\n        <div class=\"hero-content\">\n          <h1 class=\"hero-title\">{{ home.hero.title }}</h1>\n          <p class=\"hero-subtitle\">{{ home.hero.subtitle }}</p>\n          <div class=\"cta-wrapper\">\n            <a href=\"/jobs\" class=\"cta-button\">\n              Explore Jobs\n              <svg class=\"arrow-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                      d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n              </svg>\n            </a>\n          </div>\n        </div>\n\n        <!-- Right Column: Image Slider -->\n        <div class=\"slider-wrapper\">\n          <div class=\"slider-container\">\n            <div class=\"slider\">\n              <template v-for=\"(slide, index) in slides\" :key=\"index\">\n                <div v-show=\"currentSlide === index\"\n                     class=\"slide\"\n                     :class=\"{ active: currentSlide === index }\">\n                  <img :src=\"slide\" :alt=\"`Hero image ${index + 1}`\" />\n                </div>\n              </template>\n            </div>\n\n            <!-- Navigation Dots -->\n            <div class=\"slider-nav\">\n              <button v-for=\"(_, index) in slides\" \n                      :key=\"index\"\n                      @click=\"goToSlide(index)\"\n                      class=\"nav-dot\"\n                      :class=\"{ active: currentSlide === index }\">\n                <span class=\"sr-only\">Slide {{ index + 1 }}</span>\n              </button>\n            </div>\n          </div>\n\n          <!-- Decorative Elements -->\n          <div class=\"decoration decoration-1\"></div>\n          <div class=\"decoration decoration-2\"></div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<style scoped>\n.hero-section {\n  background-color: #ffffff;\n  padding: 4rem 0;\n  position: relative;\n  overflow: hidden;\n}\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 1rem;\n}\n\n.hero-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 4rem;\n  align-items: center;\n}\n\n.hero-content {\n  padding-right: 2rem;\n}\n\n.hero-title {\n  font-size: 3rem;\n  font-weight: 500;\n  line-height: 1.2;\n  color: #1d4ed8;\n  margin-bottom: 1.5rem;\n  font-family: 'gordita';\n}\n\n.hero-subtitle {\n  font-size: 1.25rem;\n  line-height: 1.6;\n  color: #4a4a4a;\n  margin-bottom: 2rem;\n}\n\n.cta-wrapper {\n  margin-top: 2rem;\n}\n\n.cta-button {\n  display: inline-flex;\n  align-items: center;\n  padding: 1rem 2rem;\n  background-color: #0070FF;\n  color: #fff;\n  border-radius: 5rem;\n  font-weight: 500;\n  font-size: 1.125rem;\n  text-decoration: none;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.cta-button:hover {\n  background: transparent;\n  border: 1px solid #0070ff;\n  color: #0070ff;\n  box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);\n}\n\n.arrow-icon {\n  width: 1.25rem;\n  height: 1.25rem;\n  margin-left: 0.5rem;\n}\n\n.slider-wrapper {\n  position: relative;\n}\n\n.slider-container {\n  position: relative;\n  border-radius: 1rem;\n  overflow: hidden;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\n}\n\n.slider {\n  position: relative;\n  aspect-ratio: 12/10;\n}\n\n.slide {\n  position: absolute;\n  inset: 0;\n  opacity: 0;\n  transition: opacity 0.5s ease;\n}\n\n.slide.active {\n  opacity: 1;\n}\n\n.slide img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.slider-nav {\n  position: absolute;\n  bottom: 1rem;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 0.75rem;\n  z-index: 10;\n}\n\n.nav-dot {\n  width: 0.75rem;\n  height: 0.75rem;\n  border-radius: 50%;\n  background-color: rgba(255, 255, 255, 0.7);\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  padding: 0;\n}\n\n.nav-dot.active {\n  background-color: #2563eb;\n}\n\n.decoration {\n  position: absolute;\n  width: 18rem;\n  height: 18rem;\n  border-radius: 50%;\n  filter: blur(50px);\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n.decoration-1 {\n  background-color: #93c5fd;\n  top: -1rem;\n  right: -1rem;\n}\n\n.decoration-2 {\n  background-color: #c4b5fd;\n  bottom: -1rem;\n  left: -1rem;\n}\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}\n\n/* Responsive Styles */\n@media (max-width: 1024px) {\n  .hero-grid {\n    grid-template-columns: 1fr;\n    gap: 2rem;\n    text-align: center;\n  }\n\n  .hero-content {\n    padding-right: 0;\n  }\n\n  .hero-title {\n    font-size: 2.5rem;\n  }\n\n  .hero-subtitle {\n    font-size: 1.125rem;\n  }\n}\n\n@media (max-width: 768px) {\n  .hero-section {\n    padding: 2rem 0;\n  }\n\n  .hero-title {\n    font-size: 2rem;\n  }\n\n  .cta-button {\n    /* width: 100%; */\n    justify-content: center;\n  }\n}\n\n@media (max-width: 480px) {\n  .hero-title {\n    font-size: 1.75rem;\n  }\n\n  .hero-subtitle {\n    font-size: 1rem;\n  }\n}\n</style>","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nconst brands = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService\n    .get('brands')\n    .then((res) => {\n      brands.value = res\n      loading.value = false\n    })\n    .then(() => {\n      if ($('.partner-slider').length) {\n        $('.partner-slider').slick({\n          dots: false,\n          arrows: false,\n          lazyLoad: 'ondemand',\n          centerPadding: '0px',\n          slidesToShow: 6,\n          slidesToScroll: 1,\n          autoplay: true,\n          autoplaySpeed: 3500,\n          responsive: [\n            {\n              breakpoint: 1400,\n              settings: {\n                slidesToShow: 5\n              }\n            },\n            {\n              breakpoint: 768,\n              settings: {\n                slidesToShow: 4\n              }\n            },\n            {\n              breakpoint: 576,\n              settings: {\n                slidesToShow: 3\n              }\n            }\n          ]\n        })\n      }\n    })\n})\n</script>\n\n<template>\n  <div class=\"partner-logos bg-color pt-45 pb-45 border-0 pe-3 ps-3\">\n    <div class=\"partner-slider\">\n      <div class=\"item\" v-for=\"(item, index) in brands\" :key=\"index\">\n        <div class=\"logo d-flex align-items-center\"><img v-lazy=\"item.preview\" alt=\"\" /></div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\n\nconst services = ref([\n    {\n        title: 'Recruitment Solutions',\n        description: 'Streamlined hiring processes to find top talent quickly and efficiently.',\n        icon: '/assets/images/icons/recruitment-icon.svg',\n        color: '#EAFBFD',\n    },\n    {\n        title: 'Training & Development',\n        description: 'Upskill your workforce with tailored training programs.',\n        icon: '/assets/images/icons/training-icon.svg',\n        color: '#FFFAEC',\n    },\n    {\n        title: 'HR Consulting',\n        description: 'Expert guidance to optimize your HR strategies and operations.',\n        icon: '/assets/images/icons/hr-consulting-icon.svg',\n        color: '#FFEBFB',\n    },\n    {\n        title: 'Career Coaching',\n        description: 'Personalized coaching to help professionals achieve their career goals.',\n        icon: '/assets/images/icons/career-coaching-icon.svg',\n        color: '#E8F7E9',\n    },\n    {\n        title: 'Freelance Opportunities',\n        description: 'Connect with projects that match your skills and expertise.',\n        icon: '/assets/images/icons/freelance-icon.svg',\n        color: '#F7F5FF',\n    },\n    {\n        title: 'Business Solutions',\n        description: 'Comprehensive services to scale and grow your business effectively.',\n        icon: '/assets/images/icons/business-solutions-icon.svg',\n        color: '#FFF3EA',\n    },\n]);\n\nconst currentSlide = ref(0);\nconst autoplayInterval = ref(null);\nconst AUTOPLAY_DELAY = 3000;\n\nconst nextSlide = () => {\n    currentSlide.value = (currentSlide.value + 1) % services.value.length;\n};\n\nconst prevSlide = () => {\n    currentSlide.value = currentSlide.value === 0 \n        ? services.value.length - 1 \n        : currentSlide.value - 1;\n};\n\nconst startAutoplay = () => {\n    autoplayInterval.value = setInterval(nextSlide, AUTOPLAY_DELAY);\n};\n\nconst stopAutoplay = () => {\n    if (autoplayInterval.value) {\n        clearInterval(autoplayInterval.value);\n    }\n};\n\nconst handleTouchStart = () => {\n    stopAutoplay();\n};\n\nconst handleTouchEnd = () => {\n    startAutoplay();\n};\n\nonMounted(() => {\n    startAutoplay();\n});\n\nonBeforeUnmount(() => {\n    stopAutoplay();\n});\n</script>\n\n<template>\n    <section class=\"service-section mt-85 md-mt-60 position-relative\">\n        <div class=\"container\">\n            <!-- Header Section -->\n            <div class=\"row justify-content-between align-items-center\">\n                <div class=\"col-lg-8\">\n                    <div class=\"title-four text-center text-lg-start\">\n                        <h2>{{ trans('Our Core Services.') }}</h2>\n                        <p class=\"text-muted\">\n                            Discover how Xuriel can empower your business and career with innovative solutions.\n                        </p>\n                    </div>\n                </div>\n                <div class=\"col-lg-4\">\n                    <div class=\"d-flex justify-content-lg-end\">\n                        <Link href=\"/about-us\" class=\"btn-six dark d-none d-lg-inline-block\">\n                            {{ trans('More About Xuriel') }}\n                        </Link>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Desktop Layout -->\n            <div class=\"services-grid d-none d-lg-grid\">\n                <div\n                    v-for=\"(service, index) in services\"\n                    :key=\"index\"\n                    class=\"card-style-seven text-center wow fadeInUp\"\n                    :style=\"{ 'animation-delay': `${index * 0.1}s` }\"\n                >\n                    <div\n                        class=\"wrapper d-flex flex-column align-items-center\"\n                        :style=\"{ 'background-color': service.color }\"\n                    >\n                        <div class=\"icon d-flex align-items-center justify-content-center mb-3\">\n                            <img :src=\"service.icon\" alt=\"Service Icon\" class=\"lazy-img service-section-img\" />\n                        </div>\n                        <div class=\"title fw-500 mb-2\">{{ service.title }}</div>\n                        <p class=\"description text-muted\">{{ service.description }}</p>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Mobile Carousel -->\n            <div class=\"mobile-carousel-container d-lg-none\">\n                <div \n                    class=\"mobile-carousel\"\n                    @touchstart=\"handleTouchStart\"\n                    @touchend=\"handleTouchEnd\"\n                >\n                    <div \n                        class=\"carousel-slides\"\n                        :style=\"{ transform: `translateX(-${currentSlide * 100}%)` }\"\n                    >\n                        <div\n                            v-for=\"(service, index) in services\"\n                            :key=\"index\"\n                            class=\"carousel-slide\"\n                        >\n                            <div\n                                class=\"wrapper d-flex flex-column align-items-center\"\n                                :style=\"{ 'background-color': service.color }\"\n                            >\n                                <div class=\"icon d-flex align-items-center justify-content-center mb-3\">\n                                    <img :src=\"service.icon\" alt=\"Service Icon\" class=\"lazy-img service-section-img\" />\n                                </div>\n                                <div class=\"title fw-500 mb-2\">{{ service.title }}</div>\n                                <p class=\"description text-muted\">{{ service.description }}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Carousel Navigation -->\n                <div class=\"carousel-nav\">\n                    <button class=\"nav-button prev\" @click=\"prevSlide\">\n                        <span class=\"arrow-left\"></span>\n                    </button>\n                    <div class=\"carousel-dots\">\n                        <button\n                            v-for=\"(_, index) in services\"\n                            :key=\"index\"\n                            class=\"dot\"\n                            :class=\"{ active: currentSlide === index }\"\n                            @click=\"currentSlide = index\"\n                        ></button>\n                    </div>\n                    <button class=\"nav-button next\" @click=\"nextSlide\">\n                        <span class=\"arrow-right\"></span>\n                    </button>\n                </div>\n            </div>\n\n            <div class=\"text-center mt-40 d-lg-none\">\n                <Link href=\"/about-us\" class=\"btn-six dark\">{{ trans('More About Xuriel') }}</Link>\n            </div>\n        </div>\n    </section>\n</template>\n\n<style scoped>\n.service-section {\n    position: relative;\n    background: #f9f9f9;\n    padding: 50px 0;\n}\n\n/* Desktop Grid Layout */\n.services-grid {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 30px;\n    padding-top: 50px;\n}\n\n.card-style-seven {\n    border-radius: 10px;\n    padding: 20px;\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n    height: 100%;\n}\n\n.card-style-seven:hover {\n    transform: translateY(-10px);\n    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.1);\n}\n\n.wrapper {\n    height: 100%;\n    padding: 25px;\n    border-radius: 10px;\n}\n\n.service-section-img {\n    width: 50px;\n    height: 50px;\n}\n\n.description {\n    font-size: 0.9rem;\n    line-height: 1.4;\n}\n\n/* Mobile Carousel Styles */\n.mobile-carousel-container {\n    position: relative;\n    padding-top: 50px;\n    overflow: hidden;\n}\n\n.mobile-carousel {\n    width: 100%;\n    touch-action: pan-y pinch-zoom;\n}\n\n.carousel-slides {\n    display: flex;\n    transition: transform 0.5s ease;\n}\n\n.carousel-slide {\n    flex: 0 0 100%;\n    padding: 0 15px;\n}\n\n.carousel-nav {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: 20px;\n    gap: 20px;\n}\n\n.nav-button {\n    background: none;\n    border: none;\n    padding: 10px;\n    cursor: pointer;\n    position: relative;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    background: #fff;\n    box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n}\n\n.arrow-left, .arrow-right {\n    border: solid #333;\n    border-width: 0 2px 2px 0;\n    display: inline-block;\n    padding: 4px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n}\n\n.arrow-left {\n    transform: translate(-25%, -50%) rotate(135deg);\n}\n\n.arrow-right {\n    transform: translate(-75%, -50%) rotate(-45deg);\n}\n\n.carousel-dots {\n    display: flex;\n    gap: 8px;\n}\n\n.dot {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background: #ccc;\n    border: none;\n    padding: 0;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n}\n\n.dot.active {\n    background: #333;\n    transform: scale(1.2);\n}\n\n/* Animation */\n@keyframes fadeInUp {\n    from {\n        opacity: 0;\n        transform: translateY(20px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n.wow.fadeInUp {\n    animation: fadeInUp 0.6s ease forwards;\n}\n</style>","<script setup>\nimport { onMounted, ref } from \"vue\"\nimport homeApiService from \"@/Composables/homeApiService\"\nimport JobsItemList from \"@/Components/Job/JobsItemList.vue\"\nimport { Link } from \"@inertiajs/vue3\"\n\nconst jobs = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get(\"jobList\").then((res) => {\n    jobs.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"job-listing-one mt-180 xl-mt-150 lg-mt-100\" v-if=\"jobs.length > 0\">\n    <div class=\"container\">\n      <div class=\"row justify-content-between align-items-center\">\n        <div class=\"col-lg-6\">\n          <div class=\"title-one\">\n            <h2 class=\"text-dark\">{{ trans(\"New job listing\") }}</h2>\n          </div>\n        </div>\n        <div class=\"col-lg-5\">\n          <div class=\"d-flex justify-content-lg-end\">\n            <Link href=\"/jobs\" class=\"btn-six d-none d-lg-inline-block\">{{\n              trans(\"Explore all jobs\")\n            }}</Link>\n          </div>\n        </div>\n      </div>\n\n      <div\n        class=\"job-listing-wrapper border-wrapper lg-mt-40 wow fadeInUp mt-80\"\n      >\n        <JobsItemList :items=\"jobs\" />\n      </div>\n      <!-- /.job-listing-wrapper -->\n\n      <div class=\"d-lg-none mt-40 text-center\">\n        <Link href=\"/jobs\" class=\"btn-six\">{{\n          trans(\"Explore all jobs\")\n        }}</Link>\n      </div>\n\n      <div class=\"lg-mt-30 wow fadeInUp mt-80 text-center\">\n        <div class=\"btn-eight fw-500\">\n          {{ trans(\"Do you want to post a job for your company?\") }}\n          <span> {{ trans(\"We can help.\") }}</span>\n          <a href=\"/register\">{{ trans(\"Click here\") }}</a>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\ndefineProps(['home'])\n\nconst features = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('features').then((res) => {\n    features.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"text-feature-one position-relative pt-180 xl-pt-150 lg-pt-100\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-lg-5\">\n          <div class=\"wow fadeInLeft\">\n            <div class=\"title-two\">\n              <div class=\"sub-title\">{{ home.cta_s2.top_title }}</div>\n              <h2 class=\"main-font color-blue\">{{ home.cta_s2.title }}</h2>\n            </div>\n            <div class=\"accordion accordion-style-one color-two mt-40\" id=\"accordionOne\">\n              <div\n                class=\"accordion-item\"\n                v-for=\"(item, index) in home.cta_s2.features\"\n                :key=\"index\"\n              >\n                <div class=\"accordion-header\" :id=\"`heading${index}`\">\n                  <button\n                    class=\"accordion-button\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    :data-bs-target=\"`#collapse${index}`\"\n                    aria-expanded=\"false\"\n                    :aria-controls=\"`collapse${index}`\"\n                  >\n                    {{ item.title }}\n                  </button>\n                </div>\n                <div\n                  :id=\"`collapse${index}`\"\n                  class=\"accordion-collapse collapse\"\n                  :aria-labelledby=\"`heading${index}`\"\n                  data-bs-parent=\"#accordionOne\"\n                >\n                  <div class=\"accordion-body\">\n                    <p>{{ item.body }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- /.accordion-style-one -->\n            <a :href=\"home.cta_s2.btn_link\" class=\"btn-five mt-45 lg-mt-20\">{{\n              home.cta_s2.btn_text\n            }}</a>\n          </div>\n        </div>\n        <div class=\"col-lg-6 col-md-11 me-lg-0 me-auto ms-auto\">\n          <div class=\"img-data position-relative md-mt-50\">\n            <div class=\"row\">\n              <div class=\"col-md-6 col-sm-8 col-10\">\n                <img v-lazy=\"home.cta_s2.image1\" alt=\"\" class=\"lazy-img img01\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-4 col-5\">\n                <img v-lazy=\"home.cta_s2.image2\" alt=\"image\" class=\"lazy-img img02 mt-35\" />\n              </div>\n              <div class=\"col-md-6 col-7\">\n                <img v-lazy=\"home.cta_s2.image3\" alt=\"image\" class=\"lazy-img img01 mt-35\" />\n              </div>\n            </div>\n            <img\n              v-lazy=\"home.cta_s2.image4\"\n              alt=\"image\"\n              class=\"lazy-img shapes screen01 wow fadeInRight\"\n            />\n            <img\n              v-lazy=\"home.cta_s2.image5\"\n              alt=\"image\"\n              class=\"lazy-img shapes screen02 wow fadeInUp\"\n            />\n            <img\n              v-lazy=\"home.cta_s2.image6\"\n              alt=\"image\"\n              class=\"lazy-img shapes screen03 wow fadeInUp\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\ndefineProps([\"home\"]);\n\nconst feedbacks = ref([])\nconst brands = ref([])\n\nconst loading = ref(true)\n\nonMounted(() => {\n  homeApiService.get('feedbacks').then((res) => {\n    feedbacks.value = res\n\n    homeApiService\n      .get('brands')\n      .then((res) => {\n        brands.value = res\n        loading.value = false\n      })\n      .then(() => {\n        $('.feedback-slider-one').slick({\n          dots: false,\n          arrows: true,\n          lazyLoad: 'ondemand',\n          prevArrow: $('.prev_b'),\n          nextArrow: $('.next_b'),\n          centerPadding: '0px',\n          slidesToShow: 2,\n          slidesToScroll: 1,\n          autoplay: true,\n          autoplaySpeed: 3000000,\n          responsive: [\n            {\n              breakpoint: 768,\n              settings: {\n                slidesToShow: 1\n              }\n            }\n          ]\n        })\n      })\n  })\n})\n</script>\n\n<template>\n  <section class=\"feedback-section-five position-relative mt-180 xl-mt-150 pt-90 md-pt-60 pb-130 xl-pb-100 md-pb-70\"\n  :style=\"{backgroundImage:`url(${home.feedback_section.image})`}\">\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <div class=\"title-one mb-55 lg-mb-40\">\n              <h2 class=\"text-white main-font\">{{ home.feedback_section.title }}</h2>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row feedback-slider-one\">\n          <div v-for=\"(item, index) in feedbacks\" :key=\"index\" class=\"item\">\n            <div class=\"feedback-block-three position-relative\">\n              <img src=\"/assets/images/icon/icon_41.svg\" alt=\"\" class=\"quote-icon\" />\n              <div class=\"review fw-500\">{{ item.ratting_type }}</div>\n              <ul class=\"style-none d-flex rating\">\n                <li v-for=\"sl in 5\" :key=\"sl\">\n                  <a href=\"#\"><i :class=\"sl <= item.ratting_point ? 'bi bi-star-fill' : 'bi bi-star'\"></i></a>\n                </li>\n              </ul>\n              <blockquote class=\"mt-50 lg-mt-20 mb-15 lg-mb-10 text-dark\">\n                {{ item.review }}\n              </blockquote>\n              <div class=\"block-footer d-flex align-items-center justify-content-between pt-35 lg-pt-10\">\n                <div class=\"d-flex align-items-center\">\n                  <div class=\"name fw-500 text-dark\">{{ item.author }},</div>\n                  <span class=\"opacity-50 ps-1\">{{ item.author_designation }}</span>\n                </div>\n                <img :src=\"item.company_logo\" alt=\"logo\" class=\"author-img rounded-circle\" />\n              </div>\n            </div>\n            <!-- /.feedback-block-three -->\n          </div>\n        </div>\n        <ul class=\"slider-arrows slick-arrow-one color-two d-flex justify-content-center style-none sm-mt-30\">\n          <li class=\"text-white prev_b slick-arrow\"><i class=\"bi bi-arrow-left\"></i></li>\n          <li class=\"text-white next_b slick-arrow\"><i class=\"bi bi-arrow-right\"></i></li>\n        </ul>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\nimport helper from '@/Composables/sharedComposable'\n\nconst { textExcerpt } = helper()\n\nconst blogs = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('blogs').then((res) => {\n    blogs.value = res\n    loading.value = false\n  }).then(() => {\n    $('.blog-slider').slick({\n      dots: false,\n      arrows: true,\n      lazyLoad: 'ondemand',\n      prevArrow: $('.prev_blog'),\n      nextArrow: $('.next_blog'),\n      centerPadding: '0px',\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      autoplay: true,\n      autoplaySpeed: 3000,\n      responsive: [\n        {\n          breakpoint: 1024,\n          settings: {\n            slidesToShow: 2\n          }\n        },\n        {\n          breakpoint: 768,\n          settings: {\n            slidesToShow: 1\n          }\n        }\n      ]\n    })\n  })\n})\n</script>\n\n<template>\n  <section class=\"blog-section-one mt-160 xl-mt-150 lg-mt-100\">\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"row\">\n          <div class=\"col-xl-7\">\n            <div class=\"title-one mb-30 lg-mb-10\">\n              <h2 class=\"main-font color-blue\">{{ $page.props.app_name }} {{ trans('Guides') }}</h2>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row blog-slider\">\n          <div v-for=\"(item, index) in blogs\" :key=\"index\" class=\"item\">\n            <article class=\"blog-meta-one mt-35 xs-mt-20 wow fadeInUp\">\n              <figure class=\"post-img m0\">\n                <Link :href=\"route('blogs.show', item)\" class=\"w-100 d-block\">\n                  <img v-lazy=\"item.preview?.value\" alt=\"\" class=\"w-100 tran4s\" />\n                </Link>\n              </figure>\n              <div class=\"post-data mt-30 lg-mt-20\">\n                <div>\n                  <Link :href=\"route('blogs.show', item)\" class=\"date\">\n                    {{ item.created_at_diff }}\n                  </Link>\n                </div>\n                <Link :href=\"route('blogs.show', item)\" class=\"mb-5 mt-10\">\n                  <h4 class=\"tran3s blog-title\">{{ item.title }}</h4>\n                </Link>\n                <p class=\"mb-20\">{{ textExcerpt(item.meta[0].value, 120) }}</p>\n                <Link :href=\"route('blogs.show', item)\" class=\"read-more\">\n                  <img src=\"/assets/images/icon/icon_42.svg\" alt=\"\" />\n                </Link>\n              </div>\n            </article>\n          </div>\n        </div>\n\n        <ul class=\"slider-arrows slick-arrow-one d-flex justify-content-center style-none sm-mt-30\">\n          <li class=\"prev_blog slick-arrow\"><i class=\"bi bi-arrow-left\"></i></li>\n          <li class=\"next_blog slick-arrow\"><i class=\"bi bi-arrow-right\"></i></li>\n        </ul>\n\n        <div class=\"explore-btn sm-mt-50 text-center\">\n          <Link href=\"/blogs\" class=\"btn-six\">{{ trans('Explore More') }}</Link>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<style scoped>\n/* Carousel Navigation Styles */\n.slick-arrow {\n  width: 50px;\n  height: 50px;\n  cursor: pointer;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.1);\n  line-height: 50px;\n  text-align: center;\n  margin: 0 10px;\n  transition: all 0.3s ease;\n}\n\n.slick-arrow:hover {\n  background: rgba(0, 0, 0, 0.2);\n}\n\n/* Blog Item Styles */\n.item {\n  padding: 0 15px;\n}\n\n/* Ensure proper spacing between slides */\n.blog-slider {\n  margin: 0 -15px;\n}\n\n/* Maintain aspect ratio for images */\n.post-img {\n  aspect-ratio: 16/9;\n  overflow: hidden;\n}\n\n.post-img img {\n  object-fit: cover;\n  height: 100%;\n  width: 100%;\n}\n</style>","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport BannerSection from '@/Pages/Web/Home/Six/Partials/BannerSection.vue'\nimport BrandSection from '@/Pages/Web/Home/Six/Partials/BrandSection.vue'\nimport CategorySection from '@/Pages/Web/Home/Six/Partials/CategorySection.vue'\nimport CategorySection2 from '@/Pages/Web/Home/Six/Partials/CategorySection2.vue'\nimport JobListSection from '@/Pages/Web/Home/Six/Partials/JobListSection.vue'\nimport BannerSection2 from '@/Pages/Web/Home/Six/Partials/BannerSection2.vue'\nimport FeatureSection from '@/Pages/Web/Home/Six/Partials/FeatureSection.vue'\nimport FeedbackSection from '@/Pages/Web/Home/Six/Partials/FeedbackSection.vue'\nimport BlogSection from '@/Pages/Web/Home/Six/Partials/BlogSection.vue'\n// import FeatureSection2 from '@/Pages/Web/Home/Six/Partials/FeatureSection2.vue'\nimport JobIntroSection from '@/Pages/Web/Home/Six/Partials/JobIntroSection.vue'\n\ndefineOptions({ layout: DefaultLayout })\n\ndefineProps(['home', 'seo'])\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n\n  <BannerSection :home=\"home\" />\n  <CategorySection />\n  <CategorySection2 />\n  <JobListSection />\n  <BannerSection2 :home=\"home\" />\n  <FeatureSection :home=\"home\" />\n  <FeedbackSection :home=\"home\" />\n  <BlogSection />\n  <!-- <FeatureSection2 :home=\"home\" /> -->\n  <BrandSection />\n  <JobIntroSection :home=\"home\"  />\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from \"@/Composables/homeApiService\"\nimport { Link } from '@inertiajs/vue3'\nimport { Swiper, SwiperSlide } from \"swiper/vue\"\nimport { Navigation } from \"swiper\"\nimport \"swiper/css\"\nimport \"swiper/css/navigation\"\n\nconst navigationOptions = {\n    nextEl: \".next_a\",\n    prevEl: \".prev_a\"\n}\nconst modules = [Navigation]\n\nconst categories = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n    homeApiService.get('featuredServices').then(res => {\n        categories.value = res\n        loading.value = false\n    })\n})\n\n</script>\n<template>\n    <section class=\"category-section-three pt-85 pb-140 lg-pb-100\">\n        <div class=\"container\">\n            <div class=\"position-relative\">\n                <div class=\"title-two mb-60 lg-mb-40\">\n                    <h2 class=\"fw-600 color-blue\">{{ trans('Trending Services') }}</h2>\n                </div>\n                <div class=\"card-wrapper\">\n                    <Swiper class=\"item\" :slides-per-view=\"4\" :space-between=\"30\" :modules=\"modules\"\n                        :navigation=\"navigationOptions\">\n                        <SwiperSlide v-for=\"(item, index) in categories\" :key=\"index\">\n                            <div class=\"card-style-six position-relative\"\n                                :style=\"{ backgroundImage: `url(${item.preview})` }\">\n                                <Link :href=\"route('job-categories.show', item.slug)\"\n                                    class=\"w-100 h-100 ps-4 pb-20 d-flex align-items-end\">\n                                <div class=\"title text-white fw-500 text-lg\">{{ item.title }}</div>\n                                </Link>\n                            </div>\n                            <!-- /.card-style-six -->\n                        </SwiperSlide>\n                    </Swiper>\n                </div>\n                <!-- /.card-wrapper -->\n                <ul v-show=\"categories?.length > 4\"\n                    class=\"slider-arrows slick-arrow-one d-flex justify-content-center style-none sm-mt-30\">\n                    <li class=\"prev_a slick-arrow\">\n                        <i class=\"bi bi-arrow-left\"></i>\n                    </li>\n                    <li class=\"next_a slick-arrow\">\n                        <i class=\"bi bi-arrow-right\"></i>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </section>\n</template>","<script setup>\nimport homeApiService from '@/Composables/homeApiService';\nimport { ref } from 'vue'\n\nconst categories = ref([])\nconst loading = ref(true)\n\nhomeApiService.get('featuredCategories').then((res) => {\n  categories.value = res\n  loading.value = false\n})\n\n</script>\n\n<template>\n  <section class=\"category-section-one position-relative\">\n    <div class=\"container\">\n      <div class=\"row justify-content-between align-items-center\">\n        <div class=\"col-lg-8\">\n          <div class=\"title-three\">\n            <h2 class=\"fw-600 color-blue\">{{ trans('Explore the marketplace.') }}</h2>\n          </div>\n        </div>\n        <div class=\"col-lg-4\">\n          <div class=\"d-flex justify-content-lg-end\">\n            <Link href=\"/jobs\" class=\"btn-six d-none d-lg-inline-block\">{{\n              trans('Explore all fields')\n            }}</Link>\n          </div>\n        </div>\n      </div>\n      <div class=\"card-wrapper row justify-content-center mt-45 lg-mt-30\">\n        <div\n          v-for=\"(category, index) in categories\"\n          :key=\"index\"\n          class=\"card-style-one wow fadeInUp mt-20 text-center\"\n        >\n          <Link :href=\"route('job-categories.show', category.slug)\" class=\"wrapper\">\n            <div class=\"icon d-flex align-items-center justify-content-center\">\n              <img v-lazy=\"category.preview\" alt=\"shape\" class=\"lazy-img category-section-img\" />\n            </div>\n            <div class=\"title fw-500\">{{ category.title }}</div>\n            <div class=\"total-job\">{{ category.jobs_count }} {{ trans('Jobs') }}</div>\n          </Link>\n        </div>\n        <!-- /.card-style-one -->\n      </div>\n      <!-- /.card-wrapper -->\n      <div class=\"d-lg-none mt-40 text-center\">\n        <Link href=\"/jobs\" class=\"btn-six\">{{ trans('Explore all fields') }}</Link>\n      </div>\n    </div>\n  </section>\n</template>","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\ndefineProps(['home'])\n\nconst features = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('features').then((res) => {\n    features.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"text-feature-three position-relative pt-225 xl-pt-200 lg-pt-150 md-pt-100\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-lg-5 order-lg-last ms-auto\">\n          <div class=\"wow fadeInRight\">\n            <div class=\"title-two\">\n              <div class=\"sub-title\">{{ home.cta_s1.top_title }}</div>\n              <h2 class=\"fw-600 color-blue\">{{ home.cta_s1.title }}</h2>\n            </div>\n            <div class=\"accordion accordion-style-one color-two mt-40\" id=\"accordionOne\">\n              <div\n                class=\"accordion-item\"\n                v-for=\"(item, index) in home.cta_s1?.features ?? []\"\n                :key=\"index\"\n              >\n                <div class=\"accordion-header\" :id=\"`heading${index}`\">\n                  <button\n                    class=\"accordion-button\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    :data-bs-target=\"`#collapse${index}`\"\n                    aria-expanded=\"false\"\n                    :aria-controls=\"`collapse${index}`\"\n                  >\n                    {{ item.title }}\n                  </button>\n                </div>\n                <div\n                  :id=\"`collapse${index}`\"\n                  class=\"accordion-collapse collapse\"\n                  :aria-labelledby=\"`heading${index}`\"\n                  data-bs-parent=\"#accordionOne\"\n                >\n                  <div class=\"accordion-body\">\n                    <p>{{ item.body }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- /.accordion-style-one -->\n            <a :href=\"home.cta_s1.btn_link\" class=\"btn-five mt-45 lg-mt-20\">{{\n              home.cta_s1.btn_text\n            }}</a>\n          </div>\n        </div>\n        <div class=\"col-lg-6 order-lg-first\">\n          <div\n            class=\"img-box position-relative rounded-circle d-flex align-items-center justify-content-center wow fadeInLeft\"\n          >\n            <img v-lazy=\"home.cta_s1.image1\" alt=\"image\" class=\"lazy-img\" />\n            <img v-lazy=\"home.cta_s1.image2\" alt=\"image\" class=\"lazy-img shapes screen_02\" />\n            <img\n              v-lazy=\"'/assets/images/shape/shape_25.svg'\"\n              alt=\"image\"\n              class=\"lazy-img shapes shape_01\"\n            />\n          </div>\n          <!-- /.big-circle -->\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\ndefineProps(['home'])\n\nconst features = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('features').then((res) => {\n    features.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"fancy-banner-two mt-200 xl-mt-150 lg-mt-100 md-mt-80\">\n    <div class=\"container\">\n      <div class=\"bg-wrapper position-relative wow fadeInUp\">\n        <div class=\"row\">\n          <div class=\"col-xl-6 col-lg-7\">\n            <div class=\"text-wrapper\">\n              <div class=\"title-two\">\n                <div class=\"sub-title\">{{ home.cta_s2.top_title }}</div>\n                <h2 class=\"fw-600 text-white\">{{ home.cta_s2.title }}</h2>\n              </div>\n              <p class=\"mt-25 mb-55 lg-mb-40 text-white\">{{ home.cta_s2.subtitle }}</p>\n              <div class=\"counter-wrapper pb-50 lg-pb-30\">\n                <div class=\"row\">\n                  <div class=\"col-sm-4 col-6\">\n                    <div class=\"counter-block wow fadeInUp mt-20\">\n                      <div class=\"main-count fw-500 text-white\">\n                        {{ home.cta_s2.item1 }}\n                      </div>\n                      <p class=\"m0 text-white\">{{ trans('Businesses WorldWide') }}</p>\n                    </div>\n                    <!-- /.counter-block -->\n                  </div>\n                  <div class=\"col-sm-4 col-6\">\n                    <div class=\"counter-block wow fadeInUp mt-20\" data-wow-delay=\"0.2s\">\n                      <div class=\"main-count fw-500 text-white\">\n                        {{ home.cta_s2.item2 }}\n                      </div>\n                      <p class=\"m0 text-white\">{{ trans('Skilled Professionals') }}</p>\n                    </div>\n                    <!-- /.counter-block -->\n                  </div>\n                  <div class=\"col-sm-4 col-6\">\n                    <div class=\"counter-block wow fadeInUp mt-20\" data-wow-delay=\"0.35s\">\n                      <div class=\"main-count fw-500 text-white\">\n                        {{ home.cta_s2.item3 }}\n                      </div>\n                      <p class=\"m0 text-white\">{{ trans('Lives Transformed') }}</p>\n                    </div>\n                    <!-- /.counter-block -->\n                  </div>\n                </div>\n              </div>\n              <!-- /.counter-wrapper -->\n              <a :href=\"home.cta_s2.btn_link\" class=\"explore-btn tran3s\">{{\n                home.cta_s2.btn_text\n              }}</a>\n            </div>\n          </div>\n          <div class=\"col-xl-6 col-lg-5\">\n            <div class=\"img-meta ms-xl-5\" :style=\"{ backgroundImage: `url(${home.cta_s2.image1})` }\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- /.bg-wrapper -->\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\ndefineProps(['home'])\n\nconst services = ref([])\nconst featuredCategories = ref([])\n\nonMounted(async () => {\n  homeApiService.get('services').then((res) => {\n    services.value = res\n  })\n\n  homeApiService.get('featuredCategories').then((res) => {\n    featuredCategories.value = res\n  })\n})\n</script>\n\n<template>\n  <div class=\"hero-banner-three position-relative pt-120 md-pt-80 xs-pt-40 lg-pb-20 pb-80\">\n    <div class=\"img-box\">\n      <img v-lazy=\"home.hero.image4 ?? '/assets/images/assets/ils_01.svg'\" alt=\"image\" class=\"lazy-img\" />\n      <img\n        v-lazy=\"home.hero.image5 ?? '/assets/images/assets/ils_01_02.svg'\"\n        alt=\"image\"\n        class=\"lazy-img shapes screen_01\"\n      />\n      <img\n        v-lazy=\"home.hero.image6 ?? '/assets/images/assets/ils_01_01.svg'\"\n        alt=\"image\"\n        class=\"lazy-img shapes screen_02 wow fadeInLeft\"\n      />\n    </div>\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"row\">\n          <div class=\"col-lg-6 col-md-7\">\n            <div class=\"mb-5 slogan fw-500\">{{ home.hero.top_title }}</div>\n            <h1>{{ home.hero.title }}</h1>\n            <p class=\"text-lg mt-35 md-mt-30 mb-30 md-mb-20 pe-xl-5\">{{ home.hero.subtitle }}</p>\n            <a :href=\"home.hero.btn_link\" class=\"btn-five\">{{ home.hero.btn_text }}</a>\n            <div class=\"flex-wrap d-flex align-items-center mt-70 lg-mt-50 md-mt-40\">\n              <div class=\"partner-title\">{{ trans('Trusted by') }}:</div>\n              <img v-lazy=\"home.hero.image1\" alt=\"image\" class=\"lazy-img me-4 ms-2\" />\n              <img v-lazy=\"home.hero.image2\" alt=\"image\" class=\"lazy-img me-4\" />\n              <img v-lazy=\"home.hero.image3\" alt=\"image\" class=\"lazy-img\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nconst feedbacks = ref([])\nconst loading = ref(true)\nonMounted(() => {\n  homeApiService.get('feedbacks').then((res) => {\n    feedbacks.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"feedback-section-three position-relative mt-170 xl-mt-150 lg-mt-100\">\n    <div class=\"position-relative container\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-7 col-md-8 m-auto\">\n          <div class=\"title-two text-center\">\n            <img\n              v-lazy=\"'/assets/images/icon/icon_22.svg'\"\n              alt=\"img\"\n              class=\"lazy-img mb-10 me-auto ms-auto\"\n            />\n            <h2 class=\"fw-600 color-blue\">{{ trans('Check what these clients have to say.') }}</h2>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"feedBack_carousel\" class=\"carousel slide mt-55 lg-mt-30\" data-bs-ride=\"carousel\">\n        <div class=\"row\">\n          <div class=\"col-xxl-9 col-lg-8 col-md-10 m-auto\">\n            <div class=\"carousel-inner text-center\">\n              <template v-for=\"(item, index) in feedbacks\" :key=\"index\">\n                <div class=\"carousel-item\" :class=\"{ active: index == 0 }\">\n                  <p>“{{ item.review }}”</p>\n                  <div class=\"d-inline-block position-relative name fw-500 text-dark text-lg\">\n                    {{ item.author }},\n                    <span class=\"fw-normal opacity-50\"> {{ item.author_designation }}</span>\n                  </div>\n                </div>\n              </template>\n            </div>\n          </div>\n        </div>\n\n        <button\n          class=\"carousel-control-prev carousel-btn\"\n          type=\"button\"\n          data-bs-target=\"#feedBack_carousel\"\n          data-bs-slide=\"prev\"\n        >\n          <i class=\"bi bi-chevron-left\"></i>\n          <span class=\"visually-hidden\">{{ trans('Previous') }}</span>\n        </button>\n        <button\n          class=\"carousel-control-next carousel-btn\"\n          type=\"button\"\n          data-bs-target=\"#feedBack_carousel\"\n          data-bs-slide=\"next\"\n        >\n          <i class=\"bi bi-chevron-right\"></i>\n          <span class=\"visually-hidden\">{{ trans('Next') }}</span>\n        </button>\n\n        <div class=\"carousel-indicators\">\n          <template v-for=\"(item, index) in feedbacks\" :key=\"index\">\n            <button\n              type=\"button\"\n              data-bs-target=\"#feedBack_carousel\"\n              :data-bs-slide-to=\"index\"\n              :class=\"{ active: index == 0 }\"\n              :aria-current=\"index == 0 ? 'true' : ''\"\n              :aria-label=\"`Slide ${index + 1}`\"\n            >\n              <img v-lazy=\"item.company_logo\" alt=\"logo\" class=\"w-100 h-100 rounded-circle\" />\n            </button>\n          </template>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<template>\n    <section class=\"job-portal-intro\">\n        <div class=\"container\">\n            <div class=\"wrapper bottom-border pt-70 lg-pt-40 pb-65 lg-pb-40\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col-lg-7\">\n                        <div class=\"text-center text-lg-start\">\n                            <h2>{{ trans('Most complete job portal.') }}</h2>\n                            <p class=\"text-md m0 md-pb-20\">{{ trans('Signup and start find your job or talents.') }}</p>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-5\">\n                        <ul class=\"btn-group style-none d-flex justify-content-center justify-content-lg-end\">\n                            <li class=\"me-2\"><Link href=\"/jobs\" class=\"btn-seven border6\">{{ trans('Looking for job?') }}</Link></li>\n                            <li class=\"ms-2\"><Link href=\"/register\" class=\"btn-five border6\">{{ trans('Post a job') }}</Link></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n<script setup></script>","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport ServiceSection from '@/Pages/Web/Home/Three/Partials/ServiceSection.vue'\nimport CategorySection from '@/Pages/Web/Home/Three/Partials/CategorySection.vue'\nimport CategorySection2 from '@/Pages/Web/Home/Three/Partials/CategorySection2.vue'\nimport FeatureSection from '@/Pages/Web/Home/Three/Partials/FeatureSection.vue'\nimport FeatureSection2 from '@/Pages/Web/Home/Three/Partials/FeatureSection2.vue'\nimport FeatureSection3 from '@/Pages/Web/Home/Three/Partials/FeatureSection3.vue'\nimport BannerSection from '@/Pages/Web/Home/Three/Partials/BannerSection.vue'\nimport BannerSection2 from '@/Pages/Web/Home/Three/Partials/BannerSection2.vue'\nimport FeedbackSection from '@/Pages/Web/Home/Three/Partials/FeedbackSection.vue'\nimport JobIntroSection from '@/Pages/Web/Home/Three/Partials/JobIntroSection.vue'\n\ndefineOptions({ layout: DefaultLayout })\n\ndefineProps(['home', 'seo'])\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <BannerSection :home=\"home\" />\n  <ServiceSection />\n  <CategorySection />\n\n  <FeatureSection :home=\"home\" />\n  <FeatureSection2 :home=\"home\" />\n\n  <BannerSection2 :home=\"home\" />\n  <FeedbackSection />\n\n  <FeatureSection3 :home=\"home\" />\n  <CategorySection2 :home=\"home\" />\n\n  <div class=\"footer-with-bg\">\n    <JobIntroSection />\n  </div>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nconst brands = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('brands').then((res) => {\n    brands.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section\n    class=\"text-feature-two position-relative pt-180 xl-pt-150 lg-pt-100 pb-180 xl-pb-150 lg-pb-120\"\n  >\n    <div class=\"container\">\n      <div class=\"row align-items-center\">\n        <div class=\"col-lg-5 order-lg-last\">\n          <div class=\"wow fadeInRight\">\n            <div class=\"title-one\">\n              <div class=\"sub-title\">{{ trans('TOP BRAND') }}</div>\n              <h2>{{ trans('Collaboration with Top Brands.') }}</h2>\n            </div>\n            <p class=\"lg-mt-20 lg-mb-30 mb-40 mt-40 text-lg\">\n             {{ trans(`We collaborate with a number of top tier companies on imagining the future of work,\n              have a look.`) }}\n            </p>\n            <Link href=\"/about-us\" class=\"btn-nine tran3s d-flex align-items-center\">\n              <span class=\"fw-500 me-2\">{{ trans('Learn More') }}</span>\n              <i class=\"bi bi-arrow-right\"></i>\n            </Link>\n          </div>\n        </div>\n        <div class=\"col-lg-7 order-lg-first\">\n          <div\n            class=\"big-circle rounded-circle position-relative d-flex align-items-center justify-content-center ms-lg-5 wow fadeInLeft\"\n          >\n            <div\n              v-for=\"(item, index) in brands\"\n              :key=\"index\"\n              class=\"inner-circle rounded-circle d-flex align-items-center justify-content-center\"\n            >\n              <img v-lazy=\"item.preview\" alt=\"image\" class=\"lazy-img\" />\n            </div>\n          </div>\n          <!-- /.big-circle -->\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { Swiper, SwiperSlide } from 'swiper/vue'\nimport { Navigation } from 'swiper'\nimport { onMounted, ref } from 'vue'\nimport axios from 'axios'\n// swiper styles\nimport 'swiper/css'\nimport 'swiper/css/navigation'\nconst navigationOptions = {\n  nextEl: '.prev_a',\n  prevEl: '.next_a'\n}\nconst modules = [Navigation]\nconst items = ref([])\nconst loading = ref(true)\nonMounted(() => {\n  axios.get(route('api.home-experts')).then((res) => {\n    setTimeout(() => {\n      items.value = res.data\n      loading.value = false\n    }, 1000)\n  })\n})\n</script>\n\n<template>\n  <section class=\"expert-section-one position-relative mt-180 xl-mt-150 lg-mt-100\">\n    <div class=\"position-relative container\">\n      <div class=\"row\">\n        <div class=\"col-md-7\">\n          <div class=\"title-one text-md-start mb-65 md-mb-50 text-center\">\n            <h2>\n              {{ trans('Find the best') }}\n              <span class=\"position-relative\">{{ trans('talented') }}\n                <img src=\"/assets/images/shape/shape_04.svg\" alt=\"\" class=\"lazy-img shapes shape\" /></span>\n              {{ trans('expert in ') }} {{ $page.props.app_name }}.\n            </h2>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"\">\n        <Swiper :slides-per-view=\"1\" :space-between=\"10\" :modules=\"modules\" :navigation=\"navigationOptions\">\n          <SwiperSlide v-for=\"(item, index) in items\" :key=\"index\" class=\"item\">\n            <div class=\"card-style-three text-center\">\n              <div class=\"img-meta lg-mb-20 mb-40\">\n                <Link :href=\"route('candidates.show', item.username)\" class=\"name text-md fw-500 text-dark\">\n                <img v-lazy=\"item.avatar\" alt=\"\" class=\"expertSectionImg m-auto\" />\n                </Link>\n              </div>\n              <a href=\"#\" class=\"name text-md fw-500 text-dark\">{{ item.name }}</a>\n              <div class=\"post\">{{ item.designation }}</div>\n            </div>\n          </SwiperSlide>\n        </Swiper>\n      </div>\n      <ul class=\"slider-arrows slick-arrow-one d-flex justify-content-center style-none sm-mt-30\">\n        <li class=\"prev_a slick-arrow\">\n          <i class=\"bi bi-arrow-left\"></i>\n        </li>\n        <li class=\"next_a slick-arrow\">\n          <i class=\"bi bi-arrow-right\"></i>\n        </li>\n      </ul>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nconst categories = ref([])\nconst loading = ref(true)\nonMounted(() => {\n  homeApiService.get('menuCategories').then((res) => {\n    categories.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <nav class=\"category-menu d-none d-lg-block\">\n    <ul class=\"style-none nav-item d-flex align-items-center justify-content-start\">\n      <li v-for=\"(item, index) in categories\" :key=\"index\">\n        <Link :href=\"route('job-categories.show', item.slug)\">{{ item.title }}</Link>\n      </li>\n    </ul>\n  </nav>\n</template>\n","s\n<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\nimport { Link, useForm } from '@inertiajs/vue3'\nimport sharedComposable from '@/Composables/sharedComposable'\n\nconst { pickBy } = sharedComposable()\n\ndefineProps(['home'])\n\nconst popularCategories = ref([])\n\nconst form = useForm({\n  keyword: ''\n})\n\nonMounted(async () => {\n  homeApiService.get('popularCategories').then((res) => {\n    popularCategories.value = res\n  })\n})\n\nconst formSubmit = () => {\n  form.transform((data) => pickBy(data)).get(route('jobs.index'))\n}\n</script>\n\n<template>\n  <div class=\"hero-banner-two position-relative\">\n    <div class=\"container\">\n      <div class=\"position-relative pt-225 xl-pt-200 lg-pt-150 lg-pb-60 pb-80\">\n        <div class=\"row\">\n          <div class=\"col-lg-6 col-md-8\">\n            <h1>{{ home.hero.title }}</h1>\n            <p class=\"text-md mt-35 mb-50 lg-mb-30 pe-xxl-5\">\n              {{ home.hero.subtitle }}\n            </p>\n          </div>\n        </div>\n        <div class=\"position-relative\">\n          <div class=\"row\">\n            <div class=\"col-lg-6 col-md-8\">\n              <div class=\"job-search-two position-relative me-xxl-5\">\n                <form\n                  @submit.prevent=\"formSubmit\"\n                  class=\"d-flex align-items-center justify-content-between\"\n                >\n                  <input\n                    type=\"text\"\n                    v-model=\"form.keyword\"\n                    placeholder=\"Search job, title etc....\"\n                  />\n                  <button type=\"submit\" class=\"btn-five h-100\">\n                    {{ trans('Search') }}\n                  </button>\n                </form>\n                <ul class=\"filter-tags d-flex style-none mt-25 flex-wrap\">\n                  <li class=\"fw-500 text-dark me-2\">{{ trans('Popular') }}:</li>\n                  <li v-for=\"(item, index) in popularCategories\" :key=\"index\" class=\"me-2\">\n                    <Link :href=\"route('job-categories.show', item.slug)\">{{ item.title }}</Link>\n                  </li>\n                </ul>\n              </div>\n              <!-- /.job-search-two -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"img-box\">\n      <img v-lazy=\"home.hero.image1\" alt=\"image\" class=\"lazy-img\" />\n      <img v-lazy=\"home.hero.image2\" alt=\"image\" class=\"lazy-img shapes screen_01\" />\n      <img v-lazy=\"home.hero.image3\" alt=\"image\" class=\"lazy-img shapes screen_02 wow fadeInLeft\" />\n    </div>\n    <!-- /.img-box -->\n    <div class=\"rating-box position-relative\">\n      <div class=\"d-sm-flex justify-content-end\">\n        <div class=\"me-sm-5 pe-xxl-4\">\n          <div class=\"d-flex align-items-center\">\n            <img v-lazy=\"home.hero.image4\" alt=\"image\" class=\"lazy-img me-lg-4 me-2\" />\n            <div>\n              <div class=\"fw-500 text-dark text-lg\">{{ home.hero.footer_item1 }}</div>\n              <span>{{ trans('Individual Freelancer') }}</span>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div class=\"fw-500 text-dark mb-10 text-lg\">{{ home.hero.footer_item2 }}</div>\n          <ul class=\"d-flex align-items-center style-none rating\">\n            <template v-for=\"item in 5\" :key=\"item\">\n              <li>\n                <i\n                  :class=\"\n                    item > parseInt(home.hero.footer_item3 ?? 0) ? 'bi bi-star' : 'bi bi-star-fill'\n                  \"\n                ></i>\n              </li>\n            </template>\n\n            <li>{{ home.hero.footer_item4 }}</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <!-- /.rating-box -->\n    <img\n      v-lazy=\"'/assets/images/shape/shape_15.svg'\"\n      alt=\"image\"\n      class=\"lazy-img shapes shape_01\"\n    />\n    <img\n      v-lazy=\"'/assets/images/shape/shape_16.svg'\"\n      alt=\"image\"\n      class=\"lazy-img shapes shape_02\"\n    />\n    <img\n      v-lazy=\"'/assets/images/shape/shape_17.svg'\"\n      alt=\"image\"\n      class=\"lazy-img shapes shape_03\"\n    />\n    <img\n      v-lazy=\"'/assets/images/shape/shape_18.svg'\"\n      alt=\"image\"\n      class=\"lazy-img shapes shape_04\"\n    />\n    <img\n      v-lazy=\"'/assets/images/shape/shape_19.svg'\"\n      alt=\"image\"\n      class=\"lazy-img shapes shape_05\"\n    />\n    <img\n      v-lazy=\"'/assets/images/shape/shape_20.svg'\"\n      alt=\"image\"\n      class=\"lazy-img shapes shape_06\"\n    />\n  </div>\n  <!-- /.hero-banner-two -->\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\nimport trans from '@/Composables/transComposable'\n\nconst features = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('features').then((res) => {\n    features.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"how-it-works-two position-relative pt-130 xl-pt-110\">\n    <div class=\"container\">\n      <div\n        class=\"title-one d-flex align-items-center justify-content-between mb-45 lg-mb-20 text-center\"\n      >\n        <span class=\"line\"></span>\n        <h2 class=\"fw-600 pe-3 ps-3\">{{ trans(`Our Core Values`) }}</h2>\n        <span class=\"line\"></span>\n      </div>\n\n      <div class=\"border-bottom border-md0\">\n        <div class=\"row justify-content-center\">\n          <div class=\"col-lg-4 col-md-6\" v-for=\"(item, index) in features\" :key=\"index\">\n            <div\n              class=\"card-style-five position-relative mt-25 pb-35 lg-pb-20 wow fadeInUp text-center\"\n            >\n              <div class=\"numb fw-500 d-flex align-items-center justify-content-center m-auto\">\n                <span>0{{ index + 1 }}</span>\n              </div>\n              <div class=\"title fw-500 text-dark mt-25 mb-10 text-lg\">{{ item.title }}</div>\n              <p>{{ item.text }}</p>\n            </div>\n            <!-- /.card-style-five -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nconst categories = ref([])\nconst totalJobsCount = ref(0)\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('categories').then((res) => {\n    categories.value = res\n    loading.value = false\n  })\n\n  homeApiService.get('totalJobsCount').then((res) => {\n    totalJobsCount.value = res\n  })\n})\n</script>\n\n<template>\n  <section class=\"category-section-two position-relative pt-150 lg-pt-100 pb-140 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row justify-content-between\">\n        <div class=\"col-md-6 col-sm-8\">\n          <div class=\"title-one text-sm-start text-center\">\n            <h2 class=\"fw-600\">{{ trans('Most demanding job categories.') }}</h2>\n          </div>\n        </div>\n        <div class=\"col-md-5 col-sm-4\">\n          <div class=\"d-none d-sm-flex justify-content-sm-end mt-25\">\n            <Link href=\"/jobs\" class=\"btn-six border-0\"\n              >{{ trans('All Categories') }}\n              <img src=\"/assets/images/shape/shape_23.svg\" alt=\"image\" class=\"lazy-img shapes\"\n            /></Link>\n          </div>\n        </div>\n      </div>\n      <div class=\"card-wrapper row lg-mt-40 mt-80\">\n        <div\n          v-for=\"(category, index) in categories\"\n          :key=\"index\"\n          class=\"col-lg-3 col-md-4 col-sm-6 d-flex\"\n        >\n          <div class=\"card-style-four tran3s w-100 mt-30 wow fadeInUp\">\n            <Link :href=\"route('job-categories.show', category.slug)\" class=\"d-block\">\n              <div class=\"icon tran3s d-flex align-items-center justify-content-center\">\n                <img v-lazy=\"category.preview\" alt=\"shape\" class=\"lazy-img category-section-img\" />\n              </div>\n              <div class=\"title tran3s fw-500 text-lg\">{{ category.title }}</div>\n              <div class=\"total-job\">{{ category.jobs_count }} {{ trans('Jobs') }}</div>\n            </Link>\n          </div>\n          <!-- /.card-style-four -->\n        </div>\n        <div class=\"col-lg-3 col-md-4 col-sm-6 d-flex\">\n          <div\n            class=\"card-style-four bg-color tran3s w-100 mt-30 wow fadeInUp\"\n            data-wow-delay=\"0.1s\"\n          >\n            <Link :href=\"route('jobs.index')\" class=\"d-block\">\n              <div class=\"title text-white\">{{ totalJobsCount }} +</div>\n              <div class=\"text-lg text-white\">{{ trans('Job already posted') }}</div>\n              <div class=\"d-flex align-items-center justify-content-end mt-50\">\n                <img v-lazy=\"'/assets/images/shape/shape_22.svg'\" alt=\"image\" class=\"lazy-img\" />\n                <div class=\"icon tran3s d-flex align-items-center justify-content-center ms-5\">\n                  <img v-lazy=\"'/assets/images/icon/icon_19.svg'\" alt=\"image\" class=\"lazy-img\" />\n                </div>\n              </div>\n            </Link>\n          </div>\n          <!-- /.card-style-four -->\n        </div>\n      </div>\n      <!-- /.card-wrapper -->\n      <div class=\"d-sm-none mt-50 text-center\">\n        <a href=\"#\" class=\"btn-six border-0\">\n          {{ trans('All Categories ') }}\n          <img v-lazy=\"'/assets/images/shape/shape_23.svg'\" alt=\"image\" class=\"lazy-img shapes\"\n        /></a>\n      </div>\n    </div>\n    <img src=\"/assets/images/shape/shape_24.svg\" alt=\"image\" class=\"lazy-img shapes shape_01\" />\n  </section>\n</template>\n","<script setup>\nimport { Swiper, SwiperSlide } from 'swiper/vue'\nimport { Navigation } from 'swiper'\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\ndefineProps([\"home\"]);\n\nimport 'swiper/css'\nimport 'swiper/css/navigation'\n\nconst navigationOptions = {\n  nextEl: '.next_a',\n  prevEl: '.prev_a'\n}\nconst modules = [Navigation]\n\nconst feedbacks = ref([])\n\nconst loading = ref(true)\n\nonMounted(() => {\n  homeApiService.get('feedbacks').then((res) => {\n    feedbacks.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"feedback-section-two position-relative pt-65 lg-pt-20 mt-180 xl-mt-150 md-mt-30\">\n    <div class=\"container position-relative\">\n      <div class=\"row\">\n        <div class=\"col-lg-4\">\n          <div class=\"title-one mt-50\">\n            <div class=\"sub-title\">{{ home.feedback_section?.top_title }}</div>\n            <h2 class=\"fw-600\">{{ home.feedback_section?.title }}</h2>\n          </div>\n          <div class=\"mb-5 fw-500 rating-title lg-mt-40 mt-80\">\n            {{ home.feedback_section?.bottom_title }}\n          </div>\n          <p>\n            {{ home.feedback_section?.bottom_sub_title }}\n          </p>\n        </div>\n\n        <div class=\"pb-40 col-lg-8\">\n          <Swiper :slides-per-view=\"2\" class=\"ps-4\" :space-between=\"30\" :modules=\"modules\" :navigation=\"navigationOptions\">\n            <SwiperSlide v-for=\"(item, index) in feedbacks\" :key=\"index\">\n              <div class=\"feedback-block-two\">\n                <div class=\"review fw-500\">{{ item.rating_type }}</div>\n                <ul class=\"style-none d-flex rating\">\n                  <li v-for=\"sl in 5\" :key=\"sl\">\n                    <a href=\"#\"><i :class=\"sl <= item.ratting_point ? 'bi bi-star-fill' : 'bi bi-star'\"></i></a>\n                  </li>\n                </ul>\n                <blockquote class=\"mt-40 lg-mt-20 mb-50 lg-mb-30 text-md text-dark\">\n                  “{{ item.review }}”\n                </blockquote>\n                <div class=\"block-footer d-flex align-items-center justify-content-between pt-35 lg-pt-20\">\n                  <div class=\"d-flex align-items-center\">\n                    <img v-lazy=\"item.company_logo\" alt=\"image\" class=\"author-img rounded-circle\" />\n                    <div class=\"ms-3\">\n                      <div class=\"name fw-500 text-dark\">{{ item.author }}</div>\n                      <span class=\"opacity-50\">{{ item.author_designation }}</span>\n                    </div>\n                  </div>\n                  <img src=\"/assets/images/shape/shape_26.svg\" alt=\"image\" class=\"quote-icon\" />\n                </div>\n              </div>\n            </SwiperSlide>\n          </Swiper>\n        </div>\n      </div>\n    </div>\n    <img src=\"/assets/images/shape/shape_27.svg\" alt=\"image\" class=\"lazy-img shapes shape_01\" />\n  </section>\n</template>\n","<script setup>\nimport { onMounted, ref } from 'vue'\nimport homeApiService from '@/Composables/homeApiService'\n\nconst blogs = ref([])\nconst loading = ref(true)\n\nonMounted(async () => {\n  homeApiService.get('blogs').then((res) => {\n    blogs.value = res\n    loading.value = false\n  })\n})\n</script>\n\n<template>\n  <section class=\"blog-section-two pt-180 xl-pt-150 lg-pt-100 pb-150 xl-pb-130 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"title-one mb-30 lg-mb-10 text-center\">\n          <h2 class=\"fw-600\">{{ trans('Our Blog') }}</h2>\n        </div>\n\n        <div class=\"row gx-xxl-5\">\n          <div v-for=\"(blog, index) in blogs\" :key=\"index\" class=\"col-lg-4 col-md-6\">\n            <article class=\"blog-meta-one mt-35 wow fadeInUp\">\n              <figure class=\"post-img m0\">\n                <Link :href=\"route('blogs.show', blog)\" class=\"w-100 d-block\"\n                  ><img v-lazy=\"blog.preview?.value\" alt=\"image\" class=\"lazy-img w-100 tran4s\"\n                /></Link>\n              </figure>\n              <div class=\"post-data mt-30 lg-mt-20\">\n                <div>\n                  <Link :href=\"route('blogs.show', blog)\" class=\"date text-uppercase\">{{\n                    blog.created_at_diff\n                  }}</Link>\n                </div>\n                <Link :href=\"route('blogs.show', blog)\" class=\"mb-25 lg-mb-20 mt-10\">\n                  <h4 class=\"tran3s blog-title\">{{ blog.title }}</h4>\n                </Link>\n                <div>\n                  <Link :href=\"route('blogs.show', blog)\" class=\"btn-seven\"\n                    >{{ trans('Read More') }}\n                  </Link>\n                </div>\n              </div>\n            </article>\n            <!-- /.blog-meta-one -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup>\n\n</script>\n\n<template>\n    <section class=\"job-portal-intro\">\n        <div class=\"container\">\n            <div class=\"wrapper bottom-border top-border pt-60 lg-pt-40 pb-65 lg-pb-40\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col-lg-7\">\n                        <div class=\"text-center text-lg-start\">\n                            <h2>{{ trans('Most complete job portal.') }}</h2>\n                            <p class=\"text-md m0 md-pb-20\">{{ trans('Signup and start find your job or talents.') }}</p>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-5\">\n                        <ul class=\"btn-group style-none d-flex justify-content-center justify-content-lg-end\">\n                            <li class=\"me-2\"><Link href=\"/jobs\" class=\"btn-seven border6\">{{ trans('Looking for job?') }}</Link></li>\n                            <li class=\"ms-2\"><Link href=\"/register\" class=\"btn-five border6\">{{ trans('Post a job') }}</Link></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport BannerSection from '@/Pages/Web/Home/Two/Partials/BannerSection.vue'\nimport FeatureSection from '@/Pages/Web/Home/Two/Partials/FeatureSection.vue'\nimport FeatureSection2 from '@/Pages/Web/Home/Two/Partials/FeatureSection2.vue'\nimport FeatureSection3 from '@/Pages/Web/Home/Two/Partials/FeatureSection3.vue'\nimport CategorySection from '@/Pages/Web/Home/Two/Partials/CategorySection.vue'\nimport FeedbackSection from '@/Pages/Web/Home/Two/Partials/FeedbackSection.vue'\nimport BlogSection from '@/Pages/Web/Home/Two/Partials/BlogSection.vue'\nimport JobIntroSection from '@/Pages/Web/Home/Two/Partials/JobIntroSection.vue'\n\ndefineOptions({ layout: DefaultLayout })\n\ndefineProps(['home', 'seo'])\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n\n  <BannerSection :home=\"home\" />\n  <FeatureSection />\n  <FeatureSection2 :home=\"home\" />\n  <CategorySection />\n  <FeatureSection3 :home=\"home\" />\n  <FeedbackSection :home=\"home\" />\n  <BlogSection />\n  <JobIntroSection />\n</template>\n","<script setup>\nimport { Head, useForm } from \"@inertiajs/vue3\";\nimport DefaultLayout from \"@/Layouts/Default.vue\";\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport trans from '@/Composables/transComposable';\nimport notify from \"@/Plugins/Admin/notify\";\ndefineOptions({ layout: DefaultLayout });\n\nconst props = defineProps([\"job\"]);\n\nconst form = useForm({\n  email: \"\",\n  message: \"\",\n  fields: [...props.job.fields],\n});\n\nconst submit = () => {\n  form.post(route(\"jobs.apply.submit\", props.job.slug), {\n    preserveScroll: true,\n    onSuccess: () => {\n      notify.success(\"Congratulations! Application has been submitted successfully\");\n      form.reset();\n    },\n  });\n};\n</script>\n\n<template>\n  <Head title=\"Apply to a job\" />\n\n  <div class=\"pb-0 inner-banner-one position-relative\">\n    <img\n      src=\"/assets/images/shape/shape_02.svg\"\n      alt=\"\"\n      class=\"lazy-img shapes shape_01\"\n    />\n  </div>\n\n  <section class=\"contact-us-section pt-100 lg-pt-80\">\n    <div class=\"container\">\n      <div class=\"border-bottom pb-150 lg-pb-80\">\n        <div class=\"text-center title-one\">\n          <h2>{{ trans(\"Apply to a job\") }}</h2>\n          <br />\n          {{ form }}\n          <h3>\n            <Link :href=\"route('jobs.show', job.slug)\">{{ job.title }}</Link>\n          </h3>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"m-auto col-xl-9\">\n            <div class=\"form-style-one mt-85 lg-mt-50 wow fadeInUp\">\n              <form @submit.prevent=\"submit\">\n                <div\n                  v-for=\"field in form.fields\"\n                  :key=\"field.label\"\n                  class=\"input-group-meta form-group mb-35\"\n                >\n                  <label>{{ field.label }}</label>\n                  <input\n                    v-if=\"field.type == 'file'\"\n                    type=\"file\"\n                    @input=\"field.value = $event.target.files[0]\"\n                    class=\"pt-3 mb-20 form-control-file\"\n                  />\n\n                  <textarea\n                    v-else-if=\"field.type == 'textarea'\"\n                    v-model=\"field.value\"\n                    class=\"mb-20 form-control\"\n                    rows=\"5\"\n                  >\n                  </textarea>\n\n                  <input\n                    v-else\n                    :type=\"field.type\"\n                    v-model=\"field.value\"\n                    class=\"mb-20 form-control\"\n                  />\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <div class=\"input-group-meta form-group mb-35\">\n                      <label for=\"\">{{ trans(\"Email\") }}</label>\n                      <input v-model=\"form.email\" type=\"text\" />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"input-group-meta form-group mb-35\">\n                      <label for=\"\">{{ trans(\"Message\") }}</label>\n                      <textarea v-model=\"form.message\"></textarea>\n                    </div>\n                  </div>\n\n                  <div class=\"col-12\">\n                    <SpinnerBtn\n                      classes=\"btn-eleven d-flex align-items-center justify-content-center\"\n                      type=\"submit\"\n                      :processing=\"form.processing\"\n                      :btn-text=\"trans('Submit Application')\"\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n            <!-- /.form-style-one -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <!-- ./contact-us-section -->\n</template>\n","<script setup>\nimport sharedComposable from \"@/Composables/sharedComposable\";\nimport { useForm } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nconst { formatNumber, textExcerpt } = sharedComposable();\ndefineProps({\n  items: {\n    type: Object,\n  },\n  col: {\n    default: 6,\n  },\n});\n\nconst toggleBookmark = (job) => {\n  let form = useForm({});\n  form.post(route(\"jobs.bookmark\", job), {\n    preserveScroll: true,\n    onSuccess: () => {},\n  });\n};\n</script>\n\n<template>\n  <div v-for=\"job in items\" :key=\"job.id\" class=\"mb-30\" :class=\"`col-sm-${col}`\">\n    <div\n      class=\"job-list-two style-two position-relative\"\n      :class=\"{ favourite: job.featured_expire_at }\"\n    >\n      <Link :href=\"route('jobs.show', job.slug)\" class=\"logo\"\n        ><img\n          v-lazy=\"\n            job.user?.avatar == null\n              ? `https://ui-avatars.com/api/?name=${job.user.name}`\n              : `${job.user?.avatar}`\n          \"\n          alt=\"avatar\"\n          class=\"m-auto lazy-img\"\n      /></Link>\n      <button\n        type=\"button\"\n        @click=\"toggleBookmark(job)\"\n        class=\"text-center save-btn rounded-circle tran3s me-3\"\n        :class=\"{ 'bg-success': job.is_bookmarked }\"\n        title=\"Save Job\"\n      >\n        <i class=\"bi bi-bookmark-dash\"></i>\n      </button>\n      <div>\n        <a :href=\"route('jobs.show', job.slug)\" class=\"job-duration fw-500\">{{\n          job.type\n        }}</a>\n      </div>\n      <div>\n        <Link :href=\"route('jobs.show', job.slug)\" class=\"title fw-500 tran3s\">\n          {{ textExcerpt(job.title, 50) }}</Link\n        >\n      </div>\n      <div class=\"job-salary\">\n        <span\n          class=\"fw-500 text-dark\"\n          v-if=\"\n            job.salary_range &&\n            job.salary_range.split('-')[0] > 0 &&\n            job.salary_range.split('-')[1] > 0\n          \"\n        >\n          {{ formatNumber(job.salary_range.split(\"-\")[0]) }}\n          -\n          {{ formatNumber(job.salary_range.split(\"-\")[1]) }}\n        </span>\n        <span class=\"fw-500 text-dark\" v-else>{{ trans(\"Negotiable \") }}</span>\n        /\n        {{ job.salary_type }}\n      </div>\n      <div class=\"mt-auto d-flex align-items-center justify-content-between\">\n        <div class=\"job-location\" v-if=\"!job.country?.[0]?.name\">\n          {{ trans(\"Remote\") }}\n        </div>\n        <div class=\"job-location\" v-else>\n          {{ job.country?.[0]?.name ?? \"\" }},{{ job.state?.[0]?.name ?? \"\" }}\n        </div>\n        <Link :href=\"route('jobs.show', job.slug)\" class=\"text-center apply-btn tran3s\">\n          {{ trans(\"Details\") }}\n        </Link>\n      </div>\n    </div>\n    <!-- /.job-list-two -->\n  </div>\n</template>\n","<script setup>\nimport JobSearchForm from '@/Components/JobSearchForm.vue'\nimport { computed } from 'vue'\nimport { useThemeLoaderStore } from '@/Store/themeLoaderStore'\nconst themeLoader = useThemeLoaderStore()\nconst innerBannerColor = computed(() => {\n  const themes = ['One', 'Six']\n  if (themes.includes(themeLoader.theme)) {\n    return ''\n  }\n  return 'inner-banner-colors'\n})\n</script>\n\n<template>\n  <div class=\"inner-banner-one position-relative\" :class=\"innerBannerColor\">\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"row\">\n          <div class=\"col-xl-6 m-auto text-center\">\n            <div class=\"title-two\">\n              <h2>{{ trans('Job Listing') }}</h2>\n            </div>\n            <p class=\"mt-30 lg-mt-20 mb-35 lg-mb-20 text-lg\">\n              {{ trans('We delivered blazing fast & striking work solution') }}\n            </p>\n          </div>\n        </div>\n        <div class=\"position-relative\">\n          <div class=\"row\">\n            <div class=\"col-xl-9 col-lg-8 m-auto\">\n              <div class=\"job-search-one position-relative\">\n                <JobSearchForm />\n              </div>\n              <!-- /.job-search-one -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <img\n      v-lazy=\"'/assets/images/shape/shape_02.svg'\"\n      alt=\"shape\"\n      class=\"lazy-img shapes shape_01\"\n    />\n    <img\n      v-lazy=\"'/assets/images/shape/shape_03.svg'\"\n      alt=\"shape\"\n      class=\"lazy-img shapes shape_02\"\n    />\n  </div>\n</template>\n","<script setup>\nimport LabelWithAjaxLoader from '@/Components/LabelWithAjaxLoader.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport { useJobFiltersStore } from '@/Store/jobFilterStore'\nimport { onMounted, computed } from 'vue'\n\nconst filter = useJobFiltersStore()\n\nconst props = defineProps([\n  'locations',\n  'jobTypes',\n  'JobExperiences',\n  'services',\n  'currencies',\n  'request',\n  'maxSalary'\n])\nonMounted(() => {\n  filter.updateInitialState(props)\n})\nconst inputRangePercentage = computed(() => {\n  return 100 - filter.filterForm.max_salary / (props.maxSalary / 100) + '%'\n})\n</script>\n\n<template>\n  <button\n    type=\"button\"\n    class=\"filter-btn w-100 fw-500 tran3s d-lg-none mb-40 h-auto pb-2 pt-2\"\n    data-bs-toggle=\"offcanvas\"\n    data-bs-target=\"#filteroffcanvas\"\n  >\n    <i class=\"bi bi-funnel\"></i>\n    {{ trans('Filter') }}\n  </button>\n  <div class=\"filter-area-tab offcanvas offcanvas-start\" id=\"filteroffcanvas\">\n    <button\n      type=\"button\"\n      class=\"btn-close text-reset d-lg-none\"\n      data-bs-dismiss=\"offcanvas\"\n      aria-label=\"Close\"\n    ></button>\n    <div class=\"main-title fw-500 text-dark\">\n      {{ trans('Filter By') }}\n    </div>\n    <div class=\"light-bg border-20 pt-25 pb-30 mt-20 pe-4 ps-4\">\n      <div class=\"filter-block bottom-line pb-25\">\n        <a\n          class=\"filter-title fw-500 text-dark\"\n          data-bs-toggle=\"collapse\"\n          href=\"#collapseSemploye\"\n          role=\"button\"\n          aria-expanded=\"false\"\n          >{{ trans('Search Job') }}</a\n        >\n        <div class=\"show collapse\" id=\"collapseSemploye\">\n          <div class=\"main-body\">\n            <div class=\"input-box position-relative\">\n              <input v-model=\"filter.filterForm.keyword\" type=\"text\" placeholder=\"Job Title\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"filter-block bottom-line pb-25\">\n        <a\n          class=\"filter-title fw-500 text-dark\"\n          data-bs-toggle=\"collapse\"\n          href=\"#collapseLocation\"\n          role=\"button\"\n          aria-expanded=\"false\"\n          >{{ trans('Location') }}</a\n        >\n        <div class=\"show collapse\" id=\"collapseLocation\">\n          <div class=\"main-body\">\n            <ul class=\"style-none filter-input\">\n              <li>\n                <input\n                  type=\"checkbox\"\n                  name=\"JobType\"\n                  @change=\"filter.setRemote(true)\"\n                  :checked=\"filter.filterForm.is_remote === true\"\n                />\n                <label>{{ trans('Remote') }} </label>\n              </li>\n            </ul>\n            <template v-if=\"!filter.filterForm.is_remote\">\n              <NiceSelect\n                v-model=\"filter.filterForm.country\"\n                :options=\"filter.locations\"\n                value-by=\"id\"\n                label=\"name\"\n                placeholder=\"Select Country\"\n                @change=\"filter.getStates\"\n              />\n\n              <div class=\"mt-2\">\n                <LabelWithAjaxLoader\n                  class=\"filter-title fw-500 text-dark\"\n                  text=\"States\"\n                  :loading=\"filter.loading.states\"\n                />\n                <NiceSelect\n                  v-model=\"filter.filterForm.state\"\n                  :options=\"filter.states\"\n                  value-by=\"id\"\n                  label=\"name\"\n                  placeholder=\"Select State\"\n                />\n              </div>\n            </template>\n          </div>\n        </div>\n      </div>\n      <!-- /.filter-block -->\n      <div class=\"filter-block bottom-line pb-25 mt-25\">\n        <a\n          class=\"filter-title fw-500 text-dark\"\n          data-bs-toggle=\"collapse\"\n          href=\"#collapseJobType\"\n          role=\"button\"\n          aria-expanded=\"false\"\n          >{{ trans('Job Type') }}</a\n        >\n        <div class=\"show collapse\" id=\"collapseJobType\">\n          <div class=\"main-body\">\n            <ul class=\"style-none filter-input\">\n              <li v-for=\"job in jobTypes\" :key=\"job.type\">\n                <input\n                  type=\"checkbox\"\n                  name=\"JobType\"\n                  @change=\"filter.setType(job.type)\"\n                  :checked=\"filter.filterForm.job_type === job.type\"\n                />\n                <label\n                  >{{ job.type }} <span>{{ job.count }}</span></label\n                >\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <!-- /.filter-block -->\n      <div class=\"filter-block bottom-line pb-25 mt-25\">\n        <a\n          class=\"filter-title fw-500 text-dark\"\n          data-bs-toggle=\"collapse\"\n          href=\"#collapseExp\"\n          role=\"button\"\n          aria-expanded=\"false\"\n          >{{ trans('Experience') }}</a\n        >\n        <div class=\"show collapse\" id=\"collapseExp\">\n          <div class=\"main-body\">\n            <ul class=\"style-none filter-input\">\n              <li v-for=\"job in JobExperiences\" :key=\"job.experience\">\n                <input\n                  type=\"checkbox\"\n                  name=\"Experience\"\n                  @change=\"filter.setExperience(job.experience)\"\n                  :checked=\"filter.filterForm.experience === job.experience\"\n                  :value=\"job.experience\"\n                />\n                <label\n                  >{{ job.experience }} <span>{{ job.count }}</span></label\n                >\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <!-- /.filter-block -->\n      <div class=\"filter-block bottom-line pb-25 mt-25\">\n        <a\n          class=\"filter-title fw-500 text-dark\"\n          data-bs-toggle=\"collapse\"\n          href=\"#collapseSalary\"\n          role=\"button\"\n          aria-expanded=\"false\"\n          >{{ trans('Salary') }}</a\n        >\n        <div class=\"show collapse\" id=\"collapseSalary\">\n          <div class=\"main-body\">\n            <div class=\"salary-slider\">\n              <div class=\"price-input d-flex align-items-center pt-5\">\n                <div class=\"field d-flex align-items-center\">\n                  <input\n                    type=\"number\"\n                    class=\"input-min\"\n                    :value=\"filter.filterForm.min_salary\"\n                    disabled\n                  />\n                </div>\n                <div class=\"pe-1 ps-1\">-</div>\n                <div class=\"field d-flex align-items-center\">\n                  <input\n                    type=\"number\"\n                    class=\"input-max\"\n                    :value=\"filter.filterForm.max_salary\"\n                    disabled\n                  />\n                </div>\n\n                <div class=\"filter-currency\">\n                  <NiceSelect\n                    v-model=\"filter.filterForm.currency\"\n                    :options=\"filter.currencies\"\n                    value-by=\"code\"\n                    label=\"code\"\n                    placeholder=\"Currency\"\n                  />\n                </div>\n              </div>\n              <div class=\"slider\">\n                <div class=\"progress\" :style=\"{ right: inputRangePercentage }\"></div>\n              </div>\n              <div class=\"range-input mb-10\">\n                <input\n                  v-model=\"filter.filterForm.min_salary\"\n                  type=\"range\"\n                  class=\"range-min\"\n                  min=\"0\"\n                  :max=\"filter.minMaxSalary\"\n                  step=\"1000\"\n                />\n                <input\n                  v-model=\"filter.filterForm.max_salary\"\n                  type=\"range\"\n                  class=\"range-max\"\n                  min=\"0\"\n                  :max=\"props.maxSalary\"\n                  step=\"1000\"\n                />\n              </div>\n            </div>\n\n            <ul class=\"style-none d-flex justify-content-between radio-filter mt-5 flex-wrap\">\n              <li>\n                <input\n                  v-model=\"filter.filterForm.salary_type\"\n                  type=\"radio\"\n                  name=\"jobDuration\"\n                  value=\"Weekly\"\n                />\n                <label>{{ trans('Weekly') }}</label>\n              </li>\n              <li>\n                <input\n                  v-model=\"filter.filterForm.salary_type\"\n                  type=\"radio\"\n                  name=\"jobDuration\"\n                  value=\"Monthly\"\n                />\n                <label>{{ trans('Monthly') }}</label>\n              </li>\n              <li>\n                <input\n                  v-model=\"filter.filterForm.salary_type\"\n                  type=\"radio\"\n                  name=\"jobDuration\"\n                  value=\"Hourly\"\n                />\n                <label>{{ trans('Hourly') }}</label>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <!-- /.filter-block -->\n      <div class=\"filter-block bottom-line pb-25 mt-25\">\n        <a\n          class=\"filter-title fw-500 text-dark\"\n          data-bs-toggle=\"collapse\"\n          href=\"#collapseCategory\"\n          role=\"button\"\n          aria-expanded=\"false\"\n          >{{ trans('Category') }}</a\n        >\n        <div class=\"show collapse\" id=\"collapseCategory\">\n          <div class=\"main-body\">\n            <NiceSelect\n              v-model=\"filter.filterForm.service\"\n              :options=\"filter.services\"\n              value-by=\"slug\"\n              label=\"title\"\n              placeholder=\"Select Service\"\n              @change=\"filter.getCategories()\"\n              class=\"mb-2\"\n            />\n\n            <div v-if=\"filter.loading.categories\">\n              <img src=\"/assets/images/ajax_loading.svg\" class=\"loader-img\" />\n            </div>\n\n            <ul v-else class=\"style-none filter-input\">\n              <li v-for=\"cat in filter.categories\" :key=\"cat.id\">\n                <input\n                  @change=\"filter.setCategory(cat.slug)\"\n                  type=\"checkbox\"\n                  name=\"category\"\n                  :value=\"cat.slug\"\n                  :checked=\"filter.filterForm.category === cat.slug\"\n                />\n                <label\n                  >{{ cat.title }} <span>{{ cat.jobs_count }}</span></label\n                >\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <!-- /.filter-block -->\n      <div class=\"filter-block bottom-line pb-25 mt-25\" v-if=\"filter.filterForm.category\">\n        <a\n          class=\"filter-title fw-500 text-dark\"\n          data-bs-toggle=\"collapse\"\n          href=\"#collapseTag\"\n          role=\"button\"\n          aria-expanded=\"false\"\n          >{{ trans('Skills') }}</a\n        >\n        <div class=\"show collapse\" id=\"collapseTag\">\n          <div class=\"main-body\">\n            <ul\n              v-if=\"filter.skills.length\"\n              class=\"style-none d-flex justify-space-between radio-filter mb-5 flex-wrap\"\n            >\n              <li v-for=\"tag in filter.skills\" :key=\"tag.id\">\n                <input\n                  type=\"checkbox\"\n                  name=\"tags\"\n                  @change=\"filter.setSkill(tag.id)\"\n                  :value=\"tag.id\"\n                  :checked=\"filter.filterForm.skills.includes(tag.id)\"\n                />\n                <label>{{ tag.title }}</label>\n              </li>\n            </ul>\n\n            <div v-if=\"filter.loading.skills\">\n              <img src=\"/assets/images/ajax_loading.svg\" class=\"loader-img\" />\n            </div>\n\n            <div\n              v-if=\"!filter.loading.skills && !filter.skills.length\"\n              class=\"text-muted small text-center\"\n            >\n              {{ trans('No items found') }}\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- /.filter-block -->\n\n      <button\n        type=\"button\"\n        @click=\"filter.submit\"\n        class=\"btn-ten fw-500 w-100 tran3s mt-30 text-center text-white\"\n      >\n        {{ trans(' Apply Filter') }}\n      </button>\n      <button @click=\"filter.clear\" class=\"btn-nine fw-500 w-100 tran3s mt-30 text-center\">\n        {{ trans('Clear Filter') }}\n      </button>\n    </div>\n  </div>\n  <!-- /.filter-area-tab -->\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport JobsItemGrid from '@/Components/Job/JobsItemGrid.vue'\nimport JobsItemList from '@/Components/Job/JobsItemList.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport InnerBanner from '@/Pages/Web/Job/Partials/InnerBanner.vue'\nimport JobIntro from '@/Pages/Web/Candidate/Partials/JobIntro.vue'\nimport FilterForm from './Partials/FilterForm.vue'\nimport { useJobFiltersStore } from '@/Store/jobFilterStore'\nimport NoDataAlert from '@/Components/NoDataAlert.vue'\nimport { onMounted } from 'vue'\nconst filter = useJobFiltersStore()\n\ndefineOptions({ layout: DefaultLayout })\ndefineProps([\n  'openings',\n  'locations',\n  'jobTypes',\n  'JobExperiences',\n  'categories',\n  'tags',\n  'seo',\n  'currencies',\n  'request',\n  'maxSalary'\n])\n\nonMounted(() => {\n  if (!filter.layout) {\n    filter.$patch({\n      layout: 'grid'\n    })\n  }\n})\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <InnerBanner />\n\n  <section class=\"job-listing-three pt-110 lg-pt-80 pb-160 xl-pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xl-3 col-lg-4\">\n          <FilterForm\n            :locations=\"locations\"\n            :jobTypes=\"jobTypes\"\n            :JobExperiences=\"JobExperiences\"\n            :currencies=\"currencies\"\n            :maxSalary=\"maxSalary\"\n            :request=\"request\"\n          />\n        </div>\n\n        <div class=\"col-xl-9 col-lg-8\">\n          <div class=\"job-post-item-wrapper ms-xxl-5 ms-xl-3\">\n            <div class=\"upper-filter d-flex justify-content-between align-items-center mb-20\">\n              <div class=\"total-job-found\">\n                {{ trans('All') }} <span class=\"text-dark\">{{ openings.total }}</span>\n                {{ trans('jobs found') }}\n              </div>\n              <div class=\"d-flex align-items-center\">\n                <div class=\"short-filter d-flex align-items-center\">\n                  <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n                  <NiceSelect\n                    v-model=\"filter.filterForm.sort\"\n                    value-by=\"order\"\n                    label=\"name\"\n                    :options=\"filter.sorts\"\n                    placeholder=\"Default\"\n                    @change=\"filter.submit\"\n                  />\n                </div>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s list-btn ms-2 text-center\"\n                  title=\"Active List\"\n                  :class=\"[filter.layout == 'grid' ? 'active' : '']\"\n                  @click=\"filter.setLayout('list')\"\n                >\n                  <i class=\"bi bi-list\"></i>\n                </button>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s grid-btn ms-2 text-center\"\n                  title=\"Active Grid\"\n                  :class=\"[filter.layout == 'list' ? 'active' : '']\"\n                  @click=\"filter.setLayout('grid')\"\n                >\n                  <i class=\"bi bi-grid\"></i>\n                </button>\n              </div>\n            </div>\n            <!-- /.upper-filter -->\n            <div class=\"accordion-box list-style\" :class=\"[filter.layout == 'list' ? 'show' : '']\">\n              <JobsItemList :items=\"openings.data\" />\n            </div>\n\n            <div class=\"accordion-box grid-style\" :class=\"[filter.layout == 'grid' ? 'show' : '']\">\n              <div class=\"row\">\n                <JobsItemGrid :items=\"openings.data\" />\n              </div>\n            </div>\n\n            <NoDataAlert v-if=\"!openings.total\" />\n\n            <Paginate :links=\"openings.links\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <JobIntro />\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport JobsItemGrid from '@/Components/Job/JobsItemGrid.vue'\nimport JobsItemList from '@/Components/Job/JobsItemList.vue'\nimport JobIntro from '@/Pages/Web/Candidate/Partials/JobIntro.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport InnerBanner from '@/Pages/Web/Job/Partials/InnerBanner.vue'\nimport FilterForm from './Partials/FilterForm.vue'\nimport { useJobFiltersStore } from '@/Store/jobFilterStore'\nimport { onMounted } from 'vue'\nconst filter = useJobFiltersStore()\n\ndefineOptions({ layout: DefaultLayout })\nconst props = defineProps([\n  'openings',\n  'locations',\n  'jobTypes',\n  'JobExperiences',\n  'services',\n  'seo',\n  'currencies',\n  'request',\n  'maxSalary'\n])\n\nonMounted(() => {\n  if (!filter.layout) {\n    filter.$patch({\n      layout: 'list'\n    })\n  }\n})\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n\n  <InnerBanner />\n\n  <section class=\"job-listing-three pt-110 lg-pt-80 pb-160 xl-pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xl-3 col-lg-4\">\n          <FilterForm\n            :locations=\"locations\"\n            :currencies=\"currencies\"\n            :jobTypes=\"jobTypes\"\n            :JobExperiences=\"JobExperiences\"\n            :services=\"services\"\n            :maxSalary=\"maxSalary\"\n            :request=\"request\"\n          />\n        </div>\n\n        <div class=\"col-xl-9 col-lg-8\">\n          <div class=\"job-post-item-wrapper ms-xxl-5 ms-xl-3\">\n            <div class=\"upper-filter d-flex justify-content-between align-items-center mb-20\">\n              <div class=\"total-job-found\">\n                <span class=\"text-dark\">{{ openings.total }}</span>\n                {{ trans('jobs found') }}\n              </div>\n              <div class=\"d-flex align-items-center\">\n                <div class=\"short-filter d-flex align-items-center\">\n                  <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n                  <NiceSelect\n                    v-model=\"filter.filterForm.sort\"\n                    value-by=\"order\"\n                    label=\"name\"\n                    :options=\"filter.sorts\"\n                    placeholder=\"Default\"\n                    @change=\"filter.submit\"\n                  />\n                </div>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s list-btn ms-2 text-center\"\n                  title=\"Active List\"\n                  :class=\"[filter.layout == 'grid' ? 'active' : '']\"\n                  @click=\"filter.setLayout('list')\"\n                >\n                  <i class=\"bi bi-list\"></i>\n                </button>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s grid-btn ms-2 text-center\"\n                  title=\"Active Grid\"\n                  :class=\"[filter.layout == 'list' ? 'active' : '']\"\n                  @click=\"filter.setLayout('grid')\"\n                >\n                  <i class=\"bi bi-grid\"></i>\n                </button>\n              </div>\n            </div>\n            <!-- /.upper-filter -->\n\n            <template v-if=\"openings.total\">\n              <div\n                class=\"accordion-box list-style\"\n                :class=\"[filter.layout == 'list' ? 'show' : '']\"\n              >\n                <JobsItemList :items=\"openings.data\" />\n              </div>\n\n              <div\n                class=\"accordion-box grid-style\"\n                :class=\"[filter.layout == 'grid' ? 'show' : '']\"\n              >\n                <div class=\"row\">\n                  <JobsItemGrid :items=\"openings.data\" />\n                </div>\n              </div>\n              <Paginate :links=\"openings.links\" />\n            </template>\n\n            <div class=\"alert alert-info mt-30 text-center\" role=\"alert\" v-else>\n              {{ trans('No jobs found') }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <JobIntro />\n</template>\n","<script setup>\nimport { useForm } from \"@inertiajs/vue3\";\nimport trans from '@/Composables/transComposable';\nimport SpinnerBtn from \"@/Components/Admin/SpinnerBtn.vue\";\nimport notify from \"@/Plugins/Admin/notify\";\nimport InputFieldError from \"@/Components/InputFieldError.vue\";\n\nconst props = defineProps([\"job\"]);\n\nconst form = useForm({\n  email: \"\",\n  message: \"\",\n  fields: [...props.job?.fields ?? []],\n});\nconst jobApplication = () => {\n  form.post(route(\"jobs.apply.form\", props.job.slug), {\n    preserveScroll: true,\n    onSuccess: () => {\n      notify.success(trans(\"Application has been submitted successfully\"));\n      $(\"#applyModalClsBtn\").trigger(\"click\");\n    },\n  });\n};\n</script>\n\n<template>\n  <div\n    class=\"modal fade\"\n    id=\"applyModal\"\n    tabindex=\"-1\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    role=\"dialog\"\n    aria-labelledby=\"applyModalTitle\"\n    aria-hidden=\"true\"\n  >\n    <div\n      class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg\"\n      role=\"document\"\n    >\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"applyModalTitle\">\n            {{ trans(\"Job Application\") }}\n          </h5>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            id=\"applyModalClsBtn\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <form @submit.prevent=\"jobApplication\">\n          <div class=\"modal-body\">\n            <template v-if=\"job.apply_type == 1\">\n              <div class=\"mb-2\">\n                <label for=\"\">{{ trans(\"Email\") }}</label>\n                <input class=\"form-control\" v-model=\"form.email\" type=\"text\" />\n                <InputFieldError :message=\"form.errors.email\" />\n              </div>\n              <div class=\"mb-2\">\n                <label for=\"\">{{ trans(\"Message\") }}</label>\n                <textarea v-model=\"form.message\" class=\"form-control\"></textarea>\n                <InputFieldError :message=\"form.errors.message\" />\n              </div>\n            </template>\n\n            <div class=\"mb-2\" v-for=\"field in form.fields\" :key=\"field.label\">\n              <label>{{ field.label }}</label>\n              <input\n                v-if=\"field.type == 'file'\"\n                type=\"file\"\n                @input=\"field.value = $event.target.files[0]\"\n                class=\"mb-20 form-control\"\n              />\n\n              <textarea\n                v-else-if=\"field.type == 'textarea'\"\n                v-model=\"field.value\"\n                class=\"mb-20 form-control\"\n                rows=\"5\"\n              >\n              </textarea>\n\n              <input\n                v-else\n                :type=\"field.type\"\n                v-model=\"field.value\"\n                class=\"mb-20 form-control\"\n              />\n            </div>\n\n            <div v-if=\"!form.fields.length\" class=\"alert alert-info\">{{ trans('Click the submit application button to apply') }}</div>\n\n            <InputFieldError :message=\"form.errors.value\" />\n            <br />\n\n            <div div class=\"modal-footer\">\n              <button type=\"button\" class=\"py-2 btn-eight\" data-bs-dismiss=\"modal\">\n                {{ trans(\"Close\") }}\n              </button>\n              <SpinnerBtn\n                type=\"submit\"\n                :processing=\"form.processing\"\n                class=\"btn-one\"\n                :btn-text=\"trans('Submit Application')\"\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport JobsItemGrid from '@/Components/Job/JobsItemGrid.vue'\nimport Breadcrumb from '@/Components/Breadcrumb.vue'\nimport moment from 'moment'\nimport { computed, onMounted } from 'vue'\nimport JobIntro from '../../Candidate/Partials/JobIntro.vue'\nimport trans from '@/Composables/transComposable'\n\nimport JobApplicationModal from '@/Pages/Web/Job/Partials/JobApplyModal.vue'\n\ndefineOptions({ layout: DefaultLayout })\n\nconst props = defineProps(['job', 'jobs', 'alreadyApplied', 'seo'])\n\nconst { authUser, formatNumber } = sharedComposable()\nconst socials = computed(() => props.job.user?.meta.social)\n\n\nonMounted(() => {\n  if ($('.related-job-slider').length) {\n    $('.related-job-slider').slick({\n      dots: false,\n      arrows: true,\n      lazyLoad: 'ondemand',\n      prevArrow: $('.prev_e'),\n      nextArrow: $('.next_e'),\n      centerPadding: '0px',\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      autoplay: true,\n      autoplaySpeed: 3000,\n      responsive: [\n        {\n          breakpoint: 992,\n          settings: {\n            slidesToShow: 2\n          }\n        },\n        {\n          breakpoint: 768,\n          settings: {\n            slidesToShow: 1\n          }\n        }\n      ]\n    })\n  }\n\n})\n\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <Breadcrumb\n    :title=\"job.title\"\n    :href=\"route('companies.show', job.user.username)\"\n    :href-text=\"job.user.meta.company.name\"\n    :subtitle=\"job.title\"\n  />\n  <!-- /.inner-banner-one -->\n\n  <section class=\"job-details lg-pt-60 pb-130 lg-pb-80 pt-60\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xxl-9 col-xl-8\">\n          <div class=\"details-post-data me-xxl-5 pe-xxl-4\">\n            <div class=\"post-date\">\n              {{ moment(job.updated_at).format('D MMM YYYY') }} by\n              <Link :href=\"route('companies.show', job.user.username)\" class=\"fw-500 text-dark\">\n                {{ job.user.meta.company.name }}\n              </Link>\n            </div>\n            <h3 class=\"post-title\">{{ job.title }}</h3>\n            <ul class=\"flex-wrap share-buttons d-flex style-none\">\n              <template v-for=\"(social, key) in socials\" :key=\"key\">\n                <li v-if=\"social\">\n                  <a\n                    :href=\"social\"\n                    target=\"_blank\"\n                    class=\"d-flex align-items-center justify-content-center\"\n                  >\n                    <i class=\"bi\" :class=\"`bi-${key}`\"></i>\n                    <span>{{ key }}</span>\n                  </a>\n                </li>\n              </template>\n            </ul>\n\n            <div class=\"post-block border-style mt-50 lg-mt-30\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"text-center text-white block-numb fw-500 rounded-circle me-2\">1</div>\n                <h4 class=\"block-title\">{{ trans('Overview') }}</h4>\n              </div>\n              <p>\n                {{ job.short_description }}\n              </p>\n              <div v-if=\"job.attachment\" class=\"gap-2 d-flex align-items-center\">\n                <img\n                  height=\"15\"\n                  src=\"https://cdn-icons-png.flaticon.com/128/154/154843.png\"\n                  alt=\"\"\n                />\n                <a target=\"_blank\" :href=\"job.attachment\">{{ trans('Attachment') }}</a>\n              </div>\n            </div>\n            <div class=\"post-block border-style mt-30\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"text-center text-white block-numb fw-500 rounded-circle me-2\">2</div>\n                <h4 class=\"block-title\">{{ trans('Job Description') }}</h4>\n              </div>\n\n              <div v-html=\"job.description\" class=\"mt-30\"></div>\n            </div>\n            <div class=\"post-block border-style mt-30\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"text-center text-white block-numb fw-500 rounded-circle me-2\">3</div>\n                <h4 class=\"block-title\">{{ trans('Required Skills') }}:</h4>\n              </div>\n              <ul class=\"list-type-two style-none mb-15\">\n                <li v-for=\"tag in job.tags\" :key=\"tag.id\">{{ tag.title }}</li>\n              </ul>\n            </div>\n          </div>\n          <!-- /.details-post-data -->\n        </div>\n\n        <div class=\"col-xxl-3 col-xl-4\">\n          <div class=\"job-company-info ms-xl-5 ms-xxl-0 lg-mt-50\">\n            <img\n              v-lazy=\"\n                job.user?.avatar == null\n                  ? `https://ui-avatars.com/api/?name=${job.user.name}`\n                  : `${job.user?.avatar}`\n              \"\n              alt=\"avatar\"\n              class=\"m-auto lazy-img logo\"\n            />\n            <div class=\"mb-20 text-center text-md text-dark mt-15\">\n              <Link :href=\"route('companies.show', job.user.username)\">\n                {{ job.user.meta.company.name }}\n              </Link>\n            </div>\n            <a\n              v-if=\"job.user.meta.business.site_url\"\n              target=\"_blank\"\n              :href=\"job.user.meta.business.site_url\"\n              class=\"website-btn tran3s\"\n              >{{ trans('Visit website') }}</a\n            >\n\n            <div class=\"pt-40 mt-40 border-top\">\n              <ul class=\"job-meta-data row style-none\">\n                <li class=\"col-xl-6 col-md-4 col-sm-6\">\n                  <span>{{ trans('Salary') }}</span>\n                  <div>\n                    <template\n                      v-if=\"\n                        job.salary_range &&\n                        job.salary_range.split('-')[0] > 0 &&\n                        job.salary_range.split('-')[1] > 0\n                      \"\n                    >\n                      {{ formatNumber(job.salary_range.split('-')[0],0) }}\n                      -\n                      {{ formatNumber(job.salary_range.split('-')[1],0) }}\n                    </template>\n                    <template v-else>{{ trans('Negotiable ') }} </template>\n                  </div>\n                </li>\n                <li class=\"col-xl-6 col-md-4 col-sm-6\">\n                  <span>{{ trans('Currency') }}</span>\n                  <div>{{ job.currency }}</div>\n                </li>\n                <li class=\"col-xl-6 col-md-4 col-sm-6\">\n                  <span>{{ trans('Duration') }}</span>\n                  <div>{{ job.salary_type }}</div>\n                </li>\n                <li class=\"col-xl-6 col-md-4 col-sm-6\">\n                  <span>{{ trans('Expertise') }}</span>\n                  <div>{{ job.expertise }}</div>\n                </li>\n                <li class=\"col-xl-6 col-md-4 col-sm-6\" v-if=\"JSON.parse(job.meta).is_remote != '0' || JSON.parse(job.meta).is_remote != false\">\n                  <span>{{ trans('Location') }}</span>\n                  <div>{{ trans('Remote') }}</div>\n                </li>\n                <li class=\"col-xl-6 col-md-4 col-sm-6\" v-else>\n                  <span>{{ trans('Location') }}</span>\n                  <div>{{ job.country?.[0]?.name }}, {{ job.state?.[0]?.name }}</div>\n                </li>\n                <li class=\"col-xl-6 col-md-4 col-sm-6\">\n                  <span>{{ trans('Job Type') }}</span>\n                  <div>{{ job.type }}</div>\n                </li>\n                <li class=\"col-xl-6 col-md-4 col-sm-6\">\n                  <span>{{ trans('Date') }}</span>\n                  <div>{{ moment(job.updated_at).format('D MMM, YYYY') }}</div>\n                </li>\n                <li class=\"col-xl-6 col-md-4 col-sm-6\">\n                  <span>{{ trans('Experience') }}</span>\n                  <div>{{ job.experience }}</div>\n                </li>\n                <li class=\"col-xl-6 col-md-4 col-sm-6\">\n                  <span>{{ trans('Category') }}</span>\n                  <div>{{ job.service?.title }}</div>\n                </li>\n                <li class=\"col-xl-6 col-md-4 col-sm-6\">\n                  <span>{{ trans('Deadline') }}</span>\n                  <div>{{ moment(job.expire_at).format('D MMM, YYYY') }}</div>\n                </li>\n              </ul>\n\n              <div class=\"flex-wrap job-tags d-flex pt-15\">\n                <Link :href=\"`/job-category/${tag.slug}`\" v-for=\"tag in job.tags\" :key=\"tag.id\">{{\n                  tag.title\n                }}</Link>\n              </div>\n\n              <div v-if=\"authUser && authUser.role != 'user'\" class=\"mt-3 text-center\"></div>\n\n              <div v-else-if=\"alreadyApplied\" class=\"mt-3 text-center\">\n                <button type=\"button\" class=\"px-3 py-2 btn-eight text-danger\" disabled>\n                  {{ trans('Already Applied') }}\n                </button>\n              </div>\n\n              <div v-else-if=\"job.is_expired\" class=\"mt-3 text-center\">\n                <p class=\"text-danger fw-bold\">\n                  {{ trans('Deadline Expired') }}\n                </p>\n              </div>\n\n              <div v-else-if=\"authUser\">\n                <!-- external -->\n                <div v-if=\"job.apply_type == 2\">\n                  <a :href=\"JSON.parse(job.meta).apply_type?.value\" class=\"btn-one w-100 mt-25\"  target=\"_blank\"\n                    ><i class=\"bx bx-link-external\"></i> {{ trans('Apply Now') }}</a\n                  >\n                </div>\n                <button\n                  v-else\n                  class=\"btn-one w-100 mt-25\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#applyModal\"\n                >\n                  {{ trans('Apply Now') }}\n                </button>\n              </div>\n              <div v-else class=\"mt-3 text-center\">\n                <Link class=\"btn-five\" :href=\"route('login')\">\n                  {{ trans('Login To Apply') }}\n                </Link>\n              </div>\n            </div>\n          </div>\n          <!-- /.job-company-info -->\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <JobApplicationModal :job=\"job\" />\n\n  <section class=\"related-job-section pt-90 lg-pt-70 pb-120 lg-pb-70\" v-if=\"jobs?.length > 0\">\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"text-center title-three text-md-start mb-55 lg-mb-40\">\n          <h2 class=\"main-font\">{{ trans('Related Jobs') }}</h2>\n        </div>\n\n        <div class=\"related-job-slider\">\n          <JobsItemGrid :col=\"4\" :items=\"jobs\" />\n        </div>\n\n        <ul\n          v-if=\"jobs?.length > 3\"\n          class=\"slider-arrows slick-arrow-one color-two d-flex justify-content-center style-none sm-mt-20\"\n        >\n          <li class=\"prev_e slick-arrow\"><i class=\"bi bi-arrow-left\"></i></li>\n          <li class=\"next_e slick-arrow\"><i class=\"bi bi-arrow-right\"></i></li>\n        </ul>\n      </div>\n    </div>\n  </section>\n\n  <JobIntro />\n</template>\n","<script setup>\nimport { onMounted, computed } from 'vue'\nimport LabelWithAjaxLoader from '@/Components/LabelWithAjaxLoader.vue'\nimport NiceSelect from '@/Components//NiceSelect.vue'\nimport { useJobFiltersStore } from '@/Store/jobFilterStore'\nconst filter = useJobFiltersStore()\nconst props = defineProps([\n  'locations',\n  'jobTypes',\n  'JobExperiences',\n  'tags',\n  'categories',\n  'currencies',\n  'request',\n  'maxSalary'\n])\n\nonMounted(() => {\n  filter.updateInitialState(props)\n})\nconst inputRangePercentage = computed(() => {\n  return 100 - filter.filterForm.max_salary / (props.maxSalary / 100) + '%'\n})\n</script>\n\n<template>\n  <div class=\"container\">\n    <div class=\"filter-area-tab modal-content\">\n      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      <div class=\"position-relative\">\n        <div class=\"main-title fw-500 text-dark pt-15 pb-15 border-bottom pe-4 ps-4\">\n          {{ trans('Filter By') }}\n        </div>\n        <div class=\"pt-25 pb-30 pe-4 ps-4\">\n          <div class=\"row\">\n            <div class=\"col-lg-3 col-sm-6\">\n              <div class=\"filter-block pb-50 lg-pb-20\">\n                <div class=\"filter-title fw-500 text-dark\">{{ trans('Keyword or Title') }}</div>\n                <form @submit.prevent=\"filter\" class=\"input-box position-relative\">\n                  <input\n                    type=\"text\"\n                    v-model=\"filter.filterForm.keyword\"\n                    placeholder=\"Search by Keywords\"\n                  />\n                  <button type=\"submit\">\n                    <i class=\"bi bi-search\"></i>\n                  </button>\n                </form>\n              </div>\n              <!-- /.filter-block -->\n            </div>\n            <div class=\"col-lg-3 col-sm-6\">\n              <div class=\"filter-block pb-50 lg-pb-20\">\n                <div class=\"filter-title fw-500 text-dark\">{{ trans('Category') }}</div>\n                <NiceSelect\n                  v-model=\"filter.filterForm.category\"\n                  valueBy=\"slug\"\n                  label=\"title\"\n                  placeholder=\"Select Category\"\n                  :options=\"filter.categories\"\n                />\n              </div>\n              <!-- /.filter-block -->\n            </div>\n            <div class=\"col-lg-3 col-sm-6\">\n              <div class=\"filter-block pb-50 lg-pb-20\">\n                <div class=\"filter-title fw-500 text-dark\">{{ trans('Location') }}</div>\n                <template v-if=\"!filter.filterForm.is_remote\">\n                  <NiceSelect\n                    v-model=\"filter.filterForm.country\"\n                    valueBy=\"id\"\n                    label=\"name\"\n                    placeholder=\"Select Country\"\n                    :options=\"filter.locations\"\n                    @change=\"filter.getStates\"\n                  />\n                </template>\n                <ul class=\"style-none filter-input\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      name=\"JobType\"\n                      @change=\"filter.setRemote(true)\"\n                      :checked=\"filter.filterForm.is_remote === true\"\n                    />\n                    <label>{{ trans('Remote') }} </label>\n                  </li>\n                </ul>\n              </div>\n              <!-- /.filter-block -->\n            </div>\n            <div class=\"col-lg-3 col-sm-6\" v-if=\"!filter.filterForm.is_remote\">\n              <div class=\"filter-block pb-50 lg-pb-20\">\n                <LabelWithAjaxLoader\n                  class=\"filter-title fw-500 text-dark\"\n                  text=\"States\"\n                  :loading=\"filter.loadingStates\"\n                />\n                <NiceSelect\n                  v-model=\"filter.filterForm.state\"\n                  valueBy=\"id\"\n                  label=\"name\"\n                  placeholder=\"Select City\"\n                  :options=\"filter.states\"\n                />\n              </div>\n              <!-- /.filter-block -->\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-lg-4 col-sm-6\">\n              <div class=\"filter-block d-xl-flex pb-25\">\n                <div class=\"filter-title fw-500 text-dark mt-1\">{{ trans('Job Type') }} :</div>\n                <div class=\"main-body ps-xl-4 flex-fill\">\n                  <ul class=\"style-none filter-input\">\n                    <li v-for=\"job in filter.jobTypes\" :key=\"job.type\">\n                      <input\n                        type=\"checkbox\"\n                        name=\"JobType\"\n                        @change=\"filter.setType(job.type)\"\n                        :checked=\"filter.filterForm.job_type === job.type\"\n                      />\n                      <label>{{ job.type }}</label>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <!-- /.filter-block -->\n            </div>\n            <div class=\"col-lg-4 col-sm-6\">\n              <div class=\"filter-block d-xl-flex pb-25\">\n                <div class=\"filter-title fw-500 text-dark mt-1\">\n                  {{ trans('Experience Level') }} :\n                </div>\n                <div class=\"main-body ps-xl-4 flex-fill\">\n                  <ul class=\"style-none filter-input\">\n                    <li v-for=\"job in filter.JobExperiences\" :key=\"job.experience\">\n                      <input\n                        type=\"checkbox\"\n                        name=\"Experience\"\n                        @change=\"filter.setExperience(job.experience)\"\n                        :checked=\"filter.filterForm.experience === job.experience\"\n                        :value=\"job.experience\"\n                      />\n                      <label>{{ job.experience }} </label>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <!-- /.filter-block -->\n            </div>\n            <div class=\"col-lg-4\">\n              <div class=\"filter-block d-xl-flex pb-25\">\n                <div class=\"filter-title fw-500 text-dark mt-1\">{{ trans('Salary Range') }} :</div>\n                <div class=\"main-body ps-xl-4 flex-fill\">\n                  <div class=\"salary-slider\">\n                    <div class=\"price-input d-flex align-items-center pt-5\">\n                      <div class=\"field d-flex align-items-center\">\n                        <input\n                          type=\"number\"\n                          class=\"input-min\"\n                          :value=\"filter.filterForm.min_salary\"\n                          disabled\n                        />\n                      </div>\n                      <div class=\"pe-1 ps-1\">-</div>\n                      <div class=\"field d-flex align-items-center\">\n                        <input\n                          type=\"number\"\n                          class=\"input-max\"\n                          :value=\"filter.filterForm.max_salary\"\n                          disabled\n                        />\n                      </div>\n                      <div class=\"filter-currency\">\n                        <NiceSelect\n                          v-model=\"filter.filterForm.currency\"\n                          :options=\"filter.currencies\"\n                          value-by=\"code\"\n                          label=\"code\"\n                          placeholder=\"Currency\"\n                        />\n                      </div>\n                    </div>\n                    <div class=\"slider\">\n                      <div class=\"progress\" :style=\"{ right: inputRangePercentage }\"></div>\n                    </div>\n                    <div class=\"range-input mb-10\">\n                      <input\n                        v-model=\"filter.filterForm.min_salary\"\n                        type=\"range\"\n                        class=\"range-min\"\n                        min=\"0\"\n                        :max=\"filter.minMaxSalary\"\n                        step=\"10\"\n                      />\n                      <input\n                        v-model=\"filter.filterForm.max_salary\"\n                        type=\"range\"\n                        class=\"range-max\"\n                        min=\"1\"\n                        :max=\"props.maxSalary\"\n                        step=\"10\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- /.filter-block -->\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-xl-2 m-auto\">\n              <button\n                type=\"button\"\n                @click.prevent=\"filter.submit\"\n                class=\"btn-ten fw-500 w-100 tran3s mt-30 md-mt-10 text-center text-white\"\n              >\n                {{ trans('Apply Filter') }}\n              </button>\n              <button @click=\"filter.clear\" class=\"btn-nine fw-500 w-100 tran3s mt-30 text-center\">\n                {{ trans('Clear Filter') }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport JobsItemGrid from '@/Components/Job/JobsItemGrid.vue'\nimport JobsItemList from '@/Components/Job/JobsItemList.vue'\nimport InnerBanner from '@/Pages/Web/Job/Partials/InnerBanner.vue'\nimport JobIntro from '@/Pages/Web/Candidate/Partials/JobIntro.vue'\nimport FilterForm from './Partials/FilterForm.vue'\nimport { useJobFiltersStore } from '@/Store/jobFilterStore'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport { onMounted } from 'vue'\ndefineOptions({ layout: DefaultLayout })\ndefineProps([\n  'openings',\n  'locations',\n  'jobTypes',\n  'JobExperiences',\n  'categories',\n  'tags',\n  'seo',\n  'currencies',\n  'request',\n  'maxSalary'\n])\n\nconst filter = useJobFiltersStore()\nonMounted(() => {\n  if (!filter.layout) {\n    filter.$patch({\n      layout: 'grid'\n    })\n  }\n})\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n\n  <InnerBanner />\n  <!-- /.inner-banner-one -->\n\n  <section class=\"job-listing-three bg-color pt-90 lg-pt-80 pb-160 xl-pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"job-post-item-wrapper\">\n            <div\n              class=\"upper-filter d-flex justify-content-between align-items-start align-items-md-center mb-25\"\n            >\n              <div class=\"d-md-flex justify-content-between align-items-center\">\n                <button\n                  type=\"button\"\n                  class=\"filter-btn fw-500 tran3s me-3\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#filterPopUp\"\n                >\n                  <i class=\"bi bi-funnel\"></i>\n                  {{ trans('Filter') }}\n                </button>\n                <div class=\"total-job-found md-mt-10\">\n                  {{ trans('All') }}\n                  <span class=\"text-dark fw-500\">{{ openings.total }}</span>\n                  {{ trans('jobs found') }}\n                </div>\n              </div>\n              <div class=\"d-flex justify-content-between align-items-center\">\n                <div class=\"short-filter d-flex align-items-center\">\n                  <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n                  <NiceSelect\n                    v-model=\"filter.filterForm.sort\"\n                    valueBy=\"order\"\n                    label=\"name\"\n                    :options=\"filter.sorts\"\n                    @change=\"filter.submit\"\n                    :placeholder=\"trans('Default')\"\n                  />\n                </div>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s list-btn ms-2 text-center\"\n                  :class=\"[filter.layout == 'grid' ? 'active' : '']\"\n                  @click=\"filter.setLayout('list')\"\n                  title=\"Active List\"\n                >\n                  <i class=\"bi bi-list\"></i>\n                </button>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s grid-btn ms-2 text-center\"\n                  :class=\"[filter.layout == 'list' ? 'active' : '']\"\n                  @click=\"filter.setLayout('grid')\"\n                  title=\"Active Grid\"\n                >\n                  <i class=\"bi bi-grid\"></i>\n                </button>\n              </div>\n            </div>\n            <!-- list -->\n            <div class=\"accordion-box list-style\" :class=\"[filter.layout == 'list' ? 'show' : '']\">\n              <JobsItemList :items=\"openings.data\" />\n            </div>\n            <!-- grid -->\n            <div class=\"accordion-box grid-style\" :class=\"[filter.layout == 'grid' ? 'show' : '']\">\n              <div class=\"row\">\n                <JobsItemGrid :items=\"openings.data\" />\n              </div>\n            </div>\n\n            <div v-if=\"!openings.total\" class=\"alert alert-info mt-30 text-center\" role=\"alert\">\n              {{ trans('No jobs found') }}\n            </div>\n\n            <Paginate :links=\"openings.links\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <JobIntro />\n  <!-- modal -->\n  <div\n    class=\"modal popUpModal fade\"\n    id=\"filterPopUp\"\n    tabindex=\"-1\"\n    aria-labelledby=\"exampleModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-fullscreen modal-dialog-centered\">\n      <FilterForm\n        :locations=\"locations\"\n        :jobTypes=\"jobTypes\"\n        :JobExperiences=\"JobExperiences\"\n        :tags=\"tags\"\n        :categories=\"categories\"\n        :currencies=\"currencies\"\n        :maxSalary=\"maxSalary\"\n        :request=\"request\"\n      />\n    </div>\n  </div>\n</template>\n","<script setup>\nimport DefaultLayout from \"@/Layouts/Default.vue\";\nimport Paginate from \"@/Components/WebPaginate.vue\";\nimport InnerBanner from \"@/Pages/Web/Job/Partials/InnerBanner.vue\";\nimport JobIntro from \"@/Pages/Web/Candidate/Partials/JobIntro.vue\";\nimport FilterForm from \"./Partials/FilterForm.vue\";\nimport { useJobFiltersStore } from \"@/Store/jobFilterStore\";\nimport NiceSelect from \"@/Components/NiceSelect.vue\";\nimport sharedComposable from \"@/Composables/sharedComposable\";\nconst { formatNumber, textExcerpt } = sharedComposable();\ndefineOptions({ layout: DefaultLayout });\ndefineProps([\n  \"openings\",\n  \"locations\",\n  \"jobTypes\",\n  \"JobExperiences\",\n  \"categories\",\n  \"tags\",\n  \"seo\",\n  \"currencies\",\n  \"request\",\n  \"maxSalary\",\n]);\nconst filter = useJobFiltersStore();\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n\n  <InnerBanner />\n  <!-- /.inner-banner-one -->\n\n  <section class=\"job-listing-three bg-color pt-90 lg-pt-80 pb-160 xl-pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"job-post-item-wrapper\">\n            <div\n              class=\"upper-filter d-flex justify-content-between align-items-start align-items-sm-center mb-30\"\n            >\n              <div class=\"d-sm-flex align-items-center\">\n                <button\n                  type=\"button\"\n                  class=\"filter-btn fw-500 tran3s me-3\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#filterPopUp\"\n                >\n                  <i class=\"bi bi-funnel\"></i>\n                  {{ trans(\"Filter\") }}\n                </button>\n                <div class=\"total-job-found xs-mt-10\">\n                  {{ trans(\"All\") }}\n                  <span class=\"text-dark fw-500\">{{ openings.total }}</span>\n                  {{ trans(\"jobs found\") }}\n                </div>\n              </div>\n              <div class=\"d-flex align-items-center\">\n                <div class=\"short-filter d-flex align-items-center\">\n                  <div class=\"text-dark fw-500 me-2\">{{ trans(\"Sort\") }}:</div>\n                  <NiceSelect\n                    v-model=\"filter.filterForm.sort\"\n                    valueBy=\"order\"\n                    label=\"name\"\n                    :options=\"filter.sorts\"\n                    @change=\"filter.submit\"\n                    :placeholder=\"trans('Default')\"\n                  />\n                </div>\n              </div>\n            </div>\n            <!-- /.upper-filter -->\n            <div class=\"wrapper\">\n              <div class=\"row\">\n                <div class=\"col-lg-6 mb-30\" v-for=\"job in openings.data\" :key=\"job.id\">\n                  <div\n                    class=\"job-list-three d-flex h-100 w-100\"\n                    :class=\"{ favourite: job.featured_expire_at }\"\n                  >\n                    <div class=\"main-wrapper h-100 w-100\">\n                      <button\n                        type=\"button\"\n                        @click=\"filter.toggleBookmark(job)\"\n                        class=\"text-center save-btn rounded-circle tran3s\"\n                        :class=\"{ 'bg-success': job.is_bookmarked }\"\n                        title=\"Save Job\"\n                      >\n                        <i class=\"bi bi-bookmark-dash\"></i>\n                      </button>\n                      <div class=\"list-header d-flex align-items-center\">\n                        <Link :href=\"route('jobs.show', job.slug)\" class=\"logo\"\n                          ><img\n                            v-lazy=\"\n                              job.user?.avatar == null\n                                ? `https://ui-avatars.com/api/?name=${job.user.name}`\n                                : `${job.user?.avatar}`\n                            \"\n                            alt=\"avatar\"\n                            class=\"m-auto lazy-img\"\n                        /></Link>\n                        <div class=\"info-wrapper\">\n                          <Link\n                            :href=\"route('jobs.show', job.slug)\"\n                            class=\"title fw-500 tran3s\"\n                            >{{ job.title }}</Link\n                          >\n                          <ul class=\"flex-wrap style-none d-flex info-data\">\n                            <li\n                              v-if=\"\n                                job.salary_range &&\n                                job.salary_range.split('-')[0] > 0 &&\n                                job.salary_range.split('-')[1] > 0\n                              \"\n                            >\n                              {{ formatNumber(job.salary_range.split(\"-\")[0]) }}\n                              -\n                              {{ formatNumber(job.salary_range.split(\"-\")[1]) }}\n                              /{{ job.salary_type }}\n                            </li>\n                            <li v-else>\n                              {{ trans(\"Negotiable \") }}/{{ job.salary_type }}\n                            </li>\n                            <li>{{ job.expertise }}</li>\n                            <li  v-if=\"!job.country?.[0]?.name\">\n                              {{ trans(\"Remote\") }}\n                            </li>\n                            <li v-else>\n                              {{ job.country?.[0]?.name }},{{ job.state?.[0]?.name }}\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                      <!-- ./.list-header -->\n                      <div v-html=\"textExcerpt(job.short_description, 200)\"></div>\n                      <div\n                        class=\"mt-auto d-sm-flex align-items-center justify-content-between\"\n                      >\n                        <div class=\"d-flex align-items-center\">\n                          <img src=\"/assets/images/icon/icon_51.svg\" alt=\"\" />\n                          <span class=\"fw-500 client-status\">\n                            {{ trans(\"Verified Client\") }} .</span\n                          >\n                          <Link\n                            :href=\"route('jobs.show', job.slug)\"\n                            class=\"job-duration fw-500\"\n                            >{{ job.type }}</Link\n                          >\n                        </div>\n                        <Link\n                          :href=\"route('jobs.show', job.slug)\"\n                          class=\"text-center apply-btn tran3s xs-mt-20\"\n                          >{{ trans(\"Details\") }}\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div\n              v-if=\"!openings.total\"\n              class=\"text-center alert alert-info mt-30\"\n              role=\"alert\"\n            >\n              {{ trans(\"No jobs found\") }}\n            </div>\n\n            <Paginate :links=\"openings.links\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <JobIntro />\n  <!-- modal -->\n  <div\n    class=\"modal popUpModal fade\"\n    id=\"filterPopUp\"\n    tabindex=\"-1\"\n    aria-labelledby=\"exampleModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-fullscreen modal-dialog-centered\">\n      <FilterForm\n        :locations=\"locations\"\n        :jobTypes=\"jobTypes\"\n        :JobExperiences=\"JobExperiences\"\n        :tags=\"tags\"\n        :categories=\"categories\"\n        :currencies=\"currencies\"\n        :maxSalary=\"maxSalary\"\n        :request=\"request\"\n      />\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { onMounted, computed } from 'vue'\nimport LabelWithAjaxLoader from '@/Components/LabelWithAjaxLoader.vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nimport { useJobFiltersStore } from '@/Store/jobFilterStore'\nconst filter = useJobFiltersStore()\nconst props = defineProps([\n  'locations',\n  'jobTypes',\n  'JobExperiences',\n  'tags',\n  'categories',\n  'currencies',\n  'request',\n  'maxSalary'\n])\n\nonMounted(() => {\n  filter.updateInitialState(props)\n})\nconst inputRangePercentage = computed(() => {\n  return 100 - filter.filterForm.max_salary / (props.maxSalary / 100) + '%'\n})\n</script>\n\n<template>\n  <div class=\"filter-area-tab\">\n    <div class=\"light-bg border-20 pe-4 ps-4\">\n      <a\n        class=\"filter-header border-20 d-block collapsed\"\n        data-bs-toggle=\"collapse\"\n        href=\"#collapseFilterHeader\"\n        role=\"button\"\n        aria-expanded=\"false\"\n        ><span class=\"main-title fw-500 text-dark\">{{ trans('Filter By') }}</span></a\n      >\n      <div class=\"border-top collapse\" id=\"collapseFilterHeader\">\n        <div class=\"pt-25 pb-30\">\n          <div class=\"row\">\n            <div class=\"col-lg-3 col-sm-6\">\n              <div class=\"filter-block pb-50 lg-pb-20\">\n                <div class=\"filter-title fw-500 text-dark\">{{ trans('Keyword or Title') }}</div>\n                <form @submit.prevent=\"filter.submit\" class=\"input-box position-relative\">\n                  <input\n                    type=\"text\"\n                    v-model=\"filter.filterForm.keyword\"\n                    placeholder=\"Search by Keywords\"\n                  />\n                  <button type=\"submit\">\n                    <i class=\"bi bi-search\"></i>\n                  </button>\n                </form>\n              </div>\n              <!-- /.filter-block -->\n            </div>\n            <div class=\"col-lg-3 col-sm-6\">\n              <div class=\"filter-block pb-50 lg-pb-20\">\n                <div class=\"filter-title fw-500 text-dark\">{{ trans('Category') }}</div>\n                <NiceSelect\n                  v-model=\"filter.filterForm.category\"\n                  valueBy=\"slug\"\n                  label=\"title\"\n                  placeholder=\"Select Category\"\n                  :options=\"filter.categories\"\n                />\n              </div>\n              <!-- /.filter-block -->\n            </div>\n            <div class=\"col-lg-3 col-sm-6\">\n              <div class=\"filter-block pb-50 lg-pb-20\">\n                <div class=\"filter-title fw-500 text-dark\">{{ trans('Location') }}</div>\n                <template v-if=\"!filter.filterForm.is_remote\">\n                  <NiceSelect\n                    v-model=\"filter.filterForm.country\"\n                    valueBy=\"id\"\n                    label=\"name\"\n                    placeholder=\"Select Country\"\n                    :options=\"filter.locations\"\n                    @change=\"filter.getStates\"\n                  />\n                </template>\n                <ul class=\"style-none filter-input\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      name=\"JobType\"\n                      @change=\"filter.setRemote(true)\"\n                      :checked=\"filter.filterForm.is_remote === true\"\n                    />\n                    <label>{{ trans('Remote') }} </label>\n                  </li>\n                </ul>\n              </div>\n              <!-- /.filter-block -->\n            </div>\n            <div class=\"col-lg-3 col-sm-6\" v-if=\"!filter.filterForm.is_remote\">\n              <div class=\"filter-block pb-50 lg-pb-20\">\n                <LabelWithAjaxLoader\n                  class=\"filter-title fw-500 text-dark\"\n                  text=\"States\"\n                  :loading=\"filter.loadingStates\"\n                />\n\n                <NiceSelect\n                  v-model=\"filter.filterForm.state\"\n                  valueBy=\"id\"\n                  label=\"name\"\n                  placeholder=\"Select City\"\n                  :options=\"filter.states\"\n                />\n              </div>\n              <!-- /.filter-block -->\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-lg-4 col-sm-6\">\n              <div class=\"filter-block d-xl-flex pb-25\">\n                <div class=\"filter-title fw-500 text-dark mt-1\">{{ trans('Job Type') }} :</div>\n                <div class=\"main-body ps-xl-4 flex-fill\">\n                  <ul class=\"style-none filter-input\">\n                    <li v-for=\"job in filter.jobTypes\" :key=\"job.type\">\n                      <input\n                        type=\"checkbox\"\n                        name=\"JobType\"\n                        @change=\"filter.setType(job.type)\"\n                        :checked=\"filter.filterForm.job_type === job.type\"\n                      />\n                      <label>{{ job.type }}</label>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <!-- /.filter-block -->\n            </div>\n            <div class=\"col-lg-4 col-sm-6\">\n              <div class=\"filter-block d-xl-flex pb-25\">\n                <div class=\"filter-title fw-500 text-dark mt-1\">\n                  {{ trans('Experience Level') }} :\n                </div>\n                <div class=\"main-body ps-xl-4 flex-fill\">\n                  <ul class=\"style-none filter-input\">\n                    <li v-for=\"job in filter.JobExperiences\" :key=\"job.experience\">\n                      <input\n                        type=\"checkbox\"\n                        name=\"Experience\"\n                        @change=\"filter.setExperience(job.experience)\"\n                        :checked=\"filter.filterForm.experience === job.experience\"\n                        :value=\"job.experience\"\n                      />\n                      <label>{{ job.experience }} </label>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <!-- /.filter-block -->\n            </div>\n            <div class=\"col-lg-4\">\n              <div class=\"filter-block d-xl-flex pb-25\">\n                <div class=\"filter-title fw-500 text-dark mt-1\">{{ trans('Salary Range') }} :</div>\n                <div class=\"main-body ps-xl-4 flex-fill\">\n                  <div class=\"salary-slider\">\n                    <div class=\"price-input d-flex align-items-center pt-5\">\n                      <div class=\"field d-flex align-items-center\">\n                        <input\n                          type=\"number\"\n                          class=\"input-min\"\n                          :value=\"filter.filterForm.min_salary\"\n                          disabled\n                        />\n                      </div>\n                      <div class=\"pe-1 ps-1\">-</div>\n                      <div class=\"field d-flex align-items-center\">\n                        <input\n                          type=\"number\"\n                          class=\"input-max\"\n                          :value=\"filter.filterForm.max_salary\"\n                          disabled\n                        />\n                      </div>\n                      <div class=\"filter-currency\">\n                        <NiceSelect\n                          v-model=\"filter.filterForm.currency\"\n                          :options=\"filter.currencies\"\n                          value-by=\"code\"\n                          label=\"code\"\n                          placeholder=\"Currency\"\n                        />\n                      </div>\n                    </div>\n                    <div class=\"slider\">\n                      <div class=\"progress\" :style=\"{ right: inputRangePercentage }\"></div>\n                    </div>\n                    <div class=\"range-input mb-10\">\n                      <input\n                        v-model=\"filter.filterForm.min_salary\"\n                        type=\"range\"\n                        class=\"range-min\"\n                        min=\"0\"\n                        :max=\"filter.minMaxSalary\"\n                        step=\"10\"\n                      />\n                      <input\n                        v-model=\"filter.filterForm.max_salary\"\n                        type=\"range\"\n                        class=\"range-max\"\n                        min=\"1\"\n                        :max=\"props.maxSalary\"\n                        step=\"10\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- /.filter-block -->\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-xl-2 m-auto\">\n              <button\n                type=\"button\"\n                @click.prevent=\"filter.submit\"\n                class=\"btn-ten fw-500 w-100 tran3s mt-30 md-mt-10 text-center text-white\"\n              >\n                {{ trans('Apply Filter') }}\n              </button>\n              <button @click=\"filter.clear\" class=\"btn-nine fw-500 w-100 tran3s mt-30 text-center\">\n                {{ trans('Clear Filter') }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport JobsItemGrid from '@/Components/Job/JobsItemGrid.vue'\nimport JobsItemList from '@/Components/Job/JobsItemList.vue'\nimport InnerBanner from '@/Pages/Web/Job/Partials/InnerBanner.vue'\nimport JobIntro from '@/Pages/Web/Candidate/Partials/JobIntro.vue'\nimport FilterForm from './Partials/FilterForm.vue'\nimport { useJobFiltersStore } from '@/Store/jobFilterStore'\nimport { onMounted } from 'vue'\nimport NiceSelect from '@/Components/NiceSelect.vue'\nconst filter = useJobFiltersStore()\n\ndefineOptions({ layout: DefaultLayout })\ndefineProps([\n  'openings',\n  'locations',\n  'jobTypes',\n  'JobExperiences',\n  'categories',\n  'tags',\n  'seo',\n  'currencies',\n  'request',\n  'maxSalary'\n])\n\nonMounted(() => {\n  if (!filter.layout) {\n    filter.$patch({\n      layout: 'grid'\n    })\n  }\n})\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n\n  <InnerBanner />\n\n  <section class=\"job-listing-three pt-110 lg-pt-80 pb-160 xl-pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <FilterForm\n            :locations=\"locations\"\n            :jobTypes=\"jobTypes\"\n            :JobExperiences=\"JobExperiences\"\n            :tags=\"tags\"\n            :categories=\"categories\"\n            :currencies=\"currencies\"\n            :maxSalary=\"maxSalary\"\n            :request=\"request\"\n          />\n          <!-- /.filter-area-tab -->\n        </div>\n\n        <div class=\"col-12\">\n          <div class=\"job-post-item-wrapper\">\n            <div\n              class=\"upper-filter d-flex justify-content-between align-items-center mb-25 mt-70 lg-mt-40\"\n            >\n              <div class=\"total-job-found\">\n                {{ trans('All') }} <span class=\"text-dark\">{{ openings.total }}</span>\n                {{ trans('jobs found') }}\n              </div>\n              <div class=\"d-flex align-items-center\">\n                <div class=\"short-filter d-flex align-items-center\">\n                  <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n                  <NiceSelect\n                    v-model=\"filter.filterForm.sort\"\n                    valueBy=\"order\"\n                    label=\"name\"\n                    :options=\"filter.sorts\"\n                    @change=\"filter.submit\"\n                    :placeholder=\"trans('Default')\"\n                  />\n                </div>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s list-btn ms-2 text-center\"\n                  title=\"Active List\"\n                  :class=\"[filter.layout == 'grid' ? 'active' : '']\"\n                  @click=\"filter.setLayout('list')\"\n                >\n                  <i class=\"bi bi-list\"></i>\n                </button>\n                <button\n                  class=\"style-changer-btn rounded-circle tran3s grid-btn ms-2 text-center\"\n                  title=\"Active Grid\"\n                  :class=\"[filter.layout == 'list' ? 'active' : '']\"\n                  @click=\"filter.setLayout('grid')\"\n                >\n                  <i class=\"bi bi-grid\"></i>\n                </button>\n              </div>\n            </div>\n            <!-- /.upper-filter -->\n\n            <div class=\"accordion-box list-style\" :class=\"[filter.layout == 'list' ? 'show' : '']\">\n              <JobsItemList :items=\"openings.data\" />\n            </div>\n\n            <div class=\"accordion-box grid-style\" :class=\"[filter.layout == 'grid' ? 'show' : '']\">\n              <div class=\"row\">\n                <JobsItemGrid :items=\"openings.data\" />\n              </div>\n            </div>\n            <!-- /.accordion-box -->\n\n            <div v-if=\"!openings.total\" class=\"alert alert-info mt-30 text-center\" role=\"alert\">\n              {{ trans('No jobs found') }}\n            </div>\n\n            <Paginate :links=\"openings.links\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <JobIntro />\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport Paginate from '@/Components/WebPaginate.vue'\nimport JobsItemGrid from '@/Components/Job/JobsItemGrid.vue'\nimport JobsItemList from '@/Components/Job/JobsItemList.vue'\nimport NiceSelect from '@/Components//NiceSelect.vue'\nimport InnerBanner from '@/Pages/Web/Job/Partials/InnerBanner.vue'\nimport JobIntro from '@/Pages/Web/Candidate/Partials/JobIntro.vue'\nimport FilterForm from './Partials/FilterForm.vue'\nimport { useJobFiltersStore } from '@/Store/jobFilterStore'\nimport { onMounted } from 'vue'\nconst filter = useJobFiltersStore()\ndefineOptions({ layout: DefaultLayout })\ndefineProps([\n  'openings',\n  'locations',\n  'jobTypes',\n  'JobExperiences',\n  'categories',\n  'tags',\n  'seo',\n  'currencies',\n  'request',\n  'maxSalary'\n])\n\nonMounted(() => {\n  if (!filter.layout) {\n    filter.$patch({\n      layout: \"list\",\n    });\n  }\n});\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n\n  <InnerBanner />\n\n  <section class=\"job-listing-three pt-110 lg-pt-80 pb-160 xl-pb-150 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <FilterForm\n            :locations=\"locations\"\n            :jobTypes=\"jobTypes\"\n            :JobExperiences=\"JobExperiences\"\n            :tags=\"tags\"\n            :categories=\"categories\"\n            :currencies=\"currencies\"\n            :maxSalary=\"maxSalary\"\n            :request=\"request\"\n          />\n          <!-- /.filter-area-tab -->\n        </div>\n\n        <div class=\"col-12\">\n          <div class=\"job-post-item-wrapper\">\n            <div\n              class=\"upper-filter d-flex justify-content-between align-items-center mb-25 mt-70 lg-mt-40\"\n            >\n              <div class=\"total-job-found\">\n                {{ trans('All') }} <span class=\"text-dark\">{{ openings.total }}</span>\n                {{ trans('jobs found') }}\n              </div>\n              <div class=\"d-flex align-items-center\">\n                <div class=\"short-filter d-flex align-items-center\">\n                  <div class=\"text-dark fw-500 me-2\">{{ trans('Sort') }}:</div>\n                  <NiceSelect\n                    v-model=\"filter.filterForm.sort\"\n                    valueBy=\"order\"\n                    label=\"name\"\n                    :options=\"filter.sorts\"\n                    @change=\"filter.submit\"\n                    :placeholder=\"trans('Default')\"\n                  />\n                </div>\n                <button\n                  class=\"text-center style-changer-btn rounded-circle tran3s list-btn ms-2\"\n                  title=\"Active List\"\n                  :class=\"[filter.layout == 'grid' ? 'active' : '']\"\n                  @click=\"filter.setLayout('list')\"\n                >\n                  <i class=\"bi bi-list\"></i>\n                </button>\n                <button\n                  class=\"text-center style-changer-btn rounded-circle tran3s grid-btn ms-2\"\n                  title=\"Active Grid\"\n                  :class=\"[filter.layout == 'list' ? 'active' : '']\"\n                  @click=\"filter.setLayout('grid')\"\n                >\n                  <i class=\"bi bi-grid\"></i>\n                </button>\n              </div>\n            </div>\n            <!-- /.upper-filter -->\n\n            <template v-if=\"openings.total\">\n              <div class=\"accordion-box list-style\"\n              :class=\"[filter.layout == 'list' ? 'show' : '']\">\n                <JobsItemList :items=\"openings.data\" />\n              </div>\n\n              <div class=\"accordion-box grid-style\"\n              :class=\"[filter.layout == 'grid' ? 'show' : '']\">\n                <div class=\"row\">\n                  <JobsItemGrid :items=\"openings.data\" />\n                </div>\n              </div>\n\n              <Paginate :links=\"openings.links\" />\n            </template>\n\n            <div class=\"text-center alert alert-info mt-30\" role=\"alert\" v-else>\n              {{ trans('No jobs found') }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <JobIntro />\n</template>\n","<script setup>\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport sharedComposable from '@/Composables/sharedComposable'\nimport moment from 'moment'\nimport { computed } from 'vue'\nimport JobIntro from '../../Candidate/Partials/JobIntro.vue'\nimport trans from '@/Composables/transComposable'\nimport JobApplicationModal from '@/Pages/Web/Job/Partials/JobApplyModal.vue'\nimport { useThemeLoaderStore } from '@/Store/themeLoaderStore'\nconst themeLoader = useThemeLoaderStore()\n\ndefineOptions({ layout: DefaultLayout })\nconst props = defineProps(['job', 'jobs', 'alreadyApplied', 'seo'])\n\nconst { authUser, formatNumber } = sharedComposable()\nconst socials = computed(() => props.job.user?.meta.social)\nconst breadcrumbColor = computed(() => {\n  const themes = ['One', 'Six']\n  if (themes.includes(themeLoader.theme)) {\n    return ''\n  }\n  return 'inner-breadcrumb-colors'\n})\n</script>\n\n<template>\n  <Seo :metaData=\"seo\" />\n  <div class=\"inner-banner-one position-relative\" :class=\"breadcrumbColor\">\n    <div class=\"container\">\n      <div class=\"position-relative\">\n        <div class=\"row\">\n          <div class=\"m-auto text-center col-xl-8\">\n            <div class=\"post-date\">\n              {{ moment(job.updated_at).format('D MMM, YYYY') }} by\n              <Link class=\"fw-500\" :href=\"route('companies.show', job.user.username)\">\n                {{ job.user.meta.company.name }}\n              </Link>\n            </div>\n            <div class=\"title-two\">\n              <h2>{{ job.title }}</h2>\n            </div>\n            <ul class=\"flex-wrap mt-10 share-buttons d-flex justify-content-center style-none\">\n              <template v-for=\"(social, key) in socials\" :key=\"key\">\n                <li v-if=\"social\">\n                  <a\n                    :href=\"social\"\n                    target=\"_blank\"\n                    class=\"d-flex align-items-center justify-content-center\"\n                  >\n                    <i class=\"bi\" :class=\"`bi-${key}`\"></i>\n                    <span>{{ key }}</span>\n                  </a>\n                </li>\n              </template>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <img src=\"/assets/images/shape/shape_02.svg\" alt=\"\" class=\"lazy-img shapes shape_01\" />\n    <img src=\"/assets/images/shape/shape_03.svg\" alt=\"\" class=\"lazy-img shapes shape_02\" />\n  </div>\n  <!-- /.inner-banner-one -->\n\n  <section class=\"job-details style-two pt-100 lg-pt-80 pb-130 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"m-auto col-xxl-9 col-xl-10\">\n          <div class=\"details-post-data ps-xxl-4 pe-xxl-4\">\n            <ul\n              class=\"flex-wrap job-meta-data-two d-flex justify-content-center justify-content-lg-between style-none\"\n            >\n              <div class=\"text-center bg-white bg-wrapper\">\n                <img src=\"/assets/images/icon/icon_52.svg\" alt=\"\" class=\"m-auto lazy-img icon\" />\n                <span>{{ trans('Salary') }}</span>\n                <div>\n                  <template\n                    v-if=\"\n                      job.salary_range &&\n                      job.salary_range.split('-')[0] > 0 &&\n                      job.salary_range.split('-')[1] > 0\n                    \"\n                  >\n                    {{ formatNumber(job.salary_range.split('-')[0],1) }}\n                    -\n                    {{ formatNumber(job.salary_range.split('-')[1],1) }}/{{ job.currency }}\n                  </template>\n                  <template v-else>{{ trans('Negotiable ') }} </template>\n                  <br>\n                  {{ job.salary_type }}\n                </div>\n              </div>\n              <div class=\"text-center bg-white bg-wrapper\">\n                <img src=\"/assets/images/icon/icon_53.svg\" alt=\"\" class=\"m-auto lazy-img icon\" />\n                <span>{{ trans('Expertise') }}</span>\n                <div>{{ job.expertise }}</div>\n              </div>\n              <div class=\"text-center bg-white bg-wrapper\" v-if=\"JSON.parse(job.meta).is_remote\">\n                <img src=\"/assets/images/icon/icon_54.svg\" alt=\"\" class=\"m-auto lazy-img icon\" />\n                <span>{{ trans('Location') }}</span>\n                <div>{{ trans('Remote') }}</div>\n              </div>\n              <div class=\"text-center bg-white bg-wrapper\" v-else>\n                <img src=\"/assets/images/icon/icon_54.svg\" alt=\"\" class=\"m-auto lazy-img icon\" />\n                <span>{{ trans('Location') }}</span>\n                <div>{{ job.country?.[0]?.name }}, {{ job.state?.[0]?.name }}</div>\n              </div>\n              <div class=\"text-center bg-white bg-wrapper\">\n                <img src=\"/assets/images/icon/icon_55.svg\" alt=\"\" class=\"m-auto lazy-img icon\" />\n                <span>{{ trans('Job Type') }}</span>\n                <div>{{ job.type }}</div>\n              </div>\n              <div class=\"text-center bg-white bg-wrapper\">\n                <img src=\"/assets/images/icon/icon_56.svg\" alt=\"\" class=\"m-auto lazy-img icon\" />\n                <span>{{ trans('Experience') }}</span>\n                <div>{{ job.experience }}</div>\n              </div>\n            </ul>\n\n            <div class=\"post-block mt-50 lg-mt-40\">\n              <h4 class=\"block-title\">{{ trans('Overview') }}</h4>\n              <p>\n                {{ job.short_description }}\n              </p>\n            </div>\n            <div class=\"post-block lg-mt-40 mt-60\">\n              <h4 class=\"block-title\">{{ trans('Job Description') }}</h4>\n              <div v-html=\"job.description\" class=\"mt-30\"></div>\n            </div>\n\n            <div class=\"post-block mt-55 lg-mt-40\">\n              <h4 class=\"block-title\">{{ trans('Required Skills') }}:</h4>\n              <ul class=\"list-type-two style-none mb-15\">\n                <li v-for=\"tag in job.tags\" :key=\"tag.id\">{{ tag.title }}</li>\n              </ul>\n            </div>\n\n            <div v-if=\"job.attachment\" class=\"post-block mt-55 lg-mt-40\">\n              <h4 class=\"block-title\">{{ trans('Attachments') }}:</h4>\n              <div class=\"gap-2 mt-10 d-flex align-items-center\">\n                <img\n                  height=\"15\"\n                  src=\"https://cdn-icons-png.flaticon.com/128/154/154843.png\"\n                  alt=\"\"\n                />\n                <a class=\"btn btn-link\" target=\"_blank\" :href=\"job.attachment\">{{\n                  trans('Attachment')\n                }}</a>\n              </div>\n            </div>\n\n            <div v-if=\"authUser && authUser.role != 'user'\" class=\"mt-3 text-center\"></div>\n\n            <div v-else-if=\"alreadyApplied\" class=\"mt-3 text-center\">\n              <button type=\"button\" class=\"px-3 py-2 btn-eight text-danger\" disabled>\n                {{ trans('Already Applied') }}\n              </button>\n            </div>\n\n            <div v-else-if=\"job.is_expired\" class=\"mt-3 text-center\">\n              <p class=\"text-danger fw-bold\">\n                {{ trans('Deadline Expired') }}\n              </p>\n            </div>\n\n            <div v-else-if=\"authUser\">\n              <!-- email -->\n           \n              <!-- external -->\n              <div v-if=\"job.apply_type == 2\">\n                <a :href=\"job.meta.apply_type.value\" target=\"_blank\"\n                  ><i class=\"bx bx-link-external\"></i> {{ trans('Apply Now') }}</a\n                >\n              </div>\n\n              <button\n                v-else\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#applyModal\"\n                class=\"text-center text-white btn-ten fw-500 tran3s mt-30\"\n              >\n                {{ trans('Apply for this position') }}\n              </button>\n            </div>\n            <div v-else class=\"mt-3 text-center\">\n              <Link class=\"btn-five\" :href=\"route('login')\">\n                {{ trans('Login To Apply') }}\n              </Link>\n            </div>\n          </div>\n          <!-- /.details-post-data -->\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <JobApplicationModal :job=\"job\" />\n\n  <JobIntro />\n</template>\n","<script setup>\nimport sharedComposable from '@/Composables/sharedComposable'\nimport JobIntro from '@/Pages/Web/Candidate/Partials/JobIntro.vue'\nimport DefaultLayout from '@/Layouts/Default.vue'\nimport Breadcrumb from '@/Components/Breadcrumb.vue'\ndefineOptions({ layout: DefaultLayout })\n\nconst props = defineProps(['plans', 'seo'])\nconst { formatCurrency, authUser } = sharedComposable()\n</script>\n\n<template>\n  <Seo/>\n  <Breadcrumb\n    :title=\"trans('Pricing')\"\n    href=\"/\"\n    :href-text=\"trans('Home')\"\n    :subtitle=\"trans('Pricing')\"\n  />\n\n  <section class=\"pricing-section pt-100 lg-pt-80 pb-120 lg-pb-80\">\n    <div class=\"container\">\n      <div class=\"text-center title-one mb-55 lg-mb-20\">\n        <h2 class=\"text-dark fw-normal\">{{ trans('Simple Plan for All') }}</h2>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"m-auto col-xxl-10\">\n          <div class=\"row justify-content-center\">\n            <template v-for=\"plan in plans\" :key=\"plan.id\">\n              <div class=\"col-lg-4 col-md-6\">\n                <div\n                  class=\"pricing-card-one mt-25\"\n                  :class=\"{\n                    popular: plan.is_recommended === 1\n                  }\"\n                >\n                  <div class=\"popular-badge\" v-if=\"plan.is_recommended\">{{ trans('popular') }}</div>\n                  <div class=\"pack-name\">{{ plan.title }}</div>\n                  <div class=\"price fw-500\">\n                    <sub>{{ formatCurrency(plan.price)[0] }}</sub>\n                    {{ plan.price }}\n                    <sup>{{ formatCurrency(plan.price).split('.')[1] }}</sup>\n                  </div>\n                  <ul class=\"style-none\">\n                    <li class=\"text-capitalize\" v-for=\"(data, key) in plan.data\" :key=\"data.key\">\n                      {{ key.replace(/_/g, ' ') }} {{ data }}\n                    </li>\n                  </ul>\n                  <a\n                    :href=\"\n                      authUser && authUser.role === 'employer'\n                        ? route('employer.membership.payment', plan.id)\n                        : route('register', { id: plan.id })\n                    \"\n                    class=\"get-plan-btn tran3s w-100 mt-30\"\n                  >\n                    {{ trans('Choose Plan') }}\n                  </a>\n                </div>\n              </div>\n            </template>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"m-auto col-xl-5 col-lg-8\">\n              <p class=\"text-center lg-mt-30 mt-60\">\n                {{\n                  trans(`We've done it carefully and simply. Combined with the ingredients makes for\n                beautiful landings.`)\n                }}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <JobIntro />\n</template>\n","/**\n * We'll load the axios HTTP library which allows us to easily issue requests\n * to our Laravel back-end. This library automatically handles sending the\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n */\n\nimport axios from 'axios'\nwindow.axios = axios\n\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\n\nimport Echo from 'laravel-echo'\n\nimport Pusher from 'pusher-js'\nwindow.Pusher = Pusher\n\nwindow.Echo = new Echo({\n    broadcaster: 'pusher',\n    key: 'staging',\n    wsHost: window.location.hostname,\n    wsPort: 6001,\n    forceTLS: true,\n    disableStats: true\n});\n\n","import './bootstrap'\nimport '@vueform/multiselect/themes/default.css'\nimport { createSSRApp, h } from 'vue'\nimport { Link, createInertiaApp } from '@inertiajs/vue3'\nimport trans from '@/Composables/transComposable'\nimport { createPinia } from 'pinia'\nimport VueLazyLoad from 'vue3-lazyload'\nimport Seo from '@/Components/Seo.vue'\n\nconst appName = window.document.getElementsByTagName('title')[0]?.innerText || 'Laravel'\n\ncreateInertiaApp({\n  title: title => `${title} - ${appName}`,\n  resolve: name => {\n    const pages = import.meta.glob('./Pages/**/*.vue', { eager: true })\n    const page = pages[`./Pages/${name}.vue`]\n    if (page) {\n      page.default.layout = page.default.layout ?? null\n      return page\n    } else {\n      console.log('Invalid page', name)\n    }\n  },\n  setup ({ el, App, props, plugin }) {\n    return createSSRApp({ render: () => h(App, props) })\n      .mixin({ methods: { trans, route: window.route } })\n      .component('Link', Link)\n      .component('Seo', Seo)\n      .use(plugin)\n      .use(VueLazyLoad, {\n        loading: '/assets/images/lazy.svg'\n      })\n      .use(createPinia())\n      .mount(el)\n  },\n  progress: {\n    color: '#4B5563'\n  }\n})\n"],"names":["modal","route","authUser","pickBy","getQueryParams","_a","_b","item","dropdown","__default__","__MACROS_defineComponent","AdminLayout","properties","drawer","ClassicEditor","DefaultLayout","EmployerLayout","axios","location","_d","_c","_e","EmployerMessage","uniqueReplies","_sfc_ssrRender","UserLayout","UserMessage","_ssrRenderComponent","_withCtx","_push","_parent","tags","res","helper","Echo","Seo"],"mappings":"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"}